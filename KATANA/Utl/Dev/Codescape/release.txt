CodeScape 2.3.0 Release Build 184 Release Notes
-----------------------------------------------


Build 174 and above require these DLLs:
  *  CPDIAL.DLL       - Communications Layer.
  *  PROF7091.DLL     - SH7091 Profiler Support.

The DLLs must be in the same directory as CodeScape.exe.





[Simulator is an Alpha Feature - Known Problems - ]
===================================================

1   The following instructions are not implemented:
       SLEEP
       LDTLB

2   Cache operation is not fully tested, changes to the CCR register
    are only detected on a 32 bit write.

3   MMU is not modeled.

4   Tracing (Stepping) when viewing the Simulator output can be
    confusing during a dual instruction issue. If the first dual
    issued instruction hits a breakpoint the Simulator stops.
    However, the Simulator only reports complete slot operations
    and does not show information about an instruction until the
    whole slot completes.




[Bugs Fixed for Build 184]
==========================

1   GPF loading ELFs (avefront.elf & D2_v60.elf).

2   GPF after stopping Hitachi build of R10 samples.

3   GPF during GNU make.

4   If you select and drag in a Disassembly region to make it scroll,
    cursor artifacts (ghost cursors) remain left on the screen.

5   When scrolling in a Mixed/Source/Disassembly region, showing 
    Disassembly, the screen 'jumps' up a number of lines at a time,
    but only scrolls down one line at a time.

6   Opening a CodeScape Version 3.0.0 session with build 183 results
    in the display to behaving oddly.

7   The 'directory' drop down in Find in Files does not remember the 
    last directory you selected if it is one you have chosen from the 
    dropdown list.

8   Abort Find in Files dialog results in the wrong message "You cannot 
    exit CodeScape whilst Find in Files is caching".

9   Restoring a Session with several Edit regions for which the files 
    no longer exist, results in lots of empty, read-only regions.

10  Codescape hangs whilst loading ELF (cpl 1730).





[Bugs Fixed for Build 183]
==========================

1   F1 key in tabbed options dialog does not give correct help ID.




[Bugs Fixed for Build 182]
==========================

1   The symbol complete dialog produces the error message "Exceded 
    max depth of a list box" if you search for all symbols.

2   RESTART in Codescape should not print the message make copy of 
    the file.

3   File server function 'debug_findnext()' cause CodeScape to GPF,
    if the function was call with an invalid handle (i.e. the
    debug_findfirst() failed and returned -1 and the user does not
    check and passes the handle onto debug_findnext()).

4   No default search dir for Find in Files.

5   When opened the Find in Files dialog does not position the 
    cursor in the edit field.

6   Find in Files does not remember last search.

7   No completion message when Find in Files finishes.

8   Tab order in Find in Files odd.

9   Editor region auto indent won't go away.

10  Symbol completion dialog does not sort or unique its output.




[Bugs Fixed for Build 181]
==========================

1   If large (~16Meg) none session file is loaded via the Load
    Session File ... dialog, CodeScape appears to lockup.

2   Cannot select trace method when no Source region is shown.

3   Edit region is bound to a target.

4   Find in Files does not appear to clear the Find tab at the 
    beginning of each search.

5   Find in Files is on the Edit menu.  The Edit menu vanishes if you 
    have no editable windows open.

6   Paste from clipboard causes bookmarks to move to end of paste.



[Bugs Fixed for Build 180]
==========================

1   Delete does not work in the Edit region when using Devstudio compatible
    mode.



[Bugs Fixed for Build 179]
==========================

1   Tabbing in Local and Watch regions does not operate correctly.

2   Tool Tips not appearing for Find button/icon.

3   On the toolbar configuration dialog, "Build" needs to be given a hot 
    key, and tab order needs sorting out.

4   The Find option on the Edit region's shortcut menu does not work.

5   There are two Alt-F options on the Find in Files dialog.

6   GPF in Expression Evaluator when subtracting to pointers to class or
    structures.

7   Strange error message "Unknown Return Type" in the Expression Evaluator 
    when subtracting pointers to structures from arrays of structures.

8   Editor needs to be removed from the Region Configuration dialog.

9   In the Format tab on the tools->options dialog, the "All Regions"
    category does not function correctly for specific targets.

10  In the Format tab on the tools->options dialog, the cursor disappears
    when tabbed off the drop down color selector button.

11  Problem loading specific CodeWarrior ELF/DWARF.

12  In the Edit region, pasting from the clipboard move bookmarks to the end
    of the paste.

13  GPF in the Profiler when processing debug information.

14  Any changes in the "Target Set-up" dialog box are lost when switching 
    to another tab.

15  When a session containing breakpoints is loaded the breakpoints do not 
    always get hit if the program file is automatically run. To work, the run
    needs to be delayed until breakpoints are restored.

16  Pasting multiple lines of information into Command region is ignored.




[New Features added for Build 178]
==================================

1   Changed help to use Microsoft HtmlHelp.

2   Add check for "overflow of extended handles" generated by expression 
    analysis.



[Bugs Fixed for Build 178]
==========================

1   Tabbing in local/watch regions stops.

2   Cannot load CodeWarrior Elf, due to file caching problem.

3   Incorrect status bar message for "Clear Screen" in the Command 
    region.

4   In Tools->Options, on the format tab. Changed the "All Targets" 
    and "All regions" list boxes to bold to show they affect multiple 
    option. Change "System Default" to Italics because it is only 
    used as a last resort when no matching property can be found.

5   Graying of options in the "Trigger Actions" tab of the 
    "Configure Breakpoints" dialog is not consistent.

6   The save binary option does not prompt if the file exists.

7   Browse button in Edit source path dialog does not work if the 
    starting directory specified in the dialog does not exist.

8   Highlight color in the editor for "Default" setting is set to the
    same as the text color. This results in not being able to see the 
    highlight.

9   Editor GPF with 113 MByte file.

10  Properties context menu option in editor region.

11  Unstep not using the default stepping mode.

12  If a program file is reloaded whilst containing conditional 
    breakpoints are set. The old handles not necessarily valid 
    so the expression needs re-evaluating.

13  If a session file fails to load it does not tell you what the
    name of the session file is.

14  GPF when loading DWARF2 file.

15  Slowdown in symbol complete dialog when huge numbers of symbols.




[New Features added for Build 177]
==================================

1   Add a new function to scripting to detect if a symbol exists.
    The new command is called "boolean SymbolExists(string Symbol)".




[Bugs Fixed for Build 177]
==========================

1  Trace History GPF when changing Trace configuration settings.

2   GPF in Edit region when using bracket matching.

3   GPF in edit cell when failed edit cancelled.

4   GPF Expression Evaluator dialog when global history not selected.

5   In Edit region, auto word completion does always work. 

6   To enable Auto word completion and for it to work. Both the Auto 
    word completion check box and Syntax highlighting need to be checked. 

7   In Edit region the Line/Column values in status bar are wrong.

8   Need to catch attempts to launch a script if scripting is disabled 
    (i.e. no script engine found).

9   The Profiler Display Cache Line column label does not appear when it 
    has been disabled and then enabled.

10  There is no persistence of 'Public' variables in scripts.

11  Script errors are reporting the line number incorrectly.

12  The fileserver "debug_open()" command does not permit the user to 
    set the file attributes on creation i.e. read-only / read-write.
    (Version 2.3 of fileserver library also required).

13  Goto expression evaluator truncates long strings when pasted.

14  GPF finding in files when no search text specified.

15  Static members variables of classes in GNU C++ have stopped working.

16  GPF in Elf / Dwarf2 files due to file caching problems.

17  The tab key does not work in the new Tools->Options dialog.

18  Missing status line prompts:
    * Project/Source Control/Get
    * Project/Source Control/Check In
    * Project/Source Control/Check Out
    * Project/Source Control/Undo
    * Profiler/Optimize

19  Changes to "Tools->Options->Interface->Hide-Out Local Symbols" not 
    detected until current scope changes.

20  Call stack needs assumes as a default that r8-r15 are being preserved 
    properly by the code. This allows a degree of guessing to be done when 
    unwinding the stack. Where this guessing has been done the Call Stack 
    can highlight entries by the use of a different color setting.

21  Tracing C++ source files by "step over", sometimes CodeScape said 
    "No source available".

22  Consistency in wording needed for the menu item "Debug Info Mapping". 

23  Tab order on the Region Configuration dialog.

24  Cannot load sessions from previous versions of Codescape.

25  Single stepping jumps about and is slow when trace region visible.

26  There is no warning if the output file for memory hex dump already 
    exists.

27  There is no warning if the output file for disassembly output already 
    exists.

28  Local variables out of scope test/lookup does not work correctly.

29  If lock a region via the Goto Address dialog box, the region is 
    locked but the lock view icon indicates that it is not.

30  If first line of disassembly region can't be disassembled (marked as 
    invalid in dali.cfg) then whole region reported as being invalid even 
    if it is in valid memory.

31  It should be possible select, copy, drag etc. in the script region.

32  The script command "IsRunning()" need additional support to avoid 
    returning the wrong value when a fileserver breakpoint has been encountered.


[Bugs Fixed for Build 176]
==========================

1   Opening a session file causes Session Save As dialog box 
    to appear.

2   Loading a session removes breakpoints without request.



[New Features added for Build 174, 175]
=======================================

1   Apply button on the Color Configuration tab.



[Bugs Fixed for Build 174, 175]
===============================

1   The Make command should open the Input/Output window and show the
    results.

2   Modifying entries in Regular expressions dialog does not work.

3   Color configuration dialog does not work correctly when selecting 
    white text on black background.

4   Find in files button stays pressed when a search is complete.

5   Find button grayed for "Find in files".

6   In the Editor, select 'n' lines and the tab indentation shifts the
    'n' lines and the line at the cursor.

7   In a Watch region double-click the left mouse button or press enter
    on blank line to insert cursor corrupts text.
    The corruption goes away when a variable name is entered.

8   Dragging an address in the format "_stack@0x8c18a9c0" from a
    Disassembly region to Memory region fails.

9   The drop down box of the "RunTo" edit field in Load Program File 
    dialog has no history in it.



[New Features added for Build 172, 173]
=======================================

1   New color configuration tab.



[Bugs Fixed for Build 172, 173]
===============================

1   In a Watch region enter a line of enter an invalid symbol, single 
    tab (unknown symbol reported), then shift tab + CodeScape stops 
    responding.

2   No check for references within DWARF2 to see that they fall within 
    the section length.

3   No check for debug sections with zero start addresses.

4   GPF loading ELF due to CDWARF::TypeHandle().

5   Cut a selection in a Watch region then select a new line and the 
    Cut items reappear.

6   Warning, Session file has invalid window size info.



[New Features added for Build 171]
==================================

1   Multi-level follow pointer and return in Memory window.



[Bugs Fixed for Build 171]
==========================

1   Cannot call F1 Help for main Profiler window.

2   Highlight slot instruction not saved in session.

3   Workshop menu gets into incorrect state.

4   Progress box in LoadBinaryFile script command not working correctly.

5   In Expression Evaluator if eval. r0 you can select the result + 
    copy/modify it, but for r0+r1 the result can't be selected, should 
    be able to just copy the result.

6   Find In Files reports same line multiple times.

7   The vertical scroll bar in the Source region does not appear / 
    disappear correctly whilst tracing.

8   Disassembly to file appears twice.

9   Properties not correct in Editor regions.

10  The following items do not have a description in the keyboard help / 
    customize keyboard dialogs;
         Script/Setup
         Script/Clear Screen
         Script/No Recent Scripts 
         Profiler/Show Profile Hits ( Source )
         Profiler/Show Profile Hits ( Disassembly )
         Profiler/Optimize
         Profiler/No Profile between breakpoints.


11  Simulator. The OCRAM mode address calculation is incorrect.

12  If CodeScape is run from the command line with a session, the 
    title of the main window is "untitled".

13  Missing extensions on recent files list in Editor.

14  Implement a write-protect error pop-up if you try and write to a 
    protected region in the Memory region.



[Bugs Fixed for Build 169]
==========================

1   Parts of a Memory region that change when out of view are still
    not highlighted as changed. Redrawing the Memory region clears
    highlighted changes.

2   GPF when looking up template function names.

3   On the profiler, a titles of column is overwritten by it's frame 
    or upper/downer triangle . (Especially "CL" entry and C1/C2+children
    column.)



[Bugs Fixed for Build 166, 167, 168]
====================================

1   Lockup in Load Program File, processing scope information.



[New Features added for Build 163, 164, 165]
============================================

1   Syntax highlighting is now based on file extensions and is 
    saved globally, not on a session by session basis.

2   Need an option to disable syntax highlighting in an Editor region.
    Click Tools, Options, and select the Editor tab. Deselect the 
    Use Syntax Highlighting check-box to disable syntax highlighting.

3   You can now zoom a region in to fit the window frame and zoom out again.



[Bugs Fixed for Build 163, 164, 165]
====================================

1   The behavior of toggle breakpoint in the source region has changed.
    It used to always find the first valid place to put the breakpoint 
    if it could not be placed on the current line, now it doesn't.

2   When a file has been modified and is automatically saved by CodeScape 
    (when doing a build) the modified marker is not removed.

3   Can't scroll mixed source up with scroll bar (down) arrow.

4   Edit regions name not updated correctly on session restore.

5   Source region redraw incorrect.

6   Disassembly region not showing updates when loading binary data.




[New Features added for Build 162]
==================================

1   DWARF 2 support for Hitachi and GNU.

2   As well as showing the <s> symbol, slotted instructions can now
    be configured to highlight the entire line.

3   It would be nice if the auto-indent feature of the Editor were 
    more intelligent. For example, indent after a "{", and 
    outdent after a "}".



[Bugs Fixed for Build 162]
==========================

1   The Hitachi linker/optimizer sometimes aligns functions on 32 byte
    boundaries and fills the leading space with nops. Although the
    actual function code starts some way into this area, the debug info
    includes the nops as part of the function's address range. This
    confuses the Call Stack and reduces the useful information shown.

2   Editor region modified file marker '*' is not working correctly.

3   The Find in Files menu option should be on the Edit menu (along 
    with Find and Find next) not the Tools menu.

4   Double clicking on project build errors does not take you to 
    the error if the file is already open in the editor or highlight
    the bug.

5   Create an error during a make. This takes you to the line and 
    highlights it. Now, move down one line (arrow down), and type a 
    letter. The error text is replaced! The highlight of the 
    error text should go away when you move off of it.

6   Incorrect Syntax Highlighting Setup dialog called from the right
    mouse menu in the Source region.

7   The button Configure Languages on the Options\Editor dialog does 
    not work.

8   If no Path is put in the path field of the Find Files dialog when
    find is pressed it goes away for ever.

9   GPF. Change the font size in the Disassembly region to 72 point, 
    reduce region vertical size so text not displayed, click on 
    scroll bar between thumb + lower scroll arrow.

10  Loading a file into an Edit region does not appear to reset 
    position in file to start.

11  Covered parts of a Memory region that change are still not highlighted
    as changed, also redrawing of the Memory region clears any highlighting.

12  Profiler Display Cache Line column label does not display correctly.

13  No profiler mode checking when loading profiler file.



[Bugs Fixed for Build 161]
==========================

1   Firmware version test is not checking  for the latest version 
    of SH4 firmware. 

2   Make option grayed out.



[New Features added for Build 158]
==================================

1   Additional support to generate multiple instances of the binary 
    (e.g. inline & templates functions) when using breakpoints, or when
    tracing source. 
    To set the option, click Tools, Options...
    On the Debug tab select "Allow software breakpoints for multiple 
    instances of inline code". Then click Apply.

2   In an Editor region, the left hand column can now be turned off.

3   In an Editor region, the scroll bars can now be turned off.

4   The Options dialog (click Tools, Options...) is now a 
    tab dialog. The tabs let you configure options for: Interface,
    Action, Debug, and Editor.



[Bugs Fixed for Build 158]
==========================

1   The same font/size settings, produced different sized text in 
    the editor and source regions.
    NOTE: The fix to generic code that constructs FONTS will result
    in session files restoring with larger fonts that those when it
    was save. 

2   Open an Edit region, read in a file (not R/O) start typing. The 
    region's title bar should indicate the file has being modified 
    (i.e. append a '*' to the file name), it doesn't. Clicking on the 
    title bar causes it to appear.

3   The Configure Trace History menu option doesn't do anything.

4   On the Window menu (that shows the list of active windows), it 
    would be nice if we could see which file an Edit region has open. 

5   Loading elf causes CodeScape to lock up whilst processing lines.

6   Loading elf without high symbols resulted in low symbols (those 
    read from Hitachi map file) to be ignored in the active overlay test.

7   The processing of segment headers is incorrect. Segment can get 
    thrown away and not loaded.

8   Keyword completion in Editor region.
      * Improve parsing for match, sometimes gives strange matches.
      * Need option to disable feature, via Tools, Options dialog.
      * Options box obscures the entered text.

9   The Load Program File dialog can GPF if cancelled.

10  Base members not showing names in GNU/MetroWerks DWARF1.

11  The backspace key functions in the editor if the file is read-only.

12  In a source region showing mixed mode, if the scroll thumb is
    clicked the screen is not updated correctly.

13  When a file that the current project is dependent on, has been 
    edited by CodeScape and then saved it's dependency list should be 
    updated, otherwise the build mechanism will not function correctly.

14  If a file has been opened in an editor region, then only this file
    is available in the short cut menu for the project window (for 
    compiling touching etc), even though other files can be selected 
    in the project window.

15  The edit controls in the Project Settings dialog for command line 
    options really need to be multi-line since they can get very long.

16  It is not possible to add regular expressions for file types that 
    do not have a matching tool on this dialog, this means you cannot 
    tell CodeScape how to scan dependency files for further dependencies.

17  Profiler slow to startup on machines running Japanese OS.



[New Features added for Build 157]
==================================

1  Changes to the Editor region:
    * New Syntax Highlighting options on the Font and Color Settings 
      dialog box. New options include setting the color for all Text,
      a Text Selection, Numbers, Operators, Comments, Keywords, and
      Strings.

    * Recording and playing back Key Strokes for automating repetitive keyboard
      tasks. The Play Back feature is available until you record a new set of Key
      Strokes or until you close the active Editor region. If you create a new 
      Editor region while recording keystrokes, the recorder will remain in record
      mode and continue recording Key Strokes, but only in the Editor region it was
      activated in. The recorded Key Strokes will only play back into the region
      they were recorded in.



[Bugs Fixed for Build 155]
==========================

1   GPF / problems loading program file when target memory
    configured by a script.



[Bugs Fixed for Build 154]
==========================

1   GPF / problems loading program file when target memory
    configured by a script.




[New Features added for Build 153]
==================================

1   Code breakpoints are now saved as "symbol plus offset" if a
    logical symbol such as the start of function can be found.
    You can enable/disable the option via a check-box on the
    System Options dialog.

2   A new option on the Load Program File dialog lets you tell
    CodeScape to start program execution when the binary sections
    are loaded without waiting for the debug symbols to load.

3   "Promote To Root" (CTRL + ALT + R) has been added to the Watch
    region shortcut menu. It allows a nested component to be put at
    the root of the Watch region.

4   In the Watch region only you can specify array sub-ranges
    using ".." and ";".
    For example:
        array[0..3]
        array[0;1;12;2000]
    and combinations
        array[12;200..300]

    NOTE: Only C-style literal integers are allowed, and white space
    is not allowed.

5   Provided option to ignore warnings during elf down load.

6   The Step Run In, Step Run Out, and Step Over commands work with
    inlined code.

    NOTE: Step Over works for source code only.

7   The Expression evaluator will try and match a forward declaration to 
    a structure/class definition, if a unique instance can be found.





[Bugs Fixed for Build 153]
==========================

1   The line
       "strcat(cp_cGin, p_cDir /*+ (*cp_cDir=='\\')*/ ); //skip"
     results in all following code upto a */ being interpreted as 
     comments.

2   Syntax highlighting treats //* as /*.

3   The exception reported for "SCIF ERI" is incorrectly described as
    "DMAC ERI"

4   Session restore does not check the size of arrays expanded in the 
    Watch region. If the size is different a GPF can occur.

5   Watch region locks up due to infinite expansion of next pointers.

6   GPF when looking up Metrowerks enums.

7   Static members of classes (GNU) not showing up correctly.

8   Base class members not showing up for GNU and Metrowerks.





[Bugs Fixed for Build 152]
==========================

1   GPF in Japanese Windows 98 when sections of Kanji text are selected 
     in source region.





[Bugs Fixed for Build 149]
==========================

1   GPF in the Watch region when the height of the region is less than 
    the height of a line, and any text is entered.

2   The Target Set-up dialog lets you add, delete, and configure targets
    that this version of the product is not built to support.





[New features added for Build 147]
==================================

1   A new Global Option, "Default Stepping method is to step source",
    is on the Options dialog. It lets you set the default stepping mode
    to C/C++ or Assembly.
    When the option is deselected (default) then tracing works as before:
           * Source regions trace source.
           * All other regions trace disassembly.

    When the option is selected, Disassembly and Mixed regions trace 
    disassembly, and:
           * If a Source region is shown for the active target processor
             then all other regions trace source.
           -OR-
           * If no Source region is shown for the active target processor
             then all regions trace disassembly.
    (This extra test/case was added because it is confusing trying to work 
    out if the processor has just source traced without a source region.)

2   New method for editing a Watch region.
    In a Watch region, select the last entry and type to edit the entry.
    This removes the old requirement to press RETURN to begin editing.

3   Relocation support for DLLs and Overlays.
    You can now map a Base Address Range onto one or more Mapped Address 
    Ranges. If you do this, any debug information describing the base range
    will no longer apply. Instead, the information will apply to the associated
    mapped ranges. Each associated mapped range can be unmapped when it no
    longer required. If all the mapped ranges for a base range are unmapped,
    an entry for the base range still remains, hiding any debug information for
    that range. This entry can also be unmapped if required. It is also possible
    to un-map a base range without mapping it to any mapped range. This allows
    debug info for a given address range to be hidden.

    It is possible to clear all the mappings with one command.
    The Script commands are:
           * MapDebugAddressRange(<startaddr>, <endaddr>, <newstartaddr>)
           * UnMapDebugAddressRange(<startaddr>, <endaddr>)
            * ClearDebugAddressRangeMaps()
    
    Alternatively, you can use the Debug Address Mappings configuration dialog.
    The configuration dialog is accessed on the Debug toolbar, or from the
    shortcut menus in any of the following regions: Disassembly, Local Watch,
    Register, Source, Watch, and Call Stack regions.

4   Display Japanese text for MBCS strings in Memory region. Additional 
    "nudge" operation added to move the start point back by one byte.

5   Added support for on-chip flash memory access for SH2 (7055).
    Memory can be written to on LoadProgramFile and LoadBinary, all other
    times the memory is treated as ROM.





[Bugs Fixed for Build 147]
==========================

1   Window layout can be corrupted by continually clicking the mouse 
    on a splitter bar.

2   Corrupt session (example provided)cause window layout to be 
    corrupted.

3   The popup for the variable name "d_11111111112222222222" is 
    truncated to variable name "11111111112222222222" in the source region.

4   Large expanded array being saved to session is slow.





[Bugs Fixed for Build 146]
==========================

1   Right click in Editor region cancels text select.





[Bugs Fixed for Build 145]
==========================

1   Size of pointers reported to be 0 bytes.

2   The version check on the debug stub is not target processor 
    specific. Currently all new target flash versions need to start 
    with the version number greater than 3.8.0a..

3   IP configuration allows values greater than 255 (it does generate a 
    warning though).



[New features added for Build 144]
==================================

1   Shared memory address information is only used in a Disassembly
    region when looking up file/line/symbol information.
    This feature should be added to Source and Call Stack regions.

2   The Configure Target / Communications option has been moved from
    the Debug menu to the Tools menu.

3   The fileserver can now be told to read from standard in (STDIN).
    To do this, issue the command:
        debug_read(STDIN, buffersize, buffer_ptr);
    The Standard Input dialog box appears.
    Enter the text you require.
    The number of characters are limited to the buffer size displayed. 

4   Improved support for drag and drop of files. It now supports files 
    based on the following extensions:
       Load Binary     -  ".bin" 
       Load in Editor  -  ".c",  ".cpp",  ".asm",  ".src",  ".h",  ".hpp",
                          ".txt",  ".js",  ".vbs"

5   If you load a program file that has dwarf/elf debug information errors
    warnings appear describing the errors. If warnings are generated the
    Load Program File dialog does not close until you click OK.





[Bugs Fixed for Build 144]
==========================

1   Build 142 GPFs when loading old sessions.

2   If a large file (~16Meg) that contains no linefeeds or carriage returns 
    is dropped onto CodeScape, the debugger appears to stop.




[New features added for Build 143]
==================================

1   On the Tools, Options dialog is a new check box called:
        Hide Optimized-Out Local Symbols.
    When selected (default) variables that have been optimized out do not
    appear in the Local Watch region as they have no address information.
    When deselected variables that have been optimized out appear with the
    message "variable optimized out".

2   A command to run a script from target has been added to the fileserver.
        int debug_runscript(const char *filename, SCRIPTTYPE eScriptType);

    Script type is either:
        SCRIPTTYPE_JSCRIPT
        SCRIPTTYPE_VBSCRIPT

    NOTE: The target is stopped when a script is run. You must issue a 'Run()'
          in the script to continue target execution when the script is complete.





[Bugs Fixed for Build 143]
==========================

1   In the Call Stack when the address is offset from a label it 
    sometimes looks to chose the wrong label to offset from. The 
    offset is still a correct / valid expression but it looks wrong.

2   If in the breakpoint configure dialog an invalid expression is 
    entered and OK is hit. The dialog warns that the expression is 
    invalid (this is correct), but it then disables the breakpoint 
    and closes the dialog. Why?

3   The Advanced breakpoint options are not greyed out when the breakpoint 
    type is set to software.






[New features added during Builds 140, 141, and 142]
====================================================

1   A breakpoint's trigger count now automatically resets when it is
    successfully encountered.

2   The Find dialog in a Source region now automatically wraps a file search
    and lets you specify the search Direction (Up or Down).

3   The Symbol completion dialog automatically completes a symbol name
    when only one symbol matches the desired start substring. 

4   Memory region now displays floats, doubles, signed and 
    unsigned decimal integer values.






[Bugs Fixed for Builds 140, 141, and 142]
=========================================

1   Tabbing in Local Watch and Watch regions stops at the bottom row
    of the region if the next (not-yet-visible) item cannot be tabbed.

2   File Table named lookup is very slow (it uses a linear search 
    strategy).

3   Session Save and Restore of expanded arrays in a Watch region
    produced strange effects.

4   Session Restore with an open large array causes re-draw problems
    when first shown.

5   Inconsistency in Simulator/Profiler greying in the Tools menu.

6   Toggling Show Symbols in a Disassembly region does not cause 
    the symbols to appear/disappear immediately.

7   The Simulator stall types are not shown when saved or printed.

8   If a script fails with an error message you cannot re-run it after 
    editing it unless another script is run first. 

9   GPF when the Load Program File dialog box closes.

10  The Symbol completion dialog is sometimes slows when you type 
    in the edit field.

11  CTRL+HOME and CTRL+END do not go to the top and bottom of a source 
    file in the Source region.

12  Editing in 'Op-code' column of a Disassembly region does not take 
    into effect processor endian.

13  The expression evaluator does not parse expressions such as 
    "operator []" correctly for examples compiled using HITACHI.

14  The fileserver "SNASM_O_CREAT" option on debug_open() does not work 
    correctly when combined with other flags.

15  Source not displayed for source file with bad end of line markers.

16  Entering the following text into the Editor causes a lock-up.

    "//" /*
    ?

17  The following code in your source will cause CodeScape syntax 
    highlighting to GPF.

    // char
    cp_cFileTypes[]="0drv1mlt2///3msb4mpb5///6osb7p168///9fobAfpbB///"; /*
    ///=unsupported data type */

18  Overlays can cause CodeScape to GPF.

19  Problem with overlays when the overlay branches to account for more than one
    source file per overlay.

19  Profiler the "Sort by C1 C2", etc. option are available on menu during 
    statistical profiling.  They should be greyed.

20  Profiler the "Go To Next Tagged" button does not grey out when there are 
    no tagged functions.

21  Profile start-up and shutdown very slow.

22  GPF when evaluating '(void*)r15'.

23  In the Region Configuration dialog box Min and Max on the Update Rate
    Foreground and Background update sliders are the wrong way round.

24  Setting a breakpoint on the instruction following a 32-bit DSP instruction
    can cause the breakpoint to complain about being set on a slotted instruction.

25  Fire up a DASH build of CodeScape, power down the DASH. CodeScape says it 
    has lost contact with "SCSI" device.

26  The text description of the FPSCR register flags are wrong they are shown as
         "-------------DEVZOUIVZOUIVZOUIRM"
    but the overflow, underflow and inexact bit don't exist.







[New features in Build 138]
===========================

1   Provide some visual feed back to show which of the 
    Source/Disass/Both states is current active for an interleaved
    region.
    An icon on region toolbar changes to reflect current state.

2   Codescape now includes DSP functionality for SH3 7729.





[Bugs Fixed in Build 138]
=========================

1   Slow symbol lookup when many with same name (e.g. "this").

2   The overlay size appears as zero in Overlay Management Dialog.

3   Active overlay ignored for scope symbol list.

4   The edit in place field (double click on a value) in the 
    Expression Evaluator dialog, does not release focus correctly.

5   The 'Goto source file ...' option does not work for files whose
    name starts with a number (e.g. "3d.c").

6   The counts on breakpoints do not reset when you restart the 
    executable.

7   With multiple targets, the highlight in the tree jumps around
    when creating new regions.

8   The warning "Setting breakpoint on a slot instruction" can 
    appear three or four times.

9   When a session file describes multiple targets and the current system
    has less no warning is generated.

10   Shift-F10 and the windows context menu key move the cursor before 
     displaying the regions right mouse menu.

11   Breakpoints in overlayed areas did not distinguish between between
     overlays. Should only be inserted when the specified overlay is 
     loaded.

12   Additional symbols loaded from the Hitachi linker map file, are not
     shown as labels.

13   Overlay management dialog incorrectly re-syncing with target.

14   The choose global/static dialog is ignoring the "use abbreviated 
     filenames" option and always using the long form of the names.

15   Deleting Targets in the target configuration sometimes deletes the 
     wrong target.

16   In a DASH only build CodeScape tries to load Wnaspi32.dll, even though
     it is not used.

17   Show floats as hex option in register region is available on processors 
     where no floating point registers are available.

18  On 7709a & 7729 disassembly does not disassemble op-code involving 
    banked registers. e.g. ldc r14,r4_bank.





[New features in Build 137]
===========================

1   Shortcut to toggle around Source/Disass/Both options in 
    Interleaved region. CTRL-R added to CodeScape default shortcuts.
    This does not work if you customize the shortcut setting. 
    The feature is configured in the Shortcut Keys dialog:
    *  Select the Misc. command, then select Cycle Source\Disassembly\Both





[Bugs Fixed in Build 137]
=========================

1   Active overlay ignored in label and symbol lookup.

2   When the user correctly calls MWNotifyOverlayLoaded. CodeScape 
    does not recognize that an overlay has been loaded.

3   Shortcuts in Overlay Management Dialog do not operate correctly.

4   Construction of the abbreviated filenames produced extensive
    load times.





[Bugs Fixed in Build 136]
=========================

Test Build for SOJ.

1   Progess Bar added to show construction time for abbreviated 
    filenames.





[New features in Build 135]
===========================

1   If a file with no debug information is selected in the Goto 
    source file dialog, a new editor region is created.








[New features in Build 129-134]
===============================

1   Diagnosis Tab on Configure Target / Communications Dialog.

2   Make unload program file available from cmd line.
    Usage:-
         CodeScape -T1P1u

3   New global option to disable the question dialog that asks 
    "Do you wish to reload the Program File?" after a reset.
    When enabled the option reloads the program file and does not 
    bring up the query dialog.




[Bugs Fixed in Build 129-134]
=============================

1   Watch region scrollbar and cursor do not update correctly when 
    active frame changed in callstack. [134]

2   Configure Target / Communications Dialog will not delete last DASH
    target and will permit the same target to be added twice.

3   CodeScape reports that a valid session file is corrupt. [133]

4   Color information in the Simulator does not restore correctly. [133]

5   Interleaved region can GPF during a make. [133]

6   GPF when loading elf. [132]

7   When the section table loading is at the very early stages and 
    is aborted CodeScape GPFs. [130]

8   Program files from the second (third, fourth, etc.) targets of 
    a session do not load. [130]

9   The Expression Evaluator will not permit the subtraction of 
    two arrays of the same type. In this case arrays should be 
    treated as pointers. [130]

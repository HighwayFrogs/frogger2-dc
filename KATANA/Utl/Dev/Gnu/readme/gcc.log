
File: SYSDEV_exp Changelog
  by: Toshiyasu Morita
--------------------------

Quick note on the change log format:

 o Note1 (Note2) (Note3)

   Note1: This is a quick description of the bug.
   Note2: This is the Cygnus PR (problem report) tracking number.
   Note3: This is a list of files which were modified to fix the problem.

   For example:

   o  Compiler crashes; bad parms to find_free_reg()
      (gcc/9036) (gcc/regmove.c)

   The Cygnus PR number is "gcc/9036", the file modified to
   fix this problem was "regmove.c" in the gcc subdirectory. 
   Some change log entries may not include a Cygnus PR if they
   were fixed internally at SOA.

--------------------------
Known bugs in this version
--------------------------

Functional bugs:

o SRCONV generates incorrect SYSROF files.

  This won't ever really be fixed; evidently SYSROF requires information
  which COFF files don't contain, and the Hitachi SYSROF loaders
  (linker & debugger) will not output error messages when an incorrect SYSROF
  file is loaded - they just crash, so it's nearly impossible to fix.

-----------
Change log:
-----------

 o Fixed "pcrel too far" generated
   (case 101504) (src/gcc/config/sh/sh.c) (cpopetz)
 
 o Fixed "gcc unaware ___movstr_i4_even clobbers T-bit"
   (case 103390) (src/gcc/config/sh/sh.md) (tm)

 o Fixed "small struct return should be via pointer on stack with -mhitachi"
   (case 103375) (src/gcc/config/sh/sh.h) (amylaar) 

 o Added -mnomacsave option
   (case 103389) (src/gcc/config/sh/sh.c, src/gcc/config/sh/t-sh) (horita)

 o Fixed "pcrel too far" 
   (case 101504) (src/gcc/config/sh/sh.c) (cpopetz)

 o Fixed "wrong register incremented"
   (case 102813) (src/gcc/reload1.c) (schmidt)

 o Fixed "G++ internal compiler error"
   (case 101747 (src/gcc/cp/cp-tree.h, src/gcc/cp/decl.c, src/gcc/cp/search.c) (merrill)

 o Fixed "ostream prints floats incorrrectly when using -m4-single-only"
   (case 102157) (src/libio/floatconv.c) (tm)

 o Fixed "Internal compiler error in function schedule_block"
   (case 102587) (src/gcc/flow.c) (tm)
 
 o Fixed "second parameter register trashed before use"
   (case 102938) (src/gcc/config/sh/sh.h) (tm)

 o Fixed "Incorrect register used on post-increment addressing mode"
   (cases 102925, 102247) (src/gcc/reorg.c, src/gcc/reload1.c, src/gcc/rtlanal.c)

 o Fixed "linker relaxation reordering bug)
   (case 102922) (src/bfd/coff-sh.c) (tm)

 o Fixed "Internal compiler error on null struct initializer"
   (case 101818) (src/gcc/cp/typeck2.c, src/gcc/expr.c) (amylaar)

 o Fixed "Internal compiler error in function find_free_reg"
   (case 102125) (src/gcc/regmove.c) (aph)

 o Fixed "Debug info not emitted for some C++ classes"
   (src/gcc/dwarfout.c) (tm)

 o Fixed "incorrect offset generated"
   (case 101468) (src/gcc/regmove.c) (amylaar)
 
 o Fixed "allow gas to reduce local relocs"
   (src/gas/write.c) (ian)

 o Fixed "loop update generated in wrong place"
   (case 101797) (src/gcc/loop.c) (amylaar)

 o Fixed "bad reload_combine() optimization"
   (src/gcc/reload1.c) (tm/amylaar)

 o Fixed "muls.w and mulu.w instructions not recognized"
   (case 101828) (src/opcodes/sh-opc.h) (tm)

 o Fixed "Missing leading underscore on DWARF2 DW_OP_ADDR field"
   (case 101827) (src/gcc/dwarf2out.c) (tm)

 o Fixed "More wrong opcodes"
   (src/opcodes/sh-opc.h) (tm)

 o Fixed "stc sgr,r0 and stc sgr,@-r0 assembly to wrong opcodes"
   (case 101820) (src/opcodes/sh-opc.h) (tm)

 o Fixed "ldc r1, dbr incorrectly assembles to 0x417e"
   (case 101785) (src/opcodes/sh-opc.h) (tm)
   
 o Fixed "gas silently accepts incorrect syntax"
   (case 101759) (src/gas/config/tc-sh.c, src/gcc/config/sh/lib1funcs.asm)
   (amylaar)

 o Fixed "fschg disassembles as fsca fpul,dr3"
   (src/opcodes/sh-opc.h) (tm)

 o Fixed "Make can't issue shell commands under Win9x"
   (make/18685) (src/winsup/spawn.cc) (delorie)

 o Fixed "Delayed branch bug"
   (case 101325) (src/gcc/config/sh/sh.c) (amylaar)

 o Fixed "Plum Hall optimization failure"
   (src/gcc/loop.c) (amylaar)

 o Fixed "Internal compiler error in function insert_save_restore"
   (case 101378) (src/gcc/regmove.c) (amylaar)

 o Fixed "GCC fails to hoist divide from loop"
   (gcc/15594) (src/gcc/config/sh/sh.md) (amylaar)

 o Fixed "objdump crash bug"
   (case 101179) (src/bfd/dwarf1.c) (tm/amylaar)

 o Fixed "can't issues shell commands from makefile"
   (make/17870) (src/make/job.c) (delorie)

 o Fixed "bad trampoline code"
   (case 101320) (src/gcc/config/sh.md, src/gcc/config/sh.h) (amylaar)

 o Fixed "loop update increment generated in wrong place"
   (gcc/20140) (src/gcc/regmove.c) (amylaar)

 o Fixed "relaxing causes source lines not to match disassembly"
   (bfd/20111) (src/bfd/elf32-sh.c) (amylaar)

 o Added new warning when linking together different endian object files
   (bfd/20105) (src/bfd/elf32-sh.c) (amylaar)

 o Re-fixed "SH-ELF ignores addend in RELA relocation"
   (ld/18094) (src/bfd/elf32-sh.c) (scox)

 o Fixed "Fixed or forbidden register spilled"
   (gcc/19575) (src/gcc/reload.c, src/gcc/reload1.c) (amylaar)

 o Fixed "BRANCH_COST too low"
   (gcc/19745) (src/gcc/config/sh/sh.h) (amylaar)
 
 o Fixed "Weak address inheritance"
   (gcc/19759) (src/gcc/loop.c, src/gcc/loop.h, src/gcc/combine.c,
    src/gcc/unroll.c)

 o Fixed "Various problems"
   (gcc/19666) (src/gcc/loop.c, src/gcc/loop.h, src/gcc/reload.c,
    src/gcc/reload1.c)

 o Fixed "Branch overflow"
   (gcc/19621) (src/gcc/genattrtab.c, src/gcc/final.c)

 o Fixed "Weak loop address inheritance"
   (gcc/19587) (src/gcc/loop.c, src/gcc/loop.h) (amylaar)

 o Fixed "Weak address inherits" 
   (gcc/19658) (src/gcc/regmove.c) (amylaar)

 o Fixed "Weak loop inheritance" 
   (gcc/19587) (src/gcc/regmove.c) (amylaar)

 o Fixed "Divide not hoisted out of loop"
   (gcc/19604) (src/gcc/config/sh/sh.md) (amylaar)

 o Fixed "Internal compiler error"
   (gcc/19606) (src/gcc/unroll.c) (wilson)

 o Fixed "Internal compiler error"
   (gcc/19602) (src/gcc/final.c) (amylaar)

 o Fixed strip.exe not included in distribution 

 o Fixed "Unnecessary moves generated"
   (gcc/12883) (src/gcc/local-alloc.c) (amylaar)

 o Fixed "Pessimal divide by constant"
   (gcc/15587) (src/gcc/config/sh/sh.md) (amylaar)

 o Fixed "Internal compiler error - unrecognizable insn created"
   (gcc/19196) (src/gcc/config/sh/sh.c) (amylaar)

 o Fixed "INCLUDE environment variable not set properly"
   (src/gcc/config/i386/xm-cygwin32.h)

 o Fixed "GCC still passes structs in registers when -mhitachi specified"
   (gcc/19135) (src/gcc/config/sh/sh.h) (amylaar)

 o Fixed "_mult name collision with Hitachi libraries"
   (newlib/19155) (tm)

 o Fixed "Internal compiler error"
   (gcc/17554) (src/gcc/integrate.c, src/gcc/integrate.h, src/gcc/unroll.c)
   (raeburn)

 o Fixed "volatile qualifier ignored on asm"
   (g++/18132) (src/gcc/cp/semantics.c) (jason)

 o Fixed "SH-ELF ignores addend in RELA relocation"
   (ld/18094) (src/bfd/elf32-sh.c) (scox)

 o Fixed "Compiler segfaults"
   (gcc/17458) (src/gcc/cp/cvt.c) (delorie)

 o Fixed "Cannot represent relocation type BFD_RELOC_8_PCREL"
   (gas/18284) (src/include/elf/sh.h, src/include/elf/sh.c
    src/include/elf/reloc-macros.h) (amylaar)

 o Fixed "Internal compiler error"
   (gcc/17676) (src/gcc/regmove.c) (amylaar)

 o Fixed "Internal compiler error in optimize_related_values()"
   (gcc/17663, gcc/17946) (src/gcc/regmove.c) (amylaar)

 o Fixed "regmove bug"
   (src/gcc/regmove.c)

 o Fixed "regmove bug - REG_DEAD note bug"
   (src/gcc/regmove.c)

 o Fixed "Internal compiler error in function dwarfout_file_scope_decl"
   (gcc/17466) (src/gcc/dwarfout.c) (wilson)

 o Fixed "Internal compiler error in function emit_move_insn"
   (gcc/17553a) (src/gcc/config/sh/sh.h) (amylaar)

 o Fixed "Internal compiler error in function emit_move_insn"
   (gcc/17553) (src/gcc/config/sh/sh.h) (amylaar)

 o Fixed "Bogus symbol subtraction" (for -gdwarf-2)
   (gcc/17632) (src/gcc/dwarf2out.c) (amylaar)

 o Fixed "Offset calculated incorrectly after if-then block"
   (gcc/17168) (src/gcc/regmove.c) (amylaar)

 o Fixed "Internal compiler error"
   (gcc/17028) (src/gcc/regmove.c) (amylaar)

 o Fixed "Internal compiler error"
   (gcc/17167) (src/gcc/regmove.c) (amylaar)

 o Fixed "Offset too large for addressing mode" 
   (gcc/17344) (src/gcc/reload1.c) (amylaar)

 o Fixed another setjmp/longjmp bug
   (gcc/17258) (src/newlib/libc/machine/sh/setjmp.S)

 o Fixed "setjmp()/longjmp() fail to save fr0-fr3"
   (gcc/17258) (src/newlib/libc/machine/sh/setjmp.S)

 o Migrated to SH4 phase 2 release 3 code and backpatched all 
   missing patches (gcc/17081, 17028, 1036)

 o Fixed "Impossible reload generated"
   (gcc/17081) (src/gcc/config/sh/sh.c, src/gcc/config/sh/sh.h,
    src/gcc/config/sh/sh.md)

 o Fixed "pcrel too far generated 2"
   (gcc/17028) (src/gcc/config/sh/sh.c)

 o Fixed "pcrel too far generated"
   (gcc/17036) (src/gcc/config/sh/sh.md)

 o Fixed "Floats tagged as doubles when -m4-single-only used"
   (gcc/17004) (src/gcc/dwarfout.c)

 o Refixed "strcmp() bug"
   (gcc/17007) (src/newlib/libc/machine/sh/strcmp.S)

 o Fixed various make problems (hopefully) by replacing with 98r1 make
 
 o Fixed "strcmp() bug" 
   (gcc/17007) (src/newlib/libc/machine/sh/strcmp.S)

 o Fix "Incorrect offset generated for accessing field"
   (gcc/16939) (src/gcc/regmove.c)

 o Fix "C++ method reference via pointer optimized badly"
   (gcc/16753) (src/gcc/cse.c, src/gcc/expr.c)

 o Fix "Optimization bug - constructor fails to return 'this'"
   (gcc/16819) (src/gcc/reload1.c)

 o Fix "Probable bad code generated"
   (gcc/16805) (src/gcc/reload1.c)

 o Fix "GCC thrashes values to and from stack"
   (gcc/16588) (src/gcc/reload1.c)

 o Started compiling with the 98r1 release compiler.
   This fixes many problems with make crashing on multiprocessor WinNT boxes,
   plus you can now run parallel compiles - see gccsh4.faq for more info.

 o Fix "Writes to volatile address optimized away"
   (gcc/16682) (src/gcc/expr.c)

 o Fix "Plum-Hall failures"
   (gcc/16581) (src/gcc/reload.c, src/gcc/reload1.c, src/bfd/coff-sh.c,
   src/bfd/coff-sh, src/gas/config/tc-sh, src/newlib/libc/machine/sh/asm.h,
   src/newlib/libc/machine/sh/memset.S)

 o Fix "r0 loaded twice"
   (gcc/16571) (src/gcc/reload1.c)

 o Fix "Unnecessary stack-relative values generated"
   (gcc/16517) (src/gcc/local-alloc.c)
 
 o Fix "Registers loaded redundantly and failure to hoist"
   (gcc/16516) (src/gcc/reload.h, src/gcc/reload.c, src/gcc/reload1.c)

 o Fix "Values reloaded unncessarily"
   (gcc/16515) (src/gcc/reload.c, src/gcc/reload1.c)

 o Fix "Pessimal code generated" (literals stored on stack)
   (gcc/16514) (src/gcc/local-alloc.c, src/gcc/reload1.c)

 o Improve movstr routines (used when copying structs)
   (gcc/16513) (src/gcc/config/sh.md, src/gcc/config/sh/t-sh,
    src/gcc/config/lib1funcs.asm)

 o Fix "Address calculated incorrectly"
   (gcc/16530) (src/gcc/regmove.c)

 o Fix "G++ generates call to ___main on every C++ function"
   (g++/16383) (/src/gcc/cp/decl.c)

 o Fix "GDB doesn't load little-endian COFF files"
   (gdb/16427) (src/sim/interp.c)

 o Migrated to Cygnus SH4 phase 2 release 2

   Reapplied missing patches:

   o Fix "GCC generates misaligned stack parameters with -mdalign"
     (gcc/16387) (src/gcc/config/sh/sh.c)

   o Fix "GCC generates wrong offset"
     (gcc/16384) (src/gcc/reload1.c)

 o Fix "GCC generates misaligned stack parameters with -mdalign"
   (gcc/16387) (src/gcc/config/sh/sh.c)

 o Fix loop alias analysis bug
   (rth) (src/gcc/loop.c)

 o Fix "GCC generates wrong offset"
   (gcc/16384) (src/gcc/reload1.c)

 o Fix Plum Hall regression introduced by gcc/16130
   (gcc/16334) (src/gcc/reload1.c)

 o Add warnings when alignments requested larger than section alignment
   (gcc/15976) (src/gcc/varasm.c, src/gcc/config/sh.h)
 
 o Fix "Plum Hall timeq1 failure"
   (src/gcc/cse.c)

 o Fix "Redundant writes + call corrupt register"
   (gcc/16130) (src/gcc/reload1.c, src/gcc/config/sh/sh.c)

 o Fix "Multiple writes to same address"
   (gcc/16295) (src/gcc/reload1.c)

 o Fix "Redundant store/loads"
   (gcc/16294) (src/gcc/reload1.c)
 
 o Partially fix "Awkward loops"
   (gcc/16280) (src/gcc/loop.c)

 o Fix "Compiler segfaults"
   (gcc/16275) (src/gcc/regmove.c, src/gcc/reload1.c)

 o Fix "Internal compiler error in function find_free_reg"
   (gcc/16274) (src/gcc/regmove.c)

 o Fix "Plum-Hall regressions"
   (gcc/16257) (src/gcc/reload1.c)

 o Fix "More unnecessary r0 loads part 3"
   (gcc/16237) (src/gcc/reload1.c)

 o Fix "Unreachable instructions generated"
   (gcc/16236) (src/gcc/config/sh/sh.c)

 o Fix "Unnecessary add immediate zero generated"
   (gcc/16235) (src/gcc/reload1.c)

 o Fix "More useless r0 loads"
   (gcc/16230) (src/gcc/reload1.c)

 o Fix "Useless r0 load generated"
   (gcc/16221) (src/gcc/reload1.c)

 o Fix "Compulsive-obsessive r0 usage"
   (gcc/16220) (src/gcc/reload1.c)

 o Fix "Awkward address calculations"
   (gcc/16219) (src/gcc/reload1.c)

 o Fix "Plum-Hall test failures"
   (src/gcc/reload.c, src/gcc/reload1.c)

 o Fix "GCC crashes with internal compiler error"
   (gcc/16168) (src/gcc/regmove.c)
 
 o Fix "Plum-Hall test failures"
   (src/gcc/reload.c, src/gcc/reload1.c)
 
 o Set maximum object file alignment to 16 bytes
   (gcc/15976) (src/gcc/varasm.c, src/gcc/config/sh/sh.h)

 o Migrated go Cygnus SH4 phase 2 release 1

   Reapplied missing patches:

   o Fix "linker relaxation creates incorrect code"
     (ld/14069) (bfd/coff-sh.c)

2.7-SYSDEV_exp-980504 changes:

 o Bump stack up to 12 megabytes.

2.7-SYSDEV_exp-980430 changes:

 o Fixed "byte swap code generated incorrectly" (serious reload problem)
   Temporary fix applied until SH4-phase2 which will solve the underlying problem.
   (gcc/15808) (src/gcc/reload1.c)

 o Fixed another "wrong sign-extend when shifting and ANDing".
   (src/gcc/config/sh/sh.c)

 o Fixed "fmov.d generated for unaligned stack in big-endian" and also
   "-mdalign fails to 64-bit align stack"
   (gcc/15638) (src/gcc/config/sh.md, sh.c, sh.h, lib1funcs.asm, t-sh) 
 
 o Fixed insn splitting bug causing double-precision float bug which
   caused paranoia failures.
   (gcc/15798) (src/gcc/sched.c)

2.7-SYSDEV_exp-980427 changes:

 o Fixed "unrecognized insn" when shifting left byte values.

2.7-SYSDEV_exp-980425 changes:

 o Fix "gcc uses wrong sign-extend when shifting and anding"
   (src/gcc/config/sh/sh.c)

 o Fix C++ crash bug (overwrote stack - increased stack size from 4 meg
   to 8 meg)

2.7-SYSDEV_exp-980422a changes:

 o Fix "gcc fails to sign-extend and shift properly when converting from
   unsigned short to unsigned int"
   (gcc/15736) (src/gcc/config/sh/sh.md)

2.7-SYSDEV_exp-980414 changes:

 o Previous release was botched, and did not properly define __SH4__.
   This release fixes this problem.

2.7-SYSDEV_exp-980406 changes:

 o Fix "GCC ssumes wrong register for divide function return"
   (workaround kludge - disable SH4-specific divide) (gcc/config/sh/sh.md)

2.7-SYSDEV_exp-980404 changes:

 o Fix "GCC fails to align code after switch table"
   (gcc/14396) (gcc/config/sh/sh.c)

 o Fix "GCC fails to hoist loop-invariant multiply out of loop"
   (gcc/15130) (gcc/config/sh/sh.md)

 o Fix "compiler doesn't generate fmac reliably"
   (gcc/14681) (gcc/combine.c)

 o Fix "objdump returns 1 error code on successful completion"

 o Fix "function alignment on 32 byte boundary wasting space"

 o Fix "loop optimizer calculates optimization savings incorrectly"
   (src/gcc/loop.c)

2.7-SYSDEV_exp-980110 changes:

 o Fix "unhandled 29" and "unhandled 30" errors when assembling instructions using SGR and DBR

2.7-SYSDEV_exp-971215 changes:

 o Add -mrev3bug workarounds.

 o Fix "some SH4 instructions aren't recognized"
   (gas/14044) (opcodes/sh-dis.c, opcodes/sh-opc.h, gas/config/tc-sh.c)

 o Fix "linker relaxation creates incorrect code"
   (ld/14069) (bfd/coff-sh.c)

 o Fix "linker relaxation failes to update switch table"
   (gcc/14155) (bfd/coff-sh.c, include/coff/sh.h, gas/config-tc-sh.c)

 o Fix "compiler fails to emit period before relaxation labels in ELF/DWARF"
   (gcc/14233) (gcc/config/sh/sh.c)

 o Fix "tools emit data for NEVERLOAD sections with binary output"
   (ld/14104) (bfd/binary.c)

cygnus-2.7-97r1 SYSDEV-970714 changes:

 o Fix memset() patch.

cygnus-2.7-97r1 SYSDEV-970712 changes:

 o Reapplied faster memcpy() & memset() patches.

cygnus-2.7-97r1 SYSDEV-970710 changes:

 o Migrated to Cygnus 97r1 release.

 o Reapplied missing patches in 97r1 release:

   o Added warning if linking big-endian code with little-endian.
     (ld/12351) (bfd/coff-sh.c, bfd/coffcode.h)

   o Fix simulator crashes on "pref" instruction.
     (gdb/12366) (sim/sh/gencode.c)

   o Display pc-relative load values in objdump disassembly.
     (gas/12383) (opcodes/sh-dis.c)

   o Add warning to assembler for possibly unaligned .shorts and .longs.
     (gas/12528) (gas/config/tc-sh.c)

   o Add warning to assembler for out-of-range offsets in address.
     (gas/12530) (gas/config/tc-sh.c)

   o Add "-mrev1bug" flag and add -mrev1bug libraries. (gcc/12435)
     (gcc/config/sh/sh.c gcc/config/sh/sh.h gcc/config/sh/sh.md)
 
   o Enable software workaround for fadd/fsub/fmac bugs
     when -m3e -mrev1bug is specified.
     (gcc/12627) (gcc/config/sh/sh.md)

   o Ensure bt and bf instructions don't jump over single instruction
     when -m3e -mrev1bug is selected.
     (gcc/12464) (gcc/config/sh/sh.h, gcc/config/sh/sh.c, gcc/config/sh/sh.md)

cygnus-2.7-96q4 SYSDEV-970627 changes:

 o Added support for "bt/s" and "bf/s" instruction syntax
   (gas/12373) (opcode/sh.h)

 o Added warning if linking big-endian code with little-endian
   (ld/12351) (bfd/coff-sh.c, bfd/coffcode.h)

 o Display pc-relative load values in objdump disassembly
   (gas/12383) (opcodes/sh-dis.c)

 o Fix "gcc links with big-endian libraries in little-endian mode"
   (gcc/12395) (gcc/gcc.c)

 o Fix simulator crashes on "pref" instruction.
   (gdb/12366) (sim/sh/gencode.c)

 o Add "-mrev1bug" flag, which adds three "fmov fr0,fr0" before and after
   every fpul reference.
   (gcc/12435) (gcc/config/sh/sh.c gcc/config/sh/sh.h gcc/config/sh/sh.md)

 o Modify configuration file to add a "rev1bug" directory for libgcc.a and
   standard C library.
   (gcc/12435) (gcc/config/sh/t-sh)

 o Add warning to assembler for possibly unaligned .shorts and .longs.
   (gas/12528) (gas/config/tc-sh.c)

 o Add warning to assembler for out-of-range offsets in address.
   (gas/12530) (gas/config/tc-sh.c)

 o Disable "fmac" instruction.
   (gcc/config/sh/sh.md)

 o Ensure bt and bf instructions don't jump over single instruction
   when SH3E -mrev1bug is selected.
   (gcc/12464) (gcc/config/sh/sh.h, gcc/config/sh/sh.c, gcc/config/sh/sh.md)

 o Disable "fdiv" instruction and use software emulation when "-mrev1bug"
   is specified (gcc/12627) (gcc/config/sh/sh.md)

cygnus-2.7-96q4 SOA-970218a changes:

 o Added missing signal library function.
   (gcc/11300) (newlib/NEWS, newlib/configure.in,
   newlib/libc/signal/{Makefile.in,raise.c,signal.c},
   newlib/libc/sys/{sparc64,go32,sysvnecv70}/Makefile.in )

 o Fixed "bad ushort to ulonglong conversion"
   (gcc/11301) (gcc/expr.c)

 o Fixed "loop unrolling allocates variable to multiple registers"
   (gcc/11303) (gcc/unroll.c)

 o Fixed "__complex__ double result register corrupted by stack frame code"
   (gcc/11353) (gcc/config/sh/sh.c)

 o Added missing ffs library function.
   (gcc/11405) (libc/misc/{Makefile.in,ffs.c})

 o Fixed "#pragma interrupt crashes compiler"
   (gcc/11565) (gcc/config/sh/sh.{h,c})

 o Fixed "misaligned stack frame allocation on SH"
   (gcc/12038) (gcc/config/sh/sh.c)

cygnus-2.7-96q4 SOA-970107a changes:

 o Migrated to Cygnus 96q4 release 

 o Reapplied missing patches in 96q4 release:

    o Faster SH-specific memcpy() and memset() included in standard C library.
      (newlib/libc/machine/sh/memcpy.S, newlib/libc/machine/sh/memset.S,
       newlib/libc/machine/Makefile.in)

cygnus-2.7-96q3 SOA-xxxxxx changes:

 o Fixed "'objdump -i' cannot open temporary files".
   (binutils/10482) (libiberty/Makefile.in, libiberty/choose-temp.c,
    binutils/objdump.c)

 o Fixed "Awkward code generated for offset + register indirect".
   (gcc/10501) (gcc/regmove.c, ...)

 o Fixed "Internal compiler error triggered when unrolling loops".
   (gcc/10507) (gcc/unroll.c)

 o Fixed "linker does not link libc.a into base file even if
   stdio functions are used in overlay"
   (ld/10543) (ld/ldmain.c)

 o Fixed "Awkward code generated for structure access"
   (gcc/10289) (gcc/config/sh.h)

 o Fixed "GCC misses relaxation opportunity"
   (gcc/10264) (gcc/reload1.c, gcc/jump.c, gcc/config/sh/sh.h)

 o Fixed "Optimization bug" 
   (gcc/10645) (gcc/regmove.c)

 o Fixed "Compiler aborts with 'Non-optional registers need a spill register'"
   (gcc/10470) (gcc/reload1.c)

 o Fixed "Linker crashes on invalid object file"
   (ld/10652) (bfd/coff-sh.c)

 o Fixed "Compiler pessimizes loops"
   (gcc/10295) (gcc/loop.c)

 o Fixed "GCC fails to recognize post-increment opportunity"
   (gcc/6321) (gcc/expr.c)

 o Fixed "GCC generates awkward register moves"
    (gcc/10361) (gcc/expr.c)

 o Fixed "Not followed by compare not optimized well"
   (gcc/10314) (gcc/combine.c)

 o Fixed "Yet another relaxation opportunity missed"
   (gcc/10359) (gcc/config/sh/sh.c)

cygnus-2.7-96q3 SOA-960904 changes:

 o Fixed gcc crashes with -fprofile-arcs.
   (gcc/10282) (gcc/profile.c, gcc/config/sh/sh.md)

 o Fixed gas doesn't pad alignment with NOPs in sections other than .text.
   gas now pads with NOP in all sections but .data and .bss.
   (binutils/10312) (gas/config/tc-sh.c)

 o Fixed gcc generates awkward register moves.
   (gcc/10288) (gcc/optabs.c)

 o Fixed gcc generates trap instruction for profiling after function call.
   gcc now generates the profile trap before the function prologue
   which means you must save/restore r4-r15 in the profile trap handler.
   (gcc/10302) (gcc/config/sh/sh.h)

 o Fixed gcc uses movt inefficiently for moving constant 1 into register.
   (gcc/10267) (gcc/config/sh/sh.md)

 o Changed build file to prepend stub.exe onto MS-DOS executables.
   (Fixes "stack error" crashes)
    
cygnus-2.7-96q3 SOA-960806 changes:

 o Migrated to Cygnus 96q3 release 

 o Fixed problem in stock 96q3 release:

    o Unrecognized insn produced when "#pragma interrupt" used
      (gcc/10230) (gcc/config/sh/sh.c)

 o Reapplied missing patches in 96q3 release:

    o Compiler generates functions which allocate stack space unnecessarily.
      (gcc/9960) (gcc/sh.h)

    o Faster SH-specific memcpy() and memset() included in standard C library.
      (newlib/libc/machine/sh/memcpy.S, newlib/libc/machine/sh/memset.S,
       newlib/libc/machine/Makefile.in)

    o GCC misses relaxation opportunity.
      (gcc/10079) (gcc/config/sh/sh.c)

  o New patches:

    o Insn generated which does not satisfy constraints.
      (gcc/10248) (gcc/config/sh/sh.c)

cygnus-2.7-96q2 SOA-960719 changes:

 o Migrated to Cygnus 96q2 release

 o Fixed problems in stock 96q2 release:

    o Preprocesor ignores #includes after first #include directive.
      (gcc/9883) (gcc/cccp.c)

    o Compiler generates functions which allocate stack space unnecessarily.
      (gcc/9960) (gcc/sh.h)

    o GCC places uninitialized statics in .data section at -O2
      (gcc/10014) (gcc/toplev.c)

 o Reapplied missing patches:

    o Faster SH-specific memcpy() and memset() included in standard C library.
      (newlib/libc/machine/sh/memcpy.S, newlib/libc/machine/sh/memset.S,
       newlib/libc/machine/Makefile.in)

 o Performance patches:

    o GCC misses relaxation opportunity.
      (gcc/10079) (gcc/config/sh/sh.c)

cygnus-2.7-96q1 SOA-960412 changes:

 o Fixed GAS has incorrect limits for range of pc-relative instruction 
   (gas/9450) (gas/config/tc-sh.c)

cygnus-2.7-96q1 SOA-960328 changes:

 o Fixed setjmp()/longjmp() again. (newlib/8612)
   (newlib/libc/machine/sh/Makefile.in, newlib/libc/machine/sh/asm.h, 
    newlib/libc/machine/sh/setjmp.S, newlib/libc/include/machine/setjmp.h)

   Note: Only necessary registers, i.e. r8-r15, are saved by setjmp()/longjmp()
         now. Previously r0-r15 were saved, but since r0-r7 are assumed
         callee-destroyed it doesn't make sense to save them.

 o Fixed GCC munges structure initialization (gcc/9290) (gcc/c-typeck.c)
 
cygnus-2.7-96q1 SOA-960314 changes:

 o Migrated to Cygnus 96q1 release.

 o Fixed problems in stock 96q1 release:

   o Compiler crashes; bad parms to find_free_reg()
     (gcc/9036) (gcc/regmove.c)

   o Linker complains about relocations generated in .bss section when relaxing
     (ld/9044) (gas/config/tc-sh.c)

   o Linker complains about R_SH_USES pointing to 0x9 when relaxing
     (ld/9043) (bfd/coff-sh.c)

   o GAS can't find fixup when relaxing; also change "pcrel too far"
     from warning to error (gas/9072) (gas/config/tc-sh.c)

   o GCC incorrectly optimizes jsr to bsr when relaxing
     (gcc/9073) (gcc/config/sh/sh.c)

 o Applied pending patches from 95q4:

   o gcc/8876: GCC generates literals too far from reference 
   o gcc/8798: GCC generates switch tables in wrong section
   o  ld/8816: ld has problems with relocatable link
   o gcc/8703: GCC optimizes even at -O0
   o gcc/8695: Fixed unnecessary load/stores generated before inline asm
   o gcc/8546: Overzealous induction variable optimization
   o gcc/8194: Fixed gcc doesn't generate shal, shad for SH3 
   o gcc/8196: Fixed gcc generates awkward code for subtracting from constant

 o New patches:

   o GCC incorrectly multiplies floating point nums at -ml 
     (gcc/9048 gcc/9055) (gcc/config/sh.md)

   o Fixed minor bug in patch for gcc/8546.
     (gcc/8546) (gcc/loop.c)

   o Need alignment which word fills (.text now fills with nop,
     also new pseudo-ops .balignw and .balignl) (gas/8974)
     (gas/read.c, gas/config/tc-sh.c, gas/config/tc-sh.h, config/obj-coff.c)

   o Compiler crashes under Win3.1/Win95.
     The default stack size of the compiler has been changed from 256k
     to 2 megabytes, which solves this problem (gcc tends to call
     alloca() to allocate very large amounts of memory)

   o GCC pads structures incorrectly when gcc extension is used.
     (gcc/9109) (gcc/c-typeck.c)

   o Faster SH-specific memcpy() and memset() included in standard C library.
     (newlib/libc/machine/sh/memcpy.S, newlib/libc/machine/sh/memset.S,
      newlib/libc/machine/Makefile.in)

cygnus-2.7-95q4 SOA-960130 changes:

 o Fixed another problem with literals generated too far from reference.
   (gcc/8876) (gcc/config/sh/sh.c)

 o memcpy() and memset() in the standard C library are very slow,
   so I've written faster versions called qmemcpy() and qmemset().
   Source is in this directory. This code will become a part of
   the standard C library soon, hopefully.

cygnus-2.7-95q4 SOA-960119 changes:

 o Fixed when function is forced to section other than .text by
   using the "__attribute__" keyword the switch table for the
   function still goes into the .text section.
   (gcc/8798) (gcc/config/sh/sh.h)

 o Fixed problem with linker script used when -r is specified.
   "ld -r" should create files without global constructors/destructors.
   The bug prevented overlays from linking properly.
   (See the file "overlay.txt" for more info on overlays.)
   (ld/8816) (ld/scripttempl/sh.sc)

cygnus-2.7-95q4 SOA-960104 changes:

 o Fixed gcc optimizes even at -O0. This changes makes it easier to 
   debug code, and hopefully shouldn't cause any problems.
   (gcc/8703) (gcc/config/sh/sh.c gcc/config/sh/sh.h)

 o Fixed unnecessary load/stores generated before/after inline asm
   (gcc/8695) (gcc/stmt.c)

 o Fixed overzealous induction loop optimization (gcc/8546)
   (gcc/config/sh/sh.h gcc/loop.c)
  
 o Fixed gcc doesn't generate shal, shad for SH3 (gcc/8194)
   (gcc/config/sh/sh.md)

 o Fixed gcc generates awkward code for subtracting from constant (gcc/8196)
   (gcc/config/sh/sh.md)

cygnus-2.7-95q4 SOA-951117 changes:

 o Migrated to Cygnus 95q4 release

   We've been told by Cygnus the 95q4 release has added many optimizations
   specifically for the SH processors and generates code which is
   7-10% smaller and faster than 95q3.

 o Applied pending patches:

   gcc:
     gcc/7856: Faster 64-bit multiply & generate SH2 specific libs
     gcc/8005: Problem with gcc generating incorrect little-endian SH code
     gcc/8212: Problem with out-of-range literal loads

   newlib:
     newlib/7524: Changed function profiler trap from trap #5 to trapa #33

 o Fixed gcc fails to emit valid slot instruction (gcc/8432)
   (gcc/config/sh/sh.md)

 o Installed minor patch for delay slot splitting (gcc/final.c)

cygnus-2.7-95q3 SOA-951018 changes:

 o Changed function profiler trap from trapa #5 to trapa #33.
   (newlib/7524) (gcc/config/sh/sh.h)

 o Fixed problem with gcc generating bad little-endian SH code.
   (gcc/8005) (gcc/config/sh/sh.md, newlib/libc/machine/sh/makefile.in,
    newlib/libc/machine/sh/setjmp.S, newlib/libc/sh/Makefile.in, 
    newlib/libc/include/machine/ieeeefp.h)

 o Fixed problem with out-of-range literal loads.
   (gcc/8212) (gcc/config/sh/sh.c)

cygnus-2.7-95q3-SOA-950906 changes:

 GCC:

 o Fixed minor build problem. (gcc/version.c)

 o Added insns for inline 64-bit multiply and divide, also generate
   SH2-specific standard C libraries (gcc/7856)
   (gcc/config/sh/sh.md, gcc/config/sh/t-sh, newlib/config/Makefile.in)

   Note: If you're using the SH2 (you probably are) then you want to link with
         the libraries in LIB/SH2 rather than LIB - the LIB/SH2 libraries are
         optimized for SH2.

 NEWLIB:

 o Changed syscall interface from trapa #3 to trapa #34 (newlib/7524)
   (newlib/libc/sys/sh/syscalls.c newlib/libc/sys/sh/trap.S
    sim/sh/gencode.c sim/sh/interp.c)

cygnus-95q3-SOA-950822 changes:

 GCC:

 o Migrated to Cygnus 95q3 release.

   Note: Code generation is improved - emitted code should be
         a few percent smaller than previous release.

 o Fixed failures in c-torture-1.34: 

   Fixed failure for execute/950512-1.c   (gcc/7489) (gcc/fold-const.c)
   Fixed failure for execute/divconst-2.c (gcc/7490) (gcc/expmed.c)
   Fixed failure for execute/va-arg-3.c   (gcc/7538) (gcc/config/sh/sh.c)
   Fixed failure for execute/complex-4.c  (gcc/7592) (gcc/expr.c)

 o Applied pending patches:

    gcc:
      gcc/7465 (gcc/cse.c)
      gcc/7442 (gcc/config/sh/sh.h)
      gcc/7424 (gcc/config/sh/sh.c, gcc/config/sh/sh.md)
      gcc/6907 (gcc/config/sh/lib1funcs.asm)

    gas:
      gas/6619 (gas/config/tc-sh.c)
      gas/7006 (gas/config/obj-coff.c)
      gas/6850 (sim/sh/gencode.c, opcodes/sh-opc.h)

 o Fixed unaligned long in trap.c generates address exception (newlib/7532)
   (newlib/libc/sys/sh/trap.S)

 o Fixed gasp assembles .sdata "v1.0000" incorrectly (gasp/7583) (gas/gasp.c)

 o Fixed gcc saves too many registers on SH3 for lowest level interrupt 
   (gcc/7637) (gcc/config/sh/sh.c)

 o Fixed gcc destroys stack frame too soon and uses memory below r15
   for _uddivmoddi4 (gcc/7738) (gcc/config/sh/sh.c)

 o Fixed minor bug in patch for gcc/7424.
    
cygnus-2.6-95q1-SOA-950726 changes:

 GCC:

 o Previous comment in 950718 about stack frames is wrong.
   GCC will now ALWAYS generate a stack frame unless "-fomit-frame-pointer"
   is explicitly specified.

   This means, by default, gcc code runs slightly slower than before, but
   is always properly debuggable.

   To have the same behavior as previous versions, just specify
   "-fomit-frame-pointer".

 o Fixed gcc optimizing at -O2 generates incorrect code. (gcc/7465)

cygnus-2.6-95q1-SOA-950718 changes:

 GCC:

 o Fixed function doesn't promote short parameter arguments to int. (gcc/7537)

   Note: This change makes gcc more compatible with K&R (non-prototyped) code;
         however, you must now properly extend registerized parameters
         to a full 32-bits when calling C functions from assembly.
         See note in "GCC calling convention" for more info.

 o Fixed gcc does not occasionally generate valid stack frame. 
   This caused the SNASM debugger to assume the local variables
   were at incorrect addresses and therefore display incorrect values.
   (gcc/7442)

   Note: gcc will now always generate a valid stack frame (mov r15,r14)
         in the function prologue when debugging (-g) is specified.

         One nasty side effect of this change is gcc will now generate
         different code when debugging is specified because r14
         is no longer available as a general-purpose register,
         which can change the size of your code,
         which can change the address of your variables,
         which can change the behavior of your bug.

  o Fixed (partially) gcc generates "mov #k,r0; add r15,r0; mov.l @r0,rm"
    instead of "mov #k,r0; mov.l @(r0,rn),rm" (gcc/7424)

    Added a peephole optimizer sequence, which is not the best way to do
    this, since instruction scheduling tends to separate the instructions.
    However, the right way would involve rewriting large parts of gcc, so
    this approach was chosen.

  o Fixed mixed C/assembly listing doesn't line up with source. (gcc/7006)

cygnus-2.6-95q1-SOA-950616 changes:

  GCC:

  o Fixed function writes outside own stack frame (gcc/7168)

  binutils:

  o Fixed SYSDUMP dumps SYSROF files incorrectly under MS-DOS (binutils/7137)

cygnus-2.6-95q1-SOA-950606 changes:

  Tool suite:

  o Punted on moving to Cygnus 95q2 codebase. 95q2 has too many bugs.

  GCC:

  o Minor improvments to libgcc.a to reduce size by 100+ bytes and improve shift speed.

  o Added SETT insn to sh.md.

  GAS:

  o Fixed GAS calculates expressions in ".byte" statements incorrectly.
    (i.e. .byte L_foo-L_bar). (gcc/6545) 

  o Fixed GAS crashes on undefined symbols. (binutils/6732 & 6736)

  o Added support for BRAF and BSRF instructions. (gas/6850)

  SRCONV:

  o Fixed SRCONV converting SGL demo files incorrectly. (binutils/6725)
    New option added to SRCONV; if converting executable COFF files
    (all references resolved) use the "-n" switch to insure
    files will be converted properly.

cygnus-2.6-95q1-SOA-950406 changes:

  GCC:

  o Fixed GCC uses wrong base register to access locals (gcc/6670)
    Occured when function used all registers & function call req'd >4 parms.

  o Fixed GCC generates incorrect stack offset references for variables in
    nested blocks. (gcc/6665)

  o Fixed ___main was not compiled into libgcc.a.
    (The primary symptom was "can't find __main" link error message)
    Hopefully this is the last bug preventing C++ from working properly.

  o Converted shift-by-k and shift-by-n routines in libgcc.a to assembly.
    (___ashiftrt_r4_n, ___ashrsi3, ___ashlsi3, lshrsi3)

  o Fixed minor bug with GCC calculating AND costs incorrectly. (gcc/6598)

  GDB:

  o GDB under IRIX5.3 now runs under a nice graphical user interface.
    To use it, be sure your DISPLAY environment variable is set to something
    appropriate. (e.g. setenv DISPLAY :0)

  Hardcopy documentation:

  o New GNU tools documention (95q1) is now available from Sega.
 
cygnus-2.6-95q1-SOA-950317 changes:

  o Changed to 95q1 codebase, applied all missing patches

  GCC:

  o Fixed problem with r0 occasionally overwritten after call to ___sdivsi3,
    ___udivsi3, ___mulsi3 (___mulsi3 on sh1 only). (gcc/6455)

  o C++ is now enabled. If you're using straight C, and you'd like to
    avoid the 5k of overhead for C++ global constructors, insert a dummy
    function called "__main() {}" to prevent the C++ constructor code
    from being linked. For reference, __main() is defined in libgcc.a.
    (g++/6438)

cygnus-2.6.0-941014-SOA-950215 changes:

  GCC:

  o Structure packing is now the default; to turn it off use -mpadstruct (gcc/6331)
    (GCC now compiles SOJ libraries properly using defaults)

  o Fixed <limits.h>

  o Fixed info files

  o READ.ME file restructured; renamed GCC.FAQ

cygnus-2.6.0-941014-SOA-950208 changes:

  GCC:

  o Fixed vararg structure passing by value with -mpackstruct (gcc/6278)

  SRCONV:

  o SRCONV now generates debug information usable by E7000 ICE!
    "DA file\_func" now works in E7000 ICE.

cygnus-2.6.0-941014-SOA-950201 changes:

  RUN:

  o Fixed SH simulator simulates SUBC, NEGC, ADDC incorrectly (gcc/6200)
  o Fixed SH simulator lacks SUBV, MAC.W (gdb/6203)

  GCC:

  o Fixed GCC generates MUL.L #2 for multiply by two (gcc/6208)
  o Fixed GCC loads parameter into wrong register when passing structures
    (occasionally) (gcc/6197)
  o Fixed GCC generates incorrect stack cleanup code on function after function
    with infinite loop (gcc/6116)

  GAS:

  o Fixed GAS truncates GBR offsets to four bits (gas/6207)

  LD:

  o Fixed LD generates incorrect S-records (ld/6215)

  Libraries:

  o Fixed _ashlsi3 has no delay slot instruction for rts 
  o Turned on optimization - libraries are much smaller!


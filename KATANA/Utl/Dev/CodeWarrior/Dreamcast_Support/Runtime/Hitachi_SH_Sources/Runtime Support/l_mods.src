;	Hitachi SH Math Support
;	Copyright 1999 Metrowerks, Inc.
		
		.EXPORT     __l_mods
		.SECTION    .text

;
;	unsigned int _l_mods(int I1, int I2)
;
;	Notes:
;	Runtime support routine.
;
__l_mods:

;	_divu32r	-	Remainder of 32 bit / 32bit (Signed)
;	
;	Input: 	R1	divident
;			R0	divisor
;	Output:	R2	remainder
;			T	error flag (T=1 : error)
;
;	Notes:
; 	Divides the divident (signed 32 bits) by the divisor (signed 32 bits)
;	and determines the remainder (signed 32 bits). Also indicates and error
;   (division by 0) in the T bit.
;

_divs32r:
		MOV		R5,R2
		MOV		R4,R1
		MOV.L	R4,@-R15
		
		TST		R2,R2		; divisor = 0 ?
		BT		DIVS32R2	; yes
		XOR		R3,R3		; R3 = H'00000000
		
		DIV0S	R3,R1		; T bit = sign of dividend
		MOVT	R4			; R4 = T bit
		SUBC	R0,R0		; R0 sign extend
		SUBC	R3,R1
		DIV0S	R2,R0		; divide as signed
		
		ROTCL	R1			; divide 1 step
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0

		ROTCL	R1			
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0

		ROTCL	R1			
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0

		ROTCL	R1			
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0
		ROTCL	R1
		DIV1	R2,R0

		DIV0S	R3,R0		; R0: keep sign
		MOVT	R3
		XOR		R4,R3		; (R4 or R3) = 1 ? -> oversub or overadd
		
		ROTCR	R3
		BF		DIVS32R1	; T bit = 0 ?
		DIV0S	R2,R0		; Clear oversub or overadd
		SHAR	R0
		DIV1	R2,R0
DIVS32R1
		ADD		R4,R0
		CLRT				; T bit = no error
		RTS
		MOV.L	@R15+,R4	; return register
DIVS32R2
		SETT				; T bit = error
		RTS
		MOV.L	@R15+,R4	; return register		

__l_mods_end:
		
	  .END

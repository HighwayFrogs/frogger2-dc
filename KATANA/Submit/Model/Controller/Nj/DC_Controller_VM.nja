/* NJA 0.98alpha1 NinjaAsciiDataMix CnkModel (LW) */

/* ROOT OBJECT : object_Controller_VM2_CPBody12_CPBody12 n(10) d(2) */


CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_VM_nocap[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 241, 241, 241 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 2104, _NB( UFO_0, 296 ),
	StripL(4),  913, 918, 903, 907, 
	StripL(4),  1192, 1242, 1181, 1201, 
	StripL(4),  1072, 1076, 1091, 1080, 
	StripL(3),  522, 518, 517, 
	StripL(3),  512, 1152, 1151, 
	StripR(5),  512, 1153, 1151, 1541, 1155, 
	StripR(6),  1151, 1524, 1158, 1157, 1159, 1160, 
	StripR(7),  1437, 1440, 1464, 1447, 1633, 1484, 1228, 
	StripL(6),  1241, 1199, 1472, 1468, 1445, 1441, 
	StripL(4),  932, 942, 921, 929, 
	StripR(5),  515, 514, 511, 512, 488, 
	StripL(8),  515, 516, 511, 520, 664, 675, 666, 672, 
	StripR(7),  861, 859, 864, 857, 850, 855, 854, 
	StripL(6),  875, 878, 873, 869, 870, 914, 
	StripL(4),  1190, 1180, 1188, 1182, 
	StripL(4),  1230, 1208, 1227, 1226, 
	StripL(6),  1239, 1238, 1203, 1197, 1179, 1185, 
	StripL(4),  1557, 1564, 1560, 1565, 
	StripL(4),  1590, 1595, 1592, 1598, 
	StripL(4),  1191, 1186, 1210, 1207, 
	StripR(5),  919, 906, 1030, 904, 1027, 
	StripL(3),  919, 1002, 1030, 
	StripL(4),  998, 1002, 866, 849, 
	StripR(6),  1556, 1554, 1549, 1548, 1545, 1547, 
	StripL(4),  1563, 1570, 1566, 1571, 
	StripR(6),  871, 1021, 910, 1020, 905, 1028, 
	StripL(4),  612, 611, 607, 603, 
	StripL(4),  658, 654, 647, 648, 
	StripL(4),  1200, 1243, 1198, 1209, 
	StripL(4),  1003, 917, 1016, 912, 
	StripL(4),  1483, 1229, 1477, 1224, 
	StripL(4),  1550, 1555, 1544, 1552, 
	StripR(8),  1584, 1583, 1580, 1579, 1576, 1575, 1572, 1569, 
	StripL(4),  1596, 1601, 1597, 1602, 
	StripL(4),  999, 865, 1012, 862, 
	StripL(3),  593, 594, 590, 
	StripL(6),  599, 593, 592, 590, 600, 596, 
	StripL(3),  592, 600, 599, 
	StripL(10),  610, 613, 617, 619, 624, 625, 629, 632, 637, 639, 
	StripL(4),  662, 661, 657, 655, 
	StripL(4),  1217, 1213, 1183, 1187, 
	StripL(4),  1206, 1103, 1223, 1221, 
	StripL(4),  1476, 1232, 1236, 1193, 
	StripL(4),  1231, 1215, 1196, 1184, 
	StripL(4),  1214, 1100, 1189, 1205, 
	StripL(4),  1204, 1099, 1194, 1235, 
	StripL(4),  737, 916, 1019, 1004, 
	StripL(4),  741, 902, 997, 1001, 
	StripL(10),  1001, 915, 1029, 909, 1026, 680, 1018, 736, 1023, 709, 
	StripL(3),  1225, 1222, 1478, 
	StripL(3),  743, 996, 1011, 
	StripL(4),  1543, 1551, 1546, 1553, 
	StripL(4),  1054, 1051, 1053, 1052, 
	StripL(4),  1058, 1055, 1057, 1056, 
	StripL(4),  1062, 1059, 1061, 1060, 
	StripL(4),  1066, 1063, 1065, 1064, 
	StripL(4),  1068, 1069, 1067, 1068, 
	StripL(4),  1069, 1070, 1067, 1069, 
	StripL(6),  1075, 1071, 1074, 1073, 1077, 1078, 
	StripL(4),  1074, 1079, 1075, 1081, 
	StripL(4),  1089, 1088, 1083, 1086, 
	StripL(3),  1102, 1104, 1480, 
	StripR(5),  1480, 1105, 1104, 1106, 1107, 
	StripL(3),  1109, 1110, 1108, 
	StripR(5),  1108, 1111, 1110, 1112, 1090, 
	StripL(4),  1115, 1113, 1114, 1480, 
	StripL(4),  1334, 1331, 1333, 1332, 
	StripL(4),  1338, 1335, 1337, 1336, 
	StripR(5),  1469, 1466, 1195, 1485, 1234, 
	StripL(3),  1469, 1202, 1195, 
	StripL(6),  1492, 1491, 1488, 1489, 1487, 1490, 
	StripL(6),  1234, 1616, 1617, 1420, 1485, 1419, 
	StripL(4),  1620, 1102, 1457, 1113, 
	StripL(8),  1084, 1085, 1082, 1087, 1098, 1096, 1095, 1097, 
	StripL(4),  1095, 1092, 1094, 1093, 
	StripL(4),  1651, 1510, 1649, 1508, 
	StripL(4),  1178, 1175, 1177, 1176, 
	StripL(3),  1251, 1246, 1249, 
	StripR(5),  1249, 1244, 1246, 1216, 1211, 
	StripR(6),  1262, 1260, 1257, 1256, 1474, 1258, 
	StripR(6),  1269, 1268, 1265, 1264, 1266, 1219, 
	StripL(4),  1358, 1355, 1357, 1356, 
	StripL(4),  1362, 1359, 1361, 1360, 
	StripR(8),  1117, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 
	StripL(8),  1123, 980, 565, 982, 972, 981, 968, 977, 
	StripR(24),  1688, 1685, 1686, 1683, 1684, 1681, 1682, 1679, 1680, 1677, 
                   1678, 1675, 1676, 1673, 1674, 1671, 1672, 1669, 1670, 1667, 
                   1668, 1664, 1665, 1663, 
	StripR(24),  1687, 1690, 1689, 1692, 1691, 1694, 1693, 1696, 1695, 1698, 
                   1697, 1700, 1699, 1702, 1701, 1704, 1703, 1706, 1705, 1708, 
                   1707, 1710, 1709, 1666, 
	StripL(32),  1690, 1688, 1687, 1685, 1722, 1721, 1723, 1720, 1724, 1719, 
                   1725, 1718, 1726, 1717, 1727, 1716, 1728, 1715, 1729, 1714, 
                   1730, 1713, 1731, 1712, 1732, 1711, 1733, 1734, 1709, 1663, 
                   1666, 1665, 
	StripR(24),  1722, 1687, 1723, 1689, 1724, 1691, 1725, 1693, 1726, 1695, 
                   1727, 1697, 1728, 1699, 1729, 1701, 1730, 1703, 1731, 1705, 
                   1732, 1707, 1733, 1709, 
	StripR(24),  1734, 1663, 1711, 1664, 1712, 1667, 1713, 1669, 1714, 1671, 
                   1715, 1673, 1716, 1675, 1717, 1677, 1718, 1679, 1719, 1681, 
                   1720, 1683, 1721, 1685, 
	StripL(4),  1139, 1142, 1140, 1143, 
	StripL(4),  1529, 1154, 1525, 1150, 
	StripL(4),  638, 642, 631, 635, 
	StripR(5),  497, 410, 1296, 1277, 1291, 
	StripL(3),  497, 500, 1296, 
	StripR(5),  508, 505, 495, 1293, 1292, 
	StripL(3),  508, 503, 495, 
	StripL(4),  1174, 1171, 1173, 1172, 
	StripL(4),  1218, 1248, 1245, 1250, 
	StripR(6),  1255, 1254, 1253, 1252, 1212, 1247, 
	StripL(4),  1259, 1263, 1261, 1233, 
	StripL(4),  1267, 1101, 1270, 1271, 
	StripL(4),  1275, 1272, 1274, 1273, 
	StripL(4),  1290, 1287, 1289, 1288, 
	StripL(4),  1342, 1339, 1341, 1340, 
	StripL(4),  1348, 1343, 1346, 1344, 
	StripL(4),  1354, 1349, 1352, 1351, 
	StripL(4),  1367, 1363, 1366, 1364, 
	StripL(4),  1369, 1368, 1346, 1352, 
	StripL(4),  1387, 1384, 1386, 1385, 
	StripL(4),  1391, 1388, 1390, 1389, 
	StripL(4),  1395, 1392, 1394, 1393, 
	StripL(4),  1407, 1404, 1406, 1405, 
	StripL(4),  1613, 1610, 1612, 1611, 
	StripL(4),  1628, 1625, 1627, 1626, 
	StripL(4),  786, 775, 783, 780, 
	StripL(4),  697, 694, 689, 685, 
	StripL(10),  686, 684, 682, 679, 681, 908, 688, 690, 699, 702, 
	StripL(4),  682, 681, 686, 688, 
	StripL(8),  712, 710, 718, 719, 723, 725, 734, 738, 
	StripL(8),  740, 746, 749, 751, 755, 756, 762, 765, 
	StripL(4),  776, 831, 779, 825, 
	StripL(4),  561, 559, 542, 548, 
	StripL(4),  525, 544, 527, 554, 
	StripL(4),  556, 546, 533, 535, 
	StripL(4),  812, 808, 819, 815, 
	StripL(4),  539, 551, 698, 695, 
	StripL(4),  550, 540, 545, 543, 
	StripL(4),  529, 553, 787, 777, 
	StripL(4),  819, 816, 533, 555, 
	StripL(4),  549, 703, 693, 692, 
	StripL(4),  704, 538, 701, 700, 
	StripL(4),  552, 833, 778, 830, 
	StripL(4),  846, 557, 843, 814, 
	StripL(4),  696, 691, 687, 683, 
	StripL(4),  842, 817, 838, 810, 
	StripL(4),  782, 826, 791, 829, 
	StripL(4),  937, 939, 1037, 1039, 
	StripL(4),  784, 781, 793, 789, 
	StripL(4),  938, 936, 928, 925, 
	StripL(6),  835, 886, 828, 835, 883, 886, 
	StripR(6),  926, 940, 1033, 1038, 930, 941, 
	StripL(4),  1038, 941, 1036, 933, 
	StripL(4),  1041, 667, 1044, 674, 
	StripL(3),  851, 1000, 852, 
	StripR(5),  852, 1005, 1000, 772, 901, 
	StripL(3),  922, 1032, 931, 
	StripR(5),  931, 1034, 1032, 927, 924, 
	StripL(4),  772, 774, 770, 766, 
	StripL(4),  802, 836, 807, 839, 
	StripL(4),  804, 801, 811, 809, 
	StripL(3),  735, 1017, 726, 
	StripR(5),  726, 1014, 1017, 867, 911, 
	StripR(6),  935, 923, 1035, 1031, 934, 920, 
	StripR(6),  729, 726, 731, 739, 733, 735, 
	StripL(4),  773, 761, 768, 764, 
	StripR(24),  325, 326, 324, 327, 370, 371, 368, 369, 366, 367, 
                   364, 365, 362, 363, 360, 361, 358, 359, 356, 357, 
                   354, 355, 352, 353, 
	StripL(32),  326, 329, 325, 328, 373, 374, 372, 375, 395, 376, 
                   394, 377, 393, 378, 392, 379, 391, 380, 390, 381, 
                   389, 382, 388, 383, 387, 384, 386, 385, 352, 350, 
                   353, 351, 
	StripR(24),  350, 351, 348, 349, 346, 347, 344, 345, 342, 343, 
                   340, 341, 338, 339, 336, 337, 334, 335, 332, 333, 
                   330, 331, 328, 329, 
	StripR(24),  373, 325, 372, 324, 395, 370, 394, 368, 393, 366, 
                   392, 364, 391, 362, 390, 360, 389, 358, 388, 356, 
                   387, 354, 386, 352, 
	StripR(24),  385, 350, 384, 348, 383, 346, 382, 344, 381, 342, 
                   380, 340, 379, 338, 378, 336, 377, 334, 376, 332, 
                   375, 330, 374, 328, 
	StripL(9),  1538, 1540, 1536, 1542, 1535, 1156, 1527, 1528, 1522, 
	StripL(3),  1527, 1521, 1535, 
	StripL(7),  575, 573, 574, 564, 562, 568, 570, 
	StripR(5),  580, 562, 577, 574, 575, 
	StripL(14),  586, 584, 581, 582, 578, 1534, 576, 1533, 1531, 1532, 
                   1530, 1517, 1518, 1515, 
	StripL(11),  587, 586, 580, 581, 577, 578, 575, 576, 573, 1531, 
                   1530, 
	StripR(5),  580, 587, 588, 523, 519, 
	StripL(3),  1530, 1518, 573, 
	StripL(4),  513, 1539, 583, 1537, 
	StripL(13),  585, 513, 582, 583, 1534, 1538, 1533, 1536, 1532, 1535, 
                   1517, 1521, 1515, 
	StripL(4),  562, 570, 579, 588, 
	StripL(4),  1127, 1125, 1638, 1126, 
	StripL(4),  955, 978, 1638, 979, 
	StripL(6),  1128, 1124, 990, 566, 995, 993, 
	StripL(5),  1128, 1501, 1499, 1382, 1498, 
	StripR(7),  992, 991, 566, 1048, 971, 1045, 970, 
	StripL(9),  1161, 1163, 1164, 890, 900, 888, 899, 884, 896, 
	StripR(7),  1164, 1161, 1165, 1169, 1170, 1168, 1166, 
	StripL(3),  895, 898, 896, 
	StripR(5),  896, 1164, 898, 1166, 1167, 
	StripR(10),  1141, 1138, 1137, 1136, 1135, 1134, 1131, 1130, 1132, 1133, 
	StripR(6),  1147, 1146, 1144, 1145, 1148, 1149, 
	StripR(5),  1281, 1280, 1276, 1279, 1278, 
	StripR(5),  1286, 1285, 1282, 1284, 1283, 
	StripL(12),  1301, 1298, 1300, 1299, 1303, 1302, 1305, 1304, 1307, 1306, 
                   1309, 1308, 
	StripR(16),  1310, 411, 1311, 1312, 1315, 1316, 1318, 1319, 1320, 1321, 
                   1322, 1323, 1324, 1325, 1326, 1327, 
	StripL(6),  1310, 1313, 1311, 1314, 1315, 1317, 
	StripR(8),  1372, 1350, 1371, 1353, 1370, 1345, 1328, 1347, 
	StripR(5),  1370, 1328, 531, 411, 496, 
	StripL(3),  1374, 1375, 1365, 
	StripR(6),  1379, 1378, 1516, 1503, 1520, 1526, 
	StripL(4),  572, 1519, 1379, 1516, 
	StripL(4),  1502, 1380, 1383, 1381, 
	StripL(7),  1398, 1399, 1396, 1373, 1329, 1330, 494, 
	StripL(4),  1403, 1400, 1402, 1401, 
	StripL(3),  1398, 1409, 1408, 
	StripL(3),  486, 1162, 1397, 
	StripR(9),  1409, 1398, 1408, 1399, 1433, 1374, 1376, 1375, 1377, 
	StripL(4),  1409, 1410, 1408, 1409, 
	StripL(12),  1397, 1162, 1411, 1397, 486, 1434, 834, 796, 832, 794, 
                   827, 790, 
	StripL(9),  1412, 1413, 1414, 1454, 1432, 1435, 1449, 1448, 1482, 
	StripL(4),  1415, 1416, 1417, 1220, 
	StripR(7),  1439, 1438, 1435, 1436, 1454, 1455, 1413, 
	StripL(12),  1446, 1442, 1444, 1443, 1426, 1486, 1423, 1418, 1422, 1421, 
                   1614, 1615, 
	StripL(3),  1435, 1439, 1448, 
	StripL(12),  1450, 1451, 1424, 1430, 1425, 1429, 1427, 1428, 1471, 1237, 
                   1473, 1240, 
	StripL(6),  1399, 1374, 1373, 1365, 1330, 1514, 
	StripR(8),  531, 1462, 1370, 1461, 1371, 1459, 1372, 1460, 
	StripR(11),  1465, 1463, 1436, 1481, 1455, 1458, 1413, 1456, 1412, 1619, 
                   1618, 
	StripL(3),  1465, 1438, 1436, 
	StripR(5),  1470, 1442, 1467, 1443, 1486, 
	StripL(12),  1473, 1446, 1471, 1444, 1427, 1426, 1425, 1423, 1424, 1422, 
                   1450, 1614, 
	StripL(3),  1475, 1237, 1428, 
	StripL(10),  1482, 1479, 1449, 1220, 1432, 1416, 1414, 1415, 1412, 1618, 
	StripL(4),  1506, 1504, 1505, 847, 
	StripL(4),  897, 1511, 1513, 1512, 
	StripL(3),  1526, 1523, 1503, 
	StripR(14),  1559, 1558, 1561, 1562, 1567, 1568, 1573, 1574, 1577, 1578, 
                   1581, 1582, 1585, 1586, 
	StripR(8),  1600, 1599, 1594, 1593, 1588, 1587, 1589, 1591, 
	StripL(3),  1605, 1606, 1502, 
	StripL(6),  1523, 1605, 1503, 1502, 1378, 1500, 
	StripR(7),  1496, 1609, 1608, 1607, 1604, 1603, 1497, 
	StripR(6),  1475, 1451, 1431, 1430, 1428, 1429, 
	StripL(6),  1220, 1453, 1417, 1452, 1415, 1618, 
	StripL(4),  1624, 1621, 1623, 1622, 
	StripL(4),  1631, 847, 1630, 1629, 
	StripL(3),  1632, 848, 847, 
	StripL(3),  1397, 1411, 1398, 
	StripR(6),  1636, 1635, 891, 1634, 848, 1632, 
	StripL(4),  1641, 1637, 1640, 1639, 
	StripL(4),  1643, 1644, 1642, 1645, 
	StripL(6),  1642, 1646, 1643, 1647, 1644, 1648, 
	StripL(14),  1652, 1650, 848, 1507, 961, 1509, 1653, 1654, 1495, 1493, 
                   1050, 1494, 1496, 1497, 
	StripL(4),  960, 943, 957, 956, 
	StripR(8),  962, 956, 974, 976, 965, 969, 1042, 1043, 
	StripL(10),  604, 601, 616, 609, 622, 618, 628, 623, 636, 630, 
	StripL(6),  660, 663, 651, 656, 644, 645, 
	StripR(5),  499, 558, 498, 547, 534, 
	StripR(5),  526, 541, 504, 560, 507, 
	StripR(5),  501, 1297, 506, 1295, 1294, 
	StripL(3),  501, 509, 506, 
	StripR(12),  427, 396, 425, 398, 423, 401, 421, 402, 419, 405, 
                   416, 406, 
	StripL(6),  411, 413, 408, 407, 414, 417, 
	StripR(5),  411, 409, 408, 412, 414, 
	StripR(13),  413, 407, 415, 404, 418, 403, 420, 400, 422, 399, 
                   424, 397, 426, 
	StripR(9),  494, 1329, 502, 530, 528, 795, 788, 792, 785, 
	StripL(8),  536, 496, 532, 537, 818, 806, 813, 805, 
	StripL(3),  496, 531, 537, 
	StripL(9),  569, 563, 995, 572, 990, 1379, 1128, 1378, 1501, 
	StripL(8),  995, 994, 569, 991, 567, 670, 676, 673, 
	StripL(4),  1046, 671, 1049, 670, 
	StripL(4),  820, 844, 797, 840, 
	StripR(5),  827, 832, 887, 889, 887, 
	StripL(4),  885, 887, 827, 885, 
	StripL(3),  887, 832, 827, 
	StripR(6),  834, 1162, 889, 834, 486, 1162, 
	StripL(4),  752, 744, 748, 742, 
	StripL(6),  708, 705, 707, 706, 713, 711, 
	StripR(12),  876, 877, 1025, 1013, 720, 727, 721, 728, 722, 730, 
                   724, 732, 
	StripL(3),  858, 1008, 860, 
	StripR(12),  717, 713, 716, 707, 715, 708, 714, 705, 1024, 1022, 
                   874, 872, 
	StripR(7),  759, 760, 754, 1007, 1008, 856, 858, 
	StripL(14),  792, 790, 795, 794, 530, 796, 1329, 1434, 1396, 1397, 
                   1398, 1411, 1409, 1398, 
	StripL(8),  531, 824, 537, 822, 806, 799, 805, 800, 
	StripL(3),  856, 853, 1007, 
	StripL(11),  853, 1006, 1007, 771, 760, 769, 759, 767, 758, 763, 
                   757, 
	StripR(12),  874, 876, 1024, 1025, 714, 720, 715, 721, 716, 722, 
                   717, 724, 
	StripL(3),  1022, 711, 705, 
	StripL(9),  863, 860, 1009, 1008, 747, 754, 753, 759, 758, 
	StripR(10),  863, 1010, 1009, 742, 747, 748, 753, 752, 758, 757, 
	StripR(5),  727, 1013, 1015, 877, 868, 
	StripL(3),  991, 1047, 670, 
	StripL(4),  847, 988, 987, 989, 
	StripL(4),  881, 879, 880, 897, 
	StripL(3),  524, 528, 502, 
	StripL(3),  569, 567, 571, 
	StripR(5),  571, 589, 567, 521, 676, 
	StripL(4),  598, 597, 595, 591, 
	StripL(14),  608, 602, 606, 605, 614, 615, 620, 621, 626, 627, 
                   633, 634, 640, 641, 
	StripL(8),  646, 649, 643, 650, 652, 653, 659, 489, 
	StripL(7),  678, 487, 677, 510, 669, 665, 668, 
	StripR(6),  742, 745, 744, 750, 752, 757, 
	StripL(4),  798, 841, 803, 837, 
	StripL(4),  823, 847, 821, 845, 
	StripL(7),  848, 882, 847, 848, 1632, 1624, 847, 
	StripL(3),  889, 834, 832, 
	StripL(4),  847, 882, 837, 847, 
	StripL(3),  889, 834, 832, 
	StripL(6),  892, 893, 891, 894, 848, 882, 
	StripL(4),  1639, 947, 949, 948, 
	StripL(3),  951, 952, 950, 
	StripL(6),  954, 950, 953, 952, 958, 959, 
	StripL(3),  953, 958, 954, 
	StripL(4),  964, 963, 946, 944, 
	StripR(14),  945, 946, 848, 964, 961, 963, 973, 975, 967, 966, 
                   1050, 1040, 678, 668, 
	CnkNull(),
	CnkM_D( FBS_SA|FBD_ISA ), 2,
	MDiff( 255, 18, 18, 18 ),
	CnkS( 0x0 ), 110, _NB( UFO_0, 15 ),
	StripL(3),  471, 434, 473, 
	StripL(9),  463, 462, 461, 464, 468, 466, 465, 467, 463, 
	StripL(3),  464, 462, 466, 
	StripL(4),  468, 465, 461, 463, 
	StripL(4),  440, 444, 448, 447, 
	StripL(18),  452, 451, 442, 443, 441, 439, 437, 438, 440, 442, 
                   444, 441, 447, 437, 446, 440, 445, 448, 
	StripL(4),  438, 439, 449, 450, 
	StripL(10),  460, 457, 458, 453, 456, 454, 455, 459, 460, 457, 
	StripR(15),  472, 469, 429, 430, 428, 432, 474, 475, 476, 477, 
                   436, 432, 433, 435, 470, 
	StripL(5),  476, 474, 431, 428, 429, 
	StripR(5),  476, 436, 431, 433, 429, 
	StripL(3),  477, 432, 475, 
	StripL(4),  482, 483, 485, 484, 
	StripL(4),  479, 478, 481, 480, 
	StripL(3),  435, 430, 432, 
	CnkM_D( FBS_SA|FBD_ISA ), 2,
	MDiff( 255, 131, 129, 173 ),
	CnkS( 0x0 ), 490, _NB( UFO_0, 23 ),
	StripL(24),  45, 105, 109, 40, 111, 34, 52, 33, 56, 26, 
                   63, 96, 67, 22, 121, 19, 71, 13, 76, 11, 
                   79, 4, 82, 130, 
	StripL(3),  64, 60, 58, 
	StripL(6),  31, 29, 36, 24, 17, 20, 
	StripL(3),  55, 50, 48, 
	StripL(6),  9, 6, 15, 86, 81, 84, 
	StripL(3),  74, 72, 68, 
	StripL(3),  47, 42, 38, 
	StripR(8),  64, 68, 58, 74, 36, 81, 17, 15, 
	StripL(6),  36, 58, 38, 55, 47, 48, 
	StripR(24),  297, 249, 294, 246, 293, 245, 291, 242, 288, 241, 
                   286, 239, 285, 236, 283, 234, 281, 233, 278, 231, 
                   276, 229, 323, 274, 
	StripL(28),  299, 297, 251, 249, 252, 246, 255, 245, 257, 242, 
                   259, 241, 260, 239, 262, 236, 265, 234, 267, 233, 
                   268, 231, 270, 229, 272, 274, 321, 323, 
	StripR(24),  251, 299, 252, 301, 255, 302, 257, 305, 259, 307, 
                   260, 308, 262, 311, 265, 313, 267, 314, 268, 317, 
                   270, 318, 272, 321, 
	StripR(24),  296, 248, 295, 247, 292, 244, 290, 243, 289, 240, 
                   287, 238, 284, 237, 282, 235, 280, 232, 279, 230, 
                   277, 228, 322, 275, 
	StripL(28),  298, 296, 250, 248, 253, 247, 254, 244, 256, 243, 
                   258, 240, 261, 238, 263, 237, 264, 235, 266, 232, 
                   269, 230, 271, 228, 273, 275, 320, 322, 
	StripR(24),  250, 298, 253, 300, 254, 303, 256, 304, 258, 306, 
                   261, 309, 263, 310, 264, 312, 266, 315, 269, 316, 
                   271, 319, 273, 320, 
	StripR(24),  200, 152, 199, 151, 196, 148, 195, 146, 192, 144, 
                   190, 143, 189, 140, 187, 139, 184, 136, 182, 135, 
                   180, 133, 227, 178, 
	StripL(28),  203, 200, 154, 152, 156, 151, 159, 148, 161, 146, 
                   163, 144, 164, 143, 167, 140, 168, 139, 171, 136, 
                   172, 135, 174, 133, 177, 178, 225, 227, 
	StripR(24),  154, 203, 156, 204, 159, 207, 161, 209, 163, 211, 
                   164, 212, 167, 215, 168, 216, 171, 219, 172, 221, 
                   174, 222, 177, 225, 
	StripL(28),  202, 201, 155, 153, 157, 150, 158, 149, 160, 147, 
                   162, 145, 165, 142, 166, 141, 169, 138, 170, 137, 
                   173, 134, 175, 132, 176, 179, 224, 226, 
	StripR(24),  155, 202, 157, 205, 158, 206, 160, 208, 162, 210, 
                   165, 213, 166, 214, 169, 217, 170, 218, 173, 220, 
                   175, 223, 176, 224, 
	StripR(24),  179, 226, 132, 181, 134, 183, 137, 185, 138, 186, 
                   141, 188, 142, 191, 145, 193, 147, 194, 149, 197, 
                   150, 198, 153, 201, 
	StripL(50),  65, 62, 61, 116, 59, 115, 54, 112, 51, 110, 
                   49, 44, 46, 106, 43, 103, 39, 100, 37, 32, 
                   30, 27, 28, 97, 25, 23, 21, 93, 16, 91, 
                   14, 10, 8, 5, 7, 131, 87, 83, 85, 126, 
                   80, 125, 75, 70, 73, 120, 69, 66, 65, 62, 
                   
	StripL(50),  98, 32, 99, 35, 101, 41, 102, 106, 104, 44, 
                   107, 110, 108, 112, 113, 53, 114, 57, 117, 62, 
                   118, 66, 119, 120, 122, 70, 123, 77, 124, 78, 
                   127, 83, 128, 131, 129, 5, 88, 10, 89, 12, 
                   90, 18, 92, 23, 94, 97, 95, 27, 98, 32, 
                   
	CnkM_D( FBS_SA|FBD_ISA ), 2,
	MDiff( 255, 116, 163, 132 ),
	CnkS( 0x0 ), 6, _NB( UFO_0, 1 ),
	StripL(4),  3, 0, 1, 2, 
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_VM_nocap[]
START
	CnkV_VN(0x0, 10411),
	OffnbIdx(0, 1735),
	VERT( 0xc165466f, 0x42399b71, 0xc17e7771 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4164dc9a, 0x4196412b, 0xc17e7771 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4164dc9a, 0x42399b71, 0xc17e7771 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc165466f, 0x4196412b, 0xc17e7771 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc115b259, 0x4250caec, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc115b259, 0x4250caec, 0xc195764a ),
	NORM( 0x3e05a8a5, 0xbf7dcf55, 0x00000000 ),
	VERT( 0xc115b259, 0x4250caec, 0xc1a2252c ),
	NORM( 0xbc51fe2a, 0x3e32cfb5, 0xbf7c0ba0 ),
	VERT( 0xc115b259, 0x4250caec, 0xc1a2252c ),
	NORM( 0x3e05a8a5, 0xbf7dcf55, 0x00000000 ),
	VERT( 0xc0fa5485, 0x42527983, 0xc1a2252c ),
	NORM( 0x3f37a734, 0xbf3258be, 0x00000000 ),
	VERT( 0xc0fa5485, 0x42527983, 0xc1a2252c ),
	NORM( 0xbd6564fd, 0x3e511af2, 0xbf7a31f8 ),
	VERT( 0xc0fa5485, 0x42527983, 0xc195764a ),
	NORM( 0x3f1196ef, 0xbf5291e3, 0x00000000 ),
	VERT( 0xc0fa5485, 0x42527983, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc0ce6be1, 0x4255c2ec, 0xc195764a ),
	NORM( 0x3f1fa0da, 0xbf48230f, 0x00000000 ),
	VERT( 0xc0ce6be1, 0x4255c2ec, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc0ef7e4b, 0x425b4ac4, 0xc19e9da5 ),
	NORM( 0x3f67a762, 0xbed9ec09, 0x00000000 ),
	VERT( 0xc0ef7e4b, 0x425b4ac4, 0xc19e9da5 ),
	NORM( 0xbbdb8596, 0x3d8af780, 0xbf7f677b ),
	VERT( 0xc0d5b666, 0x425ea829, 0xc19e9da5 ),
	NORM( 0x3ee853f3, 0xbf642084, 0x00000000 ),
	VERT( 0xc0d5b666, 0x425ea829, 0xc19e9da5 ),
	NORM( 0xbd8d6bae, 0x3bd8b554, 0xbf7f6221 ),
	VERT( 0xc0aaa8d0, 0x425a6dcf, 0xc195764a ),
	NORM( 0x3f4e6571, 0xbf1772c3, 0x00000000 ),
	VERT( 0xc0aaa8d0, 0x425a6dcf, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc0917b3b, 0x426028be, 0xc1a2252c ),
	NORM( 0xbe585dfd, 0x3d599c44, 0xbf79d9a4 ),
	VERT( 0xc0917b3b, 0x426028be, 0xc1a2252c ),
	NORM( 0x3f36836c, 0xbf33834c, 0x00000000 ),
	VERT( 0xc0917b3b, 0x426028be, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc0917b3b, 0x426028be, 0xc195764a ),
	NORM( 0x3f56453d, 0xbf0c1618, 0x00000000 ),
	VERT( 0xc0849a5f, 0x42668fc1, 0xc1a2252c ),
	NORM( 0xbe389849, 0x3c3eb83d, 0xbf7bc9d7 ),
	VERT( 0xc0849a5f, 0x42668fc1, 0xc1a2252c ),
	NORM( 0x3f7e25f5, 0xbdf5e1d1, 0x00000000 ),
	VERT( 0xc084e6eb, 0x426d3325, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc084e6eb, 0x426d3325, 0xc195764a ),
	NORM( 0x3f7dcf55, 0x3e05a8ab, 0x00000000 ),
	VERT( 0xc084e6eb, 0x426d3325, 0xc1a2252c ),
	NORM( 0x3f7dcf55, 0x3e05a8ab, 0x00000000 ),
	VERT( 0xc084e6eb, 0x426d3325, 0xc1a2252c ),
	NORM( 0xbe3862af, 0xbc5ef422, 0xbf7bcaa4 ),
	VERT( 0xc0925ba8, 0x42739f1b, 0xc1a2252c ),
	NORM( 0x3f3425f0, 0x3f35e2e5, 0x00000000 ),
	VERT( 0xc0925ba8, 0x42739f1b, 0xc1a2252c ),
	NORM( 0xbe575beb, 0xbd61a16b, 0xbf79e076 ),
	VERT( 0xc0925ba8, 0x42739f1b, 0xc195764a ),
	NORM( 0x3f54d753, 0x3f0e3fa3, 0x00000000 ),
	VERT( 0xc0925ba8, 0x42739f1b, 0xc195764a ),
	NORM( 0x399021d2, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc0ac0dd6, 0x4279639d, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc0ac0dd6, 0x4279639d, 0xc195764a ),
	NORM( 0x3f4dee92, 0x3f18143f, 0x00000000 ),
	VERT( 0xc0d6b7c8, 0x4274f9df, 0xc19e9da5 ),
	NORM( 0xbd8d2c8e, 0xbbf1b31b, 0xbf7f6253 ),
	VERT( 0xc0d6b7c8, 0x4274f9df, 0xc19e9da5 ),
	NORM( 0x3ee41618, 0x3f6531d1, 0x00000000 ),
	VERT( 0xc0f0cdb6, 0x42786105, 0xc19e9da5 ),
	NORM( 0xbbe888e1, 0xbd860e6a, 0xbf7f71cc ),
	VERT( 0xc0f0cdb6, 0x42786105, 0xc19e9da5 ),
	NORM( 0x3f6735a0, 0x3edbcd31, 0x00000000 ),
	VERT( 0xc0d03d29, 0x427e1c06, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc0d03d29, 0x427e1c06, 0xc195764a ),
	NORM( 0x3f203117, 0x3f47afae, 0x00000000 ),
	VERT( 0xc0fc7258, 0x4280bb01, 0xc1a2252c ),
	NORM( 0xbd68a565, 0xbe4bf9fa, 0xbf7a72ad ),
	VERT( 0xc0fc7258, 0x4280bb01, 0xc1a2252c ),
	NORM( 0x3f385934, 0x3f31a0ba, 0x00000000 ),
	VERT( 0xc116d513, 0x42819b8c, 0xc195764a ),
	NORM( 0x3e10bce2, 0x3f7d6e0a, 0x00000000 ),
	VERT( 0xc116d513, 0x42819b8c, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc116d513, 0x42819b8c, 0xc1a2252c ),
	NORM( 0x3e10bce2, 0x3f7d6e0a, 0x00000000 ),
	VERT( 0xc116d513, 0x42819b8c, 0xc1a2252c ),
	NORM( 0xbc6bd720, 0xbe2ea5f3, 0xbf7c38e3 ),
	VERT( 0xc13044f5, 0x4281a054, 0xc1a2252c ),
	NORM( 0x3c507795, 0xbe2ea448, 0xbf7c3a77 ),
	VERT( 0xc13044f5, 0x4281a054, 0xc1a2252c ),
	NORM( 0xbe05a940, 0x3f7dcf50, 0x00000000 ),
	VERT( 0xc148cd0c, 0x4280c908, 0xc1a2252c ),
	NORM( 0x3d5ea11d, 0xbe4aefcb, 0xbf7a894b ),
	VERT( 0xc148cd0c, 0x4280c908, 0xc1a2252c ),
	NORM( 0xbf38d3de, 0x3f312114, 0x00000000 ),
	VERT( 0xc15ec15d, 0x427e48a8, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc15ec15d, 0x427e48a8, 0xc195764a ),
	NORM( 0xbf1fa7bc, 0x3f481d91, 0x00000000 ),
	VERT( 0xc14ded28, 0x42788131, 0xc19e9da5 ),
	NORM( 0xbf684c7e, 0x3ed72883, 0x00000000 ),
	VERT( 0xc14ded28, 0x42788131, 0xc19e9da5 ),
	NORM( 0x3bd26e46, 0xbd87fd4c, 0xbf7f6e02 ),
	VERT( 0xc170a2e7, 0x42799dc6, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc170a2e7, 0x42799dc6, 0xc195764a ),
	NORM( 0xbf4e6568, 0x3f1772d0, 0x00000000 ),
	VERT( 0xc15ad119, 0x427523cc, 0xc19e9da5 ),
	NORM( 0x3d8dc1e4, 0xbbd818bd, 0xbf7f6164 ),
	VERT( 0xc15ad119, 0x427523cc, 0xc19e9da5 ),
	NORM( 0xbee11f77, 0x3f65ed08, 0x00000000 ),
	VERT( 0xc17d39b3, 0x4273e2d6, 0xc1a2252c ),
	NORM( 0x3e54fcb7, 0xbd5635e6, 0xbf7a0b07 ),
	VERT( 0xc17d39b3, 0x4273e2d6, 0xc1a2252c ),
	NORM( 0xbf3410e3, 0x3f35f7bc, 0x00000000 ),
	VERT( 0xc17d39b3, 0x4273e2d6, 0xc195764a ),
	NORM( 0xbf557ad3, 0x3f0d49ce, 0x00000000 ),
	VERT( 0xc17d39b3, 0x4273e2d6, 0xc195764a ),
	NORM( 0x399021d2, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc181d510, 0x426d7bd3, 0xc1a2252c ),
	NORM( 0x3e372502, 0xbc413fcd, 0xbf7bdaa9 ),
	VERT( 0xc181d510, 0x426d7bd3, 0xc1a2252c ),
	NORM( 0xbf7e25f6, 0x3df5e1a9, 0x00000000 ),
	VERT( 0xc181d510, 0x426d7bd3, 0xc195764a ),
	NORM( 0xbf7e25f6, 0x3df5e1a8, 0x00000000 ),
	VERT( 0xc181d510, 0x426d7bd3, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc181c1ed, 0x4266d870, 0xc1a2252c ),
	NORM( 0x3e374193, 0x3c5b0bfe, 0xbf7bd80b ),
	VERT( 0xc181c1ed, 0x4266d870, 0xc1a2252c ),
	NORM( 0xbf7dcf56, 0xbe05a87c, 0x00000000 ),
	VERT( 0xc17cc97c, 0x42606c78, 0xc195764a ),
	NORM( 0xbf55917e, 0xbf0d2788, 0x00000000 ),
	VERT( 0xc17cc97c, 0x42606c78, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc17cc97c, 0x42606c78, 0xc1a2252c ),
	NORM( 0x3e57279d, 0x3d616a46, 0xbf79e379 ),
	VERT( 0xc17cc97c, 0x42606c78, 0xc1a2252c ),
	NORM( 0xbf3638fe, 0xbf33ced9, 0x00000000 ),
	VERT( 0xc15a506a, 0x425ed216, 0xc19e9da5 ),
	NORM( 0x3d8ac30e, 0x3bec0dd3, 0xbf7f67b2 ),
	VERT( 0xc15a506a, 0x425ed216, 0xc19e9da5 ),
	NORM( 0xbeeab19d, 0xbf638552, 0x00000000 ),
	VERT( 0xc16ff064, 0x425aa7f9, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc16ff064, 0x425aa7f9, 0xc195764a ),
	NORM( 0xbf4dee95, 0xbf18143a, 0x00000000 ),
	VERT( 0xc15dd8ba, 0x4255ef8d, 0xc195764a ),
	NORM( 0xbf202a6b, 0xbf47b508, 0x00000000 ),
	VERT( 0xc15dd8ba, 0x4255ef8d, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc14d4572, 0x425b6af1, 0xc19e9da5 ),
	NORM( 0xbf6779db, 0xbedaad35, 0x00000000 ),
	VERT( 0xc14d4572, 0x425b6af1, 0xc19e9da5 ),
	NORM( 0x3bf3506e, 0x3d89b739, 0xbf7f69da ),
	VERT( 0xc147be23, 0x42529592, 0xc195764a ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc147be23, 0x42529592, 0xc195764a ),
	NORM( 0xbf12ecfb, 0xbf51a3c9, 0x00000000 ),
	VERT( 0xc147be23, 0x42529592, 0xc1a2252c ),
	NORM( 0x3d6ea385, 0x3e513b8b, 0xbf7a279e ),
	VERT( 0xc147be23, 0x42529592, 0xc1a2252c ),
	NORM( 0xbf386dd1, 0xbf318b53, 0x00000000 ),
	VERT( 0xc12f223b, 0x4250d47d, 0xc1a2252c ),
	NORM( 0x3c6ff7ba, 0x3e32b5bb, 0xbf7c0b1b ),
	VERT( 0xc12f223b, 0x4250d47d, 0xc1a2252c ),
	NORM( 0xbe10bce0, 0xbf7d6e0a, 0x00000000 ),
	VERT( 0xc115b259, 0x4250caec, 0xc188bcfd ),
	NORM( 0x3e05a8a5, 0xbf7dcf55, 0x00000000 ),
	VERT( 0xc0fa5485, 0x42527983, 0xc188bcfd ),
	NORM( 0x3ec91661, 0xbf6b6de8, 0x00000000 ),
	VERT( 0xc0ce6be1, 0x4255c2ec, 0xc188bcfd ),
	NORM( 0x3f1fa0da, 0xbf48230f, 0x00000000 ),
	VERT( 0xc0ef7e4b, 0x425b4ac4, 0xc1957174 ),
	NORM( 0x3f659714, 0xbee27d4a, 0x00000000 ),
	VERT( 0xc0aaa8d0, 0x425a6dcf, 0xc188bcfd ),
	NORM( 0x3f4e6571, 0xbf1772c3, 0x00000000 ),
	VERT( 0xc0d5b666, 0x425ea829, 0xc1957174 ),
	NORM( 0x3ef15033, 0xbf61c874, 0x00000000 ),
	VERT( 0xc0917b3b, 0x426028be, 0xc188bcfd ),
	NORM( 0x3f6e46aa, 0xbebb3209, 0x00000000 ),
	VERT( 0xc0849a5f, 0x42668fc1, 0xc188bcfd ),
	NORM( 0x3f7e25f5, 0xbdf5e1cf, 0x00000000 ),
	VERT( 0xc0849a5f, 0x42668fc1, 0xc1956bdf ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc0849a5f, 0x42668fc1, 0xc1956bdf ),
	NORM( 0x3f7e25f5, 0xbdf5e1cf, 0x00000000 ),
	VERT( 0xc084e6eb, 0x426d3325, 0xc188bcfd ),
	NORM( 0x3f7dcf55, 0x3e05a8ab, 0x00000000 ),
	VERT( 0xc0925ba8, 0x42739f1b, 0xc188bcfd ),
	NORM( 0x3f6d8899, 0x3ebeeeb3, 0x00000000 ),
	VERT( 0xc0d6b7c8, 0x4274f9df, 0xc1957174 ),
	NORM( 0x3eed615c, 0x3f62d2ac, 0x00000000 ),
	VERT( 0xc0ac0dd6, 0x4279639d, 0xc188bcfd ),
	NORM( 0x3f4dee92, 0x3f18143f, 0x00000000 ),
	VERT( 0xc0d03d29, 0x427e1c06, 0xc188bcfd ),
	NORM( 0x3f202a59, 0x3f47b517, 0x00000000 ),
	VERT( 0xc0f0cdb6, 0x42786105, 0xc1957174 ),
	NORM( 0x3f653c08, 0x3ee3ed01, 0x00000000 ),
	VERT( 0xc0fc7258, 0x4280bb01, 0xc188bcfd ),
	NORM( 0x3eccc7ed, 0x3f6aa1cd, 0x00000000 ),
	VERT( 0xc0fc7258, 0x4280bb01, 0xc1956bdf ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc0fc7258, 0x4280bb01, 0xc1956bdf ),
	NORM( 0x3f12b551, 0x3f51cac0, 0x00000000 ),
	VERT( 0xc116d513, 0x42819b8c, 0xc188bcfd ),
	NORM( 0x3e10bce2, 0x3f7d6e0a, 0x00000000 ),
	VERT( 0xc13044f5, 0x4281a054, 0xc188bcfd ),
	NORM( 0xbe05a940, 0x3f7dcf50, 0x00000000 ),
	VERT( 0xc13044f5, 0x4281a054, 0xc1956bdf ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc13044f5, 0x4281a054, 0xc1956bdf ),
	NORM( 0xbe05a941, 0x3f7dcf50, 0x00000000 ),
	VERT( 0xc148cd0c, 0x4280c908, 0xc1956bdf ),
	NORM( 0x399021d1, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc148cd0c, 0x4280c908, 0xc1956bdf ),
	NORM( 0xbf12013b, 0x3f52483d, 0x00000000 ),
	VERT( 0xc148cd0c, 0x4280c908, 0xc188bcfd ),
	NORM( 0xbec91668, 0x3f6b6de6, 0x00000000 ),
	VERT( 0xc15ec15d, 0x427e48a8, 0xc188bcfd ),
	NORM( 0xbf1fa0bf, 0x3f482324, 0x00000000 ),
	VERT( 0xc14ded28, 0x42788131, 0xc1957174 ),
	NORM( 0xbf664aed, 0x3edf9e46, 0x00000000 ),
	VERT( 0xc15ad119, 0x427523cc, 0xc1957174 ),
	NORM( 0xbeea9a0a, 0x3f638b66, 0x00000000 ),
	VERT( 0xc170a2e7, 0x42799dc6, 0xc188bcfd ),
	NORM( 0xbf4e6568, 0x3f1772d0, 0x00000000 ),
	VERT( 0xc17d39b3, 0x4273e2d6, 0xc188bcfd ),
	NORM( 0xbf6e46ad, 0x3ebb31fa, 0x00000000 ),
	VERT( 0xc181d510, 0x426d7bd3, 0xc188bcfd ),
	NORM( 0xbf7e25f6, 0x3df5e1a8, 0x00000000 ),
	VERT( 0xc181c1ed, 0x4266d870, 0xc1956bdf ),
	NORM( 0xbf7dcf56, 0xbe05a87c, 0x00000000 ),
	VERT( 0xc181c1ed, 0x4266d870, 0xc1956bdf ),
	NORM( 0x399021d1, 0x3a2bc7c4, 0xbf7ffffc ),
	VERT( 0xc181c1ed, 0x4266d870, 0xc188bcfd ),
	NORM( 0xbf7dcf56, 0xbe05a87c, 0x00000000 ),
	VERT( 0xc17cc97c, 0x42606c78, 0xc188bcfd ),
	NORM( 0xbf6d8891, 0xbebeeed9, 0x00000000 ),
	VERT( 0xc16ff064, 0x425aa7f9, 0xc188bcfd ),
	NORM( 0xbf4dee95, 0xbf18143a, 0x00000000 ),
	VERT( 0xc15a506a, 0x425ed216, 0xc1957174 ),
	NORM( 0xbef36900, 0xbf613839, 0x00000000 ),
	VERT( 0xc14d4572, 0x425b6af1, 0xc1957174 ),
	NORM( 0xbf656b3f, 0xbee32eae, 0x00000000 ),
	VERT( 0xc15dd8ba, 0x4255ef8d, 0xc188bcfd ),
	NORM( 0xbf202a6b, 0xbf47b508, 0x00000000 ),
	VERT( 0xc147be23, 0x42529592, 0xc188bcfd ),
	NORM( 0xbeccc7ab, 0xbf6aa1db, 0x00000000 ),
	VERT( 0xc12f223b, 0x4250d47d, 0xc188bcfd ),
	NORM( 0xbe10bce0, 0xbf7d6e0a, 0x00000000 ),
	VERT( 0xc12f223b, 0x4250d47d, 0xc1956bdf ),
	NORM( 0x399021d2, 0x3a2bc7c3, 0xbf7ffffc ),
	VERT( 0xc12f223b, 0x4250d47d, 0xc1956bdf ),
	NORM( 0xbe10bce1, 0xbf7d6e0a, 0x00000000 ),
	VERT( 0x4104af19, 0x4250c43e, 0xc19becc0 ),
	NORM( 0x00000000, 0xbf3c4cba, 0xbf2d6f01 ),
	VERT( 0x401fc61b, 0x4251934a, 0xc19becc0 ),
	NORM( 0xb328fa2b, 0xbf3c4cba, 0xbf2d6f01 ),
	VERT( 0x4109fcaa, 0x4250f347, 0xc19becc0 ),
	NORM( 0x3e4c105f, 0xbf35351b, 0xbf2d7c4c ),
	VERT( 0x4034fc5f, 0x4251c253, 0xc19becc0 ),
	NORM( 0x3e4c116e, 0xbf35351b, 0xbf2d7c38 ),
	VERT( 0x4048c092, 0x42524c38, 0xc19becc0 ),
	NORM( 0x3ec32708, 0xbf20d7d6, 0xbf2d9f11 ),
	VERT( 0x410eedb7, 0x42517d2b, 0xc19becc0 ),
	NORM( 0x3ec326bb, 0xbf20d804, 0xbf2d9efb ),
	VERT( 0x41132c09, 0x42525888, 0xc19becc0 ),
	NORM( 0x3f0828a2, 0xbf01938c, 0xbf2dcd0b ),
	VERT( 0x4059b9dd, 0x42532795, 0xc19becc0 ),
	NORM( 0x3f0828a4, 0xbf019390, 0xbf2dcd07 ),
	VERT( 0x4066c01f, 0x42544574, 0xc19becc0 ),
	NORM( 0x3f2498ba, 0xbeb4dd81, 0xbf2df893 ),
	VERT( 0x41166d9a, 0x42537667, 0xc19becc0 ),
	NORM( 0x3f2498af, 0xbeb4dda1, 0xbf2df894 ),
	VERT( 0x4118799b, 0x4254c350, 0xc19becc0 ),
	NORM( 0x3f35df7c, 0xbe397e43, 0xbf2e1756 ),
	VERT( 0x406ef020, 0x4255925d, 0xc19becc0 ),
	NORM( 0x3f35df72, 0xbe397e5e, 0xbf2e175f ),
	VERT( 0x4071bb09, 0x4256f79e, 0xc19becc0 ),
	NORM( 0x3f3ba6ee, 0x00000000, 0xbf2e2257 ),
	VERT( 0x41192c54, 0x42562891, 0xc19becc0 ),
	NORM( 0x3f3ba6e3, 0x00000000, 0xbf2e2263 ),
	VERT( 0x406ef020, 0x42585cdf, 0xc19becc0 ),
	NORM( 0x3f35df72, 0x3e397f2a, 0xbf2e1752 ),
	VERT( 0x4118799b, 0x42578dd2, 0xc19becc0 ),
	NORM( 0x3f35df7c, 0x3e397e43, 0xbf2e1756 ),
	VERT( 0x4066c01f, 0x4259a9c6, 0xc19becc0 ),
	NORM( 0x3f2498ab, 0x3eb4dd2b, 0xbf2df8b7 ),
	VERT( 0x41166d9a, 0x4258dabb, 0xc19becc0 ),
	NORM( 0x3f2498af, 0x3eb4dda1, 0xbf2df894 ),
	VERT( 0x41132c09, 0x4259f89a, 0xc19becc0 ),
	NORM( 0x3f082886, 0x3f0193bd, 0xbf2dccfc ),
	VERT( 0x4059b9dd, 0x425ac7a7, 0xc19becc0 ),
	NORM( 0x3f0828b4, 0x3f0193c6, 0xbf2dccd2 ),
	VERT( 0x4048c092, 0x425ba302, 0xc19becc0 ),
	NORM( 0x3ec32691, 0x3f20d7c7, 0xbf2d9f40 ),
	VERT( 0x410eedb7, 0x425ad3f6, 0xc19becc0 ),
	NORM( 0x3ec326ad, 0x3f20d7e5, 0xbf2d9f1d ),
	VERT( 0x4034fc5f, 0x425c2ce8, 0xc19becc0 ),
	NORM( 0x3e4c117e, 0x3f35353c, 0xbf2d7c14 ),
	VERT( 0x4109fcaa, 0x425b5ddb, 0xc19becc0 ),
	NORM( 0x3e4c1167, 0x3f35351a, 0xbf2d7c3a ),
	VERT( 0x401fc61b, 0x425c5bf0, 0xc19becc0 ),
	NORM( 0xb328f9fa, 0x3f3c4c96, 0xbf2d6f28 ),
	VERT( 0x4104af19, 0x425b8ce4, 0xc19becc0 ),
	NORM( 0x00000000, 0x3f3c4cba, 0xbf2d6f01 ),
	VERT( 0x40fec310, 0x425b5ddb, 0xc19becc0 ),
	NORM( 0xbe4c1183, 0x3f35351a, 0xbf2d7c38 ),
	VERT( 0x400a8fd8, 0x425c2ce8, 0xc19becc0 ),
	NORM( 0xbe4c1183, 0x3f35353c, 0xbf2d7c14 ),
	VERT( 0x40f4e0f8, 0x425ad3f6, 0xc19becc0 ),
	NORM( 0xbec326ac, 0x3f20d7e2, 0xbf2d9f20 ),
	VERT( 0x3fed974b, 0x425ba302, 0xc19becc0 ),
	NORM( 0xbec32695, 0x3f20d7c6, 0xbf2d9f40 ),
	VERT( 0x40ec6453, 0x4259f89a, 0xc19becc0 ),
	NORM( 0xbf082883, 0x3f0193c2, 0xbf2dccfb ),
	VERT( 0x3fcba4b6, 0x425ac7a7, 0xc19becc0 ),
	NORM( 0xbf0828b1, 0x3f0193c6, 0xbf2dccd4 ),
	VERT( 0x3fb19830, 0x4259a9c6, 0xc19becc0 ),
	NORM( 0xbf2498ac, 0x3eb4dd30, 0xbf2df8b5 ),
	VERT( 0x40e5e131, 0x4258dabb, 0xc19becc0 ),
	NORM( 0xbf2498b6, 0x3eb4dd95, 0xbf2df891 ),
	VERT( 0x40e1c930, 0x42578dd2, 0xc19becc0 ),
	NORM( 0xbf35df78, 0x3e397e41, 0xbf2e175b ),
	VERT( 0x3fa1382f, 0x42585cdf, 0xc19becc0 ),
	NORM( 0xbf35df73, 0x3e397f1a, 0xbf2e1751 ),
	VERT( 0x3f9ba25e, 0x4256f79e, 0xc19becc0 ),
	NORM( 0xbf3ba6ec, 0x00000000, 0xbf2e2259 ),
	VERT( 0x40e063bd, 0x42562891, 0xc19becc0 ),
	NORM( 0xbf3ba6e7, 0x00000000, 0xbf2e225f ),
	VERT( 0x40e1c930, 0x4254c350, 0xc19becc0 ),
	NORM( 0xbf35df78, 0xbe397e41, 0xbf2e175b ),
	VERT( 0x3fa1382f, 0x4255925d, 0xc19becc0 ),
	NORM( 0xbf35df72, 0xbe397e4f, 0xbf2e1760 ),
	VERT( 0x3fb19830, 0x42544574, 0xc19becc0 ),
	NORM( 0xbf2498ba, 0xbeb4dd86, 0xbf2df891 ),
	VERT( 0x40e5e131, 0x42537667, 0xc19becc0 ),
	NORM( 0xbf2498b6, 0xbeb4dd95, 0xbf2df891 ),
	VERT( 0x3fcba4b6, 0x42532795, 0xc19becc0 ),
	NORM( 0xbf0828a1, 0xbf019391, 0xbf2dcd09 ),
	VERT( 0x40ec6453, 0x42525888, 0xc19becc0 ),
	NORM( 0xbf08289f, 0xbf019391, 0xbf2dcd0a ),
	VERT( 0x40f4e0f8, 0x42517d2b, 0xc19becc0 ),
	NORM( 0xbec326ba, 0xbf20d801, 0xbf2d9eff ),
	VERT( 0x3fed974b, 0x42524c38, 0xc19becc0 ),
	NORM( 0xbec3270d, 0xbf20d7d5, 0xbf2d9f10 ),
	VERT( 0x400a8fd8, 0x4251c253, 0xc19becc0 ),
	NORM( 0xbe4c1175, 0xbf35351a, 0xbf2d7c39 ),
	VERT( 0x40fec310, 0x4250f347, 0xc19becc0 ),
	NORM( 0xbe4c107b, 0xbf35351b, 0xbf2d7c4a ),
	VERT( 0x401fc61b, 0x4251934a, 0xc1854764 ),
	NORM( 0xb365bafc, 0xbf800000, 0x00000000 ),
	VERT( 0x4104af19, 0x4250c43e, 0xc1854764 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4034fc5f, 0x4251c253, 0xc1854764 ),
	NORM( 0x3e8ac0fe, 0xbf766b88, 0x00000000 ),
	VERT( 0x4109fcaa, 0x4250f347, 0xc1854764 ),
	NORM( 0x3e8ac053, 0xbf766ba0, 0x00000000 ),
	VERT( 0x4048c092, 0x42524c38, 0xc1854764 ),
	NORM( 0x3f04c7c4, 0xbf5adf7c, 0x00000000 ),
	VERT( 0x410eedb7, 0x42517d2b, 0xc1854764 ),
	NORM( 0x3f04c782, 0xbf5adfa4, 0x00000000 ),
	VERT( 0x41132c09, 0x42525888, 0xc1854764 ),
	NORM( 0x3f397245, 0xbf307b36, 0x00000000 ),
	VERT( 0x4059b9dd, 0x42532795, 0xc1854764 ),
	NORM( 0x3f397244, 0xbf307b37, 0x00000000 ),
	VERT( 0x41166d9a, 0x42537667, 0xc1854764 ),
	NORM( 0x3f605db4, 0xbef68b0e, 0x00000000 ),
	VERT( 0x4066c01f, 0x42544574, 0xc1854764 ),
	NORM( 0x3f605dc0, 0xbef68ae1, 0x00000000 ),
	VERT( 0x406ef020, 0x4255925d, 0xc1854764 ),
	NORM( 0x3f781032, 0xbe7d0075, 0x00000000 ),
	VERT( 0x4118799b, 0x4254c350, 0xc1854764 ),
	NORM( 0x3f781035, 0xbe7d0046, 0x00000000 ),
	VERT( 0x4071bb09, 0x4256f79e, 0xc1854764 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41192c54, 0x42562891, 0xc1854764 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4118799b, 0x42578dd2, 0xc1854764 ),
	NORM( 0x3f781035, 0x3e7d0046, 0x00000000 ),
	VERT( 0x406ef020, 0x42585cdf, 0xc1854764 ),
	NORM( 0x3f781021, 0x3e7d017b, 0x00000000 ),
	VERT( 0x4066c01f, 0x4259a9c6, 0xc1854764 ),
	NORM( 0x3f605dd4, 0x3ef68a98, 0x00000000 ),
	VERT( 0x41166d9a, 0x4258dabb, 0xc1854764 ),
	NORM( 0x3f605db4, 0x3ef68b0e, 0x00000000 ),
	VERT( 0x41132c09, 0x4259f89a, 0xc1854764 ),
	NORM( 0x3f397212, 0x3f307b6b, 0x00000000 ),
	VERT( 0x4059b9dd, 0x425ac7a7, 0xc1854764 ),
	NORM( 0x3f39722a, 0x3f307b52, 0x00000000 ),
	VERT( 0x4048c092, 0x425ba302, 0xc1854764 ),
	NORM( 0x3f04c792, 0x3f5adf9a, 0x00000000 ),
	VERT( 0x410eedb7, 0x425ad3f6, 0xc1854764 ),
	NORM( 0x3f04c78d, 0x3f5adf9d, 0x00000000 ),
	VERT( 0x4109fcaa, 0x425b5ddb, 0xc1854764 ),
	NORM( 0x3e8ac0fa, 0x3f766b89, 0x00000000 ),
	VERT( 0x4034fc5f, 0x425c2ce8, 0xc1854764 ),
	NORM( 0x3e8ac0f0, 0x3f766b8a, 0x00000000 ),
	VERT( 0x401fc61b, 0x425c5bf0, 0xc1854764 ),
	NORM( 0xb365bae5, 0x3f800000, 0x00000000 ),
	VERT( 0x4104af19, 0x425b8ce4, 0xc1854764 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x40fec310, 0x425b5ddb, 0xc1854764 ),
	NORM( 0xbe8ac10b, 0x3f766b86, 0x00000000 ),
	VERT( 0x400a8fd8, 0x425c2ce8, 0xc1854764 ),
	NORM( 0xbe8ac0f3, 0x3f766b8a, 0x00000000 ),
	VERT( 0x40f4e0f8, 0x425ad3f6, 0xc1854764 ),
	NORM( 0xbf04c78f, 0x3f5adf9c, 0x00000000 ),
	VERT( 0x3fed974b, 0x425ba302, 0xc1854764 ),
	NORM( 0xbf04c795, 0x3f5adf99, 0x00000000 ),
	VERT( 0x40ec6453, 0x4259f89a, 0xc1854764 ),
	NORM( 0xbf39720d, 0x3f307b70, 0x00000000 ),
	VERT( 0x3fcba4b6, 0x425ac7a7, 0xc1854764 ),
	NORM( 0xbf397228, 0x3f307b54, 0x00000000 ),
	VERT( 0x3fb19830, 0x4259a9c6, 0xc1854764 ),
	NORM( 0xbf605dd3, 0x3ef68a9c, 0x00000000 ),
	VERT( 0x40e5e131, 0x4258dabb, 0xc1854764 ),
	NORM( 0xbf605db9, 0x3ef68afb, 0x00000000 ),
	VERT( 0x40e1c930, 0x42578dd2, 0xc1854764 ),
	NORM( 0xbf781035, 0x3e7d0048, 0x00000000 ),
	VERT( 0x3fa1382f, 0x42585cdf, 0xc1854764 ),
	NORM( 0xbf781023, 0x3e7d0165, 0x00000000 ),
	VERT( 0x3f9ba25e, 0x4256f79e, 0xc1854764 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x40e063bd, 0x42562891, 0xc1854764 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x40e1c930, 0x4254c350, 0xc1854764 ),
	NORM( 0xbf781035, 0xbe7d0048, 0x00000000 ),
	VERT( 0x3fa1382f, 0x4255925d, 0xc1854764 ),
	NORM( 0xbf781033, 0xbe7d0062, 0x00000000 ),
	VERT( 0x40e5e131, 0x42537667, 0xc1854764 ),
	NORM( 0xbf605db9, 0xbef68afb, 0x00000000 ),
	VERT( 0x3fb19830, 0x42544574, 0xc1854764 ),
	NORM( 0xbf605dbf, 0xbef68ae5, 0x00000000 ),
	VERT( 0x3fcba4b6, 0x42532795, 0xc1854764 ),
	NORM( 0xbf397242, 0xbf307b39, 0x00000000 ),
	VERT( 0x40ec6453, 0x42525888, 0xc1854764 ),
	NORM( 0xbf397240, 0xbf307b3b, 0x00000000 ),
	VERT( 0x40f4e0f8, 0x42517d2b, 0xc1854764 ),
	NORM( 0xbf04c783, 0xbf5adfa3, 0x00000000 ),
	VERT( 0x3fed974b, 0x42524c38, 0xc1854764 ),
	NORM( 0xbf04c7c7, 0xbf5adf7a, 0x00000000 ),
	VERT( 0x40fec310, 0x4250f347, 0xc1854764 ),
	NORM( 0xbe8ac064, 0xbf766b9e, 0x00000000 ),
	VERT( 0x400a8fd8, 0x4251c253, 0xc1854764 ),
	NORM( 0xbe8ac102, 0xbf766b88, 0x00000000 ),
	VERT( 0x415e307a, 0x4260ac32, 0xc199c4a0 ),
	NORM( 0xb37cc9dc, 0xbf3bf825, 0xbf2dcaaa ),
	VERT( 0x40aa787f, 0x426907b3, 0xc19d00d1 ),
	NORM( 0x00000000, 0xbf3bf815, 0xbf2dcabb ),
	VERT( 0x416abfc4, 0x42611606, 0xc199c4a0 ),
	NORM( 0x3e429a28, 0xbf359066, 0xbf2dcab9 ),
	VERT( 0x40c39712, 0x42697186, 0xc19d00d1 ),
	NORM( 0x3e4299ba, 0xbf359075, 0xbf2dcab1 ),
	VERT( 0x417673ef, 0x42624c4a, 0xc199c4a0 ),
	NORM( 0x3ebbf833, 0xbf22c92e, 0xbf2dcabb ),
	VERT( 0x40daff69, 0x426aa7ca, 0xc19d00d1 ),
	NORM( 0x3ebbf830, 0xbf22c92f, 0xbf2dcaba ),
	VERT( 0x40ef1927, 0x426c9559, 0xc19d00d1 ),
	NORM( 0x3f04ea12, 0xbf04ea08, 0xbf2dcab5 ),
	VERT( 0x41804067, 0x426439d9, 0xc199c4a0 ),
	NORM( 0x3f04e9ff, 0xbf04ea13, 0xbf2dcabb ),
	VERT( 0x40fe859e, 0x426f1891, 0xc19d00d1 ),
	NORM( 0x3f22c934, 0xbebbf81e, 0xbf2dcabb ),
	VERT( 0x41841b85, 0x4266bd10, 0xc199c4a0 ),
	NORM( 0x3f22c940, 0xbebbf821, 0xbf2dcaaf ),
	VERT( 0x4186880b, 0x4269aa1b, 0xc199c4a0 ),
	NORM( 0x3f35906f, 0xbe42996f, 0xbf2dcabc ),
	VERT( 0x41041bdd, 0x4272059b, 0xc19d00d1 ),
	NORM( 0x3f359073, 0xbe4299bd, 0xbf2dcab3 ),
	VERT( 0x41875bb2, 0x426ccdee, 0xc199c4a0 ),
	NORM( 0x3f3bf81d, 0x3470261b, 0xbf2dcab2 ),
	VERT( 0x4105c32a, 0x4275296e, 0xc19d00d1 ),
	NORM( 0x3f3bf819, 0x34789333, 0xbf2dcab6 ),
	VERT( 0x41041bdd, 0x42784d40, 0xc19d00d1 ),
	NORM( 0x3f359071, 0x3e42999c, 0xbf2dcab7 ),
	VERT( 0x4186880b, 0x426ff1c0, 0xc199c4a0 ),
	NORM( 0x3f35906d, 0x3e42997d, 0xbf2dcabd ),
	VERT( 0x41841b85, 0x4272decb, 0xc199c4a0 ),
	NORM( 0x3f22c940, 0x3ebbf821, 0xbf2dcaaf ),
	VERT( 0x40fe859e, 0x427b3a4b, 0xc19d00d1 ),
	NORM( 0x3f22c93d, 0x3ebbf80c, 0xbf2dcab8 ),
	VERT( 0x40ef1927, 0x427dbd83, 0xc19d00d1 ),
	NORM( 0x3f04ea1f, 0x3f04e9f3, 0xbf2dcabb ),
	VERT( 0x41804067, 0x42756202, 0xc199c4a0 ),
	NORM( 0x3f04ea0c, 0x3f04e9fe, 0xbf2dcac2 ),
	VERT( 0x417673ef, 0x42774f92, 0xc199c4a0 ),
	NORM( 0x3ebbf810, 0x3f22c950, 0xbf2dcaa4 ),
	VERT( 0x40daff69, 0x427fab13, 0xc19d00d1 ),
	NORM( 0x3ebbf7e7, 0x3f22c964, 0xbf2dca9d ),
	VERT( 0x416abfc4, 0x427885d4, 0xc199c4a0 ),
	NORM( 0x3e429946, 0x3f359067, 0xbf2dcac8 ),
	VERT( 0x40c39712, 0x428070aa, 0xc19d00d1 ),
	NORM( 0x3e4298d0, 0x3f359067, 0xbf2dcad0 ),
	VERT( 0x40aa787f, 0x4280a594, 0xc19d00d1 ),
	NORM( 0x00000000, 0x3f3bf824, 0xbf2dcaaa ),
	VERT( 0x415e307a, 0x4278efa8, 0xc199c4a0 ),
	NORM( 0xb37cc9dc, 0x3f3bf825, 0xbf2dcaaa ),
	VERT( 0x4151a131, 0x427885d4, 0xc199c4a0 ),
	NORM( 0xbe42993d, 0x3f359066, 0xbf2dcac9 ),
	VERT( 0x409159ec, 0x428070aa, 0xc19d00d1 ),
	NORM( 0xbe4298cd, 0x3f359067, 0xbf2dcad0 ),
	VERT( 0x4145ed05, 0x42774f92, 0xc199c4a0 ),
	NORM( 0xbebbf80e, 0x3f22c951, 0xbf2dcaa4 ),
	VERT( 0x4073e329, 0x427fab13, 0xc19d00d1 ),
	NORM( 0xbebbf7e7, 0x3f22c964, 0xbf2dca9c ),
	VERT( 0x413be026, 0x42756202, 0xc199c4a0 ),
	NORM( 0xbf04ea11, 0x3f04e9fb, 0xbf2dcac0 ),
	VERT( 0x404bafae, 0x427dbd83, 0xc19d00d1 ),
	NORM( 0xbf04ea1f, 0x3f04e9f2, 0xbf2dcabc ),
	VERT( 0x402cd6c0, 0x427b3a4b, 0xc19d00d1 ),
	NORM( 0xbf22c93d, 0x3ebbf80c, 0xbf2dcab8 ),
	VERT( 0x413429eb, 0x4272decb, 0xc199c4a0 ),
	NORM( 0xbf22c938, 0x3ebbf82a, 0xbf2dcab4 ),
	VERT( 0x40197288, 0x42784d40, 0xc19d00d1 ),
	NORM( 0xbf359071, 0x3e42999c, 0xbf2dcab7 ),
	VERT( 0x412f50dd, 0x426ff1c0, 0xc199c4a0 ),
	NORM( 0xbf359071, 0x3e42999c, 0xbf2dcab7 ),
	VERT( 0x412da990, 0x426ccdee, 0xc199c4a0 ),
	NORM( 0xbf3bf819, 0x34789333, 0xbf2dcab6 ),
	VERT( 0x4012d554, 0x4275296e, 0xc19d00d1 ),
	NORM( 0xbf3bf819, 0x34789333, 0xbf2dcab6 ),
	VERT( 0x412f50dd, 0x4269aa1b, 0xc199c4a0 ),
	NORM( 0xbf359073, 0xbe42998e, 0xbf2dcab6 ),
	VERT( 0x40197288, 0x4272059b, 0xc19d00d1 ),
	NORM( 0xbf359073, 0xbe4299bd, 0xbf2dcab3 ),
	VERT( 0x402cd6c0, 0x426f1891, 0xc19d00d1 ),
	NORM( 0xbf22c934, 0xbebbf81e, 0xbf2dcabb ),
	VERT( 0x413429eb, 0x4266bd10, 0xc199c4a0 ),
	NORM( 0xbf22c938, 0xbebbf82a, 0xbf2dcab4 ),
	VERT( 0x404bafae, 0x426c9559, 0xc19d00d1 ),
	NORM( 0xbf04ea13, 0xbf04ea07, 0xbf2dcab6 ),
	VERT( 0x413be026, 0x426439d9, 0xc199c4a0 ),
	NORM( 0xbf04ea04, 0xbf04ea0f, 0xbf2dcaba ),
	VERT( 0x4073e329, 0x426aa7ca, 0xc19d00d1 ),
	NORM( 0xbebbf832, 0xbf22c92f, 0xbf2dcaba ),
	VERT( 0x4145ed05, 0x42624c4a, 0xc199c4a0 ),
	NORM( 0xbebbf82e, 0xbf22c930, 0xbf2dcaba ),
	VERT( 0x409159ec, 0x42697186, 0xc19d00d1 ),
	NORM( 0xbe4299b8, 0xbf359075, 0xbf2dcab1 ),
	VERT( 0x4151a131, 0x42611606, 0xc199c4a0 ),
	NORM( 0xbe429a1f, 0xbf359066, 0xbf2dcab9 ),
	VERT( 0x40aa787f, 0x426907b3, 0xc1854764 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x415e307a, 0x4260ac32, 0xc1820b33 ),
	NORM( 0xb3ac23b1, 0xbf800000, 0x00000000 ),
	VERT( 0x40c39712, 0x42697186, 0xc1854764 ),
	NORM( 0x3e848402, 0xbf7746e8, 0x00000000 ),
	VERT( 0x416abfc4, 0x42611606, 0xc1820b33 ),
	NORM( 0x3e848452, 0xbf7746dd, 0x00000000 ),
	VERT( 0x417673ef, 0x42624c4a, 0xc1820b33 ),
	NORM( 0x3f000015, 0xbf5db3cb, 0x00000000 ),
	VERT( 0x40daff69, 0x426aa7ca, 0xc1854764 ),
	NORM( 0x3f000012, 0xbf5db3cd, 0x00000000 ),
	VERT( 0x41804067, 0x426439d9, 0xc1820b33 ),
	NORM( 0x3f3504e6, 0xbf350500, 0x00000000 ),
	VERT( 0x40ef1927, 0x426c9559, 0xc1854764 ),
	NORM( 0x3f3504fa, 0xbf3504ec, 0x00000000 ),
	VERT( 0x41841b85, 0x4266bd10, 0xc1820b33 ),
	NORM( 0x3f5db3d7, 0xbf000001, 0x00000000 ),
	VERT( 0x40fe859e, 0x426f1891, 0xc1854764 ),
	NORM( 0x3f5db3d4, 0xbf000006, 0x00000000 ),
	VERT( 0x41041bdd, 0x4272059b, 0xc1854764 ),
	NORM( 0x3f7746e7, 0xbe848406, 0x00000000 ),
	VERT( 0x4186880b, 0x4269aa1b, 0xc1820b33 ),
	NORM( 0x3f7746ed, 0xbe8483d6, 0x00000000 ),
	VERT( 0x4105c32a, 0x4275296e, 0xc1854764 ),
	NORM( 0x3f800000, 0x34a94535, 0x00000000 ),
	VERT( 0x41875bb2, 0x426ccdee, 0xc1820b33 ),
	NORM( 0x3f800000, 0x34a3884b, 0x00000000 ),
	VERT( 0x4186880b, 0x426ff1c0, 0xc1820b33 ),
	NORM( 0x3f7746ec, 0x3e8483e0, 0x00000000 ),
	VERT( 0x41041bdd, 0x42784d40, 0xc1854764 ),
	NORM( 0x3f7746ea, 0x3e8483f2, 0x00000000 ),
	VERT( 0x41841b85, 0x4272decb, 0xc1820b33 ),
	NORM( 0x3f5db3d7, 0x3f000001, 0x00000000 ),
	VERT( 0x40fe859e, 0x427b3a4b, 0xc1854764 ),
	NORM( 0x3f5db3dc, 0x3efffff0, 0x00000000 ),
	VERT( 0x40ef1927, 0x427dbd83, 0xc1854764 ),
	NORM( 0x3f350511, 0x3f3504d5, 0x00000000 ),
	VERT( 0x41804067, 0x42756202, 0xc1820b33 ),
	NORM( 0x3f3504fd, 0x3f3504ea, 0x00000000 ),
	VERT( 0x417673ef, 0x42774f92, 0xc1820b33 ),
	NORM( 0x3effffde, 0x3f5db3e1, 0x00000000 ),
	VERT( 0x40daff69, 0x427fab13, 0xc1854764 ),
	NORM( 0x3effff9b, 0x3f5db3f4, 0x00000000 ),
	VERT( 0x416abfc4, 0x427885d4, 0xc1820b33 ),
	NORM( 0x3e8483c2, 0x3f7746f0, 0x00000000 ),
	VERT( 0x40c39712, 0x428070aa, 0xc1854764 ),
	NORM( 0x3e848377, 0x3f7746fa, 0x00000000 ),
	VERT( 0x415e307a, 0x4278efa8, 0xc1820b33 ),
	NORM( 0xb3ac23b1, 0x3f800000, 0x00000000 ),
	VERT( 0x40aa787f, 0x4280a594, 0xc1854764 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x409159ec, 0x428070aa, 0xc1854764 ),
	NORM( 0xbe848375, 0x3f7746fa, 0x00000000 ),
	VERT( 0x4151a131, 0x427885d4, 0xc1820b33 ),
	NORM( 0xbe8483bc, 0x3f7746f1, 0x00000000 ),
	VERT( 0x4145ed05, 0x42774f92, 0xc1820b33 ),
	NORM( 0xbeffffd9, 0x3f5db3e2, 0x00000000 ),
	VERT( 0x4073e329, 0x427fab13, 0xc1854764 ),
	NORM( 0xbeffff9b, 0x3f5db3f4, 0x00000000 ),
	VERT( 0x413be026, 0x42756202, 0xc1820b33 ),
	NORM( 0xbf350502, 0x3f3504e4, 0x00000000 ),
	VERT( 0x404bafae, 0x427dbd83, 0xc1854764 ),
	NORM( 0xbf350512, 0x3f3504d4, 0x00000000 ),
	VERT( 0x402cd6c0, 0x427b3a4b, 0xc1854764 ),
	NORM( 0xbf5db3dc, 0x3efffff0, 0x00000000 ),
	VERT( 0x413429eb, 0x4272decb, 0xc1820b33 ),
	NORM( 0xbf5db3d1, 0x3f00000a, 0x00000000 ),
	VERT( 0x412f50dd, 0x426ff1c0, 0xc1820b33 ),
	NORM( 0xbf7746ea, 0x3e8483f2, 0x00000000 ),
	VERT( 0x40197288, 0x42784d40, 0xc1854764 ),
	NORM( 0xbf7746ea, 0x3e8483f2, 0x00000000 ),
	VERT( 0x412da990, 0x426ccdee, 0xc1820b33 ),
	NORM( 0xbf800000, 0x34a94535, 0x00000000 ),
	VERT( 0x4012d554, 0x4275296e, 0xc1854764 ),
	NORM( 0xbf800000, 0x34a94535, 0x00000000 ),
	VERT( 0x40197288, 0x4272059b, 0xc1854764 ),
	NORM( 0xbf7746e7, 0xbe848406, 0x00000000 ),
	VERT( 0x412f50dd, 0x4269aa1b, 0xc1820b33 ),
	NORM( 0xbf7746eb, 0xbe8483e7, 0x00000000 ),
	VERT( 0x413429eb, 0x4266bd10, 0xc1820b33 ),
	NORM( 0xbf5db3d1, 0xbf00000a, 0x00000000 ),
	VERT( 0x402cd6c0, 0x426f1891, 0xc1854764 ),
	NORM( 0xbf5db3d4, 0xbf000006, 0x00000000 ),
	VERT( 0x404bafae, 0x426c9559, 0xc1854764 ),
	NORM( 0xbf3504fb, 0xbf3504eb, 0x00000000 ),
	VERT( 0x413be026, 0x426439d9, 0xc1820b33 ),
	NORM( 0xbf3504ec, 0xbf3504fb, 0x00000000 ),
	VERT( 0x4145ed05, 0x42624c4a, 0xc1820b33 ),
	NORM( 0xbf000011, 0xbf5db3ce, 0x00000000 ),
	VERT( 0x4073e329, 0x426aa7ca, 0xc1854764 ),
	NORM( 0xbf000013, 0xbf5db3cc, 0x00000000 ),
	VERT( 0x4151a131, 0x42611606, 0xc1820b33 ),
	NORM( 0xbe84844d, 0xbf7746de, 0x00000000 ),
	VERT( 0x409159ec, 0x42697186, 0xc1854764 ),
	NORM( 0xbe848401, 0xbf7746e8, 0x00000000 ),
	VERT( 0xc1b4c53a, 0x42803b54, 0xc15d8afe ),
	NORM( 0xbf6406aa, 0x3812e883, 0xbee8b95f ),
	VERT( 0xc1b4c53a, 0x427dfeff, 0xc15c4efb ),
	NORM( 0xbf643005, 0xbde487b9, 0xbee0f2ae ),
	VERT( 0xc1af4e57, 0x427cee87, 0xc16b242d ),
	NORM( 0xbf50e32a, 0xbe1346fe, 0xbf0f5716 ),
	VERT( 0xc1af4e57, 0x42803a74, 0xc16ce79f ),
	NORM( 0xbf5098fc, 0xb87f5f24, 0xbf1466d1 ),
	VERT( 0xc1b4c53a, 0x427bb262, 0xc158b07a ),
	NORM( 0xbf649b38, 0xbe5d4324, 0xbeca2453 ),
	VERT( 0xc1af4e57, 0x4279a5a6, 0xc165f89a ),
	NORM( 0xbf51a0a0, 0xbe8e4db6, 0xbf00916f ),
	VERT( 0xc1b4c53a, 0x4279b8ec, 0xc152eea0 ),
	NORM( 0xbf652e7a, 0xbe9cf137, 0xbea5943b ),
	VERT( 0xc1af4e57, 0x4276d391, 0xc15dbf1a ),
	NORM( 0xbf52a3bf, 0xbec95e0f, 0xbed20b8a ),
	VERT( 0xc1b4c53a, 0x42783512, 0xc14b6ddf ),
	NORM( 0xbf65c5ab, 0xbec0c870, 0xbe6aed8d ),
	VERT( 0xc1af4e57, 0x4274a97e, 0xc1530729 ),
	NORM( 0xbf53ade6, 0xbef6b169, 0xbe948194 ),
	VERT( 0xc1b4c53a, 0x42774143, 0xc142b119 ),
	NORM( 0xbf663b58, 0xbed767bc, 0xbdf3e5a6 ),
	VERT( 0xc1af4e57, 0x42734d31, 0xc1468bc5 ),
	NORM( 0xbf547faf, 0xbf09819c, 0xbe197b68 ),
	VERT( 0xc1b4c53a, 0x4276ee1a, 0xc13950bf ),
	NORM( 0xbf6672f5, 0xbedef910, 0xb9850ea2 ),
	VERT( 0xc1af4e57, 0x4272d664, 0xc13926b2 ),
	NORM( 0xbf54ea10, 0xbf0e2394, 0x39bfeb3c ),
	VERT( 0xc1b4c53a, 0x42774143, 0xc12ff065 ),
	NORM( 0xbf66614a, 0xbed6e2b9, 0x3df24434 ),
	VERT( 0xc1af4e57, 0x42734d31, 0xc12bc1a0 ),
	NORM( 0xbf54daab, 0xbf08f259, 0x3e199ba0 ),
	VERT( 0xc1b4c53a, 0x42783512, 0xc12733a0 ),
	NORM( 0xbf660f75, 0xbebfe4ff, 0x3e69518a ),
	VERT( 0xc1af4e57, 0x4274a97e, 0xc11f463d ),
	NORM( 0xbf546008, 0xbef4c389, 0x3e93b8ef ),
	VERT( 0xc1b4c53a, 0x4279b8ec, 0xc11fb2de ),
	NORM( 0xbf6597bc, 0xbe9bef1a, 0x3ea43f6c ),
	VERT( 0xc1af4e57, 0x4276d391, 0xc1148e4c ),
	NORM( 0xbf53a436, 0xbec7278a, 0x3ed01e33 ),
	VERT( 0xc1b4c53a, 0x427bb262, 0xc119f104 ),
	NORM( 0xbf651d35, 0xbe5b8bae, 0x3ec84d4c ),
	VERT( 0xc1af4e57, 0x4279a5a6, 0xc10c54cb ),
	NORM( 0xbf52e037, 0xbe8c6645, 0x3efe14e8 ),
	VERT( 0xc1b4c53a, 0x427dfeff, 0xc1165283 ),
	NORM( 0xbf64c1df, 0xbde292bd, 0x3edebf0e ),
	VERT( 0xc1af4e57, 0x427cee87, 0xc1072939 ),
	NORM( 0xbf524c26, 0xbe111698, 0x3f0d67a0 ),
	VERT( 0xc1b4c53a, 0x42803b54, 0xc1151680 ),
	NORM( 0xbf649e12, 0x380e3b0a, 0x3ee66438 ),
	VERT( 0xc1af4e57, 0x42803a74, 0xc10565c7 ),
	NORM( 0xbf5210a8, 0xb8780b25, 0x3f125127 ),
	VERT( 0xc1b4c53a, 0x4281772a, 0xc1165283 ),
	NORM( 0xbf64baba, 0x3de2d08a, 0x3eded874 ),
	VERT( 0xc1af4e57, 0x4281fda4, 0xc1072939 ),
	NORM( 0xbf523cf2, 0x3e110f34, 0x3f0d7eb4 ),
	VERT( 0xc1b4c53a, 0x42829d78, 0xc119f104 ),
	NORM( 0xbf650f7b, 0x3e5bce6c, 0x3ec879c7 ),
	VERT( 0xc1af4e57, 0x4283a215, 0xc10c54cb ),
	NORM( 0xbf52c310, 0x3e8c837d, 0x3efe6576 ),
	VERT( 0xc1b4c53a, 0x42839a33, 0xc11fb2de ),
	NORM( 0xbf658474, 0x3e9c2987, 0x3ea473b0 ),
	VERT( 0xc1af4e57, 0x42850b1f, 0xc1148e4c ),
	NORM( 0xbf537b81, 0x3ec77223, 0x3ed07c36 ),
	VERT( 0xc1b4c53a, 0x42845c20, 0xc12733a0 ),
	NORM( 0xbf65f809, 0x3ec03949, 0x3e69ad62 ),
	VERT( 0xc1af4e57, 0x42862029, 0xc11f463d ),
	NORM( 0xbf542ecc, 0x3ef53c82, 0x3e940b37 ),
	VERT( 0xc1b4c53a, 0x4284d608, 0xc12ff065 ),
	NORM( 0xbf664742, 0x3ed74aa8, 0x3df2afb4 ),
	VERT( 0xc1af4e57, 0x4286ce4f, 0xc12bc1a0 ),
	NORM( 0xbf54a416, 0x3f094049, 0x3e19fc15 ),
	VERT( 0xc1b4c53a, 0x4284ff9d, 0xc13950bf ),
	NORM( 0xbf6657f8, 0x3edf6880, 0xb985aad3 ),
	VERT( 0xc1af4e57, 0x428709b6, 0xc13926b2 ),
	NORM( 0xbf54b17f, 0x3f0e782b, 0x39c0d73d ),
	VERT( 0xc1b4c53a, 0x4284d608, 0xc142b119 ),
	NORM( 0xbf662118, 0x3ed7d01a, 0xbdf452b1 ),
	VERT( 0xc1af4e57, 0x4286ce4f, 0xc1468bc5 ),
	NORM( 0xbf54487b, 0x3f09d011, 0xbe19db9d ),
	VERT( 0xc1b4c53a, 0x42845c20, 0xc14b6ddf ),
	NORM( 0xbf65addf, 0x3ec11d6e, 0xbe6b4a9d ),
	VERT( 0xc1af4e57, 0x42862029, 0xc1530729 ),
	NORM( 0xbf537b89, 0x3ef72c07, 0xbe94d49c ),
	VERT( 0xc1b4c53a, 0x42839a33, 0xc152eea0 ),
	NORM( 0xbf651ac8, 0x3e9d2c4e, 0xbea5c92c ),
	VERT( 0xc1af4e57, 0x42850b1f, 0xc15dbf1a ),
	NORM( 0xbf5279bf, 0x3ec9aa0c, 0xbed26af6 ),
	VERT( 0xc1b4c53a, 0x42829d78, 0xc158b07a ),
	NORM( 0xbf648d1e, 0x3e5d86f5, 0xbeca5187 ),
	VERT( 0xc1af4e57, 0x4283a215, 0xc165f89a ),
	NORM( 0xbf518251, 0x3e8e6b8e, 0xbf00ba8d ),
	VERT( 0xc1b4c53a, 0x4281772a, 0xc15c4efb ),
	NORM( 0xbf6428a2, 0x3de4c729, 0xbee10c9e ),
	VERT( 0xc1af4e57, 0x4281fda4, 0xc16b242d ),
	NORM( 0xbf50d33b, 0x3e133f77, 0xbf0f6ec7 ),
	VERT( 0xc1b74430, 0x42803b93, 0xc14d976e ),
	NORM( 0xbf7c96a1, 0x36dfdc5c, 0xbe269e3c ),
	VERT( 0xc1b74430, 0x427f1569, 0xc14ce676 ),
	NORM( 0xbf7c9b3a, 0xbd22d5a9, 0xbe211e6d ),
	VERT( 0xc1b74430, 0x427dcbca, 0xc14adf9f ),
	NORM( 0xbf7ca784, 0xbd9dcf6d, 0xbe10ec0c ),
	VERT( 0xc1b74430, 0x427cb0bb, 0xc147a644 ),
	NORM( 0xbf7cb85a, 0xbde03536, 0xbdedbbfb ),
	VERT( 0xc1b74430, 0x427bd789, 0xc14372a3 ),
	NORM( 0xbf7cc950, 0xbe09f30f, 0xbda8e2e9 ),
	VERT( 0xc1b74430, 0x427b4f00, 0xc13e8e0c ),
	NORM( 0xbf7cd5bf, 0xbe1a6a3f, 0xbd2f729d ),
	VERT( 0xc1b74430, 0x427b206e, 0xc1394dda ),
	NORM( 0xbf7cda23, 0xbe201747, 0x3728bbb7 ),
	VERT( 0xc1b74430, 0x427b4f00, 0xc1340da8 ),
	NORM( 0xbf7cd52e, 0xbe1a7690, 0x3d2f95cb ),
	VERT( 0xc1b74430, 0x427bd789, 0xc12f2910 ),
	NORM( 0xbf7cc834, 0xbe0a0862, 0x3da907cd ),
	VERT( 0xc1b74430, 0x427cb0bb, 0xc12af570 ),
	NORM( 0xbf7cb6c1, 0xbde065ee, 0x3dedfa7f ),
	VERT( 0xc1b74430, 0x427dcbca, 0xc127bc14 ),
	NORM( 0xbf7ca588, 0xbd9df931, 0x3e1117fc ),
	VERT( 0xc1b74430, 0x427f1569, 0xc125b53e ),
	NORM( 0xbf7c98ff, 0xbd230556, 0x3e215359 ),
	VERT( 0xc1b74430, 0x42803b93, 0xc1250446 ),
	NORM( 0xbf7c9450, 0x36dfe9fd, 0x3e26d66d ),
	VERT( 0xc1b74430, 0x4280ec70, 0xc125b53e ),
	NORM( 0xbf7c98a0, 0x3d231b3d, 0x3e215b49 ),
	VERT( 0xc1b74430, 0x4281913f, 0xc127bc14 ),
	NORM( 0xbf7ca4d3, 0x3d9e0ef4, 0x3e1125c9 ),
	VERT( 0xc1b74430, 0x42821ec7, 0xc12af570 ),
	NORM( 0xbf7cb5c3, 0x3de08ad6, 0x3dee1b3d ),
	VERT( 0xc1b74430, 0x42828b61, 0xc12f2910 ),
	NORM( 0xbf7cc6fc, 0x3e0a232a, 0x3da924f4 ),
	VERT( 0xc1b74430, 0x4282cfa5, 0xc1340da8 ),
	NORM( 0xbf7cd3dc, 0x3e1a96b8, 0x3d2fb70a ),
	VERT( 0xc1b74430, 0x4282e6ee, 0xc1394dda ),
	NORM( 0xbf7cd8c7, 0x3e20399f, 0x3728cdee ),
	VERT( 0xc1b74430, 0x4282cfa5, 0xc13e8e0c ),
	NORM( 0xbf7cd46d, 0x3e1a8a6f, 0xbd2f93df ),
	VERT( 0xc1b74430, 0x42828b61, 0xc14372a3 ),
	NORM( 0xbf7cc819, 0x3e0a0dc9, 0xbda8fff7 ),
	VERT( 0xc1b74430, 0x42821ec7, 0xc147a644 ),
	NORM( 0xbf7cb75d, 0x3de059e4, 0xbdeddc78 ),
	VERT( 0xc1b74430, 0x4281913f, 0xc14adf9f ),
	NORM( 0xbf7ca6d0, 0x3d9de514, 0xbe10f9c7 ),
	VERT( 0xc1b74430, 0x4280ec70, 0xc14ce676 ),
	NORM( 0xbf7c9adb, 0x3d22eb8b, 0xbe212663 ),
	VERT( 0x3f75b38a, 0x4294443d, 0xc158b01f ),
	NORM( 0x3f7e4d84, 0xbdeb6f77, 0x00000000 ),
	VERT( 0x3f75b38a, 0x4294443d, 0xc158b01f ),
	NORM( 0x3f7e4d84, 0xbdeb6f77, 0x00000000 ),
	VERT( 0x3f7eac5a, 0x4294df4b, 0xc158b01f ),
	NORM( 0x3f800000, 0xb5c14808, 0x00000000 ),
	VERT( 0x3f7eac5a, 0x4294df4b, 0xc158b01f ),
	NORM( 0x3f800000, 0xb5c14808, 0x00000000 ),
	VERT( 0x3f75b38a, 0x42957a5a, 0xc158b01f ),
	NORM( 0x3f792149, 0x3e6ba279, 0x00000000 ),
	VERT( 0x3f75b38a, 0x42957a5a, 0xc158b01f ),
	NORM( 0x3f792149, 0x3e6ba279, 0x00000000 ),
	VERT( 0x3f5b65a0, 0x42960ad8, 0xc158b01f ),
	NORM( 0x3f641772, 0x3ee8778e, 0x00000000 ),
	VERT( 0x3f5b65a0, 0x42960ad8, 0xc158b01f ),
	NORM( 0x3f641772, 0x3ee8778e, 0x00000000 ),
	VERT( 0x3f318d85, 0x429686eb, 0xc158b01f ),
	NORM( 0x3f3fe8bb, 0x3f296e5d, 0x00000000 ),
	VERT( 0x3f318d85, 0x429686eb, 0xc158b01f ),
	NORM( 0x3f3fe8bb, 0x3f296e5d, 0x00000000 ),
	VERT( 0x3ef60a73, 0x4296e620, 0xc158b01f ),
	NORM( 0x3f285a20, 0x3f40db3c, 0x00000000 ),
	VERT( 0x3ef60a73, 0x4296e620, 0xc158b01f ),
	NORM( 0x3f01fa25, 0x3f5c8c98, 0x00000000 ),
	VERT( 0x3e6e107c, 0x429721fa, 0xc158b01f ),
	NORM( 0x3e949e5b, 0x3f74fa52, 0x00000000 ),
	VERT( 0xbd0a1e66, 0x42973663, 0xc158b01f ),
	NORM( 0x3e17a691, 0x3f7d2d55, 0x00000000 ),
	VERT( 0xbd0a1e66, 0x42973663, 0xc0e53e04 ),
	NORM( 0xbaf7cc1e, 0x38d117aa, 0xbf7fffe2 ),
	VERT( 0xbd0a1e66, 0x42973663, 0xc0e53e04 ),
	NORM( 0xbbabecfd, 0x3f7fbcff, 0xbd37eb25 ),
	VERT( 0xbd0a1e66, 0x42973663, 0xc158ca65 ),
	NORM( 0x3e17a691, 0x3f7d2d55, 0x00000000 ),
	VERT( 0x3e6e107c, 0x429721fa, 0xc0e53e04 ),
	NORM( 0x3e949e5a, 0x3f74fa52, 0x00000000 ),
	VERT( 0x3e6e107c, 0x429721fa, 0xc158ca65 ),
	NORM( 0x3e949e5a, 0x3f74fa52, 0x00000000 ),
	VERT( 0x3ef60a73, 0x4296e620, 0xc0e53e04 ),
	NORM( 0x3f0c1582, 0x3f56459e, 0x00000000 ),
	VERT( 0x3ef60a73, 0x4296e620, 0xc158ca65 ),
	NORM( 0x3f285a20, 0x3f40db3c, 0x00000000 ),
	VERT( 0x3ef60a73, 0x4296e620, 0xc158ca65 ),
	NORM( 0x3eda4158, 0x3f67934d, 0x00000000 ),
	VERT( 0x3f318d85, 0x429686eb, 0xc0e53e04 ),
	NORM( 0x3f3fe8bb, 0x3f296e5d, 0x00000000 ),
	VERT( 0x3f318d85, 0x429686eb, 0xc158ca65 ),
	NORM( 0x3f3fe8bb, 0x3f296e5d, 0x00000000 ),
	VERT( 0x3f5b65a0, 0x42960ad8, 0xc0e53e04 ),
	NORM( 0x3f641772, 0x3ee8778e, 0x00000000 ),
	VERT( 0x3f5b65a0, 0x42960ad8, 0xc158ca65 ),
	NORM( 0x3f641772, 0x3ee8778e, 0x00000000 ),
	VERT( 0x3f75b38a, 0x42957a5a, 0xc0e53e04 ),
	NORM( 0x3f792149, 0x3e6ba279, 0x00000000 ),
	VERT( 0x3f75b38a, 0x42957a5a, 0xc158ca65 ),
	NORM( 0x3f792149, 0x3e6ba279, 0x00000000 ),
	VERT( 0x3f7eac5a, 0x4294df4b, 0xc0e53e04 ),
	NORM( 0x3f800000, 0xb5c14808, 0x00000000 ),
	VERT( 0x3f7eac5a, 0x4294df4b, 0xc158ca65 ),
	NORM( 0x3f800000, 0xb5c14808, 0x00000000 ),
	VERT( 0x3f75b38a, 0x4294443d, 0xc0e53e04 ),
	NORM( 0x3f7e4d84, 0xbdeb6f77, 0x00000000 ),
	VERT( 0x3f75b38a, 0x4294443d, 0xc158ca65 ),
	NORM( 0x3f7e4d84, 0xbdeb6f77, 0x00000000 ),
	VERT( 0xc1468863, 0xbf7d0e01, 0xc107a774 ),
	NORM( 0xbf13cd3a, 0xbf13cd3a, 0x3f13cd3a ),
	VERT( 0xc1468863, 0x416bfb41, 0xc149a6e0 ),
	NORM( 0xbf31336c, 0x3e51373d, 0xbf31336c ),
	VERT( 0xc1468863, 0x416bfb41, 0xc107a774 ),
	NORM( 0xbf31336c, 0x3e513738, 0x3f31336c ),
	VERT( 0xc1468863, 0xbf7d0e01, 0xc149a6e0 ),
	NORM( 0xbf13cd3a, 0xbf13cd3b, 0xbf13cd3a ),
	VERT( 0xbfbea9a9, 0xbf7d0e01, 0xc107a774 ),
	NORM( 0x3f13cd3b, 0xbf13cd38, 0x3f13cd3b ),
	VERT( 0xbfbea9a9, 0x416bfb41, 0xc149a6e0 ),
	NORM( 0x3f33bba4, 0x3df3b846, 0xbf33bba4 ),
	VERT( 0xbfbea9a9, 0x416bfb41, 0xc149a6e0 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xbfbea9a9, 0x416bfb41, 0xc107a774 ),
	NORM( 0x3f31336d, 0x3e513734, 0x3f31336d ),
	VERT( 0xbfbea9a9, 0xbf7d0e01, 0xc149a6e0 ),
	NORM( 0x3f13cd3b, 0xbf13cd39, 0xbf13cd3b ),
	VERT( 0x3ee7328d, 0xbf7d0e01, 0xc0e87c6c ),
	NORM( 0xbf13cd3a, 0xbf13cd3a, 0x3f13cd3a ),
	VERT( 0x3ee7328d, 0x416bfb41, 0xc15d101e ),
	NORM( 0xbf2fe3ae, 0x3e720d9b, 0xbf2fe3ae ),
	VERT( 0x3ee7328d, 0x416bfb41, 0xc0e87c6c ),
	NORM( 0xbf2fe3ae, 0x3e720d96, 0x3f2fe3ae ),
	VERT( 0x3ee7328d, 0xbf7d0e01, 0xc15d101e ),
	NORM( 0xbf13cd3b, 0xbf13cd39, 0xbf13cd3b ),
	VERT( 0x414d37d9, 0xbf7d0e01, 0xc0e87c6c ),
	NORM( 0x3f13cd3a, 0xbf13cd3a, 0x3f13cd3a ),
	VERT( 0x414d37d9, 0x416bfb41, 0xc15d101e ),
	NORM( 0x3f2fe3ae, 0x3e720d92, 0xbf2fe3ae ),
	VERT( 0x414d37d9, 0x416bfb41, 0xc0e87c6c ),
	NORM( 0x3f2fe3ae, 0x3e720d91, 0x3f2fe3ae ),
	VERT( 0x414d37d9, 0xbf7d0e01, 0xc15d101e ),
	NORM( 0x3f13cd3a, 0xbf13cd3b, 0xbf13cd3a ),
	VERT( 0x3f96f900, 0xbf7d0e01, 0xc149a6e0 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3f96f900, 0xbf7d0e01, 0xc107a774 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4141924e, 0xbf7d0e01, 0xc107a774 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4141924e, 0xbf7d0e01, 0xc149a6e0 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3f96f900, 0x416bfb41, 0xc149a6e0 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x3f96f900, 0x416bfb41, 0xc107a774 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x4141924e, 0x416bfb41, 0xc107a774 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x4141924e, 0x416bfb41, 0xc149a6e0 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x3f96f900, 0xbf7d0e01, 0xc107a774 ),
	NORM( 0x3f3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x3f96f900, 0xbf7d0e01, 0xc149a6e0 ),
	NORM( 0x3f3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x3f96f900, 0x416bfb41, 0xc149a6e0 ),
	NORM( 0x3f3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x3f96f900, 0x416bfb41, 0xc107a774 ),
	NORM( 0x3f3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x4141924e, 0xbf7d0e01, 0xc107a774 ),
	NORM( 0xbf3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x4141924e, 0x416bfb41, 0xc107a774 ),
	NORM( 0xbf3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x4141924e, 0xbf7d0e01, 0xc149a6e0 ),
	NORM( 0xbf3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x4141924e, 0x416bfb41, 0xc149a6e0 ),
	NORM( 0xbf3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x3ff4255d, 0x3f35c105, 0xc11ef28b ),
	NORM( 0xbf13cd3a, 0xbf13cd3a, 0x3f13cd3a ),
	VERT( 0x3ff4255d, 0x4185cb08, 0xc1325bc9 ),
	NORM( 0xbf3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x3ff4255d, 0x4185cb08, 0xc11ef28b ),
	NORM( 0xbf3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x3ff4255d, 0x3f35c105, 0xc1325bc9 ),
	NORM( 0xbf13cd3a, 0xbf13cd3a, 0xbf13cd3a ),
	VERT( 0x4135ecc2, 0x3f35c105, 0xc11ef28b ),
	NORM( 0x3f13cd3a, 0xbf13cd3a, 0x3f13cd3a ),
	VERT( 0x4135ecc2, 0x4185cb08, 0xc1325bc9 ),
	NORM( 0x3f3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x4135ecc2, 0x4185cb08, 0xc11ef28b ),
	NORM( 0x3f3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x4135ecc2, 0x3f35c105, 0xc1325bc9 ),
	NORM( 0x3f13cd3a, 0xbf13cd3a, 0xbf13cd3a ),
	VERT( 0xc13ae2d7, 0x416bfb41, 0xc11ef28b ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc00deb04, 0x416bfb41, 0xc11ef28b ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc00deb04, 0x416bfb41, 0xc11ef28b ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc13ae2d7, 0x416bfb41, 0xc1325bc9 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc00deb04, 0x416bfb41, 0xc1325bc9 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc13ae2d7, 0xbf7d0e01, 0xc11ef28b ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc00deb04, 0xbf7d0e01, 0xc11ef28b ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc13ae2d7, 0xbf7d0e01, 0xc1325bc9 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc00deb04, 0xbf7d0e01, 0xc1325bc9 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc00deb04, 0x416bfb41, 0xc11ef28b ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc13ae2d7, 0x416bfb41, 0xc11ef28b ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc00deb04, 0xbf7d0e01, 0xc11ef28b ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc13ae2d7, 0xbf7d0e01, 0xc11ef28b ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc00deb04, 0x416bfb41, 0xc1325bc9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc13ae2d7, 0x416bfb41, 0xc1325bc9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc13ae2d7, 0xbf7d0e01, 0xc1325bc9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc00deb04, 0xbf7d0e01, 0xc1325bc9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3c9de192, 0x4288f8e6, 0xc1944246 ),
	NORM( 0xb9f80bfb, 0x39c4ae72, 0xbf7ffffd ),
	VERT( 0x3b8b6ae9, 0x408afe54, 0xc05ca0b6 ),
	NORM( 0x3bcbe25c, 0xbe0be01b, 0x3f7d986e ),
	VERT( 0x3b8b6ae9, 0x408afe54, 0xc05ca0b6 ),
	NORM( 0x3d2cf5a2, 0xbf7fc58c, 0xb7ce88a1 ),
	VERT( 0x3a88d533, 0x41063127, 0xc0871479 ),
	NORM( 0x3cb7a26d, 0xbe009cfd, 0x3f7de86e ),
	VERT( 0x3d20c176, 0x428d7642, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x3d20c176, 0x428d7642, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x3c9de192, 0x428d7652, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x3c9de192, 0x428d7652, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x3d360f33, 0x4297f855, 0xc1586a99 ),
	NORM( 0x39ce00d7, 0x3f7ffcee, 0x3c1e7f12 ),
	VERT( 0x3d360f33, 0x4297f855, 0xc1586a99 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x408cb441, 0x4297cc2d, 0xc0e49cbd ),
	NORM( 0x3d394ea8, 0x3f7fb626, 0xbc6b025b ),
	VERT( 0x408cb441, 0x4297cc2d, 0xc0e49cbd ),
	NORM( 0x3a6f2e53, 0x3b0ad63f, 0xbf7fffd3 ),
	VERT( 0x408cb441, 0x4297cc2d, 0xc0e49cbd ),
	NORM( 0xbf60128f, 0x3ef670b2, 0xbd4036d8 ),
	VERT( 0x3fe17aba, 0x428d7c0e, 0xc0e509ed ),
	NORM( 0xbf60128f, 0x3ef670b1, 0xbd4036d7 ),
	VERT( 0x3fe17aba, 0x428d7c0e, 0xc0e509ed ),
	NORM( 0x3a6f2e52, 0x3b0ad63e, 0xbf7fffd3 ),
	VERT( 0x3fe17aba, 0x428d7c0e, 0xc0e509ed ),
	NORM( 0xbc8e3bbe, 0x3f7ff318, 0xbc1d7ddc ),
	VERT( 0x408cb441, 0x4297cc2d, 0xc1586a99 ),
	NORM( 0x3d75d675, 0x3f7f89db, 0x384bc339 ),
	VERT( 0x408cb441, 0x4297cc2d, 0xc1586a99 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x408cb441, 0x4297cc2d, 0xc1586a99 ),
	NORM( 0xbf6070e2, 0x3ee005a9, 0x3e4c943b ),
	VERT( 0xbd360f33, 0x428d5cc0, 0xc1586a99 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbd360f33, 0x428d5cc0, 0xc1586a99 ),
	NORM( 0x3c0b03d3, 0x3f7ffbe4, 0xbbef843d ),
	VERT( 0x3fe220e9, 0x428d5cc0, 0xc1586a99 ),
	NORM( 0xbf6070e2, 0x3ee005aa, 0x3e4c943b ),
	VERT( 0x3fe220e9, 0x428d5cc0, 0xc1586a99 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3fe220e9, 0x428d5cc0, 0xc1586a99 ),
	NORM( 0xbc8e3bbe, 0x3f7ff318, 0xbc1d7ddc ),
	VERT( 0x409f9d55, 0x4091bbd3, 0xc05ca0b6 ),
	NORM( 0x3b5dfbb8, 0xbe161735, 0x3f7d3bd3 ),
	VERT( 0x409f9d55, 0x4091bbd3, 0xc05ca0b6 ),
	NORM( 0x3e07a7d4, 0xbf7dbe54, 0x3aa40306 ),
	VERT( 0xbb8b6ae9, 0x408afe54, 0xc1905513 ),
	NORM( 0x38ff1ebd, 0xbf7fe74f, 0x3ce0d91e ),
	VERT( 0xbb8b6ae9, 0x408afe54, 0xc1905513 ),
	NORM( 0xb9330b45, 0xbc9e7351, 0xbf7ff3bd ),
	VERT( 0x3fe476ca, 0x40879350, 0xc190a8fd ),
	NORM( 0x3c3fbb2e, 0xbf7fef87, 0x3c9ca9b1 ),
	VERT( 0x4052709e, 0x408c57c5, 0xc1918a35 ),
	NORM( 0x3dc9faeb, 0xbf7ec081, 0xb2b2b556 ),
	VERT( 0x40890fce, 0x408f7fa2, 0xc192d4ca ),
	NORM( 0x3dc9fad1, 0xbf7ec081, 0xb111a1d1 ),
	VERT( 0x40890fce, 0x408f7fa2, 0xc192d4ca ),
	NORM( 0x3dc9fab8, 0xbf7ec081, 0xb5191179 ),
	VERT( 0x409f9d55, 0x4091bbd3, 0xc194449c ),
	NORM( 0x3dc9fab7, 0xbf7ec081, 0xb5191178 ),
	VERT( 0x409f9d55, 0x4091bbd3, 0xc194449c ),
	NORM( 0xba47b2a7, 0x3bfbdfd8, 0xbf7ffe0b ),
	VERT( 0x409f9d55, 0x4091bbd3, 0xc194449c ),
	NORM( 0x3e2897a6, 0xbf7c81ab, 0x00000000 ),
	VERT( 0x409f9d55, 0x4091bbd3, 0xc194449c ),
	NORM( 0x3d0eb599, 0x3c324b7b, 0xbf7fd454 ),
	VERT( 0x409006cf, 0x40903057, 0xc194449c ),
	NORM( 0x3dc9fab7, 0xbf7ec081, 0xb5191178 ),
	VERT( 0x409006cf, 0x40903057, 0xc194449c ),
	NORM( 0xbe970659, 0xbd0e9dc3, 0xbf74727b ),
	VERT( 0x408c8dcb, 0x4297cc91, 0xc13e22cb ),
	NORM( 0x3da178d8, 0x3f7f33fc, 0xb97939e8 ),
	VERT( 0x408c8dcb, 0x4297cc91, 0xc13e22cb ),
	NORM( 0xbb917488, 0xbd65e387, 0x3f7f980d ),
	VERT( 0x408c8dcb, 0x4297cc91, 0xc13e22cb ),
	NORM( 0xbf6070e2, 0x3ee005aa, 0x3e4c943b ),
	VERT( 0x40a0db32, 0x4297b2e0, 0xc13e22cb ),
	NORM( 0xbb917488, 0xbd65e387, 0x3f7f980d ),
	VERT( 0x40a0db32, 0x4297b2e0, 0xc13e22cb ),
	NORM( 0x3dc62f9c, 0x3f7ecc6c, 0xb8bf0165 ),
	VERT( 0x40a0db32, 0x4297b2e0, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40a0db32, 0x4297b2e0, 0xc18c77cd ),
	NORM( 0x3da0932b, 0x3f69a3f6, 0xbecd6152 ),
	VERT( 0xbc9de192, 0x42980c96, 0xc0212227 ),
	NORM( 0xb94bbdac, 0x3f6db3b9, 0x3ebe178a ),
	VERT( 0x40a0db32, 0x4297b2e0, 0xc12f6ebf ),
	NORM( 0x3dc64479, 0x3f7ecc2b, 0x383ffa7a ),
	VERT( 0x40a0db32, 0x4297b2e0, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x408c8dcb, 0x4297cc91, 0xc12f6ebf ),
	NORM( 0xbf60128f, 0x3ef670b1, 0xbd4036d6 ),
	VERT( 0x408c8dcb, 0x4297cc91, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x408c8dcb, 0x4297cc91, 0xc12f6ebf ),
	NORM( 0x3da178d9, 0x3f7f33fc, 0x38d64d84 ),
	VERT( 0x40a0db32, 0x4297b2e0, 0xc0212227 ),
	NORM( 0x3d8e489c, 0x3f6b3e0e, 0x3ec6cda9 ),
	VERT( 0x40a0c4c3, 0x4295b690, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x40a0c4c3, 0x4295b690, 0xc13ff5c3 ),
	NORM( 0x3de90c09, 0x3f7e5650, 0x00000000 ),
	VERT( 0x40a0c4c3, 0x4295b690, 0xc13ff5c3 ),
	NORM( 0x3cd1d9ac, 0x3f7fea26, 0x3b551cdc ),
	VERT( 0x4087b614, 0x4295c454, 0xc13ff5c3 ),
	NORM( 0xbf6070e1, 0x3ee005aa, 0x3e4c943c ),
	VERT( 0x4087b614, 0x4295c454, 0xc13ff5c3 ),
	NORM( 0xbf5ba43e, 0x3f03814b, 0xb3b0fb33 ),
	VERT( 0x4087b614, 0x4295c454, 0xc13ff5c3 ),
	NORM( 0x3cd1d9ab, 0x3f7fea26, 0x3b551cdb ),
	VERT( 0x4087b614, 0x4295c454, 0xc13ff5c3 ),
	NORM( 0xbb917488, 0xbd65e387, 0x3f7f980d ),
	VERT( 0x4087955f, 0x4295c0ea, 0xc12f6ebf ),
	NORM( 0x3cd1d9ac, 0x3f7fea26, 0x3b551cdb ),
	VERT( 0x4087955f, 0x4295c0ea, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4087955f, 0x4295c0ea, 0xc12f6ebf ),
	NORM( 0xbf60128f, 0x3ef670b1, 0xbd4036d7 ),
	VERT( 0x4087955f, 0x4295c0ea, 0xc12f6ebf ),
	NORM( 0xbf5ba43e, 0x3f03814b, 0xb3b0fb32 ),
	VERT( 0x40a0c4c3, 0x4295b690, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40a0c4c3, 0x4295b690, 0xc12f2fab ),
	NORM( 0x3cd1d9ab, 0x3f7fea26, 0x3b551cdb ),
	VERT( 0x40a0c4c3, 0x4295b690, 0xc12f2fab ),
	NORM( 0x3de90c09, 0x3f7e5650, 0x00000000 ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xc13e22cb ),
	NORM( 0xbb917488, 0xbd65e388, 0x3f7f980d ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x3fe17aba, 0x428d7c0e, 0xc12f2fab ),
	NORM( 0xbf60128f, 0x3ef670b1, 0xbd4036d7 ),
	VERT( 0x3fe17aba, 0x428d7c0e, 0xc12f2fab ),
	NORM( 0xbf5ba43e, 0x3f03814b, 0xb3b0fb32 ),
	VERT( 0x3fe17aba, 0x428d7c0e, 0xc13ff5c3 ),
	NORM( 0xbf6070e2, 0x3ee005a9, 0x3e4c943c ),
	VERT( 0x3fe17aba, 0x428d7c0e, 0xc13ff5c3 ),
	NORM( 0xbf5ba43f, 0x3f03814b, 0xb3b0fb32 ),
	VERT( 0x4044cb01, 0x40f9f809, 0xc19341a3 ),
	NORM( 0xbead2709, 0xbeb03bda, 0xbf603918 ),
	VERT( 0x3fd466af, 0x410f64c4, 0xc19431d1 ),
	NORM( 0x3c5e70f8, 0x369db25b, 0xbf7ff9f6 ),
	VERT( 0x3fd466af, 0x410f64c4, 0xc19431d1 ),
	NORM( 0xbe8450ce, 0xbee21b99, 0xbf5bf32d ),
	VERT( 0x40a0dfa0, 0x4193ce02, 0xc193d406 ),
	NORM( 0x389d3666, 0x3f462eb1, 0xbf220c70 ),
	VERT( 0x40a0dfa0, 0x4193ce02, 0xc193d406 ),
	NORM( 0x3ccbffda, 0x3740030b, 0xbf7febad ),
	VERT( 0x40a0dfa0, 0x4106333a, 0xc193d406 ),
	NORM( 0x3cd8660e, 0x3bc26dbe, 0xbf7fe7fa ),
	VERT( 0x4020800a, 0x4106333a, 0xc1941c38 ),
	NORM( 0xbe9800c0, 0xbee5a2a5, 0xbf57d0fa ),
	VERT( 0x4020800a, 0x4106333a, 0xc1941c38 ),
	NORM( 0x3c5c3af0, 0x3b42c3da, 0xbf7ff9ca ),
	VERT( 0x405017c9, 0x40f9f809, 0xc194172a ),
	NORM( 0xbef5404f, 0xbebc7fb8, 0xbf4c0000 ),
	VERT( 0x405017c9, 0x40f9f809, 0xc194172a ),
	NORM( 0x3c64c660, 0x3c630225, 0xbf7ff352 ),
	VERT( 0xbc2904bd, 0x4115a5bc, 0xc194645f ),
	NORM( 0xb8a6f58c, 0xb9a0f042, 0xbf7fffff ),
	VERT( 0xbc2904bd, 0x4115a5bc, 0xc194645f ),
	NORM( 0x3a255181, 0xbefd8e29, 0xbf5e6758 ),
	VERT( 0x3fa2413d, 0x410f64c4, 0xc19341a3 ),
	NORM( 0xbe1b9487, 0xbf033217, 0xbf585bb3 ),
	VERT( 0x3f2e6948, 0x410f64c4, 0xc192ec6f ),
	NORM( 0xbd3ef2b1, 0xbea898ef, 0xbf716d79 ),
	VERT( 0xba95ea1a, 0x410f64c4, 0xc192ce84 ),
	NORM( 0xb8ec47a9, 0xbe995ce7, 0xbf743ee5 ),
	VERT( 0x401676bf, 0x40f9f809, 0xc1925604 ),
	NORM( 0xbe241eee, 0xbe53c37f, 0xbf771521 ),
	VERT( 0x3fa2413d, 0x40f9f809, 0xc191b895 ),
	NORM( 0xbd430ca0, 0xbde4eacc, 0xbf7e1a7f ),
	VERT( 0x4080a996, 0x40c2ddc8, 0xc192ec6f ),
	NORM( 0xbefda573, 0xbe9436fc, 0xbf51aa97 ),
	VERT( 0x4080a996, 0x40c2ddc8, 0xc192ec6f ),
	NORM( 0xbe9c8cdf, 0xbd8c6c06, 0xbf731b56 ),
	VERT( 0x4044cb01, 0x40c2ddc8, 0xc191b895 ),
	NORM( 0xbdf06286, 0xbd7c64da, 0xbf7dbd95 ),
	VERT( 0x3fd466af, 0x40c2ddc8, 0xc190eae1 ),
	NORM( 0xbd42d9bf, 0xbd37daa3, 0xbf7f73ad ),
	VERT( 0xba95ea1a, 0x40c2ddc8, 0xc190a2a5 ),
	NORM( 0xb8ecf9b0, 0xbd28aeaa, 0xbf7fc867 ),
	VERT( 0x3fe476ca, 0x40879350, 0xc190a8fd ),
	NORM( 0xbd90ebe5, 0xbcb51df4, 0xbf7f4ba8 ),
	VERT( 0x3fe476ca, 0x40879350, 0xc190a8fd ),
	NORM( 0xbcb9c5de, 0xbc9ac4a2, 0xbf7fe372 ),
	VERT( 0x4052709e, 0x408c57c5, 0xc1918a35 ),
	NORM( 0xbdeaac5b, 0xbce195f7, 0xbf7e3750 ),
	VERT( 0x40890fce, 0x408f7fa1, 0xc192d4ca ),
	NORM( 0xbec46b6f, 0xbd683872, 0xbf6bf76b ),
	VERT( 0x4088c402, 0x40c2ddc8, 0xc1942b53 ),
	NORM( 0xbf00e002, 0xbe17b794, 0xbf59eb36 ),
	VERT( 0x4088c402, 0x40c2ddc8, 0xc1942b53 ),
	NORM( 0x3c5c0153, 0x3c67bdf7, 0xbf7ff389 ),
	VERT( 0x41a21aaa, 0x40aab392, 0xc12a21e3 ),
	NORM( 0x3f3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0x41a21aaa, 0x40aab392, 0xc12a21e3 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41a21aaa, 0x40aab392, 0xc14297f6 ),
	NORM( 0x3f13cd3a, 0xbf13cd3a, 0xbf13cd3a ),
	VERT( 0x41a21aaa, 0x410ca7f0, 0xc14297f6 ),
	NORM( 0x3f3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x41a21aaa, 0x410ca7f0, 0xc12a21e3 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41a21aaa, 0x410ca7f0, 0xc12a21e3 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbae6a192, 0x40aab392, 0xc12a21e3 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xbae6a192, 0x40aab392, 0xc12a21e3 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbae6a192, 0x410ca7f0, 0xc12a21e3 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbae6a192, 0x410ca7f0, 0xc14297f6 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xbae6a192, 0x40aab392, 0xc14297f6 ),
	NORM( 0x00000000, 0xbf3504f3, 0xbf3504f3 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc13f075f ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc17b0f91 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc17b0f91 ),
	NORM( 0x3f660029, 0x00000000, 0xbee0d141 ),
	VERT( 0x41ab94af, 0x41063127, 0xc17b0f91 ),
	NORM( 0x3f660029, 0x00000000, 0xbee0d141 ),
	VERT( 0x41ab94af, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41ab94af, 0x41063127, 0xc13f075f ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41a24f63, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41a24f63, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41a24f63, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41a24f63, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41a24f63, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41a24f63, 0x41063127, 0xc184bfd8 ),
	NORM( 0x3ebb3a5d, 0x00000000, 0xbf6e4507 ),
	VERT( 0x41a24f63, 0x40839a6b, 0xc184bfd8 ),
	NORM( 0x3ebb3a5d, 0x00000000, 0xbf6e4507 ),
	VERT( 0x41a24f63, 0x40839a6b, 0xc184bfd8 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x415c35f8, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x415c35f8, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x415c35f8, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x415c35f8, 0x41063127, 0xc1894f0a ),
	NORM( 0x3d9dac06, 0x00000000, 0xbf7f3d7d ),
	VERT( 0x415c35f8, 0x40839a6b, 0xc1894f0a ),
	NORM( 0x3d9dac06, 0x00000000, 0xbf7f3d7d ),
	VERT( 0x415c35f8, 0x40839a6b, 0xc1894f0a ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x411846bc, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x411846bc, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411846bc, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411846bc, 0x41063127, 0xc18b96a4 ),
	NORM( 0x3d65d06a, 0x00000000, 0xbf7f98c4 ),
	VERT( 0x411846bc, 0x40839a6b, 0xc18b96a4 ),
	NORM( 0x3d65d06a, 0x00000000, 0xbf7f98c4 ),
	VERT( 0x411846bc, 0x40839a6b, 0xc18b96a4 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4088c4a1, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4088c4a1, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4088c4a1, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4088c4a1, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4088c4a1, 0x41063127, 0xc18d7cf9 ),
	NORM( 0x3ce6c1b0, 0x00000000, 0xbf7fe5ff ),
	VERT( 0x4088c4a1, 0x40839a6b, 0xc18d7cf9 ),
	NORM( 0x3ce6da21, 0x00000000, 0xbf7fe5f9 ),
	VERT( 0x4088c4a1, 0x40839a6b, 0xc18d7cf9 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4088c4a1, 0x40839a6b, 0xc18d7cf9 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xba88d3c3, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xba88d3c3, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xba88d3c3, 0x410656bd, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xba88d3c3, 0x410656bd, 0xc18dde3d ),
	NORM( 0x3c36011d, 0x00000000, 0xbf7ffbf5 ),
	VERT( 0xba88d3c3, 0x40839a6b, 0xc18dde3d ),
	NORM( 0x3c36011d, 0x00000000, 0xbf7ffbf5 ),
	VERT( 0xba88d3c3, 0x40839a6b, 0xc18dde3d ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc102e999 ),
	NORM( 0x3f668a73, 0xbd5fb4c8, 0x3edcd46a ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc102e999 ),
	NORM( 0xbc3213a9, 0xbf7ffc21, 0x00000000 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0xbc3213aa, 0xbf7ffc21, 0x00000000 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41ab94af, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x41ab94af, 0x41063127, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x41ab94af, 0x41063127, 0xc12fd4fe ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41ab94af, 0x41063127, 0xc0f48133 ),
	NORM( 0x3f5e4dfc, 0xbd7f2c1b, 0x3efbe42b ),
	VERT( 0x4188a02d, 0x40851f7c, 0xc0a48f00 ),
	NORM( 0xbb1acb1a, 0xbf7fffd1, 0x00000000 ),
	VERT( 0x4188a02d, 0x40851f7c, 0xc0a48f00 ),
	NORM( 0x3ea13080, 0xbdf433fd, 0x3f710eb5 ),
	VERT( 0x4188a02d, 0x4106f3af, 0xc0933d00 ),
	NORM( 0x3e99b45a, 0xbdf56b40, 0x3f7241e3 ),
	VERT( 0x4188a02d, 0x4106f3af, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4188a02d, 0x4106f3af, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4188a02d, 0x40851f7c, 0xc12fd4fe ),
	NORM( 0xbb84851d, 0xbf7fff77, 0x00000000 ),
	VERT( 0x4188a02d, 0x40851f7c, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4188a02d, 0x40851f7c, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xba88d533, 0x40839a6b, 0xc0986679 ),
	NORM( 0x3cb7a26d, 0xbe009cfe, 0x3f7de86e ),
	VERT( 0xba88d533, 0x40839a6b, 0xc0986679 ),
	NORM( 0x3b363d61, 0xbf7fffbf, 0x00000000 ),
	VERT( 0xba88d533, 0x410656bd, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xba88d533, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xba88d533, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0x3b363d61, 0xbf7fffbf, 0x00000000 ),
	VERT( 0x411ef58d, 0x40b5a3ea, 0xc05ca0b6 ),
	NORM( 0x3ea92661, 0xbf71a03b, 0x00000000 ),
	VERT( 0x411ef58d, 0x40b5a3ea, 0xc05ca0b6 ),
	NORM( 0xbb256a19, 0xbe2e5640, 0x3f7c4303 ),
	VERT( 0x417a1859, 0x4106333a, 0xc038c8c6 ),
	NORM( 0x3edc0d18, 0xbf67266e, 0x00000000 ),
	VERT( 0x417a1859, 0x4106333a, 0xc038c8c6 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x4106333a, 0xc038c8c6 ),
	NORM( 0x3c48284a, 0xbe26160e, 0x3f7c9748 ),
	VERT( 0x411ef58d, 0x4107cd38, 0xc039fcb6 ),
	NORM( 0xbb55ea96, 0xbe31dea3, 0x3f7c1b66 ),
	VERT( 0x411f58fe, 0x4106333a, 0xc1926bda ),
	NORM( 0x3d96b594, 0x3b564f04, 0xbf7f4df6 ),
	VERT( 0x417a1859, 0x4106333a, 0xc18d7d48 ),
	NORM( 0x3ddd4dfb, 0x00000000, 0xbf7e8041 ),
	VERT( 0x417a1859, 0x4106333a, 0xc18d7d48 ),
	NORM( 0x3edc0d18, 0xbf67266e, 0x00000000 ),
	VERT( 0x417a1859, 0x4106333a, 0xc18d7d48 ),
	NORM( 0x3ddd4dab, 0x3b5a8ee6, 0xbf7e7fe4 ),
	VERT( 0x417a1859, 0x4106333a, 0xc18d7d48 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x411ef58d, 0x40b5a3ea, 0xc19283e2 ),
	NORM( 0x3ea5321d, 0xbf724f12, 0x00000000 ),
	VERT( 0x411ef58d, 0x40b5a3ea, 0xc19283e2 ),
	NORM( 0x3d89f4e7, 0x3bef9543, 0xbf7f6963 ),
	VERT( 0x409f9d55, 0x4107cd38, 0xc039fcb6 ),
	NORM( 0x3b4ac0ba, 0xbe1725a1, 0x3f7d31d5 ),
	VERT( 0xb9d1c727, 0x410658d0, 0xc038c8c6 ),
	NORM( 0x3c44676d, 0xbe14cf18, 0x3f7d438b ),
	VERT( 0x41a7460b, 0x4287f395, 0xc12f2fab ),
	NORM( 0x3f31b7dc, 0x3be403dc, 0x3f3840b3 ),
	VERT( 0x41a7460b, 0x4287f395, 0xc12f2fab ),
	NORM( 0x3f3695c8, 0x3a3d6378, 0x3f337098 ),
	VERT( 0x41a79f0d, 0x428d4818, 0xc13ff5c3 ),
	NORM( 0x3f2778b9, 0x3ee794f9, 0xbf1b2ed1 ),
	VERT( 0x41a79f0d, 0x428d4818, 0xc12f2fab ),
	NORM( 0x3f28b326, 0x3eec37a6, 0x3f18131f ),
	VERT( 0x417ac0e0, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417ac0e0, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417a0edb, 0x429147b3, 0xc12f2fab ),
	NORM( 0x3e8f2491, 0x3f75caa9, 0x00000000 ),
	VERT( 0x417a0edb, 0x429147b3, 0xc12f2fab ),
	NORM( 0x3e8eedf0, 0x3f3e504b, 0x3f1b9814 ),
	VERT( 0x417a0edb, 0x429147b3, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417a0edb, 0x429147b3, 0xc13ff5c3 ),
	NORM( 0x3e290f61, 0x3ed90303, 0xbf63fb97 ),
	VERT( 0x417a0edb, 0x429147b3, 0xc13ff5c3 ),
	NORM( 0x3e8f2491, 0x3f75caa9, 0x00000000 ),
	VERT( 0x417ac0e0, 0x4287f395, 0xc13ff5c3 ),
	NORM( 0x3bdc6dbb, 0xbb9d8143, 0xbf7ffdc3 ),
	VERT( 0x411f4f77, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f4f77, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f4f77, 0x42949549, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f4f77, 0x42949549, 0xc12f2fab ),
	NORM( 0x3e8f2491, 0x3f75caa9, 0x00000000 ),
	VERT( 0x411f4f77, 0x42949549, 0xc12f2fab ),
	NORM( 0x3de90c09, 0x3f7e5650, 0x00000000 ),
	VERT( 0x411f4f77, 0x42949549, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f4f77, 0x42949549, 0xc13ff5c3 ),
	NORM( 0x3e8f2491, 0x3f75caa9, 0x00000000 ),
	VERT( 0x411f4f77, 0x42949549, 0xc13ff5c3 ),
	NORM( 0x3de90c09, 0x3f7e5650, 0x00000000 ),
	VERT( 0x411f4f77, 0x42949549, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x411f4f77, 0x42949549, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x411f4f77, 0x4287f395, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x411f4f77, 0x4287f395, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x40a0c4c3, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40a0c4c3, 0x4287f395, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x41af5e3e, 0x42880498, 0xc0c0a60a ),
	NORM( 0x3f7c7f39, 0xb9640e86, 0x3e28d22b ),
	VERT( 0x41af7c50, 0x42880bbf, 0xc0dcf6a4 ),
	NORM( 0x3f7ffdec, 0xbaccc0c2, 0x3bffda70 ),
	VERT( 0x41af7c50, 0x428d0211, 0xc0dcf6a4 ),
	NORM( 0x3f7ccd21, 0x3e1b9818, 0x3d2b24ac ),
	VERT( 0x41af5f9d, 0x428b7543, 0xc0c06e9a ),
	NORM( 0x3f7c42f1, 0x3d2164af, 0x3e29a132 ),
	VERT( 0x41af5e3e, 0x42880498, 0xc12fcbb3 ),
	NORM( 0x397d5ecd, 0xb890f2b4, 0xbf7fffff ),
	VERT( 0x41af5e3e, 0x42880498, 0xc12fcbb3 ),
	NORM( 0xbd503d16, 0x3b39b8a1, 0xbf7faafd ),
	VERT( 0x41af5e3e, 0x42880498, 0xc12fcbb3 ),
	NORM( 0x3f7fffee, 0xbac0c209, 0x00000000 ),
	VERT( 0x41af7c50, 0x428d0211, 0xc12f8958 ),
	NORM( 0xbd503d17, 0x3b39b8a2, 0xbf7faafd ),
	VERT( 0x41af7c50, 0x428d0211, 0xc12f8958 ),
	NORM( 0x3f7cc4a4, 0x3e22329b, 0xba113520 ),
	VERT( 0x41ace428, 0x42880498, 0xc0a2e48d ),
	NORM( 0x3f56e152, 0xb95c4938, 0x3f0b2636 ),
	VERT( 0x41ace40c, 0x428ca5de, 0xc0a2e4e9 ),
	NORM( 0x3f5ca993, 0x3de4fccb, 0x3efd2da0 ),
	VERT( 0x41ace9db, 0x428f0039, 0xc0baa15e ),
	NORM( 0x3f5f6b25, 0x3ee3cbdf, 0x3e4dcf69 ),
	VERT( 0x41acd416, 0x428f0039, 0xc12f8958 ),
	NORM( 0x3f5903ee, 0x3f07cb85, 0xba6b7691 ),
	VERT( 0x41acd416, 0x428f0039, 0xc12f8958 ),
	NORM( 0xbbc8ff35, 0x39b34338, 0xbf7ffec3 ),
	VERT( 0x41acd416, 0x42880bbf, 0xc12f8958 ),
	NORM( 0xbcd1a4c4, 0x3abaf96c, 0xbf7fea78 ),
	VERT( 0x41a2de55, 0x42880498, 0xc07bef33 ),
	NORM( 0x3f1996be, 0xb885cebb, 0x3f4ccef2 ),
	VERT( 0x41a2dea9, 0x428f15a2, 0xc07bde13 ),
	NORM( 0x3f268b79, 0x3e6ebf3e, 0x3f3907d4 ),
	VERT( 0x41a2dea9, 0x42916ffd, 0xc095ffc9 ),
	NORM( 0x3f1b05c7, 0x3f39b81e, 0x3ea77ada ),
	VERT( 0x41a2dea9, 0x42916ffd, 0xc12f8958 ),
	NORM( 0x3b8cdec3, 0x3acfe0e3, 0xbf7fff50 ),
	VERT( 0x41a2dea9, 0x42916ffd, 0xc12f8958 ),
	NORM( 0x3f04b4a9, 0x3f5aeb11, 0xb9af3b39 ),
	VERT( 0x41a2dea9, 0x4287fce2, 0xc12f8958 ),
	NORM( 0x3b498830, 0x3a94b2a0, 0xbf7fffa6 ),
	VERT( 0x41831fc0, 0x42880bbf, 0xbfc6a82c ),
	NORM( 0xbf7fffcb, 0xba1cb434, 0xbb1f85f5 ),
	VERT( 0x41831fc0, 0x42880bbf, 0xbfc6a82c ),
	NORM( 0x3f042190, 0xb873812d, 0x3f5b43fa ),
	VERT( 0x41831fc0, 0x4291ded9, 0xbfc6a82c ),
	NORM( 0x3f0c35d4, 0x3e8ef789, 0x3f49e8ac ),
	VERT( 0x41831fc0, 0x4291ded9, 0xbfc6a82c ),
	NORM( 0xbf7ffefe, 0x00000000, 0xbbb5d5f2 ),
	VERT( 0x41832a65, 0x429405d1, 0xc01f4591 ),
	NORM( 0x3efc0bb3, 0x3f3eee16, 0x3ee5c83f ),
	VERT( 0x41832a65, 0x429405d1, 0xc01f4591 ),
	NORM( 0xbf7fff1f, 0x3ba9c20c, 0x38be922f ),
	VERT( 0x41832a65, 0x429405d1, 0xc12f8958 ),
	NORM( 0x3e9ec4ca, 0x3f736170, 0x00000000 ),
	VERT( 0x41832a65, 0x429405d1, 0xc12f8958 ),
	NORM( 0xbf7ffde7, 0x3bf72804, 0x3b2e7cd4 ),
	VERT( 0x41832a65, 0x429405d1, 0xc12f8958 ),
	NORM( 0x3bc855b4, 0x3b13d07e, 0xbf7ffe9c ),
	VERT( 0x4182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0xbf7fff95, 0x3b4f66e0, 0x3adafce5 ),
	VERT( 0x4182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0x3eaf119a, 0xbdb8d943, 0xbf6f7517 ),
	VERT( 0x4182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0xbf7fffeb, 0xbac8df99, 0xb9d362e0 ),
	VERT( 0x4182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0x3bc855b4, 0x3b13d07e, 0xbf7ffe9c ),
	VERT( 0x41832a65, 0x42880bbf, 0xc01f4591 ),
	NORM( 0xbf7fff77, 0x3b7740df, 0xbabcfbda ),
	VERT( 0x41af7c50, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41af7c50, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0xb98b3e4b, 0xb8750fa1, 0x3f7fffff ),
	VERT( 0x41af7c50, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0x3f7fc5b3, 0xbcb3a594, 0xbd138b1f ),
	VERT( 0x41af7c50, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0xbf7cd06b, 0x3a06e9c0, 0x3e210bd6 ),
	VERT( 0x41af7c50, 0x428d0211, 0xc1821c07 ),
	NORM( 0x3f72a56c, 0x3e045b85, 0xbe952ef4 ),
	VERT( 0x41af7c50, 0x428d0211, 0xc13ea1cb ),
	NORM( 0x3f7cb1b9, 0x3e2407da, 0x00000000 ),
	VERT( 0x41af7c50, 0x428d0211, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41ae417b, 0x42880bbf, 0xc18534fe ),
	NORM( 0x3f6869f5, 0xbd12700f, 0xbed5e0ec ),
	VERT( 0x41ae417b, 0x428b7543, 0xc185427a ),
	NORM( 0x3f62b3ec, 0xbc7a65e1, 0xbeedb5c9 ),
	VERT( 0x41acd416, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41acd416, 0x428f0039, 0xc13ea1cb ),
	NORM( 0x3f5909a8, 0x3f07c26c, 0x00000000 ),
	VERT( 0x41acd416, 0x428f0039, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41acd416, 0x428f0039, 0xc182ffd3 ),
	NORM( 0x3f5cf768, 0x3ed728df, 0xbe8f566c ),
	VERT( 0x41a77a92, 0x428cd941, 0xc18c15cb ),
	NORM( 0x3f1ebedb, 0x3dc762ab, 0xbf474914 ),
	VERT( 0x41a77a92, 0x42880bbf, 0xc18c084f ),
	NORM( 0x3f0c471a, 0xba846bd5, 0xbf562520 ),
	VERT( 0x41a2dea9, 0x4287fce2, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41a2dea9, 0x42916ffd, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41a2dea9, 0x42916ffd, 0xc13ea1cb ),
	NORM( 0x3f04b4aa, 0x3f5aeb11, 0x00000000 ),
	VERT( 0x41a2dea9, 0x42916ffd, 0xc18421ac ),
	NORM( 0x3f09c4c4, 0x3f46d435, 0xbea79ae7 ),
	VERT( 0x41a2dea9, 0x428f4905, 0xc18dde4c ),
	NORM( 0x3edb9a19, 0x3e9e6321, 0xbf594638 ),
	VERT( 0x41a2dea9, 0x4287fce2, 0xc18dd0d0 ),
	NORM( 0x3e3d70e7, 0xba2ec0f9, 0xbf7b94ba ),
	VERT( 0x41832a65, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41832a65, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41832a65, 0x429405d1, 0xc13ea1cb ),
	NORM( 0x3e9ec4ca, 0x3f736170, 0x00000000 ),
	VERT( 0x41832a65, 0x429405d1, 0xc13ea1cb ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41832a65, 0x429405d1, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41832a65, 0x429405d1, 0xc185bcc8 ),
	NORM( 0xbf7ffed1, 0x3b3847b0, 0x3bade34f ),
	VERT( 0x41832a65, 0x429405d1, 0xc185bcc8 ),
	NORM( 0x3e9511aa, 0x3f6482fd, 0xbeb0374f ),
	VERT( 0x41832a65, 0x429405d1, 0xc185bcc8 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41832a65, 0x4291ded9, 0xc18dde4c ),
	NORM( 0x3e16961e, 0x3ee5cd92, 0xbf61a586 ),
	VERT( 0x41832a65, 0x4291ded9, 0xc18dde4c ),
	NORM( 0xbf7ffed1, 0x3b3847b0, 0x3bade350 ),
	VERT( 0x41830e0c, 0x42880498, 0xc18dda24 ),
	NORM( 0x3a2e11ea, 0xb9fe4077, 0xbf7ffffa ),
	VERT( 0x41830e0c, 0x42880498, 0xc18dda24 ),
	NORM( 0xbf7fffbe, 0x3a760cd7, 0x3b2d24e9 ),
	VERT( 0x41832a65, 0x42880bbf, 0xc185bcc8 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41832a65, 0x42880bbf, 0xc185bcc8 ),
	NORM( 0xbf7ffed1, 0x3b3847b1, 0x3bade350 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc13e22cb ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc13e22cb ),
	NORM( 0x3f7fffd9, 0xbb0de495, 0x00000000 ),
	VERT( 0x417a7319, 0x4294482d, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417a7319, 0x4294482d, 0xc13e22cb ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a7319, 0x4294482d, 0xc13e22cb ),
	NORM( 0x3e48ac9c, 0x3f7b093d, 0x00000000 ),
	VERT( 0x411f43d1, 0x42968f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f43d1, 0x42968f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f43d1, 0x42968f4f, 0xc13e22cb ),
	NORM( 0x3e1f4103, 0x3f7ce298, 0x00000000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc18d2296 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc18d2296 ),
	NORM( 0x3e2c5359, 0x3ea84d8c, 0xbf6de78a ),
	VERT( 0x417a7319, 0x4292482d, 0xc18d2296 ),
	NORM( 0x3f7fffd9, 0xbb0de495, 0x00000000 ),
	VERT( 0x417a7319, 0x4294482d, 0xc185c69f ),
	NORM( 0x3e647605, 0x3f652d77, 0xbec57fc8 ),
	VERT( 0x417a7319, 0x4294482d, 0xc185c69f ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc1925bf5 ),
	NORM( 0x3dfea3b7, 0x3ebaaece, 0xbf6c3ded ),
	VERT( 0x411f43d1, 0x42968f4f, 0xc18afffe ),
	NORM( 0x3e2db632, 0x3f66928e, 0xbeccce44 ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xc193d3c4 ),
	NORM( 0x3d4ba9d7, 0x3ebd4388, 0xbf6d86c0 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xbfc6e979 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xbfc6e979 ),
	NORM( 0x39b73b8b, 0x3ae5379a, 0x3f7fffe5 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xbfc6e979 ),
	NORM( 0x3de2bc70, 0x3f308d36, 0x3f373337 ),
	VERT( 0x417a7319, 0x4292482d, 0xbfc6e979 ),
	NORM( 0x3e0ca8d1, 0x3f2ff5b2, 0x3f3695fc ),
	VERT( 0x417a7319, 0x4292482d, 0xbfc6e979 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a7319, 0x4292482d, 0xbfc6e979 ),
	NORM( 0x3f7fffd9, 0xbb0de493, 0x00000000 ),
	VERT( 0x417a7319, 0x4292482d, 0xbfc6e979 ),
	NORM( 0x39b73b8a, 0x3ae53798, 0x3f7fffe5 ),
	VERT( 0x417a7319, 0x4294482d, 0xc0212227 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a7319, 0x4294482d, 0xc0212227 ),
	NORM( 0x3e37a153, 0x3f65b6eb, 0x3ece7df2 ),
	VERT( 0x411f43d1, 0x42968f4f, 0xc0212227 ),
	NORM( 0x3e11e677, 0x3f6971f5, 0x3ec5115f ),
	VERT( 0x417a7319, 0x4292482d, 0xc12f6ebf ),
	NORM( 0x3f7fffd9, 0xbb0de493, 0x00000000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc12f6ebf ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a7319, 0x4292482d, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x417a7319, 0x4294482d, 0xc12f6ebf ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a7319, 0x4294482d, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x417a7319, 0x4294482d, 0xc12f6ebf ),
	NORM( 0x3e48ac9d, 0x3f7b093d, 0x00000000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x411f43d1, 0x42948f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x411f43d1, 0x42968f4f, 0xc12f6ebf ),
	NORM( 0x3e1f4104, 0x3f7ce297, 0x00000000 ),
	VERT( 0x411f43d1, 0x42968f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xbfc6e979 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xbfc6e979 ),
	NORM( 0x38589b64, 0x3ac2f02c, 0x3f7fffed ),
	VERT( 0x40a0db32, 0x4295b2e0, 0xbfc6e979 ),
	NORM( 0x3d58fdff, 0x3f3164ea, 0x3f381309 ),
	VERT( 0xbc9de192, 0x42960c96, 0xbfc6e979 ),
	NORM( 0x38589b64, 0x3ac2f02c, 0x3f7fffed ),
	VERT( 0xbc9de192, 0x42960c96, 0xbfc6e979 ),
	NORM( 0x3cc55532, 0x3f319795, 0x3f38479b ),
	VERT( 0x417a7319, 0x4288134a, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417a7319, 0x4288134a, 0xc13e22cb ),
	NORM( 0x3f7fffd9, 0xbb0de495, 0x00000000 ),
	VERT( 0x417a1859, 0x428805be, 0xc18d7d48 ),
	NORM( 0x3ddd4ded, 0x3abfb669, 0xbf7e802f ),
	VERT( 0x417a1859, 0x428805be, 0xc18d7d48 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x428805be, 0xc18d7d48 ),
	NORM( 0x3f7fffd9, 0xbb0de495, 0x00000000 ),
	VERT( 0x411f43d1, 0x4288134a, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f43d1, 0x4288134a, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f58fe, 0x428805be, 0xc1926bda ),
	NORM( 0x3d934079, 0x3a5a74fa, 0xbf7f565c ),
	VERT( 0x40a0db32, 0x4288134a, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40a0dfa0, 0x428805be, 0xc193d406 ),
	NORM( 0x3cc1fadc, 0x39c3dfa6, 0xbf7fed9f ),
	VERT( 0x417a1859, 0x428805be, 0xbfc45d8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x428805be, 0xbfc45d8e ),
	NORM( 0x3f7fffd9, 0xbb0de494, 0x00000000 ),
	VERT( 0x417a1859, 0x428805be, 0xbfc45d8e ),
	NORM( 0x38f15729, 0x3a16f439, 0x3f7ffffd ),
	VERT( 0x417a7319, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x417a7319, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x3f7fffd9, 0xbb0de493, 0x00000000 ),
	VERT( 0x411f43d1, 0x4288134a, 0xbfc6e979 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x411f43d1, 0x4288134a, 0xbfc6e979 ),
	NORM( 0x39b73b8a, 0x3ae53798, 0x3f7fffe5 ),
	VERT( 0x411f43d1, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x411f43d1, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x40a0db32, 0x4288134a, 0xbfc6e979 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40a0db32, 0x4288134a, 0xbfc6e979 ),
	NORM( 0x38589b65, 0x3ac2f02d, 0x3f7fffed ),
	VERT( 0x40a0db32, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xbce4cb86, 0x4288eb5a, 0xbfc45d8e ),
	NORM( 0xb9bcb53b, 0x396f4555, 0x3f7ffffe ),
	VERT( 0xbce4cb8d, 0x4239e02b, 0xbfc45d8e ),
	NORM( 0x392847aa, 0x3e813009, 0x3f77b783 ),
	VERT( 0x41837e3a, 0x410635fd, 0xc13eadcd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41837e3a, 0x410635fd, 0xc13eadcd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41837e3a, 0x410635fd, 0xc13eadcd ),
	NORM( 0xbf7ffff9, 0xba70dc79, 0x00000000 ),
	VERT( 0x41837e3a, 0x410635fd, 0xc18dda24 ),
	NORM( 0xbf7ffff9, 0xba70dc79, 0x00000000 ),
	VERT( 0x41837e3a, 0x410635fd, 0xc18dda24 ),
	NORM( 0x38c1dbb4, 0x33b664f2, 0xbf800000 ),
	VERT( 0x41837e3a, 0x410635fd, 0xc18dda24 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41a32cfc, 0x410635fd, 0xc18dda24 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41a32cfc, 0x410635fd, 0xc18dda24 ),
	NORM( 0x3e4143e3, 0x3924edd4, 0xbf7b662f ),
	VERT( 0x41a758e6, 0x410635fd, 0xc18c2efa ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41a758e6, 0x410635fd, 0xc18c2efa ),
	NORM( 0x3f0cde5c, 0x3947e908, 0xbf55c1c8 ),
	VERT( 0x41ae3af5, 0x410635fd, 0xc1854ceb ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41ae3af5, 0x410635fd, 0xc1854ceb ),
	NORM( 0x3f6b230f, 0xb8caf970, 0xbeca737f ),
	VERT( 0x41af45ef, 0x410635fd, 0xc13e453c ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41af45ef, 0x410635fd, 0xc13e453c ),
	NORM( 0xbf7cd06d, 0x395bb970, 0x3e210bd9 ),
	VERT( 0x41af45ef, 0x410635fd, 0xc13e453c ),
	NORM( 0x3f7fe61c, 0xb9803aa0, 0xbce63bde ),
	VERT( 0x41af45ef, 0x410635fd, 0xc13eadcd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41af45ef, 0x410635fd, 0xc13eadcd ),
	NORM( 0xbf7cd06d, 0x395bb96f, 0x3e210bd8 ),
	VERT( 0x41af45ef, 0x410635fd, 0xc13eadcd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x418388bb, 0x410635fd, 0xc039a7c8 ),
	NORM( 0xbf7fffc1, 0xba9e1593, 0x3b20e780 ),
	VERT( 0x418388bb, 0x410635fd, 0xc039a7c8 ),
	NORM( 0x3f04384f, 0xbdf543e2, 0x3f590eb9 ),
	VERT( 0x418388bb, 0x410635fd, 0xc039a7c8 ),
	NORM( 0x3a5d8cdc, 0xbf7ffffa, 0x00000000 ),
	VERT( 0x41af5e3e, 0x410635fd, 0xc12fcbb3 ),
	NORM( 0x3a5d8cdc, 0xbf7ffffa, 0x00000000 ),
	VERT( 0x41af5e3e, 0x410635fd, 0xc12fcbb3 ),
	NORM( 0x3a644558, 0x3a3d2981, 0xbf7ffff5 ),
	VERT( 0x41af5e3e, 0x410635fd, 0xc12fcbb3 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41af5e3e, 0x410635fd, 0xc0ebf30a ),
	NORM( 0x3a5d8cdc, 0xbf7ffffa, 0x00000000 ),
	VERT( 0x41af5e3e, 0x410635fd, 0xc0ebf30a ),
	NORM( 0x3f7d33d8, 0xbca8e927, 0x3e157c58 ),
	VERT( 0x41ace43b, 0x410635fd, 0xc0ce314c ),
	NORM( 0x3a5d8cdd, 0xbf7ffffa, 0x00000000 ),
	VERT( 0x41ace43b, 0x410635fd, 0xc0ce314c ),
	NORM( 0x3f58fdb7, 0xbd97fa1d, 0x3f067fbf ),
	VERT( 0x41a2de55, 0x410635fd, 0xc0a94499 ),
	NORM( 0x3f1a2ba8, 0xbde4a8ea, 0x3f4a5cbe ),
	VERT( 0x41a2de55, 0x410635fd, 0xc0a94499 ),
	NORM( 0x3a5d8cdc, 0xbf7ffffa, 0x00000000 ),
	VERT( 0xbd5c0d28, 0x42351c15, 0xc02ca09d ),
	NORM( 0x3b467a25, 0xbf7fffb3, 0x31f5e1c1 ),
	VERT( 0x41651731, 0x423548a7, 0xc18d0b78 ),
	NORM( 0x3b467a25, 0xbf7fffb3, 0x31f5e1c0 ),
	VERT( 0x4165170c, 0x423548a7, 0xc02ca09d ),
	NORM( 0x3b467a25, 0xbf7fffb3, 0x31f5e1c1 ),
	VERT( 0x417a1859, 0x4237b11b, 0xbfc45d8e ),
	NORM( 0x39c3a5cb, 0x3caf65cd, 0x3f7ff0f9 ),
	VERT( 0x417a1859, 0x4237b11b, 0xbfc45d8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x4237b11b, 0xc18d7d48 ),
	NORM( 0x3c2ca4e0, 0xbf44392e, 0xbf2464a7 ),
	VERT( 0x417a1859, 0x4237b11b, 0xc18d7d48 ),
	NORM( 0x3ddd4dfc, 0x00000000, 0xbf7e8041 ),
	VERT( 0x417a1859, 0x4237b11b, 0xc18d7d48 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x411f58fe, 0x4239214d, 0xc1926bda ),
	NORM( 0x3d954c13, 0x00000000, 0xbf7f51a1 ),
	VERT( 0x411f58fe, 0x4239214d, 0xc1926bda ),
	NORM( 0x3bba4e7d, 0xbf45ae32, 0xbf22a76c ),
	VERT( 0x40a0dfa0, 0x4239a08c, 0xc193d406 ),
	NORM( 0x3cc64205, 0x39c813ce, 0xbf7feccd ),
	VERT( 0x40a0dfa0, 0x4239a08c, 0xc193d406 ),
	NORM( 0x3a156641, 0xbf469824, 0xbf218b1f ),
	VERT( 0xbd5c0d2b, 0x4236df7b, 0xbfc2a949 ),
	NORM( 0x398b87ec, 0x3cb546f0, 0x3f7feff3 ),
	VERT( 0xbd5c0d2b, 0x42351c15, 0xbfc2a949 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4179cbf0, 0x423548a7, 0xbfc2a949 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4179cbf0, 0x4236df7b, 0xbfc2a949 ),
	NORM( 0x3a184272, 0x3d088016, 0x3f7fdb96 ),
	VERT( 0x4179cc15, 0x423548a7, 0xc18d0b78 ),
	NORM( 0x3402ba84, 0x00000000, 0xbf800000 ),
	VERT( 0x4179cc15, 0x4236df7b, 0xc18d0b78 ),
	NORM( 0x3bc3ca8e, 0xbede878d, 0xbf668d16 ),
	VERT( 0xbd5c0d2b, 0x42351c15, 0xc18d0b79 ),
	NORM( 0xb799ef89, 0xbf800000, 0x36b8c57e ),
	VERT( 0xbd5c0d2b, 0x42351c15, 0xc18d0b79 ),
	NORM( 0xafe6b4ea, 0x00000000, 0xbf800000 ),
	VERT( 0x411f58fe, 0x4236d6fa, 0xc18cf427 ),
	NORM( 0x3bc264cf, 0xbf459b58, 0xbf22be2d ),
	VERT( 0x40a0dfa0, 0x4236d6fa, 0xc18cf131 ),
	NORM( 0x3a198178, 0xbf469a1c, 0xbf2188b3 ),
	VERT( 0x41830e0c, 0x42880498, 0xc13eadcd ),
	NORM( 0xbf7ffff9, 0xba70d59c, 0x00000000 ),
	VERT( 0x41830e0c, 0x42880498, 0xc13eadcd ),
	NORM( 0xb98b3e4c, 0xb8750fa1, 0x3f7fffff ),
	VERT( 0x41a864b7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41a864b7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41a864b7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x3a4439cf, 0x00000000, 0x3f7ffffb ),
	VERT( 0x41a864b7, 0x41061f96, 0xc13ecffa ),
	NORM( 0x3f34f014, 0x3a21d082, 0xbf3519cb ),
	VERT( 0x41a864b7, 0x41061f96, 0xc13ecffa ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41a864b7, 0x42880695, 0xc13ecffa ),
	NORM( 0x3f3b29df, 0x3a37ebe4, 0xbf2ea8b5 ),
	VERT( 0x41a864b7, 0x42880695, 0xc13ecffa ),
	NORM( 0x3f32a4e6, 0x3a707cec, 0xbf375d17 ),
	VERT( 0x41833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x3f5c3596, 0x3ec43322, 0x3eac4832 ),
	VERT( 0x41833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0xbf7fffc1, 0xba9e1593, 0x3b20e780 ),
	VERT( 0x41833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0xbf7fffcd, 0x3b18733f, 0xba538bc7 ),
	VERT( 0x41833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x3a5d8cdc, 0xbf7ffffa, 0x00000000 ),
	VERT( 0x4182cd99, 0x42880695, 0xc13ecffa ),
	NORM( 0xbaeca565, 0xb8b1c0fc, 0xbf7fffe5 ),
	VERT( 0x4182cd99, 0x42880695, 0xc13ecffa ),
	NORM( 0xbf7fffeb, 0xbac8df98, 0xb9d362e1 ),
	VERT( 0x41833dc7, 0x41061f96, 0xc13ecffa ),
	NORM( 0xbf7fffcd, 0x3b18733f, 0xba538bc7 ),
	VERT( 0x41833dc7, 0x41061f96, 0xc13ecffa ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x41833dc7, 0x41061f96, 0xc13ecffa ),
	NORM( 0xba6c113d, 0x3a64bcb8, 0xbf7ffff3 ),
	VERT( 0x4182f4ab, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x00000000, 0xbe0f4b6a, 0x3f7d7b29 ),
	VERT( 0x4182f4ab, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4182f4ab, 0x41064cdb, 0xc0636c38 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x4182f4ab, 0x429250be, 0xc00cd239 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4182f4ab, 0x429250be, 0xc00cd239 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x4182f4ab, 0x429250be, 0xc00cd239 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x4182f4ab, 0x429250be, 0xc1897c64 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4182f4ab, 0x429250be, 0xc1897c64 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x4182f4ab, 0x429250be, 0xc1897c64 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x4182f4ab, 0x41064cdb, 0xc1897c64 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4182f4ab, 0x41064cdb, 0xc1897c64 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4182f4ab, 0x41064cdb, 0xc1897c64 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417af7bf, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x417af7bf, 0x41064cdb, 0xc0636c38 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417af7bf, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x00000000, 0xbe0f4b6a, 0x3f7d7b29 ),
	VERT( 0x417af7bf, 0x429250be, 0xc00cd239 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417af7bf, 0x429250be, 0xc00cd239 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x417af7bf, 0x429250be, 0xc00cd239 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417af7bf, 0x429250be, 0xc1897c64 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x417af7bf, 0x429250be, 0xc1897c64 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417af7bf, 0x429250be, 0xc1897c64 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x417af7bf, 0x41064cdb, 0xc1897c64 ),
	NORM( 0xbf3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x417af7bf, 0x41064cdb, 0xc1897c64 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4179cbf0, 0x419c7dcc, 0xc179ca2e ),
	NORM( 0x3f800000, 0x00000000, 0x3792a04a ),
	VERT( 0x4179cbf0, 0x419c7dcc, 0xc179ca2e ),
	NORM( 0x3f800000, 0xb52ffcbc, 0x36282667 ),
	VERT( 0xbd5c0d2b, 0x4239f441, 0xc179a7c2 ),
	NORM( 0xaeba8b74, 0x3f7ffffc, 0x3a36a6b5 ),
	VERT( 0x4179cc15, 0x4239f441, 0xc179a7c0 ),
	NORM( 0x3f35099b, 0x3f350049, 0x3a019b03 ),
	VERT( 0xbd5c0d28, 0x419cd6f0, 0xc02ca09d ),
	NORM( 0x3b47f8cf, 0x3f7fffb2, 0x37383ad7 ),
	VERT( 0x4165170c, 0x419c7dcc, 0xc02ca09d ),
	NORM( 0x3b47f8d0, 0x3f7fffb2, 0x37383ad7 ),
	VERT( 0x41651731, 0x419c7dcc, 0xc18d0b78 ),
	NORM( 0x3b47f8cf, 0x3f7fffb2, 0x37383ad7 ),
	VERT( 0x4164cbaa, 0x419c7dcc, 0xc18d0b79 ),
	NORM( 0xbf3504eb, 0x00000000, 0xbf3504fc ),
	VERT( 0x4164cbaa, 0x419c7dcc, 0xc179ca2e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x4164cbaa, 0x4239f441, 0xc179ca2e ),
	NORM( 0xbf3504f3, 0x3f3504f3, 0x00000000 ),
	VERT( 0x4164cbaa, 0x4239f441, 0xc18d0b79 ),
	NORM( 0xbf13cd34, 0x3f13cd39, 0xbf13cd42 ),
	VERT( 0x4179cc15, 0x419c7dcc, 0xc18d0b78 ),
	NORM( 0x35c30850, 0x00000000, 0xbf800000 ),
	VERT( 0x4179cc15, 0x419c7dcc, 0xc18d0b78 ),
	NORM( 0x3403958d, 0xb286f464, 0xbf800000 ),
	VERT( 0x4179cc15, 0x419c7dcc, 0xc18d0b78 ),
	NORM( 0x3f800000, 0x00000000, 0x37250002 ),
	VERT( 0x4179cc15, 0x4239f441, 0xc18d0b78 ),
	NORM( 0x3f800000, 0x00000000, 0x3792a04a ),
	VERT( 0x4179cc15, 0x4239f441, 0xc18d0b78 ),
	NORM( 0x3589e8d4, 0x3f3504b7, 0xbf350530 ),
	VERT( 0x4179cbf0, 0x4239f441, 0xc179ca2e ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x4179cbf0, 0x4239f441, 0xc179ca2e ),
	NORM( 0x3f800000, 0x00000000, 0x3792a04a ),
	VERT( 0xbd5c0d2b, 0x419c7dcc, 0xbfc2a949 ),
	NORM( 0xb8d4f7d8, 0x38791f05, 0x3f800000 ),
	VERT( 0x4179cbf0, 0x419c7dcc, 0xbfc2a949 ),
	NORM( 0x3f800000, 0x00000000, 0x3612fdbf ),
	VERT( 0x4179cbf0, 0x419c7dcc, 0xbfc2a949 ),
	NORM( 0x3ee4d130, 0x38e7c0f6, 0x3f65032d ),
	VERT( 0x4179cbf0, 0x4239f441, 0xbfc2a949 ),
	NORM( 0x3f13bcb8, 0x3f13d1cf, 0x3f13d926 ),
	VERT( 0x417a1859, 0x4197ace4, 0xbfc45d8e ),
	NORM( 0x3f7fb9bc, 0x3d3d9f5d, 0x35957e20 ),
	VERT( 0x417a1859, 0x4197ace4, 0xbfc45d8e ),
	NORM( 0x00000000, 0xbc62add8, 0x3f7ff9ba ),
	VERT( 0xbce4cb8d, 0x41934ec4, 0xbfc45d8e ),
	NORM( 0x00000000, 0xbc637de9, 0x3f7ff9af ),
	VERT( 0x417a1859, 0x4197ace4, 0xc18d7d48 ),
	NORM( 0xb9ea8a73, 0x3f306457, 0xbf398804 ),
	VERT( 0x417a1859, 0x4197ace4, 0xc18d7d48 ),
	NORM( 0x3f7fc850, 0x3d28d101, 0x358516fd ),
	VERT( 0x417a1859, 0x4197ace4, 0xc18d7d48 ),
	NORM( 0x3ddd4dfc, 0x00000000, 0xbf7e8041 ),
	VERT( 0x411f58fe, 0x4194cc80, 0xc1926bda ),
	NORM( 0x3d954c12, 0x00000000, 0xbf7f51a1 ),
	VERT( 0x411f58fe, 0x4194cc80, 0xc1926bda ),
	NORM( 0xb9a2a4a3, 0x3f3c0229, 0xbf2dbfd2 ),
	VERT( 0xbd5c0d2b, 0x41995025, 0xbfc2a949 ),
	NORM( 0x00000000, 0xbc61bb47, 0x3f7ff9c8 ),
	VERT( 0x4179cbf0, 0x41995025, 0xbfc2a949 ),
	NORM( 0x3f7fbf4c, 0x3d35f744, 0x3612d898 ),
	VERT( 0x4179cbf0, 0x41995025, 0xbfc2a949 ),
	NORM( 0x00000000, 0xbc6aa882, 0x3f7ff947 ),
	VERT( 0x4179cc15, 0x41995025, 0xc18d0b78 ),
	NORM( 0x3f7fb19b, 0x3d484852, 0x3612d0bc ),
	VERT( 0x4179cc15, 0x41995025, 0xc18d0b78 ),
	NORM( 0xb9ea8a73, 0x3f306457, 0xbf398804 ),
	VERT( 0x4179cc15, 0x41995025, 0xc18d0b78 ),
	NORM( 0x3403958d, 0xb286f464, 0xbf800000 ),
	VERT( 0xbd5c0d2b, 0x41995025, 0xc18d0b79 ),
	NORM( 0x3403958d, 0xb286f464, 0xbf800000 ),
	VERT( 0xbd5c0d2b, 0x41995025, 0xc18d0b79 ),
	NORM( 0x39aada3f, 0x3f469721, 0xbf218c60 ),
	VERT( 0x411f58fe, 0x41996127, 0xc18cf427 ),
	NORM( 0xb9a652ca, 0x3f3b6f7b, 0xbf2e5e04 ),
	VERT( 0x40a0dfa0, 0x41996127, 0xc18cf131 ),
	NORM( 0x389208a1, 0x3f462c78, 0xbf220f28 ),
	VERT( 0xbd20c176, 0x428d7642, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xbd20c176, 0x428d7642, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xbc9de192, 0x428d7652, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xbc9de192, 0x428d7652, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x417b4b5e, 0x42880df1, 0xbfc0e77b ),
	NORM( 0xbae04be3, 0x398d0e76, 0x3f7fffe7 ),
	VERT( 0x00000000, 0x41930e85, 0xbfc0e77b ),
	NORM( 0xbae04be2, 0x398d0e75, 0x3f7fffe7 ),
	VERT( 0x417e2ecf, 0x419763af, 0xbfc0e77b ),
	NORM( 0xbae04be3, 0x398d0e76, 0x3f7fffe7 ),
	VERT( 0xbcddb580, 0x418fbf3f, 0xc19464dc ),
	NORM( 0xb89bd288, 0xb803900a, 0xbf800000 ),
	VERT( 0x40a0dfa0, 0x418fbf3f, 0xc193d406 ),
	NORM( 0x3ccb45d3, 0x00000000, 0xbf7febd2 ),
	VERT( 0x409cd1e9, 0x418fbf3f, 0xc193d7a7 ),
	NORM( 0x3c652877, 0x00000000, 0xbf7ff997 ),
	VERT( 0x409cd1e9, 0x418fbf3f, 0xc193d7a7 ),
	NORM( 0x3c4d9e51, 0x39bc297c, 0xbf7ffad6 ),
	VERT( 0x409cd1e9, 0x418fbf3f, 0xc193d7a7 ),
	NORM( 0x3c5b4113, 0x3921ba64, 0xbf7ffa21 ),
	VERT( 0x409b20ad, 0x418fbf3f, 0xc193d903 ),
	NORM( 0x3c59d19b, 0x393373f1, 0xbf7ffa35 ),
	VERT( 0x41af45ef, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0xbf7cd06b, 0x3a06e9c1, 0x3e210bd7 ),
	VERT( 0x41af45ef, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0xb98b3e4b, 0xb8750fa0, 0x3f7fffff ),
	VERT( 0x41af45ef, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41af45ef, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0xbf7cd06d, 0x395bb96f, 0x3e210bd8 ),
	VERT( 0x41836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0xbf7ffff9, 0xba70d90b, 0x00000000 ),
	VERT( 0x41836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0xbf7ad1ce, 0xbd8ab652, 0xbe40de85 ),
	VERT( 0x41836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0xbebd79b7, 0x3eb7978f, 0xbf5b652c ),
	VERT( 0x41836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0xbf7fffcd, 0x3b18733f, 0xba538bc7 ),
	VERT( 0x41836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0xbf7fffeb, 0xbac8df98, 0xb9d362e0 ),
	VERT( 0x41836c33, 0x418fbf3f, 0xc18dda24 ),
	NORM( 0xbf7ffff9, 0xba70d90b, 0x00000000 ),
	VERT( 0x41836c33, 0x418fbf3f, 0xc18dda24 ),
	NORM( 0x391163b7, 0x37a144d9, 0xbf800000 ),
	VERT( 0x41a32065, 0x418fbf3f, 0xc18dd8a4 ),
	NORM( 0x3e3fbd83, 0x392e1e18, 0xbf7b78dd ),
	VERT( 0x41a75e4f, 0x418fbf3f, 0xc18c28c4 ),
	NORM( 0x3f0ca56e, 0x39509b4d, 0xbf55e742 ),
	VERT( 0x41ae3c01, 0x418fbf3f, 0xc1854913 ),
	NORM( 0x3f6b1ff0, 0xb917fd48, 0xbeca81fe ),
	VERT( 0x41af4eab, 0x418fbf3f, 0xc13e401c ),
	NORM( 0x3f7fe415, 0xb9b88eda, 0xbcef1486 ),
	VERT( 0x41af4eab, 0x418fbf3f, 0xc13e401c ),
	NORM( 0xbf7cd06c, 0x3a06e9c0, 0x3e210bd6 ),
	VERT( 0x41af4eab, 0x418fbf3f, 0xc13e401c ),
	NORM( 0xbf7cd06d, 0x395bb970, 0x3e210bd8 ),
	VERT( 0x41a2de55, 0x418fbf3f, 0xc07bef33 ),
	NORM( 0x3f191c07, 0xbd6609ee, 0x3f4ca99f ),
	VERT( 0x418377de, 0x418fbf3f, 0xbfc63228 ),
	NORM( 0xbf7fffe0, 0xba9d632f, 0x3ac83c3e ),
	VERT( 0x418377de, 0x418fbf3f, 0xbfc63228 ),
	NORM( 0x3f0494bf, 0xbd6fc567, 0x3f5a7afd ),
	VERT( 0x41836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0xbf7fffcd, 0x3b18733f, 0xba538bc7 ),
	VERT( 0x41836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0xbf7fffdf, 0xba9d6b2d, 0x3acdae7e ),
	VERT( 0x41836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0x3f7785cb, 0xbe82aaf6, 0xba38ce55 ),
	VERT( 0x41836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0xbf7fffeb, 0xbac8df98, 0xb9d362e0 ),
	VERT( 0x41836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0x3f69d583, 0x3ed06666, 0xb9963340 ),
	VERT( 0x41af5e3e, 0x418fbf3f, 0xc12fcbb3 ),
	NORM( 0x3a644559, 0x3a3d2980, 0xbf7ffff5 ),
	VERT( 0x41af5e3e, 0x418fbf3f, 0xc12fcbb3 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41af5e3e, 0x418fbf3f, 0xc12fcbb3 ),
	NORM( 0x397d5ece, 0xb890f2b4, 0xbf7fffff ),
	VERT( 0x41af5e3e, 0x418fbf3f, 0xc0c0a60a ),
	NORM( 0x3f7c639c, 0xbc48e099, 0x3e2aec06 ),
	VERT( 0x41ace438, 0x418fbf3f, 0xc0a2e456 ),
	NORM( 0x3f558a2a, 0xbd2022ff, 0x3f0cd7b1 ),
	VERT( 0x41a864b7, 0x418fbf3f, 0xc12fed8c ),
	NORM( 0x3f355e89, 0x3a3b2703, 0x3f34ab2b ),
	VERT( 0x41a864b7, 0x418fbf3f, 0xc12fed8c ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41a864b7, 0x418fbf3f, 0xc12fed8c ),
	NORM( 0x3a4439cf, 0x00000000, 0x3f7ffffb ),
	VERT( 0x41a864b7, 0x418fbf3f, 0xc13ecffa ),
	NORM( 0x3f34db0e, 0x3a73d706, 0xbf352ec4 ),
	VERT( 0x41a864b7, 0x418fbf3f, 0xc13ecffa ),
	NORM( 0x3f34f014, 0x3a21d082, 0xbf3519cb ),
	VERT( 0x4182f4ab, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0x00000000, 0xbd8fa5fc, 0x3f7f5e97 ),
	VERT( 0x4182f4ab, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x4182f4ab, 0x418fbf3f, 0xc1897c64 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4182f4ab, 0x418fbf3f, 0xc1897c64 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417af7bf, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0x00000000, 0xbd8fa5fc, 0x3f7f5e97 ),
	VERT( 0x417af7bf, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417af7bf, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417af7bf, 0x418fbf3f, 0xc1897c64 ),
	NORM( 0xbee4f92e, 0x00000000, 0xbf64f92e ),
	VERT( 0x417af7bf, 0x418fbf3f, 0xc1897c64 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x418fbf3f, 0xbfc45d8e ),
	NORM( 0x3c07c5ba, 0xbd92c5d3, 0x3f7f553a ),
	VERT( 0x417a1859, 0x418fbf3f, 0xbfc45d8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x418fbf3f, 0xbfc45d8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x418fbf3f, 0xc18d7d48 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x418fbf3f, 0xc18d7d48 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x417a1859, 0x418fbf3f, 0xc18d7d48 ),
	NORM( 0x3ddd4dfb, 0x00000000, 0xbf7e8041 ),
	VERT( 0x417a1859, 0x418fbf3f, 0xc18d7d48 ),
	NORM( 0x3ddd4dfb, 0x00000000, 0xbf7e8041 ),
	VERT( 0x411f58fe, 0x418fbf3f, 0xc1926bda ),
	NORM( 0x3d11f6e5, 0x00000000, 0xbf7fd660 ),
	VERT( 0x411f58fe, 0x418fbf3f, 0xc1926bda ),
	NORM( 0x3d933d91, 0x00000000, 0xbf7f5668 ),
	VERT( 0x411f58fe, 0x418fbf3f, 0xc1926bda ),
	NORM( 0x3ddd4dfb, 0x00000000, 0xbf7e8041 ),
	VERT( 0x3ce4cb8d, 0x4181503f, 0xbfc45d8e ),
	NORM( 0x3b2d0d05, 0xbda1487e, 0x3f7f343c ),
	VERT( 0xc17a7319, 0x4288134a, 0xc13e22cb ),
	NORM( 0xbf7fff46, 0xbb8cfc84, 0xbaf9e4f6 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc13e22cb ),
	NORM( 0xbf7fff46, 0xbb8cfc85, 0xbaf9e4f5 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc18d2296 ),
	NORM( 0xbf7fff46, 0xbb8cfc84, 0xbaf9e4f4 ),
	VERT( 0xc17a1859, 0x428805be, 0xc18d7d48 ),
	NORM( 0xbf7fff46, 0xbb8cfc85, 0xbaf9e4f6 ),
	VERT( 0xc17af7bf, 0x429250be, 0xc1897c64 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17af7bf, 0x429250be, 0xc00cd239 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17af7bf, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17af7bf, 0x418fbf3f, 0xc1897c64 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc13e22cb ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc13e22cb ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc185c69f ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc18d2296 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17af7bf, 0x429250be, 0xc00cd239 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc17af7bf, 0x429250be, 0xc1897c64 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x429250be, 0xc1897c64 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x429250be, 0xc00cd239 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc17a1859, 0x428805be, 0xbfc45d8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x428805be, 0xc18d7d48 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x4237b11b, 0xc18d7d48 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x4237b11b, 0xbfc45d8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x41064cdb, 0xc1897c64 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc182f4ab, 0x41064cdb, 0xc1897c64 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x418fbf3f, 0xc1897c64 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17af7bf, 0x418fbf3f, 0xc1897c64 ),
	NORM( 0x3ee4f92e, 0x00000000, 0xbf64f92e ),
	VERT( 0xc17af7bf, 0x41064cdb, 0xc1897c64 ),
	NORM( 0x3f3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0xc17af7bf, 0x41064cdb, 0xc1897c64 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc17af7bf, 0x429250be, 0xc1897c64 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc182f4ab, 0x429250be, 0xc1897c64 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17af7bf, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17af7bf, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc17af7bf, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x4197ace4, 0xc18d7d48 ),
	NORM( 0xbf7fc86b, 0x3d28a861, 0x3504ea8f ),
	VERT( 0xc17a1859, 0x418fbf3f, 0xc18d7d48 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x418fbf3f, 0xc18d7d48 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x418fbf3f, 0xbfc45d8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x418fbf3f, 0xbfc45d8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x4197ace4, 0xbfc45d8e ),
	NORM( 0xbf7fb9de, 0x3d3d71ba, 0x35154c39 ),
	VERT( 0xc17a1859, 0x4106333a, 0xc038c8c6 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a1859, 0x4106333a, 0xc18d7d48 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc179cbf0, 0x419c7dcc, 0xc179ca2e ),
	NORM( 0xbf800000, 0x00000000, 0x3792a04a ),
	VERT( 0xc179cbf0, 0x4239f441, 0xc179ca2e ),
	NORM( 0xbf800000, 0x00000000, 0x3792a04a ),
	VERT( 0xc179cc15, 0x4239f441, 0xc18d0b78 ),
	NORM( 0xbf800000, 0x00000000, 0x3792a04a ),
	VERT( 0xc179cc15, 0x419c7dcc, 0xc18d0b78 ),
	NORM( 0xbf800000, 0x00000000, 0x37250002 ),
	VERT( 0xc179cbf0, 0x41995025, 0xbfc2a949 ),
	NORM( 0xbf7fbf6b, 0x3d35cb79, 0x35dddebe ),
	VERT( 0xc179cbf0, 0x419c7dcc, 0xbfc2a949 ),
	NORM( 0xbf800000, 0x00000000, 0x3612fdbf ),
	VERT( 0xc179cc15, 0x41995025, 0xc18d0b78 ),
	NORM( 0xbf7fb1c1, 0x3d48181f, 0x35d69444 ),
	VERT( 0xc1830e0c, 0x42880498, 0xc13eadcd ),
	NORM( 0x3f7fffee, 0xbaa0a687, 0xba538be5 ),
	VERT( 0xc1830e0c, 0x42880498, 0xc13eadcd ),
	NORM( 0x3aeb798e, 0x00000000, 0xbf7fffe5 ),
	VERT( 0xc1830e0c, 0x42880498, 0xc13eadcd ),
	NORM( 0x39c19467, 0x00000000, 0x3f7fffff ),
	VERT( 0xc1830e0c, 0x42880498, 0xc13eadcd ),
	NORM( 0x3f800000, 0x38f5683f, 0x00000000 ),
	VERT( 0xc1830e0c, 0x42880498, 0xc13eadcd ),
	NORM( 0x00000000, 0xb7f5afae, 0x3f800000 ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x3f7ffff9, 0xba70d90b, 0x00000000 ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc18dda24 ),
	NORM( 0x3f7ffff9, 0xba70d90b, 0x00000000 ),
	VERT( 0xc1837e3a, 0x410635fd, 0xc18dda24 ),
	NORM( 0x3f7ffff9, 0xba70dc79, 0x00000000 ),
	VERT( 0xc1837e3a, 0x410635fd, 0xc13eadcd ),
	NORM( 0x3f7ffff9, 0xba70dc79, 0x00000000 ),
	VERT( 0xc182f4ab, 0x429250be, 0xc1897c64 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x429250be, 0xc00cd239 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x418fbf3f, 0xc1897c64 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc182f4ab, 0x41064cdb, 0xc1897c64 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1832a65, 0x42880bbf, 0xc185bcc8 ),
	NORM( 0x3f7ffff0, 0x3a9ec56e, 0xba308fe3 ),
	VERT( 0xc1832a65, 0x4291ded9, 0xc18dde4c ),
	NORM( 0x3f7fffe3, 0x3aa63017, 0xbaaff4fe ),
	VERT( 0xc1832a65, 0x429405d1, 0xc185bcc8 ),
	NORM( 0x3f7fffe3, 0x3aa63018, 0xbaaff4ff ),
	VERT( 0xc17a1859, 0x4197ace4, 0xc18d7d48 ),
	NORM( 0xbc2ca54b, 0x3f44391c, 0xbf2464bd ),
	VERT( 0xc179cc15, 0x41995025, 0xc18d0b78 ),
	NORM( 0xbc2ca54b, 0x3f44391b, 0xbf2464bd ),
	VERT( 0xc11f58fe, 0x41996127, 0xc18cf427 ),
	NORM( 0xbbc26559, 0x3f459b48, 0xbf22be40 ),
	VERT( 0xc11f58fe, 0x4194cc80, 0xc1926bda ),
	NORM( 0xbbba4f03, 0x3f45ae21, 0xbf22a780 ),
	VERT( 0xc0a0dfa0, 0x41996127, 0xc18cf131 ),
	NORM( 0xba1982e7, 0x3f469a0f, 0xbf2188c4 ),
	VERT( 0xc0a0dfa0, 0x4193ce02, 0xc193d406 ),
	NORM( 0xba1567ac, 0x3f469816, 0xbf218b30 ),
	VERT( 0x3d5c0d2b, 0x41995025, 0xc18d0b79 ),
	NORM( 0x392d13a0, 0x3f463b73, 0xbf21fcd4 ),
	VERT( 0xbce4cb8d, 0x41934ec4, 0xc19464e2 ),
	NORM( 0x3980140c, 0x3f4668a7, 0xbf21c572 ),
	VERT( 0xbce4cb8d, 0x41934ec4, 0xc19464e2 ),
	NORM( 0xb8c5906e, 0xb812b4b9, 0xbf800000 ),
	VERT( 0xc179cc15, 0x41995025, 0xc18d0b78 ),
	NORM( 0xb402ba83, 0xa75e6b7a, 0xbf800000 ),
	VERT( 0xc179cc15, 0x419c7dcc, 0xc18d0b78 ),
	NORM( 0xb402ba83, 0xa75e6b7c, 0xbf800000 ),
	VERT( 0x3d5c0d2b, 0x41995025, 0xc18d0b79 ),
	NORM( 0xb402ba83, 0xa75e6b7a, 0xbf800000 ),
	VERT( 0xc0a0dfa0, 0x4193ce02, 0xc193d406 ),
	NORM( 0xbcccc7c8, 0xb7c7f7bb, 0xbf7feb85 ),
	VERT( 0xc0a0dfa0, 0x4193ce02, 0xc193d406 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xc1a24f63, 0x40839a6b, 0xc184bfd8 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1a24f63, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc17b0f91 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc15c35f8, 0x40839a6b, 0xc1894f0a ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc15c35f8, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc11846bc, 0x40839a6b, 0xc18b96a4 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc11846bc, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc088c4a1, 0x40839a6b, 0xc18d7cf9 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc088c4a1, 0x40839a6b, 0xc18d7cf9 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc088c4a1, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc088c4a1, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3a88d3c3, 0x40839a6b, 0xc18dde3d ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3a88d3c3, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc188a02d, 0x40851f7c, 0xc12fd4fe ),
	NORM( 0x3b84851d, 0xbf7fff77, 0x00000000 ),
	VERT( 0xc188a02d, 0x40851f7c, 0xc0a48f00 ),
	NORM( 0x3b1acb1a, 0xbf7fffd1, 0x00000000 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc102e999 ),
	NORM( 0x3c3213a9, 0xbf7ffc21, 0x00000000 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0x3c3213aa, 0xbf7ffc21, 0x00000000 ),
	VERT( 0x3a88d533, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0xbb363d61, 0xbf7fffbf, 0x00000000 ),
	VERT( 0x3a88d533, 0x40839a6b, 0xc0986679 ),
	NORM( 0xbb363d61, 0xbf7fffbf, 0x00000000 ),
	VERT( 0xc09f9d55, 0x4091bbd3, 0xc05ca0b6 ),
	NORM( 0xbdc9fac9, 0xbf7ec081, 0x00000000 ),
	VERT( 0xc09f9d55, 0x4091bbd3, 0xc05ca0b6 ),
	NORM( 0xbe083202, 0xbf7db9b3, 0x3aa75d55 ),
	VERT( 0xbb8b6ae9, 0x408afe54, 0xc05ca0b6 ),
	NORM( 0xbd2cf5a5, 0xbf7fc58c, 0x00000000 ),
	VERT( 0xbfe476ca, 0x40879350, 0xc190a8fd ),
	NORM( 0xbc3d3fa8, 0xbf7fef9a, 0x3c9cef4a ),
	VERT( 0xc0890fce, 0x408f7fa2, 0xc192d4ca ),
	NORM( 0xbdc9fac6, 0xbf7ec081, 0xb3f33d10 ),
	VERT( 0xc0890fce, 0x408f7fa2, 0xc192d4ca ),
	NORM( 0xbdc9fad9, 0xbf7ec081, 0xb1a148c2 ),
	VERT( 0xc0890fce, 0x408f7fa2, 0xc192d4ca ),
	NORM( 0x3eb490d3, 0xbd6ec6fe, 0xbf6f161c ),
	VERT( 0xc11ef58d, 0x40b5a3ea, 0xc19283e2 ),
	NORM( 0xbea5321d, 0xbf724f12, 0x00000000 ),
	VERT( 0xc11ef58d, 0x40b5a3ea, 0xc05ca0b6 ),
	NORM( 0xbea92661, 0xbf71a03b, 0x00000000 ),
	VERT( 0xc17a1859, 0x4106333a, 0xc038c8c6 ),
	NORM( 0xbedc0d18, 0xbf67266e, 0x00000000 ),
	VERT( 0xc17a1859, 0x4106333a, 0xc18d7d48 ),
	NORM( 0xbedc0d18, 0xbf67266e, 0x00000000 ),
	VERT( 0xc0a0dfa0, 0x4239a08c, 0xc193d406 ),
	NORM( 0xb8a4c9df, 0xbf462e6b, 0xbf220cc5 ),
	VERT( 0x3ce4cb8d, 0x4239e02b, 0xc19464e2 ),
	NORM( 0xba4496c1, 0x3a17ace8, 0xbf7ffff8 ),
	VERT( 0x3ce4cb8d, 0x4239e02b, 0xc19464e2 ),
	NORM( 0xb9809c3e, 0xbf46670b, 0xbf21c76c ),
	VERT( 0xbd5c0d2b, 0x4236df7b, 0xc18d0b79 ),
	NORM( 0xb912cd8d, 0xbedbdf3e, 0xbf673156 ),
	VERT( 0xc0a0dfa0, 0x4236d6fa, 0xc18cf131 ),
	NORM( 0xb89971a7, 0xbf462c33, 0xbf220f7c ),
	VERT( 0xc179cc15, 0x4236df7b, 0xc18d0b78 ),
	NORM( 0x3981bcab, 0xbec33281, 0xbf6caa56 ),
	VERT( 0xc179cc15, 0x423548a7, 0xc18d0b78 ),
	NORM( 0xb403a1a2, 0x00000000, 0xbf800000 ),
	VERT( 0xc17a1859, 0x4237b11b, 0xc18d7d48 ),
	NORM( 0x39ea89a2, 0xbf306474, 0xbf3987e8 ),
	VERT( 0xc11f58fe, 0x4239214d, 0xc1926bda ),
	NORM( 0x39a2a43a, 0xbf3c023f, 0xbf2dbfba ),
	VERT( 0xc11f58fe, 0x4236d6fa, 0xc18cf427 ),
	NORM( 0x39a6525b, 0xbf3b6f91, 0xbf2e5ded ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f43d1, 0x42968f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f4f77, 0x42949549, 0xc12f2fab ),
	NORM( 0xbe8f2491, 0x3f75caa9, 0x00000000 ),
	VERT( 0xc11f4f77, 0x42949549, 0xc13ff5c3 ),
	NORM( 0xbe8f2491, 0x3f75caa9, 0x00000000 ),
	VERT( 0xc17a0edb, 0x429147b3, 0xc13ff5c3 ),
	NORM( 0xbe8f2491, 0x3f75caa9, 0x00000000 ),
	VERT( 0xc17a0edb, 0x429147b3, 0xc12f2fab ),
	NORM( 0xbe8f2491, 0x3f75caa9, 0x00000000 ),
	VERT( 0xc1a864b7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x00000000, 0xb9bdaf25, 0x3f7fffff ),
	VERT( 0xc1a864b7, 0x41061f96, 0xc12fed8c ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1a864b7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1a864b7, 0x418fbf3f, 0xc12fed8c ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1a864b7, 0x418fbf3f, 0xc12fed8c ),
	NORM( 0xbf7f4fa7, 0x3b327fa8, 0x3d96095c ),
	VERT( 0xc1a864b7, 0x418fbf3f, 0xc12fed8c ),
	NORM( 0x3b8cae4b, 0x390a6e33, 0x3f7fff65 ),
	VERT( 0xc1a864b7, 0x418fbf3f, 0xc12fed8c ),
	NORM( 0x00000000, 0xb9bdaf25, 0x3f7fffff ),
	VERT( 0xc1a864b7, 0x418fbf3f, 0xc13ecffa ),
	NORM( 0x00000000, 0x39e42ddb, 0xbf7ffffe ),
	VERT( 0xc1a864b7, 0x418fbf3f, 0xc13ecffa ),
	NORM( 0xbf7f4fa7, 0x3b327fa8, 0x3d96095c ),
	VERT( 0xc1a864b7, 0x418fbf3f, 0xc13ecffa ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1a864b7, 0x418fbf3f, 0xc13ecffa ),
	NORM( 0x3aeb798e, 0x00000000, 0xbf7fffe5 ),
	VERT( 0xc1a864b7, 0x41061f96, 0xc13ecffa ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1a864b7, 0x41061f96, 0xc13ecffa ),
	NORM( 0x00000000, 0x39e42ddb, 0xbf7ffffe ),
	VERT( 0xc1a864b7, 0x41061f96, 0xc13ecffa ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0xba633c00, 0x00000000, 0xbf7ffffa ),
	VERT( 0xc1836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0x3f7fffee, 0xbaa0a687, 0xba538be4 ),
	VERT( 0xc1836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0x3f7fff97, 0xba153a20, 0x3b64fa19 ),
	VERT( 0xc1836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0x3b8cae4b, 0x390a6e32, 0x3f7fff65 ),
	VERT( 0xc1836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0xbf7ffff6, 0xba8cdbdb, 0x3931c7de ),
	VERT( 0xc1836aaa, 0x418fbf3f, 0xc12fd123 ),
	NORM( 0x3f7fffd3, 0x3b15dd62, 0xb9d362cc ),
	VERT( 0xc1833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0xba7c39d5, 0xbf7ffff7, 0x39ec3cc3 ),
	VERT( 0xc1833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x3f7fffd3, 0x3b15dd62, 0xb9d362cc ),
	VERT( 0xc1833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0x3f7fff53, 0x39ce2fe3, 0x3b9424c1 ),
	VERT( 0xc1833dc7, 0x41061f96, 0xc12fed8c ),
	NORM( 0xbf6bba2a, 0xba9430a9, 0x3ec7af8f ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x3f7fffee, 0xbaa0a688, 0xba538be4 ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x3aeb798e, 0x00000000, 0xbf7fffe5 ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x00000000, 0xb7f5afad, 0x3f800000 ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x00000000, 0x39e42dda, 0xbf7ffffe ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x3f7fffd3, 0x3b15dd62, 0xb9d362cd ),
	VERT( 0xc1833dc7, 0x41061f96, 0xc13ecffa ),
	NORM( 0x00000000, 0x39e42ddb, 0xbf7ffffe ),
	VERT( 0xc1a864b7, 0x42880695, 0xc13ecffa ),
	NORM( 0xbf7f304b, 0x3d1dbcb7, 0x3d8e901e ),
	VERT( 0xc1a864b7, 0x42880695, 0xc13ecffa ),
	NORM( 0xbae00300, 0xbcdefcc9, 0xbf7fe79f ),
	VERT( 0xc1a864b7, 0x42880695, 0xc13ecffa ),
	NORM( 0xbf7f4fa7, 0x3b327fa8, 0x3d96095c ),
	VERT( 0xc1a864b7, 0x42880695, 0xc13ecffa ),
	NORM( 0x3aeb798e, 0x00000000, 0xbf7fffe5 ),
	VERT( 0xc1a7460b, 0x4287f395, 0xc12f2fab ),
	NORM( 0x3b8cae4c, 0x390a6e33, 0x3f7fff65 ),
	VERT( 0xc1a7460b, 0x4287f395, 0xc12f2fab ),
	NORM( 0xbf7f304b, 0x3d1dbcb8, 0x3d8e901e ),
	VERT( 0xc1a7460b, 0x4287f395, 0xc12f2fab ),
	NORM( 0xbf7f4fa7, 0x3b327fa8, 0x3d96095c ),
	VERT( 0xc1a7460b, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1af7c50, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1af7c50, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0xbf7fe9ab, 0xb92d0ab8, 0xbcd5d512 ),
	VERT( 0xc1af7c50, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0x00000000, 0xb7f5afae, 0x3f800000 ),
	VERT( 0xc1af7c50, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0x3f7cd06b, 0x3a06e9c0, 0x3e210bd6 ),
	VERT( 0xc1af45ef, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x00000000, 0xb7f5afae, 0x3f800000 ),
	VERT( 0xc1af45ef, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x3f7f2741, 0x39e30fcf, 0x3da66c96 ),
	VERT( 0xc1af45ef, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x3f7cd06b, 0x3a06e9c1, 0x3e210bd7 ),
	VERT( 0xc1af45ef, 0x418fbf3f, 0xc13eadcd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1af45ef, 0x410635fd, 0xc13eadcd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1af45ef, 0x410635fd, 0xc13eadcd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1af45ef, 0x410635fd, 0xc13eadcd ),
	NORM( 0x3f7f2741, 0x39e30fcf, 0x3da66c96 ),
	VERT( 0xc1837e3a, 0x410635fd, 0xc13eadcd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0x3b8cae4b, 0x390a6e32, 0x3f7fff65 ),
	VERT( 0xc182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0xba633c00, 0x00000000, 0xbf7ffffa ),
	VERT( 0xc182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0xbb492024, 0x00000000, 0xbf7fffb1 ),
	VERT( 0xc182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0x3f7fffe9, 0x3a92a035, 0x3aa1f679 ),
	VERT( 0xc182cd99, 0x42880695, 0xc12fed8c ),
	NORM( 0x3f7fffee, 0xbaa0a687, 0xba538be5 ),
	VERT( 0xc1af5e3e, 0x418fbf3f, 0xc12fcbb3 ),
	NORM( 0xba633c01, 0x00000000, 0xbf7ffffa ),
	VERT( 0xc1af5e3e, 0x418fbf3f, 0xc12fcbb3 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1af5e3e, 0x418fbf3f, 0xc12fcbb3 ),
	NORM( 0xbac4519e, 0x39bcd710, 0xbf7fffec ),
	VERT( 0xc1af5e3e, 0x410635fd, 0xc12fcbb3 ),
	NORM( 0xbac4519e, 0x39bcd711, 0xbf7fffec ),
	VERT( 0xc1af5e3e, 0x410635fd, 0xc12fcbb3 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1af5e3e, 0x410635fd, 0xc12fcbb3 ),
	NORM( 0xba7c39d6, 0xbf7ffff7, 0x39ec3cc3 ),
	VERT( 0xc1833dc7, 0x41061f96, 0xc13ecffa ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1833dc7, 0x41061f96, 0xc13ecffa ),
	NORM( 0x3f7fffd3, 0x3b15dd62, 0xb9d362cd ),
	VERT( 0xc1a79f0d, 0x428d4818, 0xc12f2fab ),
	NORM( 0xbf4f4a37, 0x3f15d757, 0x3d2b395e ),
	VERT( 0xc1a79f0d, 0x428d4818, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a79f0d, 0x428d4818, 0xc13ff5c3 ),
	NORM( 0xbf4e6af6, 0x3f170c01, 0x3d29b8d8 ),
	VERT( 0xc1a79f0d, 0x428d4818, 0xc13ff5c3 ),
	NORM( 0xbae00300, 0xbcdefcc8, 0xbf7fe79f ),
	VERT( 0xc17ac0e0, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17a0edb, 0x429147b3, 0xc12f2fab ),
	NORM( 0xbeb3fd56, 0x3f6fa8f9, 0x00000000 ),
	VERT( 0xc17a0edb, 0x429147b3, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17a0edb, 0x429147b3, 0xc13ff5c3 ),
	NORM( 0xbeb3fd56, 0x3f6fa8f9, 0x00000000 ),
	VERT( 0xc17a0edb, 0x429147b3, 0xc13ff5c3 ),
	NORM( 0xba2fb695, 0xbc2ee8e5, 0xbf7ffc40 ),
	VERT( 0xc17ac0e0, 0x4287f395, 0xc13ff5c3 ),
	NORM( 0xba60df06, 0xbc5fd7cc, 0xbf7ff9dc ),
	VERT( 0xc11f4f77, 0x42949549, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11f4f77, 0x4287f395, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc1acd416, 0x428f0039, 0xc12f8958 ),
	NORM( 0x3ae87dc9, 0x3a500aff, 0xbf7fffe0 ),
	VERT( 0xc1acd416, 0x42880bbf, 0xc12f8958 ),
	NORM( 0x3bf273c1, 0x3b58f4d2, 0xbf7ffdd9 ),
	VERT( 0xc1af7c50, 0x428d0211, 0xc12f8958 ),
	NORM( 0x3c70e5c9, 0x3bd790b3, 0xbf7ff77f ),
	VERT( 0xc1a2dea9, 0x42916ffd, 0xc12f8958 ),
	NORM( 0xbb492024, 0x00000000, 0xbf7fffb1 ),
	VERT( 0xc1a2dea9, 0x42916ffd, 0xc12f8958 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc1a2dea9, 0x4287fce2, 0xc12f8958 ),
	NORM( 0xbb492024, 0x00000000, 0xbf7fffb1 ),
	VERT( 0xc1a2dea9, 0x4287fce2, 0xc12f8958 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc1832a65, 0x429405d1, 0xc12f8958 ),
	NORM( 0xbb492025, 0x00000000, 0xbf7fffb1 ),
	VERT( 0xc1acd416, 0x42880bbf, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1acd416, 0x428f0039, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1af7c50, 0x428d0211, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a2dea9, 0x4287fce2, 0xc13ea1cb ),
	NORM( 0x39c19466, 0x00000000, 0x3f7fffff ),
	VERT( 0xc1a2dea9, 0x4287fce2, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a2dea9, 0x42916ffd, 0xc13ea1cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a2dea9, 0x42916ffd, 0xc13ea1cb ),
	NORM( 0x39c19466, 0x00000000, 0x3f7fffff ),
	VERT( 0xc1832a65, 0x429405d1, 0xc13ea1cb ),
	NORM( 0x39c19467, 0x00000000, 0x3f7fffff ),
	VERT( 0xc11f43d1, 0x4288134a, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17a7319, 0x4288134a, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc08cb441, 0x4297cc2d, 0xc0e49cbd ),
	NORM( 0x3f63498a, 0x3ee781bd, 0xbdaed791 ),
	VERT( 0xc08cb441, 0x4297cc2d, 0xc0e49cbd ),
	NORM( 0xbb97f9e8, 0xbaf64bbe, 0xbf7fff2e ),
	VERT( 0xbfe17aba, 0x428d7c0e, 0xc0e509ed ),
	NORM( 0x3f63498a, 0x3ee781bd, 0xbdaed791 ),
	VERT( 0xbfe17aba, 0x428d7c0e, 0xc12f2fab ),
	NORM( 0x3f63498a, 0x3ee781be, 0xbdaed791 ),
	VERT( 0xc087955f, 0x4295c0ea, 0xc12f6ebf ),
	NORM( 0x3f63498a, 0x3ee781bd, 0xbdaed791 ),
	VERT( 0xc08c8dcb, 0x4297cc91, 0xc12f6ebf ),
	NORM( 0x3f63498a, 0x3ee781bd, 0xbdaed791 ),
	VERT( 0xc08cb441, 0x4297cc2d, 0xc1586a99 ),
	NORM( 0x3f5fcda8, 0x3ef39524, 0x3dc66256 ),
	VERT( 0xc08c8dcb, 0x4297cc91, 0xc13e22cb ),
	NORM( 0x3f5fcda8, 0x3ef39525, 0x3dc66256 ),
	VERT( 0xc087b614, 0x4295c454, 0xc13ff5c3 ),
	NORM( 0x3f5fcda9, 0x3ef39524, 0x3dc66256 ),
	VERT( 0xbfe17aba, 0x428d7c0e, 0xc13ff5c3 ),
	NORM( 0x3f5fcda8, 0x3ef39525, 0x3dc66256 ),
	VERT( 0xbfe220e9, 0x428d5cc0, 0xc1586a99 ),
	NORM( 0x3f5fcda8, 0x3ef39524, 0x3dc66255 ),
	VERT( 0xbfe17aba, 0x428d7c0e, 0xc12f2fab ),
	NORM( 0x3f5ba43e, 0x3f03814c, 0xb4327241 ),
	VERT( 0xbfe17aba, 0x428d7c0e, 0xc13ff5c3 ),
	NORM( 0x3f5ba43e, 0x3f03814c, 0xb4327240 ),
	VERT( 0xc087b614, 0x4295c454, 0xc13ff5c3 ),
	NORM( 0x3f5ba43d, 0x3f03814c, 0xb4327241 ),
	VERT( 0xc087955f, 0x4295c0ea, 0xc12f6ebf ),
	NORM( 0x3f5ba43e, 0x3f03814c, 0xb4327241 ),
	VERT( 0xbfe17aba, 0x428d7c0e, 0xc0e509ed ),
	NORM( 0xbb97f9e7, 0xbaf64bbe, 0xbf7fff2e ),
	VERT( 0xc08cb441, 0x4297cc2d, 0xc1586a99 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbfe220e9, 0x428d5cc0, 0xc1586a99 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbfe220e9, 0x428d5cc0, 0xc1586a99 ),
	NORM( 0x3d0abd87, 0x3f7fd98f, 0xbba53827 ),
	VERT( 0xbfe17aba, 0x428d7c0e, 0xc0e509ed ),
	NORM( 0x3d0abd86, 0x3f7fd98f, 0xbba53826 ),
	VERT( 0x3d360f33, 0x428d5cc0, 0xc0e49cbd ),
	NORM( 0xbaf09ba3, 0x3911f87f, 0xbf7fffe4 ),
	VERT( 0x3d360f33, 0x428d5cc0, 0xc0e49cbd ),
	NORM( 0x3c039ac6, 0x3f7ffc1e, 0xbbf0d6b2 ),
	VERT( 0xbef60a73, 0x4296e620, 0xc158ca65 ),
	NORM( 0xbf285a20, 0x3f40db3c, 0x00000000 ),
	VERT( 0xbf318d85, 0x429686eb, 0xc158ca65 ),
	NORM( 0xbf3fe8bb, 0x3f296e5d, 0x00000000 ),
	VERT( 0xbf318d85, 0x429686eb, 0xc158b01f ),
	NORM( 0xbf3fe8bb, 0x3f296e5d, 0x00000000 ),
	VERT( 0xbef60a73, 0x4296e620, 0xc158b01f ),
	NORM( 0xbf285a20, 0x3f40db3c, 0x00000000 ),
	VERT( 0xbf5b65a0, 0x42960ad8, 0xc158ca65 ),
	NORM( 0xbf641772, 0x3ee8778e, 0x00000000 ),
	VERT( 0xbf5b65a0, 0x42960ad8, 0xc158b01f ),
	NORM( 0xbf641772, 0x3ee8778e, 0x00000000 ),
	VERT( 0xbf75b38a, 0x42957a5a, 0xc158ca65 ),
	NORM( 0xbf792149, 0x3e6ba279, 0x00000000 ),
	VERT( 0xbf75b38a, 0x42957a5a, 0xc158b01f ),
	NORM( 0xbf792149, 0x3e6ba279, 0x00000000 ),
	VERT( 0xbf7eac5a, 0x4294df4b, 0xc158ca65 ),
	NORM( 0xbf800000, 0xb5c14808, 0x00000000 ),
	VERT( 0xbf7eac5a, 0x4294df4b, 0xc158b01f ),
	NORM( 0xbf800000, 0xb5c14808, 0x00000000 ),
	VERT( 0xbf75b38a, 0x4294443d, 0xc158ca65 ),
	NORM( 0xbf7e4d84, 0xbdeb6f77, 0x00000000 ),
	VERT( 0xbf75b38a, 0x4294443d, 0xc158b01f ),
	NORM( 0xbf7e4d84, 0xbdeb6f77, 0x00000000 ),
	VERT( 0x3d0a1e66, 0x42973663, 0xc158b01f ),
	NORM( 0xbe2253c6, 0x3f7cc352, 0x00000000 ),
	VERT( 0xbe6e107c, 0x429721fa, 0xc158b01f ),
	NORM( 0xbe97363d, 0x3f7494ac, 0x00000000 ),
	VERT( 0xbe6e107c, 0x429721fa, 0xc0e53e04 ),
	NORM( 0xbe99cc0c, 0x3f742d6c, 0x00000000 ),
	VERT( 0x3d0a1e66, 0x42973663, 0xc158ca65 ),
	NORM( 0xbe17a691, 0x3f7d2d55, 0x00000000 ),
	VERT( 0xbe6e107c, 0x429721fa, 0xc158ca65 ),
	NORM( 0xbe949e5a, 0x3f74fa52, 0x00000000 ),
	VERT( 0xbef60a73, 0x4296e620, 0xc158b01f ),
	NORM( 0xbf01fa25, 0x3f5c8c98, 0x00000000 ),
	VERT( 0xbef60a73, 0x4296e620, 0xc0e53e04 ),
	NORM( 0xbf0c1582, 0x3f56459e, 0x00000000 ),
	VERT( 0xbef60a73, 0x4296e620, 0xc158ca65 ),
	NORM( 0xbeda4158, 0x3f67934d, 0x00000000 ),
	VERT( 0xbf318d85, 0x429686eb, 0xc158b01f ),
	NORM( 0xbf3fe8bb, 0x3f296e5d, 0x00000000 ),
	VERT( 0xbf318d85, 0x429686eb, 0xc0e53e04 ),
	NORM( 0xbf3fe8bb, 0x3f296e5d, 0x00000000 ),
	VERT( 0xbf5b65a0, 0x42960ad8, 0xc158b01f ),
	NORM( 0xbf641772, 0x3ee8778e, 0x00000000 ),
	VERT( 0xbf5b65a0, 0x42960ad8, 0xc0e53e04 ),
	NORM( 0xbf641772, 0x3ee8778e, 0x00000000 ),
	VERT( 0xbf75b38a, 0x42957a5a, 0xc158b01f ),
	NORM( 0xbf792149, 0x3e6ba279, 0x00000000 ),
	VERT( 0xbf75b38a, 0x42957a5a, 0xc0e53e04 ),
	NORM( 0xbf792149, 0x3e6ba279, 0x00000000 ),
	VERT( 0xbf7eac5a, 0x4294df4b, 0xc158b01f ),
	NORM( 0xbf800000, 0xb5c14808, 0x00000000 ),
	VERT( 0xbf7eac5a, 0x4294df4b, 0xc0e53e04 ),
	NORM( 0xbf800000, 0xb5c14808, 0x00000000 ),
	VERT( 0xbf75b38a, 0x4294443d, 0xc158b01f ),
	NORM( 0xbf7e4d84, 0xbdeb6f77, 0x00000000 ),
	VERT( 0xbf75b38a, 0x4294443d, 0xc0e53e04 ),
	NORM( 0xbf7e4d84, 0xbdeb6f77, 0x00000000 ),
	VERT( 0xc08cb441, 0x4297cc2d, 0xc0e49cbd ),
	NORM( 0xbd3869b3, 0x3f7fb6a3, 0xbc6dc1cc ),
	VERT( 0xbc9de192, 0x42980c96, 0xc18ce64f ),
	NORM( 0xb9e38dd8, 0x3f6a9d25, 0xbeccdd3a ),
	VERT( 0xc08cb441, 0x4297cc2d, 0xc1586a99 ),
	NORM( 0xbd75bfb3, 0x3f7f89f0, 0x3931e6a4 ),
	VERT( 0xc17a1859, 0x428805be, 0xbfc45d8e ),
	NORM( 0xbf7ffff4, 0x00000000, 0x3a9a21d0 ),
	VERT( 0xc17a7319, 0x4292482d, 0xbfc6e979 ),
	NORM( 0xbf7ffff4, 0x00000000, 0x3a9a21d0 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc12f6ebf ),
	NORM( 0xbf7ffff4, 0x00000000, 0x3a9a21d0 ),
	VERT( 0xc17a7319, 0x4288134a, 0xc12f6ebf ),
	NORM( 0xbf7ffff4, 0x00000000, 0x3a9a21d0 ),
	VERT( 0xc17a7319, 0x4292482d, 0xbfc6e979 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc0212227 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc12f6ebf ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc12f6ebf ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc087b614, 0x4295c454, 0xc13ff5c3 ),
	NORM( 0x3da3df37, 0x00000000, 0x3f7f2dde ),
	VERT( 0xc08c8dcb, 0x4297cc91, 0xc13e22cb ),
	NORM( 0x3da3df37, 0x00000000, 0x3f7f2dde ),
	VERT( 0xc0a0db32, 0x4297b2e0, 0xc13e22cb ),
	NORM( 0x3da3df36, 0x00000000, 0x3f7f2dde ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xc13e22cb ),
	NORM( 0x3da3df37, 0x00000000, 0x3f7f2dde ),
	VERT( 0xc087955f, 0x4295c0ea, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc0a0db32, 0x4297b2e0, 0xc12f6ebf ),
	NORM( 0xbdc64479, 0x3f7ecc2b, 0x383ffa7a ),
	VERT( 0xc0a0db32, 0x4297b2e0, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc08c8dcb, 0x4297cc91, 0xc12f6ebf ),
	NORM( 0xbda178d9, 0x3f7f33fc, 0x38d64d84 ),
	VERT( 0xc08c8dcb, 0x4297cc91, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc12f6ebf ),
	NORM( 0xbe48ac9d, 0x3f7b093d, 0x00000000 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11f43d1, 0x42968f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11f43d1, 0x42968f4f, 0xc12f6ebf ),
	NORM( 0xbe1f4104, 0x3f7ce297, 0x00000000 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc0a0c4c3, 0x4295b690, 0xc12f2fab ),
	NORM( 0xbde90c09, 0x3f7e5650, 0x00000000 ),
	VERT( 0xc0a0c4c3, 0x4295b690, 0xc13ff5c3 ),
	NORM( 0xbde90c09, 0x3f7e5650, 0x00000000 ),
	VERT( 0xc11f4f77, 0x42949549, 0xc13ff5c3 ),
	NORM( 0xbde90c09, 0x3f7e5650, 0x00000000 ),
	VERT( 0xc11f4f77, 0x42949549, 0xc12f2fab ),
	NORM( 0xbde90c09, 0x3f7e5650, 0x00000000 ),
	VERT( 0xc0a0c4c3, 0x4295b690, 0xc13ff5c3 ),
	NORM( 0xbcf52002, 0x3f7fe13e, 0x3bd737ca ),
	VERT( 0xc0a0c4c3, 0x4295b690, 0xc12f2fab ),
	NORM( 0xbcf52002, 0x3f7fe13e, 0x3bd737cb ),
	VERT( 0xc087955f, 0x4295c0ea, 0xc12f6ebf ),
	NORM( 0xbcf52003, 0x3f7fe13e, 0x3bd737cc ),
	VERT( 0xc087b614, 0x4295c454, 0xc13ff5c3 ),
	NORM( 0xbcf52002, 0x3f7fe13e, 0x3bd737cb ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0a0db32, 0x4297b2e0, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0a0db32, 0x4297b2e0, 0xc13e22cb ),
	NORM( 0xbdc62f9c, 0x3f7ecc6c, 0xb8bf0165 ),
	VERT( 0xc11f43d1, 0x42968f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc0a0db32, 0x4297b2e0, 0xc0212227 ),
	NORM( 0xbd8e7869, 0x3f6b3d87, 0x3ec6ce00 ),
	VERT( 0xc11f43d1, 0x42968f4f, 0xc0212227 ),
	NORM( 0xbe11e677, 0x3f6971f5, 0x3ec5115f ),
	VERT( 0xc17a7319, 0x4294482d, 0xc0212227 ),
	NORM( 0xbe37a153, 0x3f65b6eb, 0x3ece7df2 ),
	VERT( 0xc0a0db32, 0x4297b2e0, 0xc18c77cd ),
	NORM( 0xbda0c98c, 0x3f699a93, 0xbecd895a ),
	VERT( 0xc11f43d1, 0x42968f4f, 0xc18afffe ),
	NORM( 0xbe2db632, 0x3f66928e, 0xbeccce44 ),
	VERT( 0xc11f43d1, 0x42968f4f, 0xc13e22cb ),
	NORM( 0xbe1f4103, 0x3f7ce298, 0x00000000 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc185c69f ),
	NORM( 0xbe647605, 0x3f652d77, 0xbec57fc8 ),
	VERT( 0xc17a7319, 0x4294482d, 0xc13e22cb ),
	NORM( 0xbe48ac9c, 0x3f7b093d, 0x00000000 ),
	VERT( 0xc0a0dfa0, 0x418fbf3f, 0xc193d406 ),
	NORM( 0xbccb4a93, 0xb3bc6a25, 0xbf7febd1 ),
	VERT( 0xc097e929, 0x418fbf3f, 0xc193dc0d ),
	NORM( 0xbc669740, 0xb828c5ce, 0xbf7ff982 ),
	VERT( 0xc17a1859, 0x4106333a, 0xc18d7d48 ),
	NORM( 0xbddd4dfb, 0x00000000, 0xbf7e8041 ),
	VERT( 0xc17a1859, 0x418fbf3f, 0xc18d7d48 ),
	NORM( 0xbddd4dfb, 0x00000000, 0xbf7e8041 ),
	VERT( 0xc17a1859, 0x418fbf3f, 0xc18d7d48 ),
	NORM( 0xbddd4dfa, 0x00000000, 0xbf7e8041 ),
	VERT( 0xc11f58fe, 0x418fbf3f, 0xc1926bda ),
	NORM( 0xbddd4dfb, 0x00000000, 0xbf7e8041 ),
	VERT( 0xc0a0c4c3, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0a0c4c3, 0x4295b690, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f4f77, 0x42949549, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f4f77, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0a0c4c3, 0x4295b690, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc0a0c4c3, 0x4287f395, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11f4f77, 0x4287f395, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11f4f77, 0x42949549, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc0a0db32, 0x4288134a, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f43d1, 0x4288134a, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xc193d3c4 ),
	NORM( 0xbd4c8a78, 0x3ebd3088, 0xbf6d89c8 ),
	VERT( 0xc0a0dfa0, 0x428805be, 0xc193d406 ),
	NORM( 0xbcc76230, 0x39b5c1e5, 0xbf7fec95 ),
	VERT( 0xc11f58fe, 0x428805be, 0xc1926bda ),
	NORM( 0xbd94d006, 0x3accbf81, 0xbf7f52ae ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc1925bf5 ),
	NORM( 0xbe006bfd, 0x3ebb26e7, 0xbf6c1c9e ),
	VERT( 0xc0a0db32, 0x4288134a, 0xbfc6e979 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xbfc6e979 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xbfc6e979 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f43d1, 0x4288134a, 0xbfc6e979 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc0a0db32, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11f43d1, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17a1859, 0x428805be, 0xc18d7d48 ),
	NORM( 0xbddfd5b3, 0x3b314042, 0xbf7e7729 ),
	VERT( 0xc11f58fe, 0x4239214d, 0xc1926bda ),
	NORM( 0xbd954c13, 0x00000000, 0xbf7f51a1 ),
	VERT( 0xc17a1859, 0x4237b11b, 0xc18d7d48 ),
	NORM( 0xbddd4dfc, 0x00000000, 0xbf7e8041 ),
	VERT( 0xc0a0dfa0, 0x4239a08c, 0xc193d406 ),
	NORM( 0xbccc5a84, 0x3947404f, 0xbf7feb9b ),
	VERT( 0xc1a2dea9, 0x42916ffd, 0xc18421ac ),
	NORM( 0xbeff4032, 0x3f4a5420, 0xbeb65407 ),
	VERT( 0xc1a2dea9, 0x428f4905, 0xc18dde4c ),
	NORM( 0xbead9fca, 0x3ea7318f, 0xbf61db4f ),
	VERT( 0xc1a77a92, 0x428cd941, 0xc18c15cb ),
	NORM( 0xbf119e36, 0x3dded39f, 0xbf50b323 ),
	VERT( 0xc1acd416, 0x428f0039, 0xc182ffd3 ),
	NORM( 0xbf524fe8, 0x3ee60bde, 0xbeb3b755 ),
	VERT( 0xc1ae417b, 0x428b7543, 0xc185427a ),
	NORM( 0xbf658b43, 0x3d2e458b, 0xbee1a097 ),
	VERT( 0xc1af7c50, 0x428d0211, 0xc1821c07 ),
	NORM( 0xbf7268aa, 0x3e269212, 0xbe8dfbd3 ),
	VERT( 0xc1831fc0, 0x4291ded9, 0xbfc6a82c ),
	NORM( 0xbf0d8150, 0x3e7b8bd4, 0x3f4bdb55 ),
	VERT( 0xc1831fc0, 0x4291ded9, 0xbfc6a82c ),
	NORM( 0x3f7ffefe, 0x00000000, 0xbbb5d5f5 ),
	VERT( 0xc1832a65, 0x429405d1, 0xc01f4591 ),
	NORM( 0x3f7fffae, 0x3b2a25ef, 0xbae3c775 ),
	VERT( 0xc1832a65, 0x429405d1, 0xc01f4591 ),
	NORM( 0xbf02ce95, 0x3f37d55f, 0x3ef1ea64 ),
	VERT( 0xc1a2dea9, 0x42916ffd, 0xc095ffc9 ),
	NORM( 0xbf1d5090, 0x3f36a2af, 0x3eac6c1c ),
	VERT( 0xc1a2dea9, 0x428f15a2, 0xc07bde13 ),
	NORM( 0xbf2703d8, 0x3e5d2aaa, 0x3f39f84e ),
	VERT( 0xc1ace9db, 0x428f0039, 0xc0baa15e ),
	NORM( 0xbf5e620e, 0x3ee802a8, 0x3e4cec47 ),
	VERT( 0xc1ace40c, 0x428ca5de, 0xc0a2e4e9 ),
	NORM( 0xbf5c57e4, 0x3dfa9564, 0x3efd02eb ),
	VERT( 0xc1a2de55, 0x42880498, 0xc07bef33 ),
	NORM( 0xbf19ba34, 0x360aee9a, 0x3f4cb455 ),
	VERT( 0xc1ace428, 0x42880498, 0xc0a2e48d ),
	NORM( 0xbf56ec0f, 0xb9d70bae, 0x3f0b159c ),
	VERT( 0xc1af5e3e, 0x42880498, 0xc0c0a60a ),
	NORM( 0xbf7c814b, 0xb9d6dee5, 0x3e28a07e ),
	VERT( 0xc1af5f9d, 0x428b7543, 0xc0c06e9a ),
	NORM( 0xbf7c22ce, 0x3d5408f2, 0x3e29219d ),
	VERT( 0xc1af7c50, 0x428d0211, 0xc0dcf6a4 ),
	NORM( 0xbf7c80e6, 0x3e233ca4, 0x3d29c4c4 ),
	VERT( 0xc1af7c50, 0x42880bbf, 0xc0dcf6a4 ),
	NORM( 0xbf7ffe04, 0xbb3fb3a5, 0x3bec6db8 ),
	VERT( 0xc1ae417b, 0x42880bbf, 0xc18534fe ),
	NORM( 0xbf6a653e, 0xba5c5f87, 0xbecddc79 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc18d2296 ),
	NORM( 0xbe2e5e18, 0x3ea942ee, 0xbf6da42c ),
	VERT( 0x3c9de192, 0x42960c96, 0xc1944246 ),
	NORM( 0x399c6120, 0x3ebd1b21, 0xbf6de608 ),
	VERT( 0xc1a75e4f, 0x418fbf3f, 0xc18c28c4 ),
	NORM( 0xbf0d067a, 0x391ec529, 0xbf55a753 ),
	VERT( 0xc1a32065, 0x418fbf3f, 0xc18dd8a4 ),
	NORM( 0xbe4150c4, 0x39245501, 0xbf7b6590 ),
	VERT( 0xc1a32cfc, 0x410635fd, 0xc18dda24 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1a32cfc, 0x410635fd, 0xc18dda24 ),
	NORM( 0xbe41b852, 0x391a25ec, 0xbf7b6095 ),
	VERT( 0xc1a758e6, 0x410635fd, 0xc18c2efa ),
	NORM( 0xbf0cf1dd, 0x39156fcb, 0xbf55b4ec ),
	VERT( 0xc1a758e6, 0x410635fd, 0xc18c2efa ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1a2de55, 0x410635fd, 0xc0a94499 ),
	NORM( 0xba7c39d5, 0xbf7ffff7, 0x39ec3cc4 ),
	VERT( 0xc1a2de55, 0x410635fd, 0xc0a94499 ),
	NORM( 0xbf1a3923, 0xbde45fa4, 0x3f4a53c3 ),
	VERT( 0xc1a2de55, 0x418fbf3f, 0xc07bef33 ),
	NORM( 0xbf194812, 0xbd657218, 0x3f4c8950 ),
	VERT( 0xc1ace438, 0x418fbf3f, 0xc0a2e456 ),
	NORM( 0xbf558a1c, 0xbd2022d7, 0x3f0cd7c6 ),
	VERT( 0xc1ace43b, 0x410635fd, 0xc0ce314c ),
	NORM( 0xba7c39d5, 0xbf7ffff7, 0x39ec3cc2 ),
	VERT( 0xc1ace43b, 0x410635fd, 0xc0ce314c ),
	NORM( 0xbf58fdc0, 0xbd97fa12, 0x3f067fb1 ),
	VERT( 0xc1ae3af5, 0x410635fd, 0xc1854ceb ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1ae3af5, 0x410635fd, 0xc1854ceb ),
	NORM( 0xbf6b247e, 0xb72cf5ca, 0xbeca6cd3 ),
	VERT( 0xc1ae3c01, 0x418fbf3f, 0xc1854913 ),
	NORM( 0xbf6b1c4e, 0xb86bcf43, 0xbeca92d9 ),
	VERT( 0xc1acd416, 0x428f0039, 0xc12f8958 ),
	NORM( 0xbf592a27, 0x3f078e61, 0xba42e2f2 ),
	VERT( 0xc1af7c50, 0x428d0211, 0xc12f8958 ),
	NORM( 0xbf7cec3e, 0x3e1e4a5e, 0xba6e738e ),
	VERT( 0xc1acd416, 0x428f0039, 0xc13ea1cb ),
	NORM( 0xbf5909a8, 0x3f07c26c, 0x00000000 ),
	VERT( 0xc1af7c50, 0x428d0211, 0xc13ea1cb ),
	NORM( 0xbf7cb1b9, 0x3e2407da, 0x00000000 ),
	VERT( 0xc1a77a92, 0x42880bbf, 0xc18c084f ),
	NORM( 0xbf0c6dba, 0xbaa93062, 0xbf560bc8 ),
	VERT( 0xc1a2dea9, 0x4287fce2, 0xc18dd0d0 ),
	NORM( 0xbe3dfb68, 0xba83ae9f, 0xbf7b8e2d ),
	VERT( 0xc1832a65, 0x429405d1, 0xc185bcc8 ),
	NORM( 0xbe9a01d9, 0x3f65a572, 0xbea5c25f ),
	VERT( 0xc1832a65, 0x429405d1, 0xc185bcc8 ),
	NORM( 0x3f7ffff5, 0x3a974da6, 0x00000000 ),
	VERT( 0xc1832a65, 0x4291ded9, 0xc18dde4c ),
	NORM( 0xbe27a9c4, 0x3eefe6c4, 0xbf5e3d99 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xbfc6e979 ),
	NORM( 0xbde2bc70, 0x3f308d36, 0x3f373337 ),
	VERT( 0xc17a7319, 0x4292482d, 0xbfc6e979 ),
	NORM( 0xbe0ca8d1, 0x3f2ff5b2, 0x3f3695fc ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xbfc6e979 ),
	NORM( 0xbd592cb4, 0x3f3164cf, 0x3f3812ed ),
	VERT( 0x3c9de192, 0x42960c96, 0xbfc6e979 ),
	NORM( 0xbcc616c4, 0x3f31977b, 0x3f384780 ),
	VERT( 0xc1836c33, 0x418fbf3f, 0xc18dda24 ),
	NORM( 0xb9aeb3ed, 0x387158da, 0xbf7fffff ),
	VERT( 0xc1837e3a, 0x410635fd, 0xc18dda24 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1837e3a, 0x410635fd, 0xc18dda24 ),
	NORM( 0x00000000, 0x382054a7, 0xbf800000 ),
	VERT( 0xc18377de, 0x418fbf3f, 0xbfc63228 ),
	NORM( 0x3f7fff99, 0xba210f8c, 0x3b61d1f5 ),
	VERT( 0xc18377de, 0x418fbf3f, 0xbfc63228 ),
	NORM( 0xbf04f2f3, 0xbd6ea950, 0x3f5a42ef ),
	VERT( 0xc18388bb, 0x410635fd, 0xc039a7c8 ),
	NORM( 0xba7c39d5, 0xbf7ffff7, 0x39ec3cc3 ),
	VERT( 0xc18388bb, 0x410635fd, 0xc039a7c8 ),
	NORM( 0x3f7fff53, 0x39ce2fe3, 0x3b9424c2 ),
	VERT( 0xc18388bb, 0x410635fd, 0xc039a7c8 ),
	NORM( 0xbf0456fd, 0xbdf4ad4a, 0x3f58feae ),
	VERT( 0xc1af5e3e, 0x418fbf3f, 0xc0c0a60a ),
	NORM( 0xbf7c6391, 0xbc48e0e4, 0x3e2aed01 ),
	VERT( 0xc1af5e3e, 0x410635fd, 0xc0ebf30a ),
	NORM( 0xba7c39d6, 0xbf7ffff7, 0x39ec3cc4 ),
	VERT( 0xc1af5e3e, 0x410635fd, 0xc0ebf30a ),
	NORM( 0xbf7d33dc, 0xbca8e908, 0x3e157bec ),
	VERT( 0xc1af5e3e, 0x42880498, 0xc12fcbb3 ),
	NORM( 0x3c70e5c9, 0x3bd790b3, 0xbf7ff77f ),
	VERT( 0xc1af5e3e, 0x42880498, 0xc12fcbb3 ),
	NORM( 0xbf7fffb1, 0xbb3fd610, 0xba6a1f90 ),
	VERT( 0xc1af5e3e, 0x42880498, 0xc12fcbb3 ),
	NORM( 0xba633c00, 0x00000000, 0xbf7ffffa ),
	VERT( 0xc1af4eab, 0x418fbf3f, 0xc13e401c ),
	NORM( 0x3f7f2741, 0x39e30fce, 0x3da66c97 ),
	VERT( 0xc1af4eab, 0x418fbf3f, 0xc13e401c ),
	NORM( 0x3f7cd06c, 0x3a06e9c0, 0x3e210bd6 ),
	VERT( 0xc1af4eab, 0x418fbf3f, 0xc13e401c ),
	NORM( 0xbf7fe25b, 0xb91e26b5, 0xbcf65ee3 ),
	VERT( 0xc1830e0c, 0x42880498, 0xc18dda24 ),
	NORM( 0x3f7ffffc, 0x39322c5b, 0xba2f3420 ),
	VERT( 0xc1830e0c, 0x42880498, 0xc18dda24 ),
	NORM( 0xb9f6e2ba, 0xba62e5d4, 0xbf7ffff8 ),
	VERT( 0xc1af45ef, 0x410635fd, 0xc13e453c ),
	NORM( 0xbf7fe6d6, 0xb848f09a, 0xbce2ffe0 ),
	VERT( 0xc1af45ef, 0x410635fd, 0xc13e453c ),
	NORM( 0x3f7f2741, 0x39e30fd0, 0x3da66c97 ),
	VERT( 0xc1af45ef, 0x410635fd, 0xc13e453c ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1831fc0, 0x42880bbf, 0xbfc6a82c ),
	NORM( 0x3f7fffe7, 0xba48c247, 0xbaca32af ),
	VERT( 0xc1831fc0, 0x42880bbf, 0xbfc6a82c ),
	NORM( 0xbf04718b, 0xb74894c0, 0x3f5b13b4 ),
	VERT( 0xc182f4ab, 0x429250be, 0xc00cd239 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc182f4ab, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0x00000000, 0xbd8fa5fc, 0x3f7f5e97 ),
	VERT( 0xc17af7bf, 0x418fbf3f, 0xc00cd239 ),
	NORM( 0x00000000, 0xbd8fa5fc, 0x3f7f5e97 ),
	VERT( 0xc17af7bf, 0x429250be, 0xc00cd239 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17af7bf, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x00000000, 0xbe0f4b6a, 0x3f7d7b29 ),
	VERT( 0xc182f4ab, 0x41064cdb, 0xc0636c38 ),
	NORM( 0x00000000, 0xbe0f4b6a, 0x3f7d7b29 ),
	VERT( 0xc17a1859, 0x4197ace4, 0xbfc45d8e ),
	NORM( 0xba1314b5, 0xbd03db90, 0x3f7fde06 ),
	VERT( 0xc17a1859, 0x418fbf3f, 0xbfc45d8e ),
	NORM( 0xbb746104, 0xbd851f6e, 0x3f7f74f2 ),
	VERT( 0x3ce4cb8d, 0x41934ec4, 0xbfc45d8e ),
	NORM( 0xba12744b, 0xbd034bc0, 0x3f7fde50 ),
	VERT( 0x39d1c727, 0x410658d0, 0xc038c8c6 ),
	NORM( 0xbbe57007, 0xbe0d6326, 0x3f7d8aac ),
	VERT( 0xc17a1859, 0x4106333a, 0xc038c8c6 ),
	NORM( 0xbb98ff0d, 0xbe1ad318, 0x3f7d0ddd ),
	VERT( 0xc17a1859, 0x4197ace4, 0xc18d7d48 ),
	NORM( 0xbddd4dfa, 0x00000000, 0xbf7e8041 ),
	VERT( 0xc11f58fe, 0x4194cc80, 0xc1926bda ),
	NORM( 0xbd954c12, 0x00000000, 0xbf7f51a1 ),
	VERT( 0xc11f58fe, 0x418fbf3f, 0xc1926bda ),
	NORM( 0xbd11f6e5, 0x00000000, 0xbf7fd660 ),
	VERT( 0xc11f58fe, 0x418fbf3f, 0xc1926bda ),
	NORM( 0xbd933d90, 0x00000000, 0xbf7f5668 ),
	VERT( 0xc11f58fe, 0x4106333a, 0xc1926bda ),
	NORM( 0xbd956bc8, 0x3aef6ea4, 0xbf7f513b ),
	VERT( 0xc0a0dfa0, 0x4106333a, 0xc193d406 ),
	NORM( 0xbcd334d7, 0x3b92be77, 0xbf7fe98f ),
	VERT( 0x00000000, 0x41930e85, 0xbfc0e77b ),
	NORM( 0x3a60929b, 0xb6535cc6, 0x3f7ffffa ),
	VERT( 0xc17b4b5e, 0x42880df1, 0xbfc0e77b ),
	NORM( 0x3a60929b, 0xb6535cc6, 0x3f7ffffa ),
	VERT( 0xc17e2ecf, 0x419763af, 0xbfc0e77b ),
	NORM( 0x3a60929b, 0xb6535cc6, 0x3f7ffffa ),
	VERT( 0xc179cbf0, 0x4239f441, 0xbfc2a949 ),
	NORM( 0x3a439920, 0x3f350af0, 0x3f34feef ),
	VERT( 0xc179cbf0, 0x4239f441, 0xbfc2a949 ),
	NORM( 0xbf800000, 0xb5afef4a, 0x35a8198f ),
	VERT( 0xc179cbf0, 0x419c7dcc, 0xbfc2a949 ),
	NORM( 0x39602351, 0x00000000, 0x3f800000 ),
	VERT( 0xc179cbf0, 0x419c7dcc, 0xbfc2a949 ),
	NORM( 0xbf800000, 0xb5afef4a, 0x35a8198f ),
	VERT( 0x3d5c0d28, 0x42351c15, 0xc02ca09d ),
	NORM( 0xbb47f8cf, 0xbf7fffb2, 0x37383ad8 ),
	VERT( 0xc165170c, 0x423548a7, 0xc02ca09d ),
	NORM( 0xbb47f8d0, 0xbf7fffb2, 0x37383ad8 ),
	VERT( 0xc1651731, 0x423548a7, 0xc18d0b78 ),
	NORM( 0xbb47f8cf, 0xbf7fffb2, 0x37383ad9 ),
	VERT( 0xc08c8dcb, 0x4297cc91, 0xc13e22cb ),
	NORM( 0xbda178d8, 0x3f7f33fc, 0xb97939e8 ),
	VERT( 0xc020800a, 0x4106333a, 0xc1941c38 ),
	NORM( 0x3e9800c0, 0xbee5a2a5, 0xbf57d0fa ),
	VERT( 0xc020800a, 0x4106333a, 0xc1941c38 ),
	NORM( 0xbc5cedb6, 0x3b41670c, 0xbf7ff9c2 ),
	VERT( 0xc044cb01, 0x40f9f809, 0xc19341a3 ),
	NORM( 0x3ea83c01, 0xbea9f703, 0xbf625bd7 ),
	VERT( 0xbfd466af, 0x410f64c4, 0xc19431d1 ),
	NORM( 0x3e4dfb5f, 0xbeb84bad, 0xbf69391b ),
	VERT( 0xbfd466af, 0x410f64c4, 0xc19431d1 ),
	NORM( 0xbc607147, 0xb8466140, 0xbf7ff9da ),
	VERT( 0xc05017c9, 0x40f9f809, 0xc194172a ),
	NORM( 0xbc64b18c, 0x3c63425b, 0xbf7ff34f ),
	VERT( 0xc05017c9, 0x40f9f809, 0xc194172a ),
	NORM( 0x3ef24c67, 0xbebb4713, 0xbf4d28f8 ),
	VERT( 0xc09f9d55, 0x4091bbd3, 0xc194449c ),
	NORM( 0x3a465f11, 0x3bfa3388, 0xbf7ffe12 ),
	VERT( 0xc09f9d55, 0x4091bbd3, 0xc194449c ),
	NORM( 0xbd070a12, 0x3bd5ebf1, 0xbf7fdafa ),
	VERT( 0xc09f9d55, 0x4091bbd3, 0xc194449c ),
	NORM( 0xbe6282ca, 0xbf79a88b, 0x00000000 ),
	VERT( 0xc09f9d55, 0x4091bbd3, 0xc194449c ),
	NORM( 0xbdc9fac7, 0xbf7ec081, 0xb3c19c24 ),
	VERT( 0xc088c402, 0x40c2ddc8, 0xc1942b7e ),
	NORM( 0xbc5d4e50, 0x3c67e660, 0xbf7ff375 ),
	VERT( 0xc088c402, 0x40c2ddc8, 0xc1942b7e ),
	NORM( 0x3ef02d0a, 0xbe18268d, 0xbf5edcfc ),
	VERT( 0xc09006cf, 0x40903057, 0xc194449c ),
	NORM( 0x3e87a75b, 0xbd15343f, 0xbf76accd ),
	VERT( 0xc09006cf, 0x40903057, 0xc194449c ),
	NORM( 0xbdc9fab7, 0xbf7ec081, 0xb5191178 ),
	VERT( 0xbfa2413d, 0x410f64c4, 0xc19341a3 ),
	NORM( 0x3e116fe8, 0xbefdfb29, 0xbf5b49d5 ),
	VERT( 0xbf2e6948, 0x410f64c4, 0xc192ec6f ),
	NORM( 0x3d3ea30a, 0xbea7ee7b, 0xbf718b6a ),
	VERT( 0xc01676bf, 0x40f9f809, 0xc1925604 ),
	NORM( 0x3e087373, 0xbe2c769e, 0xbf7a06d5 ),
	VERT( 0xbfa2413d, 0x40f9f809, 0xc191b895 ),
	NORM( 0x3d42f563, 0xbde4e1ca, 0xbf7e1ab2 ),
	VERT( 0x3a95ea1a, 0x40f9f809, 0xc191814c ),
	NORM( 0xb846948f, 0xbdcffe05, 0xbf7ead26 ),
	VERT( 0xc080a996, 0x40c2ddc8, 0xc192ec6f ),
	NORM( 0x3eb57b65, 0xbe1033a3, 0xbf6ca5fa ),
	VERT( 0xc044cb01, 0x40c2ddc8, 0xc191b895 ),
	NORM( 0x3df06282, 0xbd7c64ee, 0xbf7dbd95 ),
	VERT( 0xbfd466af, 0x40c2ddc8, 0xc190eae1 ),
	NORM( 0x3cb68ab7, 0xbca20b4c, 0xbf7fe2e7 ),
	VERT( 0xbfd466af, 0x40c2ddc8, 0xc190eae1 ),
	NORM( 0x3d66bc01, 0xbd5d6820, 0xbf7f37f8 ),
	VERT( 0xbfe476ca, 0x40879350, 0xc190a8fd ),
	NORM( 0x3cb68ab7, 0xbca20b4c, 0xbf7fe2e7 ),
	VERT( 0xbfe476ca, 0x40879350, 0xc190a8fd ),
	NORM( 0x3d90ebda, 0xbcb51e14, 0xbf7f4ba8 ),
	VERT( 0xc052709e, 0x408c57c5, 0xc1918a35 ),
	NORM( 0xbdc9faeb, 0xbf7ec081, 0xb2b2b556 ),
	VERT( 0xc052709e, 0x408c57c5, 0xc1918a35 ),
	NORM( 0x3deaac47, 0xbce1961f, 0xbf7e3751 ),
	VERT( 0xc1a21aaa, 0x40aab392, 0xc12a21e3 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a21aaa, 0x40aab392, 0xc12a21e3 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1a21aaa, 0x40aab392, 0xc12a21e3 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1a21aaa, 0x410ca7f0, 0xc12a21e3 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a21aaa, 0x410ca7f0, 0xc12a21e3 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1a21aaa, 0x410ca7f0, 0xc14297f6 ),
	NORM( 0xbf3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0xc1a21aaa, 0x40aab392, 0xc14297f6 ),
	NORM( 0xbf3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0xc1a21aaa, 0x40aab392, 0xc14297f6 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3ae6a192, 0x40aab392, 0xc12a21e3 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3ae6a192, 0x40aab392, 0xc12a21e3 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3ae6a192, 0x410ca7f0, 0xc12a21e3 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3ae6a192, 0x410ca7f0, 0xc14297f6 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x3ae6a192, 0x40aab392, 0xc14297f6 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3ae6a192, 0x40aab392, 0xc14297f6 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc13f075f ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1ab94af, 0x41063127, 0xc13f075f ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1ab94af, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1ab94af, 0x41063127, 0xc17b0f91 ),
	NORM( 0xbf660029, 0x00000000, 0xbee0d141 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc17b0f91 ),
	NORM( 0xbf660029, 0x00000000, 0xbee0d141 ),
	VERT( 0xc1a24f63, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a24f63, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a24f63, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a24f63, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a24f63, 0x41063127, 0xc184bfd8 ),
	NORM( 0xbebb3a5d, 0x00000000, 0xbf6e4507 ),
	VERT( 0xc1a24f63, 0x40839a6b, 0xc184bfd8 ),
	NORM( 0xbebb3a5d, 0x00000000, 0xbf6e4507 ),
	VERT( 0xc15c35f8, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc15c35f8, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc15c35f8, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc15c35f8, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc15c35f8, 0x41063127, 0xc1894f0a ),
	NORM( 0xbd9dac06, 0x00000000, 0xbf7f3d7d ),
	VERT( 0xc15c35f8, 0x40839a6b, 0xc1894f0a ),
	NORM( 0xbd9dac06, 0x00000000, 0xbf7f3d7d ),
	VERT( 0xc11846bc, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11846bc, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11846bc, 0x41063127, 0xc18b96a4 ),
	NORM( 0xbd65d06a, 0x00000000, 0xbf7f98c4 ),
	VERT( 0xc11846bc, 0x40839a6b, 0xc18b96a4 ),
	NORM( 0xbd65d06a, 0x00000000, 0xbf7f98c4 ),
	VERT( 0xc088c4a1, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc088c4a1, 0x41063127, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc088c4a1, 0x41063127, 0xc18d7cf9 ),
	NORM( 0xbce6c1b0, 0x00000000, 0xbf7fe5ff ),
	VERT( 0xc088c4a1, 0x40839a6b, 0xc18d7cf9 ),
	NORM( 0xbce6da21, 0x00000000, 0xbf7fe5f9 ),
	VERT( 0x3a88d3c3, 0x40839a6b, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3a88d3c3, 0x410656bd, 0xc13f075f ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3a88d3c3, 0x410656bd, 0xc18dde3d ),
	NORM( 0xbc36011d, 0x00000000, 0xbf7ffbf5 ),
	VERT( 0x3a88d3c3, 0x40839a6b, 0xc18dde3d ),
	NORM( 0xbc36011d, 0x00000000, 0xbf7ffbf5 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc102e999 ),
	NORM( 0xbf668a73, 0xbd5fb4c2, 0x3edcd46c ),
	VERT( 0xc1ab94af, 0x41063127, 0xc0f48133 ),
	NORM( 0xbf5e4dfc, 0xbd7f2c14, 0x3efbe42c ),
	VERT( 0xc1ab94af, 0x41063127, 0xc12fd4fe ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1ab94af, 0x41063127, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1ab94af, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc188a02d, 0x40851f7c, 0xc0a48f00 ),
	NORM( 0xbea1306b, 0xbdf4328e, 0x3f710ebe ),
	VERT( 0xc188a02d, 0x4106f3af, 0xc0933d00 ),
	NORM( 0xbe99b442, 0xbdf569be, 0x3f7241ed ),
	VERT( 0xc188a02d, 0x4106f3af, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc188a02d, 0x4106f3af, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc188a02d, 0x40851f7c, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc188a02d, 0x40851f7c, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x3a88d533, 0x40839a6b, 0xc0986679 ),
	NORM( 0xbcb79f91, 0xbe009b96, 0x3f7de87a ),
	VERT( 0xba88d533, 0x41063127, 0xc0871479 ),
	NORM( 0xbcb79f91, 0xbe009b96, 0x3f7de87a ),
	VERT( 0x3a88d533, 0x410656bd, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x3a88d533, 0x40839a6b, 0xc12fd4fe ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11ef58d, 0x40b5a3ea, 0xc05ca0b6 ),
	NORM( 0xbc2ecea1, 0xbe4194dc, 0x3f7b5e7e ),
	VERT( 0xc11ef58d, 0x4107cd38, 0xc039fcb6 ),
	NORM( 0xbbf6277e, 0xbe419647, 0x3f7b6057 ),
	VERT( 0xc11ef58d, 0x40b5a3ea, 0xc19283e2 ),
	NORM( 0xbd86c240, 0x3b746710, 0xbf7f7184 ),
	VERT( 0xc17a1859, 0x4106333a, 0xc18d7d48 ),
	NORM( 0xbddd4dab, 0x3b5a8ee6, 0xbf7e7fe4 ),
	VERT( 0xc09f9d55, 0x4091bbd3, 0xc05ca0b6 ),
	NORM( 0xbc558695, 0xbe243d2a, 0x3f7ca9eb ),
	VERT( 0xc09f9d55, 0x4107cd38, 0xc039fcb6 ),
	NORM( 0xbc617722, 0xbe26c8f1, 0x3f7c8e94 ),
	VERT( 0xbb8b6ae9, 0x408afe54, 0xc05ca0b6 ),
	NORM( 0xbbc44255, 0xbe0b9700, 0x3f7d9b0b ),
	VERT( 0xc11f4f77, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc11f4f77, 0x42949549, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17a0edb, 0x429147b3, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17ac0e0, 0x4287f395, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a2dea9, 0x42916ffd, 0xc12f8958 ),
	NORM( 0xbf046baf, 0x3f5b1739, 0xba422bc2 ),
	VERT( 0xc1832a65, 0x429405d1, 0xc12f8958 ),
	NORM( 0xbe9ec4ca, 0x3f736170, 0x00000000 ),
	VERT( 0xc1832a65, 0x429405d1, 0xc12f8958 ),
	NORM( 0x3f7fff88, 0x3b77b9fe, 0x00000000 ),
	VERT( 0xc1832a65, 0x42880bbf, 0xc01f4591 ),
	NORM( 0x3f7fffa1, 0x3af7d244, 0xbb35c4a8 ),
	VERT( 0xc1a2dea9, 0x42916ffd, 0xc13ea1cb ),
	NORM( 0xbf04b4aa, 0x3f5aeb11, 0x00000000 ),
	VERT( 0xc1832a65, 0x429405d1, 0xc13ea1cb ),
	NORM( 0xbe9ec4ca, 0x3f736170, 0x00000000 ),
	VERT( 0xc1832a65, 0x429405d1, 0xc13ea1cb ),
	NORM( 0x3f7ffff5, 0x3a974da6, 0x00000000 ),
	VERT( 0xc11f43d1, 0x4288134a, 0xbfc6e979 ),
	NORM( 0x3ab11225, 0x3b7e8d30, 0x3f7fff72 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xbfc6e979 ),
	NORM( 0x3ab11225, 0x3b7e8d2f, 0x3f7fff72 ),
	VERT( 0xc17a7319, 0x4292482d, 0xbfc6e979 ),
	NORM( 0x3ab11225, 0x3b7e8d30, 0x3f7fff72 ),
	VERT( 0xc17a1859, 0x428805be, 0xbfc45d8e ),
	NORM( 0x39e9370e, 0x3aa7a19e, 0x3f7ffff1 ),
	VERT( 0xc11f43d1, 0x42948f4f, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc11f43d1, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17a7319, 0x4288134a, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17a7319, 0x4292482d, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x3c9de192, 0x42960c96, 0xbfc6e979 ),
	NORM( 0xbb01cd15, 0x00000000, 0x3f7fffdf ),
	VERT( 0xc0a0db32, 0x4295b2e0, 0xbfc6e979 ),
	NORM( 0xbb01cd14, 0x00000000, 0x3f7fffdf ),
	VERT( 0xc0a0db32, 0x4288134a, 0xbfc6e979 ),
	NORM( 0xbb01cd14, 0x00000000, 0x3f7fffdf ),
	VERT( 0xc17a1859, 0x4237b11b, 0xbfc45d8e ),
	NORM( 0x00000000, 0x3c16c9b5, 0x3f7ffd39 ),
	VERT( 0xc1837e3a, 0x410635fd, 0xc13eadcd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc179cbf0, 0x4236df7b, 0xbfc2a949 ),
	NORM( 0x00000000, 0x3c6aa8c5, 0x3f7ff947 ),
	VERT( 0xc179cbf0, 0x423548a7, 0xbfc2a949 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3d5c0d2b, 0x42351c15, 0xbfc2a949 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3d5c0d28, 0x419cd6f0, 0xc02ca09d ),
	NORM( 0xbb467a25, 0x3f7fffb3, 0x31f5e1c1 ),
	VERT( 0x3d5c0d28, 0x419cd6f0, 0xc18d0b79 ),
	NORM( 0x321b7c43, 0xb2108384, 0xbf800000 ),
	VERT( 0x3d5c0d28, 0x419cd6f0, 0xc18d0b79 ),
	NORM( 0x3799ef89, 0x3f800000, 0x36b8c57c ),
	VERT( 0xc1651731, 0x419c7dcc, 0xc18d0b78 ),
	NORM( 0xbb467a25, 0x3f7fffb3, 0x31f5e1c0 ),
	VERT( 0xc165170c, 0x419c7dcc, 0xc02ca09d ),
	NORM( 0xbb467a25, 0x3f7fffb3, 0x31f5e1c1 ),
	VERT( 0xc164cbaa, 0x419c7dcc, 0xc18d0b79 ),
	NORM( 0x3f3504eb, 0x00000000, 0xbf3504fc ),
	VERT( 0xc164cbaa, 0x4239f441, 0xc18d0b79 ),
	NORM( 0x3f13cd34, 0x3f13cd39, 0xbf13cd42 ),
	VERT( 0xc164cbaa, 0x4239f441, 0xc179ca2e ),
	NORM( 0x3f3504f3, 0x3f3504f3, 0x00000000 ),
	VERT( 0xc164cbaa, 0x419c7dcc, 0xc179ca2e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc179cc15, 0x419c7dcc, 0xc18d0b78 ),
	NORM( 0xb5c30850, 0x00000000, 0xbf800000 ),
	VERT( 0xc179cc15, 0x4239f441, 0xc18d0b78 ),
	NORM( 0xb589e8d4, 0x3f3504b7, 0xbf350530 ),
	VERT( 0xc179cbf0, 0x4239f441, 0xc179ca2e ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc179cc15, 0x4239f441, 0xc179a7c0 ),
	NORM( 0xbf800000, 0xb5afef4a, 0x35a8198f ),
	VERT( 0xc179cc15, 0x4239f441, 0xc179a7c0 ),
	NORM( 0x3a248ab4, 0x3f7ffffd, 0xb0d82769 ),
	VERT( 0xc179cbf0, 0x419c7dcc, 0xc179ca2e ),
	NORM( 0xbf800000, 0xb5afef4a, 0x35a8198f ),
	VERT( 0x3d5c0d2b, 0x4239f441, 0xc179a7c2 ),
	NORM( 0x3a248ab4, 0x3f7ffffd, 0xb0d82769 ),
	VERT( 0x3d5c0d2b, 0x41995025, 0xbfc2a949 ),
	NORM( 0xba20128c, 0xbd0f812b, 0x3f7fd7c1 ),
	VERT( 0xc179cbf0, 0x41995025, 0xbfc2a949 ),
	NORM( 0xba184213, 0xbd087fc1, 0x3f7fdb97 ),
	VERT( 0x3d20c176, 0x428d7642, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x3d20c176, 0x428d7642, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xbc9de192, 0x428d7652, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xbd20c176, 0x428d7642, 0xc13ff5c3 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xbd20c176, 0x428d7642, 0xc12f2fab ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xbc9de192, 0x428d7652, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x3c9de192, 0x428d7652, 0xc12f6ebf ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x3c9de192, 0x428d7652, 0xc13e22cb ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x41b4c53a, 0x42803b54, 0xc15d8afe ),
	NORM( 0x3f6406aa, 0x3812f879, 0xbee8b960 ),
	VERT( 0x41b4c53a, 0x427dfeff, 0xc15c4efb ),
	NORM( 0x3f643004, 0xbde487a8, 0xbee0f2b5 ),
	VERT( 0x41af4e57, 0x427cee87, 0xc16b242d ),
	NORM( 0x3f50e328, 0xbe1346ed, 0xbf0f571b ),
	VERT( 0x41af4e57, 0x42803a74, 0xc16ce79f ),
	NORM( 0x3f5098fa, 0xb87df151, 0xbf1466d4 ),
	VERT( 0x41b4c53a, 0x427bb262, 0xc158b07a ),
	NORM( 0x3f649b39, 0xbe5d4324, 0xbeca244f ),
	VERT( 0x41af4e57, 0x4279a5a6, 0xc165f89a ),
	NORM( 0x3f51a0a2, 0xbe8e4db5, 0xbf00916d ),
	VERT( 0x41b4c53a, 0x4279b8ec, 0xc152eea0 ),
	NORM( 0x3f652e7a, 0xbe9cf139, 0xbea59436 ),
	VERT( 0x41af4e57, 0x4276d391, 0xc15dbf1a ),
	NORM( 0x3f52a3c2, 0xbec95e14, 0xbed20b7b ),
	VERT( 0x41b4c53a, 0x42783512, 0xc14b6ddf ),
	NORM( 0x3f65c5ab, 0xbec0c86f, 0xbe6aed95 ),
	VERT( 0x41af4e57, 0x4274a97e, 0xc1530729 ),
	NORM( 0x3f53ade4, 0xbef6b16a, 0xbe94819e ),
	VERT( 0x41b4c53a, 0x42774143, 0xc142b119 ),
	NORM( 0x3f663b58, 0xbed767bc, 0xbdf3e5a7 ),
	VERT( 0x41af4e57, 0x42734d31, 0xc1468bc5 ),
	NORM( 0x3f547fac, 0xbf09819e, 0xbe197b87 ),
	VERT( 0x41b4c53a, 0x4276ee1a, 0xc13950bf ),
	NORM( 0x3f6672f5, 0xbedef90f, 0xb9850da2 ),
	VERT( 0x41af4e57, 0x4272d664, 0xc13926b2 ),
	NORM( 0x3f54ea11, 0xbf0e2393, 0x39bfeb9f ),
	VERT( 0x41b4c53a, 0x42774143, 0xc12ff065 ),
	NORM( 0x3f66614b, 0xbed6e2b7, 0x3df24435 ),
	VERT( 0x41af4e57, 0x42734d31, 0xc12bc1a0 ),
	NORM( 0x3f54daae, 0xbf08f253, 0x3e199bb2 ),
	VERT( 0x41b4c53a, 0x42783512, 0xc12733a0 ),
	NORM( 0x3f660f76, 0xbebfe4f9, 0x3e69518e ),
	VERT( 0x41af4e57, 0x4274a97e, 0xc11f463d ),
	NORM( 0x3f546009, 0xbef4c380, 0x3e93b8f6 ),
	VERT( 0x41b4c53a, 0x4279b8ec, 0xc11fb2de ),
	NORM( 0x3f6597bb, 0xbe9bef1f, 0x3ea43f6e ),
	VERT( 0x41af4e57, 0x4276d391, 0xc1148e4c ),
	NORM( 0x3f53a433, 0xbec72799, 0x3ed01e31 ),
	VERT( 0x41b4c53a, 0x427bb262, 0xc119f104 ),
	NORM( 0x3f651d35, 0xbe5b8bb3, 0x3ec84d4b ),
	VERT( 0x41af4e57, 0x4279a5a6, 0xc10c54cb ),
	NORM( 0x3f52e038, 0xbe8c664a, 0x3efe14e5 ),
	VERT( 0x41b4c53a, 0x427dfeff, 0xc1165283 ),
	NORM( 0x3f64c1e0, 0xbde292a3, 0x3edebf0b ),
	VERT( 0x41af4e57, 0x427cee87, 0xc1072939 ),
	NORM( 0x3f524c2a, 0xbe111675, 0x3f0d679e ),
	VERT( 0x41b4c53a, 0x42803b54, 0xc1151680 ),
	NORM( 0x3f649e12, 0x380e50c6, 0x3ee66437 ),
	VERT( 0x41af4e57, 0x42803a74, 0xc10565c7 ),
	NORM( 0x3f5210ab, 0xb876b287, 0x3f125124 ),
	VERT( 0x41b4c53a, 0x4281772a, 0xc1165283 ),
	NORM( 0x3f64bab8, 0x3de2d061, 0x3eded883 ),
	VERT( 0x41af4e57, 0x4281fda4, 0xc1072939 ),
	NORM( 0x3f523cec, 0x3e110f1b, 0x3f0d7ebe ),
	VERT( 0x41b4c53a, 0x42829d78, 0xc119f104 ),
	NORM( 0x3f650f7c, 0x3e5bce69, 0x3ec879c4 ),
	VERT( 0x41af4e57, 0x4283a215, 0xc10c54cb ),
	NORM( 0x3f52c311, 0x3e8c8376, 0x3efe6576 ),
	VERT( 0x41b4c53a, 0x42839a33, 0xc11fb2de ),
	NORM( 0x3f658477, 0x3e9c298f, 0x3ea47398 ),
	VERT( 0x41af4e57, 0x42850b1f, 0xc1148e4c ),
	NORM( 0x3f537b81, 0x3ec7722b, 0x3ed07c2d ),
	VERT( 0x41b4c53a, 0x42845c20, 0xc12733a0 ),
	NORM( 0x3f65f80a, 0x3ec03949, 0x3e69ad4e ),
	VERT( 0x41af4e57, 0x42862029, 0xc11f463d ),
	NORM( 0x3f542ed0, 0x3ef53c7d, 0x3e940b28 ),
	VERT( 0x41b4c53a, 0x4284d608, 0xc12ff065 ),
	NORM( 0x3f664742, 0x3ed74aa8, 0x3df2af99 ),
	VERT( 0x41af4e57, 0x4286ce4f, 0xc12bc1a0 ),
	NORM( 0x3f54a41b, 0x3f094045, 0x3e19fbca ),
	VERT( 0x41b4c53a, 0x4284ff9d, 0xc13950bf ),
	NORM( 0x3f6657f9, 0x3edf687f, 0xb985a8d5 ),
	VERT( 0x41af4e57, 0x428709b6, 0xc13926b2 ),
	NORM( 0x3f54b17f, 0x3f0e782b, 0x39c0d616 ),
	VERT( 0x41b4c53a, 0x4284d608, 0xc142b119 ),
	NORM( 0x3f662117, 0x3ed7d021, 0xbdf452a0 ),
	VERT( 0x41af4e57, 0x4286ce4f, 0xc1468bc5 ),
	NORM( 0x3f544874, 0x3f09d01f, 0xbe19db6d ),
	VERT( 0x41b4c53a, 0x42845c20, 0xc14b6ddf ),
	NORM( 0x3f65addd, 0x3ec11d78, 0xbe6b4a91 ),
	VERT( 0x41af4e57, 0x42862029, 0xc1530729 ),
	NORM( 0x3f537b87, 0x3ef72c17, 0xbe94d48c ),
	VERT( 0x41b4c53a, 0x42839a33, 0xc152eea0 ),
	NORM( 0x3f651ac4, 0x3e9d2c66, 0xbea5c928 ),
	VERT( 0x41af4e57, 0x42850b1f, 0xc15dbf1a ),
	NORM( 0x3f5279bc, 0x3ec9aa19, 0xbed26af7 ),
	VERT( 0x41b4c53a, 0x42829d78, 0xc158b07a ),
	NORM( 0x3f648d1e, 0x3e5d86fb, 0xbeca5185 ),
	VERT( 0x41af4e57, 0x4283a215, 0xc165f89a ),
	NORM( 0x3f518252, 0x3e8e6b8e, 0xbf00ba8c ),
	VERT( 0x41b4c53a, 0x4281772a, 0xc15c4efb ),
	NORM( 0x3f6428a3, 0x3de4c6e4, 0xbee10c9d ),
	VERT( 0x41af4e57, 0x4281fda4, 0xc16b242d ),
	NORM( 0x3f50d33d, 0x3e133f50, 0xbf0f6ec7 ),
	VERT( 0x41b74430, 0x42803b93, 0xc14d976e ),
	NORM( 0x3f7c96a2, 0x36d959a4, 0xbe269e36 ),
	VERT( 0x41b74430, 0x427f1569, 0xc14ce676 ),
	NORM( 0x3f7c9b3a, 0xbd22d5ae, 0xbe211e6d ),
	VERT( 0x41b74430, 0x427dcbca, 0xc14adf9f ),
	NORM( 0x3f7ca784, 0xbd9dcf6d, 0xbe10ec0a ),
	VERT( 0x41b74430, 0x427cb0bb, 0xc147a644 ),
	NORM( 0x3f7cb859, 0xbde03534, 0xbdedbc0f ),
	VERT( 0x41b74430, 0x427bd789, 0xc14372a3 ),
	NORM( 0x3f7cc951, 0xbe09f30c, 0xbda8e2e7 ),
	VERT( 0x41b74430, 0x427b4f00, 0xc13e8e0c ),
	NORM( 0x3f7cd5bf, 0xbe1a6a3a, 0xbd2f724d ),
	VERT( 0x41b74430, 0x427b206e, 0xc1394dda ),
	NORM( 0x3f7cda23, 0xbe201746, 0x3728d886 ),
	VERT( 0x41b74430, 0x427b4f00, 0xc1340da8 ),
	NORM( 0x3f7cd52e, 0xbe1a769b, 0x3d2f959f ),
	VERT( 0x41b74430, 0x427bd789, 0xc12f2910 ),
	NORM( 0x3f7cc834, 0xbe0a0862, 0x3da907c5 ),
	VERT( 0x41b74430, 0x427cb0bb, 0xc12af570 ),
	NORM( 0x3f7cb6c1, 0xbde065da, 0x3dedfa85 ),
	VERT( 0x41b74430, 0x427dcbca, 0xc127bc14 ),
	NORM( 0x3f7ca588, 0xbd9df934, 0x3e1117fd ),
	VERT( 0x41b74430, 0x427f1569, 0xc125b53e ),
	NORM( 0x3f7c98ff, 0xbd230570, 0x3e21535b ),
	VERT( 0x41b74430, 0x42803b93, 0xc1250446 ),
	NORM( 0x3f7c9450, 0x36d9f766, 0x3e26d674 ),
	VERT( 0x41b74430, 0x4280ec70, 0xc125b53e ),
	NORM( 0x3f7c989f, 0x3d231b19, 0x3e215b50 ),
	VERT( 0x41b74430, 0x4281913f, 0xc127bc14 ),
	NORM( 0x3f7ca4d3, 0x3d9e0efc, 0x3e1125bd ),
	VERT( 0x41b74430, 0x42821ec7, 0xc12af570 ),
	NORM( 0x3f7cb5c4, 0x3de08ae9, 0x3dee1ae6 ),
	VERT( 0x41b74430, 0x42828b61, 0xc12f2910 ),
	NORM( 0x3f7cc6fc, 0x3e0a2330, 0x3da924e3 ),
	VERT( 0x41b74430, 0x4282cfa5, 0xc1340da8 ),
	NORM( 0x3f7cd3dc, 0x3e1a96be, 0x3d2fb78e ),
	VERT( 0x41b74430, 0x4282e6ee, 0xc1394dda ),
	NORM( 0x3f7cd8c7, 0x3e20399d, 0x37292178 ),
	VERT( 0x41b74430, 0x4282cfa5, 0xc13e8e0c ),
	NORM( 0x3f7cd46e, 0x3e1a8a59, 0xbd2f942f ),
	VERT( 0x41b74430, 0x42828b61, 0xc14372a3 ),
	NORM( 0x3f7cc819, 0x3e0a0dd1, 0xbda8fffb ),
	VERT( 0x41b74430, 0x42821ec7, 0xc147a644 ),
	NORM( 0x3f7cb75c, 0x3de05a34, 0xbdeddc61 ),
	VERT( 0x41b74430, 0x4281913f, 0xc14adf9f ),
	NORM( 0x3f7ca6d0, 0x3d9de52a, 0xbe10f9c3 ),
	VERT( 0x41b74430, 0x4280ec70, 0xc14ce676 ),
	NORM( 0x3f7c9adb, 0x3d22eb49, 0xbe21265f ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_VM_nocap[]
START
VList      vertex_Controller_VM2_CPBody12_VM_nocap,
PList      strip_Controller_VM2_CPBody12_VM_nocap,
Center       0.000000F, 37.518044F, -10.887608F,
Radius      39.632664F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_VM_nocap[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_VM_nocap,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_YellowB[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 255, 128 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 242, _NB( UFO_0, 9 ),
	StripR(24),  25, 1, 24, 0, 47, 23, 46, 22, 45, 21, 
                   44, 20, 43, 19, 42, 18, 41, 17, 40, 16, 
                   39, 15, 38, 14, 
	StripR(24),  37, 13, 36, 12, 35, 11, 34, 10, 33, 9, 
                   32, 8, 31, 7, 30, 6, 29, 5, 28, 4, 
                   27, 3, 26, 2, 
	StripL(40),  13, 14, 37, 38, 61, 62, 85, 86, 109, 110, 
                   108, 111, 107, 112, 106, 113, 105, 114, 104, 115, 
                   103, 116, 102, 117, 101, 118, 100, 119, 99, 96, 
                   98, 97, 74, 73, 50, 49, 26, 25, 2, 1, 
                   
	StripR(24),  49, 25, 48, 24, 71, 47, 70, 46, 69, 45, 
                   68, 44, 67, 43, 66, 42, 65, 41, 64, 40, 
                   63, 39, 62, 38, 
	StripR(24),  26, 50, 27, 51, 28, 52, 29, 53, 30, 54, 
                   31, 55, 32, 56, 33, 57, 34, 58, 35, 59, 
                   36, 60, 37, 61, 
	StripR(24),  85, 61, 84, 60, 83, 59, 82, 58, 81, 57, 
                   80, 56, 79, 55, 78, 54, 77, 53, 76, 52, 
                   75, 51, 74, 50, 
	StripR(24),  62, 86, 63, 87, 64, 88, 65, 89, 66, 90, 
                   67, 91, 68, 92, 69, 93, 70, 94, 71, 95, 
                   48, 72, 49, 73, 
	StripR(24),  109, 85, 108, 84, 107, 83, 106, 82, 105, 81, 
                   104, 80, 103, 79, 102, 78, 101, 77, 100, 76, 
                   99, 75, 98, 74, 
	StripR(24),  86, 110, 87, 111, 88, 112, 89, 113, 90, 114, 
                   91, 115, 92, 116, 93, 117, 94, 118, 95, 119, 
                   72, 96, 73, 97, 
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_YellowB[]
START
	CnkV_VN(0x0, 721),
	OffnbIdx(0, 120),
	VERT( 0xc207509b, 0x41aaefe6, 0xc1c9d9ce ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc2022374, 0x41a992fc, 0xc1c9d9ce ),
	NORM( 0x3e8483e1, 0x3f7746ec, 0x00000000 ),
	VERT( 0xc1faa136, 0x41a59400, 0xc1c9d9ce ),
	NORM( 0x3f000002, 0x3f5db3d6, 0x00000000 ),
	VERT( 0xc1f25870, 0x419f38ad, 0xc1c9d9ce ),
	NORM( 0x3f3504ed, 0x3f3504fa, 0x00000000 ),
	VERT( 0xc1ebfd1c, 0x4196efe7, 0xc1c9d9ce ),
	NORM( 0x3f5db3da, 0x3efffff6, 0x00000000 ),
	VERT( 0xc1e7fe22, 0x418d4a36, 0xc1c9d9ce ),
	NORM( 0x3f7746eb, 0x3e8483e9, 0x00000000 ),
	VERT( 0xc1e6a136, 0x4182efe7, 0xc1c9d9ce ),
	NORM( 0x3f800000, 0x334e9136, 0x00000000 ),
	VERT( 0xc1e7fe22, 0x41712b2f, 0xc1c9d9ce ),
	NORM( 0x3f7746eb, 0xbe8483e7, 0x00000000 ),
	VERT( 0xc1ebfd1c, 0x415ddfcd, 0xc1c9d9ce ),
	NORM( 0x3f5db3da, 0xbefffff6, 0x00000000 ),
	VERT( 0xc1f25870, 0x414d4e41, 0xc1c9d9ce ),
	NORM( 0x3f3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0xc1faa136, 0x41409799, 0xc1c9d9ce ),
	NORM( 0x3f000001, 0xbf5db3d7, 0x00000000 ),
	VERT( 0xc2022374, 0x413899a3, 0xc1c9d9ce ),
	NORM( 0x3e8483e1, 0xbf7746ec, 0x00000000 ),
	VERT( 0xc207509b, 0x4135dfcd, 0xc1c9d9ce ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc20c7dc2, 0x413899a3, 0xc1c9d9ce ),
	NORM( 0xbe8483e1, 0xbf7746ec, 0x00000000 ),
	VERT( 0xc211509b, 0x41409799, 0xc1c9d9ce ),
	NORM( 0xbf000001, 0xbf5db3d7, 0x00000000 ),
	VERT( 0xc21574fe, 0x414d4e41, 0xc1c9d9ce ),
	NORM( 0xbf3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0xc218a2a8, 0x415ddfcd, 0xc1c9d9ce ),
	NORM( 0xbf5db3da, 0xbefffff6, 0x00000000 ),
	VERT( 0xc21aa225, 0x41712b2f, 0xc1c9d9ce ),
	NORM( 0xbf7746f1, 0xbe8483b8, 0x00000000 ),
	VERT( 0xc21b509a, 0x4182efe7, 0xc1c9d9ce ),
	NORM( 0xbf800000, 0x334e9131, 0x00000000 ),
	VERT( 0xc21aa225, 0x418d4a36, 0xc1c9d9ce ),
	NORM( 0xbf7746f1, 0x3e8483b9, 0x00000000 ),
	VERT( 0xc218a2a8, 0x4196efe7, 0xc1c9d9ce ),
	NORM( 0xbf5db3da, 0x3efffff6, 0x00000000 ),
	VERT( 0xc21574fe, 0x419f38ad, 0xc1c9d9ce ),
	NORM( 0xbf3504ed, 0x3f3504fa, 0x00000000 ),
	VERT( 0xc211509b, 0x41a59400, 0xc1c9d9ce ),
	NORM( 0xbf000002, 0x3f5db3d6, 0x00000000 ),
	VERT( 0xc20c7dc2, 0x41a992fc, 0xc1c9d9ce ),
	NORM( 0xbe8483e1, 0x3f7746ec, 0x00000000 ),
	VERT( 0xc207509b, 0x41aaefe6, 0xc1e5e47d ),
	NORM( 0xb2b28cb8, 0x3f6de5dc, 0xbebd1c06 ),
	VERT( 0xc2022374, 0x41a992fc, 0xc1e5e47d ),
	NORM( 0x3e763b4b, 0x3f65ce63, 0xbebd0edb ),
	VERT( 0xc1faa136, 0x41a59400, 0xc1e5e47d ),
	NORM( 0x3eede0dd, 0x3f4e13c5, 0xbebce8b1 ),
	VERT( 0xc1f25870, 0x419f38ad, 0xc1e5e47d ),
	NORM( 0x3f283f0c, 0x3f2850a7, 0xbebcabe9 ),
	VERT( 0xc1ebfd1c, 0x4196efe7, 0xc1e5e47d ),
	NORM( 0x3f4e1fda, 0x3eee2642, 0xbebc5c51 ),
	VERT( 0xc1e7fe22, 0x418d4a36, 0xc1e5e47d ),
	NORM( 0x3f65fcb8, 0x3e76c687, 0xbebbff59 ),
	VERT( 0xc1e6a136, 0x4182efe7, 0xc1e5e47d ),
	NORM( 0x3f6e31fc, 0x398dcc9e, 0xbebb9b2d ),
	VERT( 0xc1e7fe22, 0x41712b2f, 0xc1e5e47d ),
	NORM( 0x3f662bc1, 0xbe766b27, 0xbebb36a5 ),
	VERT( 0xc1ebfd1c, 0x415ddfcd, 0xc1e5e47d ),
	NORM( 0x3f4e7154, 0xbeee3d70, 0xbebad88b ),
	VERT( 0xc1f25870, 0x414d4e41, 0xc1e5e47d ),
	NORM( 0x3f289d27, 0xbf288b46, 0xbeba876d ),
	VERT( 0xc1faa136, 0x41409799, 0xc1e5e47d ),
	NORM( 0x3eee83c9, 0xbf4e7d6d, 0xbeba4919 ),
	VERT( 0xc2022374, 0x413899a3, 0xc1e5e47d ),
	NORM( 0x3e76f776, 0xbf665a77, 0xbeba21cf ),
	VERT( 0xc207509b, 0x4135dfcd, 0xc1e5e47d ),
	NORM( 0x32e4daf1, 0xbf6e7e91, 0xbeba146c ),
	VERT( 0xc20c7dc2, 0x413899a3, 0xc1e5e47d ),
	NORM( 0xbe76f788, 0xbf665a73, 0xbeba21e1 ),
	VERT( 0xc211509b, 0x41409799, 0xc1e5e47d ),
	NORM( 0xbeee83c7, 0xbf4e7d69, 0xbeba492e ),
	VERT( 0xc21574fe, 0x414d4e41, 0xc1e5e47d ),
	NORM( 0xbf289d20, 0xbf288b3c, 0xbeba87ab ),
	VERT( 0xc218a2a8, 0x415ddfcd, 0xc1e5e47d ),
	NORM( 0xbf4e714a, 0xbeee3d61, 0xbebad8cb ),
	VERT( 0xc21aa225, 0x41712b2f, 0xc1e5e47d ),
	NORM( 0xbf662bbb, 0xbe766ac4, 0xbebb36e1 ),
	VERT( 0xc21b509a, 0x4182efe7, 0xc1e5e47d ),
	NORM( 0xbf6e31ee, 0x398dcd9d, 0xbebb9b75 ),
	VERT( 0xc21aa225, 0x418d4a36, 0xc1e5e47d ),
	NORM( 0xbf65fcb1, 0x3e76c61b, 0xbebbff9d ),
	VERT( 0xc218a2a8, 0x4196efe7, 0xc1e5e47d ),
	NORM( 0xbf4e1fcf, 0x3eee2632, 0xbebc5c97 ),
	VERT( 0xc21574fe, 0x419f38ad, 0xc1e5e47d ),
	NORM( 0xbf283f0a, 0x3f2850a3, 0xbebcabfc ),
	VERT( 0xc211509b, 0x41a59400, 0xc1e5e47d ),
	NORM( 0xbeede0e0, 0x3f4e13bc, 0xbebce8d5 ),
	VERT( 0xc20c7dc2, 0x41a992fc, 0xc1e5e47d ),
	NORM( 0xbe763b48, 0x3f65ce59, 0xbebd0f0d ),
	VERT( 0xc207509b, 0x41a7b1ac, 0xc1e92c50 ),
	NORM( 0x38cc5b38, 0x3f074060, 0xbf595aca ),
	VERT( 0xc2028d77, 0x41a670ac, 0xc1e92c50 ),
	NORM( 0x3e0c2eae, 0x3f029185, 0xbf596497 ),
	VERT( 0xc1fc3ace, 0x41a2c388, 0xc1e92c50 ),
	NORM( 0x3e874d1f, 0x3eea0039, 0xbf596ad5 ),
	VERT( 0xc1f49bb2, 0x419cea63, 0xc1e92c50 ),
	NORM( 0x3ebf44b0, 0x3ebef514, 0xbf596cfa ),
	VERT( 0xc1eec28e, 0x41954b47, 0xc1e92c50 ),
	NORM( 0x3eea3704, 0x3e86ef39, 0xbf596aac ),
	VERT( 0xc1eb156a, 0x418c6b29, 0xc1e92c50 ),
	NORM( 0x3f029ee7, 0x3e0b7358, 0xbf596415 ),
	VERT( 0xc1e9d468, 0x4182e4e0, 0xc1e92c50 ),
	NORM( 0x3f07422f, 0xba05bbdc, 0xbf5959a7 ),
	VERT( 0xc1eb156a, 0x4172bd2f, 0xc1e92c50 ),
	NORM( 0x3f02b350, 0xbe0c94cf, 0xbf594c29 ),
	VERT( 0xc1eec28e, 0x4160fcf3, 0xc1e92c50 ),
	NORM( 0x3eea7d42, 0xbe879dd2, 0xbf593c91 ),
	VERT( 0xc1f49bb2, 0x4151beb9, 0xc1e92c50 ),
	NORM( 0x3ebf94d5, 0xbebfcbc0, 0xbf592c10 ),
	VERT( 0xc1fc3ace, 0x41460c71, 0xc1e92c50 ),
	NORM( 0x3e87912a, 0xbeeafd69, 0xbf591bea ),
	VERT( 0xc2028d77, 0x413eb229, 0xc1e92c50 ),
	NORM( 0x3e0c7b2e, 0xbf031d66, 0xbf590d40 ),
	VERT( 0xc207509b, 0x413c3025, 0xc1e92c50 ),
	NORM( 0x38bfb76f, 0xbf07d027, 0xbf590110 ),
	VERT( 0xc20c13be, 0x413eb229, 0xc1e92c50 ),
	NORM( 0xbe0c7123, 0xbf0340eb, 0xbf58f82f ),
	VERT( 0xc21083ce, 0x41460c71, 0xc1e92c50 ),
	NORM( 0xbe87c034, 0xbeeb7905, 0xbf58f311 ),
	VERT( 0xc214535c, 0x4151beb9, 0xc1e92c50 ),
	NORM( 0xbec00bb3, 0xbec05b63, 0xbf58f206 ),
	VERT( 0xc2173fee, 0x4160fcf3, 0xc1e92c50 ),
	NORM( 0xbeeb3d52, 0xbe881b71, 0xbf58f4f8 ),
	VERT( 0xc2191680, 0x4172bd2f, 0xc1e92c50 ),
	NORM( 0xbf032efc, 0xbe0d27d0, 0xbf58fb9f ),
	VERT( 0xc219b700, 0x4182e4e0, 0xc1e92c50 ),
	NORM( 0xbf07c8f5, 0xba0750e1, 0xbf59058e ),
	VERT( 0xc2191680, 0x418c6b29, 0xc1e92c50 ),
	NORM( 0xbf031d25, 0x3e0c063e, 0xbf591220 ),
	VERT( 0xc2173fee, 0x41954b47, 0xc1e92c50 ),
	NORM( 0xbeeaff00, 0x3e877085, 0xbf592094 ),
	VERT( 0xc214535c, 0x419cea63, 0xc1e92c50 ),
	NORM( 0xbebfc2cb, 0x3ebf8bf7, 0xbf592ffe ),
	VERT( 0xc21083ce, 0x41a2c388, 0xc1e92c50 ),
	NORM( 0xbe877fd7, 0x3eea83bb, 0xbf593f7f ),
	VERT( 0xc20c13be, 0x41a670ac, 0xc1e92c50 ),
	NORM( 0xbe0c2476, 0x3f02b798, 0xbf594e1e ),
	VERT( 0xc2075b46, 0x419f6296, 0xc1eba02e ),
	NORM( 0xb95e5c1f, 0x3e6fa14a, 0xbf78e448 ),
	VERT( 0xc203b089, 0x419e6b6a, 0xc1eba02e ),
	NORM( 0x3d76c6f8, 0x3e6756c4, 0xbf78e774 ),
	VERT( 0xc20045c4, 0x419b96bc, 0xc1eba02e ),
	NORM( 0x3dee80ea, 0x3e4f3457, 0xbf78ece4 ),
	VERT( 0xc1faad2e, 0x419715ef, 0xc1eba02e ),
	NORM( 0x3e28774c, 0x3e28f579, 0xbf78f42e ),
	VERT( 0xc1f62c62, 0x41913794, 0xc1eba02e ),
	NORM( 0x3e4df856, 0x3deea1e3, 0xbf78fcc9 ),
	VERT( 0xc1f357b4, 0x418a620d, 0xc1eba02e ),
	NORM( 0x3e654000, 0x3d77080c, 0xbf79061e ),
	VERT( 0xc1f26086, 0x41830c92, 0xc1eba02e ),
	NORM( 0x3e6ccd8f, 0x398aa96b, 0xbf790f8f ),
	VERT( 0xc1f357b4, 0x41776e2f, 0xc1eba02e ),
	NORM( 0x3e6437f6, 0xbd73c182, 0xbf791880 ),
	VERT( 0xc1f62c62, 0x4169c31f, 0xc1eba02e ),
	NORM( 0x3e4c2e4b, 0xbdeb79d5, 0xbf792060 ),
	VERT( 0xc1faad2e, 0x415e0669, 0xc1eba02e ),
	NORM( 0x3e2664fb, 0xbe265668, 0xbf7926b2 ),
	VERT( 0xc20045c4, 0x415504d1, 0xc1eba02e ),
	NORM( 0x3deae7a5, 0xbe4b87a2, 0xbf792b0e ),
	VERT( 0xc203b089, 0x414f5b75, 0xc1eba02e ),
	NORM( 0x3d729e6c, 0xbe62e148, 0xbf792d2c ),
	VERT( 0xc2075b46, 0x414d6d1b, 0xc1eba02e ),
	NORM( 0xb955ccd0, 0xbe6addea, 0xbf792ce2 ),
	VERT( 0xc20b0602, 0x414f5b75, 0xc1eba02e ),
	NORM( 0xbd74629e, 0xbe62f786, 0xbf792a2e ),
	VERT( 0xc20e70c7, 0x415504d1, 0xc1eba02e ),
	NORM( 0xbdebec6e, 0xbe4baeee, 0xbf792533 ),
	VERT( 0xc2115ff4, 0x415e0669, 0xc1eba02e ),
	NORM( 0xbe2700a1, 0xbe268520, 0xbf791e3c ),
	VERT( 0xc213a05a, 0x4169c31f, 0xc1eba02e ),
	NORM( 0xbe4ce5b2, 0xbdebcd5b, 0xbf7915bb ),
	VERT( 0xc2150ab1, 0x41776e2f, 0xc1eba02e ),
	NORM( 0xbe650707, 0xbd7422a2, 0xbf790c40 ),
	VERT( 0xc2158647, 0x41830c92, 0xc1eba02e ),
	NORM( 0xbe6da995, 0x398eeb44, 0xbf790275 ),
	VERT( 0xc2150ab1, 0x418a620d, 0xc1eba02e ),
	NORM( 0xbe661a32, 0x3d778482, 0xbf78f90e ),
	VERT( 0xc213a05a, 0x41913794, 0xc1eba02e ),
	NORM( 0xbe4ec19c, 0x3def0f01, 0xbf78f0b9 ),
	VERT( 0xc2115ff4, 0x419715ef, 0xc1eba02e ),
	NORM( 0xbe2924d7, 0x3e293616, 0xbf78ea15 ),
	VERT( 0xc20e70c7, 0x419b96bc, 0xc1eba02e ),
	NORM( 0xbdef9f50, 0x3e4f6d89, 0xbf78e59e ),
	VERT( 0xc20b0602, 0x419e6b6a, 0xc1eba02e ),
	NORM( 0xbd78a699, 0x3e677844, 0xbf78e3a4 ),
	VERT( 0xc207452a, 0x419174c5, 0xc1ee1be9 ),
	NORM( 0x38e6a934, 0x3dc35523, 0xbf7ed53c ),
	VERT( 0xc2056668, 0x4190f6b7, 0xc1ee1be9 ),
	NORM( 0x3ccbc8b6, 0x3dbd3ad5, 0xbf7ed349 ),
	VERT( 0xc203a846, 0x418f8520, 0xc1ee1be9 ),
	NORM( 0x3d44ff4a, 0x3daa2676, 0xbf7ed153 ),
	VERT( 0xc202292d, 0x418d3933, 0xc1ee1be9 ),
	NORM( 0x3d8b95a5, 0x3d8b4baf, 0xbf7ecf7d ),
	VERT( 0xc2010336, 0x418a3aff, 0xc1ee1be9 ),
	NORM( 0x3dab4e04, 0x3d456bc3, 0xbf7ecde7 ),
	VERT( 0xc2004a6b, 0x4186bebd, 0xc1ee1be9 ),
	NORM( 0x3dbf618c, 0x3ccca30c, 0xbf7eccb0 ),
	VERT( 0xc2000b63, 0x41830139, 0xc1ee1be9 ),
	NORM( 0x3dc6585f, 0xb7f43e8a, 0xbf7ecbed ),
	VERT( 0xc2004a6b, 0x417e876b, 0xc1ee1be9 ),
	NORM( 0x3dbfa9ad, 0xbccd6a09, 0xbf7ecbaf ),
	VERT( 0xc2010336, 0x41778ee5, 0xc1ee1be9 ),
	NORM( 0x3dabcacc, 0xbd46383e, 0xbf7ecbf8 ),
	VERT( 0xc202292d, 0x4171927f, 0xc1ee1be9 ),
	NORM( 0x3d8c2548, 0xbd8bf923, 0xbf7eccc5 ),
	VERT( 0xc203a846, 0x416cfaa3, 0xc1ee1be9 ),
	NORM( 0x3d45f7b5, 0xbdab1ab5, 0xbf7ece04 ),
	VERT( 0xc2056668, 0x416a1777, 0xc1ee1be9 ),
	NORM( 0x3ccce78c, 0xbdbe61a9, 0xbf7ecfa1 ),
	VERT( 0xc207452a, 0x41691b59, 0xc1ee1be9 ),
	NORM( 0x38e98513, 0xbdc48d9e, 0xbf7ed17b ),
	VERT( 0xc20923eb, 0x416a1777, 0xc1ee1be9 ),
	NORM( 0xbcc9ec11, 0xbdbd4ce2, 0xbf7ed372 ),
	VERT( 0xc20ae20d, 0x416cfaa3, 0xc1ee1be9 ),
	NORM( 0xbd42e52e, 0xbda93b79, 0xbf7ed563 ),
	VERT( 0xc20c6127, 0x4171927f, 0xc1ee1be9 ),
	NORM( 0xbd89884f, 0xbd89d03c, 0xbf7ed72c ),
	VERT( 0xc20d871d, 0x41778ee5, 0xc1ee1be9 ),
	NORM( 0xbda81a5c, 0xbd427acd, 0xbf7ed8b1 ),
	VERT( 0xc20e3fe8, 0x417e876b, 0xc1ee1be9 ),
	NORM( 0xbdbb30a4, 0xbcc9185b, 0xbf7ed9d8 ),
	VERT( 0xc20e7ef0, 0x41830139, 0xc1ee1be9 ),
	NORM( 0xbdc1970b, 0xb7e8d625, 0xbf7eda8e ),
	VERT( 0xc20e3fe8, 0x4186bebd, 0xc1ee1be9 ),
	NORM( 0xbdbaeb6b, 0x3cc859ac, 0xbf7edac9 ),
	VERT( 0xc20d871d, 0x418a3aff, 0xc1ee1be9 ),
	NORM( 0xbda7a250, 0x3d41b572, 0xbf7eda84 ),
	VERT( 0xc20c6127, 0x418d3933, 0xc1ee1be9 ),
	NORM( 0xbd88fd76, 0x3d892792, 0xbf7ed9c4 ),
	VERT( 0xc20ae20d, 0x418f8520, 0xc1ee1be9 ),
	NORM( 0xbd41f3e6, 0x3da84bf6, 0xbf7ed895 ),
	VERT( 0xc20923eb, 0x4190f6b7, 0xc1ee1be9 ),
	NORM( 0xbcc8d589, 0x3dbc28fa, 0xbf7ed70a ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_YellowB[]
START
VList      vertex_Controller_VM2_CPBody12_YellowB,
PList      strip_Controller_VM2_CPBody12_YellowB,
Center      -33.828712F, 16.367138F, -27.497490F,
Radius       5.489570F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_YellowB[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_YellowB,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Controller_VM2_CPBody12_VM_nocap,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_Trigger02[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 284, _NB( UFO_0, 22 ),
	StripL(3),  45, 12, 41, 
	StripL(7),  15, 43, 46, 66, 70, 91, 94, 
	StripL(9),  54, 0, 22, 25, 29, 31, 7, 3, 34, 
	StripR(5),  60, 41, 64, 45, 68, 
	StripR(11),  58, 34, 39, 7, 10, 29, 19, 22, 50, 54, 
                   74, 
	StripL(3),  66, 43, 63, 
	StripR(7),  81, 60, 85, 64, 89, 68, 93, 
	StripR(21),  81, 57, 60, 36, 41, 9, 12, 16, 45, 49, 
                   68, 73, 93, 96, 89, 106, 85, 104, 81, 103, 
                   57, 
	StripL(5),  91, 66, 86, 63, 83, 
	StripR(36),  99, 74, 78, 54, 33, 0, 5, 25, 26, 31, 
                   21, 3, 52, 34, 76, 58, 101, 83, 110, 86, 
                   108, 91, 99, 94, 74, 70, 50, 46, 19, 15, 
                   10, 43, 39, 63, 58, 83, 
	StripR(23),  103, 78, 57, 33, 36, 5, 9, 26, 16, 21, 
                   49, 52, 73, 76, 96, 101, 106, 110, 104, 108, 
                   103, 99, 78, 
	StripL(3),  44, 13, 40, 
	StripL(7),  14, 42, 47, 67, 71, 90, 95, 
	StripL(9),  55, 1, 23, 24, 28, 30, 6, 2, 35, 
	StripR(5),  61, 40, 65, 44, 69, 
	StripR(11),  59, 35, 38, 6, 11, 28, 18, 23, 51, 55, 
                   75, 
	StripL(5),  42, 62, 67, 87, 90, 
	StripR(7),  80, 61, 84, 65, 88, 69, 92, 
	StripR(21),  80, 56, 61, 37, 40, 8, 13, 17, 44, 48, 
                   69, 72, 92, 97, 88, 107, 84, 105, 80, 102, 
                   56, 
	StripL(3),  87, 62, 82, 
	StripR(36),  98, 75, 79, 55, 32, 1, 4, 24, 27, 30, 
                   20, 2, 53, 35, 77, 59, 100, 82, 111, 87, 
                   109, 90, 98, 95, 75, 71, 51, 47, 18, 14, 
                   11, 42, 38, 62, 59, 82, 
	StripR(23),  102, 79, 56, 32, 37, 4, 8, 27, 17, 20, 
                   48, 53, 72, 77, 97, 100, 107, 111, 105, 109, 
                   102, 98, 79, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_Trigger02[]
START
	CnkV_VN(0x0, 673),
	OffnbIdx(0, 112),
	VERT( 0xc26d97e9, 0x417ec8b7, 0x414585c2 ),
	NORM( 0xbf63af80, 0xbde32dbd, 0x3ee30ef5 ),
	VERT( 0x42460b73, 0x417e2e98, 0x414585c2 ),
	NORM( 0xbf63af88, 0xbde32d9e, 0x3ee30ed8 ),
	VERT( 0x42460b73, 0x41b75a1d, 0xc0a8ecbf ),
	NORM( 0xbf676dc9, 0x3e91e0eb, 0xbea32ce3 ),
	VERT( 0xc26d97e9, 0x41b7a72c, 0xc0a8ecbf ),
	NORM( 0xbf676dc1, 0x3e91e107, 0xbea32cf6 ),
	VERT( 0x42460b73, 0x419797f8, 0x414e255a ),
	NORM( 0xbf631278, 0xbd00ef65, 0x3eebe01b ),
	VERT( 0xc26d97e9, 0x4197e506, 0x414e255a ),
	NORM( 0xbf631270, 0xbd00ef8a, 0x3eebe039 ),
	VERT( 0x42460b73, 0x41b13d09, 0xc0a8ecbf ),
	NORM( 0xbf7183a2, 0x00000000, 0xbea9c971 ),
	VERT( 0xc26d97e9, 0x41b18a18, 0xc0a8ecbf ),
	NORM( 0xbf71839c, 0x00000000, 0xbea9c991 ),
	VERT( 0x42460b73, 0x41b08701, 0x4148f8cc ),
	NORM( 0xbf63bf65, 0x3e2663d6, 0x3eda8295 ),
	VERT( 0xc26d97e9, 0x41b0d410, 0x4148f8cc ),
	NORM( 0xbf63bf5d, 0x3e266400, 0x3eda82ae ),
	VERT( 0xc26d97e9, 0x418332cf, 0xc0a8ecbf ),
	NORM( 0xbf6b576e, 0x00000000, 0xbec97f80 ),
	VERT( 0x42460b73, 0x4182e5c0, 0xc0a8ecbf ),
	NORM( 0xbf6b5774, 0x00000000, 0xbec97f65 ),
	VERT( 0xc26d97e9, 0x41b5eda7, 0x41405936 ),
	NORM( 0xbf5c1d9a, 0x3f012e23, 0x3d9f83ee ),
	VERT( 0x42460b73, 0x41b5a099, 0x41405936 ),
	NORM( 0xbf5c1da0, 0x3f012e18, 0x3d9f83e9 ),
	VERT( 0x42460b73, 0xc048e511, 0xc0a8ecbf ),
	NORM( 0xbf6911b5, 0xbeac9b87, 0xbe757c1a ),
	VERT( 0xc26d97e9, 0xc0467c9b, 0xc0a8ecbf ),
	NORM( 0xbf6911ad, 0xbeac9baa, 0xbe757c31 ),
	VERT( 0xc26d97e9, 0x41aa4968, 0x40e206cb ),
	NORM( 0xbf6aa657, 0x3eca9c33, 0xbd6962cc ),
	VERT( 0x42460b73, 0x41a9fc5a, 0x40e206cb ),
	NORM( 0xbf6aa65c, 0x3eca9c1b, 0xbd6962b7 ),
	VERT( 0x42460b73, 0x4135beda, 0x412910b8 ),
	NORM( 0xbf60b1b7, 0xbe9451cb, 0x3ec36fbb ),
	VERT( 0xc26d97e9, 0x413658f8, 0x412910b8 ),
	NORM( 0xbf60b1ad, 0xbe9451e1, 0x3ec36fd5 ),
	VERT( 0x42460b73, 0x41a9fc5a, 0x3f6b4e42 ),
	NORM( 0xbf6d7e95, 0x3ebda434, 0x3d3e4490 ),
	VERT( 0xc26d97e9, 0x41aa4968, 0x3f6b4e42 ),
	NORM( 0xbf6d7e8f, 0x3ebda450, 0x3d3e44b9 ),
	VERT( 0xc26d97e9, 0x41571dcf, 0x41389662 ),
	NORM( 0xbf64c0cb, 0xbe28a75f, 0x3ed5d328 ),
	VERT( 0x42460b73, 0x415683b1, 0x41389662 ),
	NORM( 0xbf64c0d3, 0xbe28a748, 0x3ed5d30a ),
	VERT( 0x42460b73, 0x417b7264, 0x40e206cb ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc26d97e9, 0x417c0c83, 0x40e206cb ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc26d97e9, 0x41a4530f, 0x40e206cb ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42460b73, 0x41a40600, 0x40e206cb ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42460b73, 0x417b7264, 0x3f6b4e42 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc26d97e9, 0x417c0c83, 0x3f6b4e42 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42460b73, 0x41a40600, 0x3f6b4e42 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc26d97e9, 0x41a4530f, 0x3f6b4e42 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x424a0159, 0x417b9851, 0x41519862 ),
	NORM( 0xbea2a68e, 0xbe65b435, 0x3f6bd92e ),
	VERT( 0xc269a202, 0x417c3270, 0x41519862 ),
	NORM( 0xbea2a66f, 0xbe65b43d, 0x3f6bd933 ),
	VERT( 0xc269a202, 0x41befb9f, 0xc0a8ecbf ),
	NORM( 0xbecf83be, 0x3f6503f6, 0xbe40c335 ),
	VERT( 0x424a0159, 0x41beae90, 0xc0a8ecbf ),
	NORM( 0xbecf83db, 0x3f6503f1, 0xbe40c31a ),
	VERT( 0xc269a202, 0x419b580f, 0x415b14bc ),
	NORM( 0xbea9825a, 0xbca58964, 0x3f7181ef ),
	VERT( 0x424a0159, 0x419b0b00, 0x415b14bc ),
	NORM( 0xbea98277, 0xbca5895a, 0x3f7181ea ),
	VERT( 0x424a0159, 0x41ba035b, 0xc0e01d4f ),
	NORM( 0xbec078fe, 0x3eb393ed, 0xbf5b92d1 ),
	VERT( 0xc269a202, 0x41ba5069, 0xc0e01d4f ),
	NORM( 0xbec078ea, 0x3eb393dc, 0xbf5b92d9 ),
	VERT( 0x424a0159, 0x41b5b38e, 0x4155e82d ),
	NORM( 0xbeb09c07, 0x3edb5036, 0x3f55cebf ),
	VERT( 0xc269a202, 0x41b6009d, 0x4155e82d ),
	NORM( 0xbeb09bf2, 0x3edb5041, 0x3f55cec0 ),
	VERT( 0x424a0159, 0x41849f44, 0xc0d097a8 ),
	NORM( 0xbec4a23f, 0xbd146eb4, 0xbf6c2f90 ),
	VERT( 0xc269a202, 0x4184ec53, 0xc0d097a8 ),
	NORM( 0xbec4a223, 0xbd146eb2, 0xbf6c2f96 ),
	VERT( 0x424a0159, 0x41ba5ec5, 0x4149d58e ),
	NORM( 0xbeb0d5da, 0x3f65d769, 0x3e8bdfe7 ),
	VERT( 0xc269a202, 0x41baabd4, 0x4149d58e ),
	NORM( 0xbeb0d5c1, 0x3f65d76f, 0x3e8bdfd9 ),
	VERT( 0xc269a202, 0xc082499f, 0xc0a8ecbf ),
	NORM( 0xbef1fc8e, 0xbf5715c5, 0xbe882996 ),
	VERT( 0x424a0159, 0xc0837dda, 0xc0a8ecbf ),
	NORM( 0xbef1fcaa, 0xbf5715bf, 0xbe88298f ),
	VERT( 0x424a0159, 0x41b150cd, 0x40e206cb ),
	NORM( 0xbea98079, 0x3f6fa1d7, 0xbdf3ed7c ),
	VERT( 0xc269a202, 0x41b19ddb, 0x40e206cb ),
	NORM( 0xbea98060, 0x3f6fa1db, 0xbdf3ed8c ),
	VERT( 0xc269a202, 0x41304fa9, 0x41344696 ),
	NORM( 0xbea19142, 0xbf0fa634, 0x3f43e526 ),
	VERT( 0x424a0159, 0x412fb58a, 0x41344696 ),
	NORM( 0xbea19163, 0xbf0fa630, 0x3f43e522 ),
	VERT( 0xc269a202, 0x41b19ddb, 0x3f6b4e42 ),
	NORM( 0xbebf0691, 0x3f6b58bb, 0x3e001474 ),
	VERT( 0x424a0159, 0x41b150cd, 0x3f6b4e42 ),
	NORM( 0xbebf06b0, 0x3f6b58b5, 0x3e001467 ),
	VERT( 0xc269a202, 0x4151147f, 0x4143cc3f ),
	NORM( 0xbea68adb, 0xbeb2e043, 0x3f60f357 ),
	VERT( 0x424a0159, 0x41507a60, 0x4143cc3f ),
	NORM( 0xbea68afd, 0xbeb2e040, 0x3f60f351 ),
	VERT( 0x4268b2c7, 0x417b9851, 0x41519862 ),
	NORM( 0x3eb029e8, 0xbe5f9486, 0x3f69c7d0 ),
	VERT( 0xc24af094, 0x417c3270, 0x41519862 ),
	NORM( 0x3eb02a07, 0xbe5f9481, 0x3f69c7cb ),
	VERT( 0xc24af094, 0x41befb9f, 0xc0a8ecbf ),
	NORM( 0x3ece7f53, 0x3f6a3640, 0xbc90db40 ),
	VERT( 0x4268b2c7, 0x41beae90, 0xc0a8ecbf ),
	NORM( 0x3ece7f39, 0x3f6a3645, 0xbc90dab1 ),
	VERT( 0xc24af094, 0x419b580f, 0x415b14bc ),
	NORM( 0x3eb68270, 0xbc9ca8cb, 0x3f6f220e ),
	VERT( 0x4268b2c7, 0x419b0b00, 0x415b14bc ),
	NORM( 0x3eb6824f, 0xbc9ca8e5, 0x3f6f2214 ),
	VERT( 0x4268b2c7, 0x41ba035b, 0xc0e01d4f ),
	NORM( 0x3edfbb24, 0x3f00a830, 0xbf3ef849 ),
	VERT( 0xc24af094, 0x41ba5069, 0xc0e01d4f ),
	NORM( 0x3edfbb38, 0x3f00a827, 0xbf3ef849 ),
	VERT( 0xc24af094, 0x41b6009d, 0x4155e82d ),
	NORM( 0x3ebd4743, 0x3eeb3b53, 0x3f4ec03b ),
	VERT( 0x4268b2c7, 0x41b5b38e, 0x4155e82d ),
	NORM( 0x3ebd4722, 0x3eeb3b5b, 0x3f4ec040 ),
	VERT( 0xc24af094, 0x4184ec53, 0xc0d097a8 ),
	NORM( 0x3ed0eec5, 0xbd76852f, 0xbf6934ee ),
	VERT( 0x4268b2c7, 0x41849f44, 0xc0d097a8 ),
	NORM( 0x3ed0eea5, 0xbd768534, 0xbf6934f5 ),
	VERT( 0xc24af094, 0x41baabd4, 0x4149d58e ),
	NORM( 0x3eb922ac, 0x3f666a14, 0x3e790b4c ),
	VERT( 0x4268b2c7, 0x41ba5ec5, 0x4149d58e ),
	NORM( 0x3eb92289, 0x3f666a1a, 0x3e790b5f ),
	VERT( 0xc24af094, 0xc082499f, 0xc0a8ecbf ),
	NORM( 0x3efabeb0, 0xbf55db52, 0xbe7f9856 ),
	VERT( 0x4268b2c7, 0xc0837dda, 0xc0a8ecbf ),
	NORM( 0x3efabe9b, 0xbf55db56, 0xbe7f9873 ),
	VERT( 0x4268b2c7, 0x41b150cd, 0x40e206cb ),
	NORM( 0x3ebabebc, 0x3f6d0a89, 0xbdc8a635 ),
	VERT( 0xc24af094, 0x41b19ddb, 0x40e206cb ),
	NORM( 0x3ebabee3, 0x3f6d0a81, 0xbdc8a645 ),
	VERT( 0xc24af094, 0x41304fa9, 0x41344696 ),
	NORM( 0x3eae5010, 0xbf0e628a, 0x3f4213fd ),
	VERT( 0x4268b2c7, 0x412fb58a, 0x41344696 ),
	NORM( 0x3eae4ff3, 0xbf0e628f, 0x3f421400 ),
	VERT( 0xc24af094, 0x41b19ddb, 0x3f6b4e42 ),
	NORM( 0x3ecd7262, 0x3f685784, 0x3dfd212a ),
	VERT( 0x4268b2c7, 0x41b150cd, 0x3f6b4e42 ),
	NORM( 0x3ecd723e, 0x3f68578c, 0x3dfd2121 ),
	VERT( 0xc24af094, 0x4151147f, 0x4143cc3f ),
	NORM( 0x3eb3db1b, 0xbeb09e0f, 0x3f5ed2f2 ),
	VERT( 0x4268b2c7, 0x41507a60, 0x4143cc3f ),
	NORM( 0x3eb3dafd, 0xbeb09e14, 0x3f5ed2f7 ),
	VERT( 0x426c3a4e, 0x417e2e98, 0x414585c2 ),
	NORM( 0x3f670e57, 0xbdcdf159, 0x3ed65978 ),
	VERT( 0xc247690e, 0x417ec8b7, 0x414585c2 ),
	NORM( 0x3f670e5e, 0xbdcdf13b, 0x3ed6595a ),
	VERT( 0x426c3a4e, 0x41b75a1d, 0xc0a8ecbf ),
	NORM( 0x3f5f495a, 0x3efa2533, 0xbcbfe409 ),
	VERT( 0xc247690e, 0x41b7a72c, 0xc0a8ecbf ),
	NORM( 0x3f5f4966, 0x3efa2505, 0xbcbfe44f ),
	VERT( 0x426c3a4e, 0x419797f8, 0x414e255a ),
	NORM( 0x3f66755c, 0xbce53151, 0x3ede7936 ),
	VERT( 0xc247690e, 0x4197e506, 0x414e255a ),
	NORM( 0x3f667564, 0xbce53161, 0x3ede7915 ),
	VERT( 0xc247690e, 0x41b18a18, 0xc0a8ecbf ),
	NORM( 0x3f78f2c9, 0x3dada746, 0xbe5e557d ),
	VERT( 0x426c3a4e, 0x41b13d09, 0xc0a8ecbf ),
	NORM( 0x3f78f2c6, 0x3dada76a, 0xbe5e55ab ),
	VERT( 0x426c3a4e, 0x41b08701, 0x4148f8cc ),
	NORM( 0x3f68b57f, 0x3e390f8e, 0x3ec04576 ),
	VERT( 0xc247690e, 0x41b0d410, 0x4148f8cc ),
	NORM( 0x3f68b587, 0x3e390f6e, 0x3ec04557 ),
	VERT( 0x426c3a4e, 0x4182e5c0, 0xc0a8ecbf ),
	NORM( 0x3f6ddafa, 0xbcc2b159, 0xbebcee8a ),
	VERT( 0xc247690e, 0x418332cf, 0xc0a8ecbf ),
	NORM( 0x3f6ddaff, 0xbcc2b139, 0xbebcee6d ),
	VERT( 0x426c3a4e, 0x41b5a099, 0x41405936 ),
	NORM( 0x3f5d1685, 0x3efffa7a, 0x3d84a23b ),
	VERT( 0xc247690e, 0x41b5eda7, 0x41405936 ),
	NORM( 0x3f5d1694, 0x3efffa49, 0x3d84a200 ),
	VERT( 0xc247690e, 0xc0467c9b, 0xc0a8ecbf ),
	NORM( 0x3f6aac45, 0xbeab183c, 0xbe605ddc ),
	VERT( 0x426c3a4e, 0xc048e511, 0xc0a8ecbf ),
	NORM( 0x3f6aac3c, 0xbeab185e, 0xbe605dfd ),
	VERT( 0xc247690e, 0x41aa4968, 0x40e206cb ),
	NORM( 0x3f6da1ab, 0x3ebd7d15, 0xbd1871ad ),
	VERT( 0x426c3a4e, 0x41a9fc5a, 0x40e206cb ),
	NORM( 0x3f6da1a4, 0x3ebd7d39, 0xbd1871ba ),
	VERT( 0x426c3a4e, 0x4135beda, 0x412910b8 ),
	NORM( 0x3f64502b, 0xbe8c5d09, 0x3eb83697 ),
	VERT( 0xc247690e, 0x413658f8, 0x412910b8 ),
	NORM( 0x3f645033, 0xbe8c5cf8, 0x3eb8367e ),
	VERT( 0x426c3a4e, 0x41a9fc5a, 0x3f6b4e42 ),
	NORM( 0x3f6ffd1d, 0x3eb0da3a, 0x3d30e241 ),
	VERT( 0xc247690e, 0x41aa4968, 0x3f6b4e42 ),
	NORM( 0x3f6ffd23, 0x3eb0da19, 0x3d30e22b ),
	VERT( 0x426c3a4e, 0x415683b1, 0x41389662 ),
	NORM( 0x3f680056, 0xbe1d8b96, 0x3ec99841 ),
	VERT( 0xc247690e, 0x41571dcf, 0x41389662 ),
	NORM( 0x3f68005d, 0xbe1d8b80, 0x3ec99825 ),
	VERT( 0xc247690e, 0x417c0c83, 0x40e206cb ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x426c3a4e, 0x417b7264, 0x40e206cb ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc247690e, 0x41a4530f, 0x40e206cb ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x426c3a4e, 0x41a40600, 0x40e206cb ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc247690e, 0x417c0c83, 0x3f6b4e42 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x426c3a4e, 0x417b7264, 0x3f6b4e42 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc247690e, 0x41a4530f, 0x3f6b4e42 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x426c3a4e, 0x41a40600, 0x3f6b4e42 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_Trigger02[]
START
VList      vertex_Controller_VM2_CPBody12_Trigger02,
PList      strip_Controller_VM2_CPBody12_Trigger02,
Center      -0.170706F,  9.881874F,  3.344492F,
Radius      60.124840F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_Trigger02[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_Trigger02,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Controller_VM2_CPBody12_YellowB,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_Sbottan01[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 76, _NB( UFO_0, 11 ),
	StripL(4),  23, 37, 14, 29, 
	StripL(4),  9, 22, 2, 13, 
	StripL(4),  36, 49, 28, 42, 
	StripR(8),  40, 51, 26, 39, 12, 25, 0, 11, 
	StripL(4),  19, 33, 20, 34, 
	StripL(4),  15, 27, 17, 31, 
	StripL(8),  8, 3, 6, 5, 4, 7, 1, 10, 
	StripL(8),  24, 10, 21, 7, 18, 5, 16, 3, 
	StripR(6),  21, 24, 35, 38, 47, 50, 
	StripL(6),  47, 35, 45, 32, 43, 30, 
	StripR(8),  48, 43, 46, 45, 44, 47, 41, 50, 
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_Sbottan01[]
START
	CnkV_VN(0x0, 313),
	OffnbIdx(0, 52),
	VERT( 0xc0e3b203, 0xc20805ce, 0xc1879b2e ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc0e3b203, 0xc20805ce, 0xc1879b2e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xbf900389, 0xc1aa0797, 0xc1de0f11 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xbf900389, 0xc1aa0797, 0xc1de0f11 ),
	NORM( 0xbf4f46b3, 0x3ee6ef01, 0xbec03ff8 ),
	VERT( 0xc0e3b203, 0xc204a69d, 0xc1879b2d ),
	NORM( 0xbf7ac889, 0x3e4dab0e, 0x00000000 ),
	VERT( 0xc0a11ea7, 0xc1e26b06, 0xc1de5887 ),
	NORM( 0xbf5c1fcb, 0x3ea2448a, 0xbeccecf9 ),
	VERT( 0xc0a11ea7, 0xc1e26b06, 0xc1879b2e ),
	NORM( 0xbf65e56f, 0x3ee13e7c, 0x00000000 ),
	VERT( 0xc0e3b203, 0xc204a69d, 0xc1cf22ff ),
	NORM( 0xbf6a4847, 0xbdd5067b, 0xbec762e8 ),
	VERT( 0xbf900389, 0xc1aa0797, 0xc18751b7 ),
	NORM( 0xbf5fdd65, 0x3ef85be6, 0x00000000 ),
	VERT( 0xbf900389, 0xc1aa0797, 0xc18751b7 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc0e3b203, 0xc20805ce, 0xc1c7acf7 ),
	NORM( 0xbf76aed1, 0xbe4b15ad, 0xbe378ee5 ),
	VERT( 0xc0e3b203, 0xc20805ce, 0xc1c7acf7 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc0c396f4, 0xc20805ce, 0xc1879b2e ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xbdf974ce, 0xc1aa0797, 0xc1e6617c ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xbdf974ce, 0xc1aa0797, 0xc1e6617c ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xbdf974ce, 0xc1aa0797, 0xc1e6617c ),
	NORM( 0x00000000, 0x3ba6c2c5, 0xbf7fff27 ),
	VERT( 0xbdf974ce, 0xc1aa0797, 0xc1e6617c ),
	NORM( 0xbf2aead1, 0x3ebf4bc3, 0xbf24d902 ),
	VERT( 0xc0810397, 0xc1e26b06, 0xc1e6aaf3 ),
	NORM( 0x00000000, 0x3ba6c2c5, 0xbf7fff27 ),
	VERT( 0xc0810397, 0xc1e26b06, 0xc1e6aaf3 ),
	NORM( 0xbf3207a5, 0x3e840727, 0xbf2bb529 ),
	VERT( 0xc0810397, 0xc1e26b06, 0xc1e6aaf3 ),
	NORM( 0x00000000, 0xbeba81a0, 0xbf6e693d ),
	VERT( 0xc0c396f4, 0xc204a69d, 0xc1d7756b ),
	NORM( 0x00000000, 0xbeba81a0, 0xbf6e693d ),
	VERT( 0xc0c396f4, 0xc204a69d, 0xc1d7756b ),
	NORM( 0xbf02cce7, 0xbed5e77a, 0xbf4052ee ),
	VERT( 0xbdf974ce, 0xc1aa0797, 0xc18751b7 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xbdf974ce, 0xc1aa0797, 0xc18751b7 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc0c396f4, 0xc20805ce, 0xc1cfff63 ),
	NORM( 0xbeb03a6e, 0xbf325095, 0xbf212b7f ),
	VERT( 0xc0c396f4, 0xc20805ce, 0xc1cfff63 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x40c4f158, 0xc20805ce, 0xc1879b2e ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3e4cc20f, 0xc1aa0797, 0xc1e6617c ),
	NORM( 0x00000000, 0x3ba6c2c5, 0xbf7fff27 ),
	VERT( 0x3e4cc20f, 0xc1aa0797, 0xc1e6617c ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x3e4cc20f, 0xc1aa0797, 0xc1e6617c ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x3e4cc20f, 0xc1aa0797, 0xc1e6617c ),
	NORM( 0x3f290163, 0x3eb80e1b, 0xbf28d4e2 ),
	VERT( 0x40801247, 0xc1e26b06, 0xc1e6aaf3 ),
	NORM( 0x00000000, 0x3ba6c2c5, 0xbf7fff27 ),
	VERT( 0x40801247, 0xc1e26b06, 0xc1e6aaf3 ),
	NORM( 0x3f2f6948, 0x3e7ee7f6, 0xbf2f3b14 ),
	VERT( 0x40801247, 0xc1e26b06, 0xc1e6aaf3 ),
	NORM( 0x00000000, 0xbeba81a0, 0xbf6e693d ),
	VERT( 0x40c4f158, 0xc204a69d, 0xc1d7756b ),
	NORM( 0x00000000, 0xbeba81a0, 0xbf6e693d ),
	VERT( 0x40c4f158, 0xc204a69d, 0xc1d7756b ),
	NORM( 0x3f004a16, 0xbed63219, 0xbf41ed72 ),
	VERT( 0x3e4cc20f, 0xc1aa0797, 0xc18751b7 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x3e4cc20f, 0xc1aa0797, 0xc18751b7 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x40c4f158, 0xc20805ce, 0xc1cfff63 ),
	NORM( 0x3eab45b1, 0xbf32fa5f, 0xbf21c4f6 ),
	VERT( 0x40c4f158, 0xc20805ce, 0xc1cfff63 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x40e63242, 0xc20805ce, 0xc1879b2e ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x40e63242, 0xc20805ce, 0xc1879b2e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x3f9e9be9, 0xc1aa0797, 0xc1de0f11 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x3f9e9be9, 0xc1aa0797, 0xc1de0f11 ),
	NORM( 0x3f4fa563, 0x3ee107e2, 0xbec59454 ),
	VERT( 0x40e63242, 0xc204a69d, 0xc1879b2d ),
	NORM( 0x3f7a75a4, 0x3e53e332, 0x00000000 ),
	VERT( 0x40a15331, 0xc1e26b06, 0xc1de5887 ),
	NORM( 0x3f5b3a52, 0x3ea0cf08, 0xbed1dc27 ),
	VERT( 0x40a15331, 0xc1e26b06, 0xc1879b2e ),
	NORM( 0x3f65dc71, 0x3ee16331, 0x00000000 ),
	VERT( 0x40e63242, 0xc204a69d, 0xc1cf22ff ),
	NORM( 0x3f69827f, 0xbdd1e04c, 0xbecb2f23 ),
	VERT( 0x3f9e9be9, 0xc1aa0797, 0xc18751b7 ),
	NORM( 0x3f614ef9, 0x3ef314b9, 0x00000000 ),
	VERT( 0x3f9e9be9, 0xc1aa0797, 0xc18751b7 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x40e63242, 0xc20805ce, 0xc1c7acf7 ),
	NORM( 0x3f763e7a, 0xbe4fb8af, 0xbe3bbfc7 ),
	VERT( 0x40e63242, 0xc20805ce, 0xc1c7acf7 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_Sbottan01[]
START
VList      vertex_Controller_VM2_CPBody12_Sbottan01,
PList      strip_Controller_VM2_CPBody12_Sbottan01,
Center       0.039078F, -27.629688F, -22.874186F,
Radius       9.311326F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_Sbottan01[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_Sbottan01,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Controller_VM2_CPBody12_Trigger02,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_RedB[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 128, 128 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 242, _NB( UFO_0, 9 ),
	StripR(24),  25, 1, 24, 0, 47, 23, 46, 22, 45, 21, 
                   44, 20, 43, 19, 42, 18, 41, 17, 40, 16, 
                   39, 15, 38, 14, 
	StripR(24),  37, 13, 36, 12, 35, 11, 34, 10, 33, 9, 
                   32, 8, 31, 7, 30, 6, 29, 5, 28, 4, 
                   27, 3, 26, 2, 
	StripL(40),  13, 14, 37, 38, 61, 62, 85, 86, 109, 110, 
                   108, 111, 107, 112, 106, 113, 105, 114, 104, 115, 
                   103, 116, 102, 117, 101, 118, 100, 119, 99, 96, 
                   98, 97, 74, 73, 50, 49, 26, 25, 2, 1, 
                   
	StripR(24),  49, 25, 48, 24, 71, 47, 70, 46, 69, 45, 
                   68, 44, 67, 43, 66, 42, 65, 41, 64, 40, 
                   63, 39, 62, 38, 
	StripR(24),  26, 50, 27, 51, 28, 52, 29, 53, 30, 54, 
                   31, 55, 32, 56, 33, 57, 34, 58, 35, 59, 
                   36, 60, 37, 61, 
	StripR(24),  85, 61, 84, 60, 83, 59, 82, 58, 81, 57, 
                   80, 56, 79, 55, 78, 54, 77, 53, 76, 52, 
                   75, 51, 74, 50, 
	StripR(24),  62, 86, 63, 87, 64, 88, 65, 89, 66, 90, 
                   67, 91, 68, 92, 69, 93, 70, 94, 71, 95, 
                   48, 72, 49, 73, 
	StripR(24),  109, 85, 108, 84, 107, 83, 106, 82, 105, 81, 
                   104, 80, 103, 79, 102, 78, 101, 77, 100, 76, 
                   99, 75, 98, 74, 
	StripR(24),  86, 110, 87, 111, 88, 112, 89, 113, 90, 114, 
                   91, 115, 92, 116, 93, 117, 94, 118, 95, 119, 
                   72, 96, 73, 97, 
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_RedB[]
START
	CnkV_VN(0x0, 721),
	OffnbIdx(0, 120),
	VERT( 0xc2399cfc, 0x411e6ee2, 0xc1bef8c8 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc2346fd5, 0x411bb50e, 0xc1bef8c8 ),
	NORM( 0x3e8483e1, 0x3f7746ec, 0x00000000 ),
	VERT( 0xc22f9cfc, 0x4113b716, 0xc1bef8c8 ),
	NORM( 0x3f000002, 0x3f5db3d6, 0x00000000 ),
	VERT( 0xc22b7899, 0x41070070, 0xc1bef8c8 ),
	NORM( 0x3f3504ed, 0x3f3504fa, 0x00000000 ),
	VERT( 0xc2284aef, 0x40ecddc8, 0xc1bef8c8 ),
	NORM( 0x3f5db3da, 0x3efffff6, 0x00000000 ),
	VERT( 0xc2264b72, 0x40c64704, 0xc1bef8c8 ),
	NORM( 0x3f7746eb, 0x3e8483e9, 0x00000000 ),
	VERT( 0xc2259cfc, 0x409cddc8, 0xc1bef8c8 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc2264b72, 0x4066e918, 0xc1bef8c8 ),
	NORM( 0x3f7746eb, 0xbe8483e9, 0x00000000 ),
	VERT( 0xc2284aef, 0x4019bb90, 0xc1bef8c8 ),
	NORM( 0x3f5db3da, 0xbefffff6, 0x00000000 ),
	VERT( 0xc22b7899, 0x3faeeac0, 0xc1bef8c8 ),
	NORM( 0x3f3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0xc22f9cfc, 0x3f126b00, 0xc1bef8c8 ),
	NORM( 0x3f000001, 0xbf5db3d7, 0x00000000 ),
	VERT( 0xc2346fd5, 0x3d945cff, 0xc1bef8c8 ),
	NORM( 0x3e8483e1, 0xbf7746ec, 0x00000000 ),
	VERT( 0xc2399cfc, 0xbdc88e01, 0xc1bef8c8 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc23eca23, 0x3d945cff, 0xc1bef8c8 ),
	NORM( 0xbe8483e1, 0xbf7746ec, 0x00000000 ),
	VERT( 0xc2439cfc, 0x3f126b00, 0xc1bef8c8 ),
	NORM( 0xbf000001, 0xbf5db3d7, 0x00000000 ),
	VERT( 0xc247c15f, 0x3faeeac0, 0xc1bef8c8 ),
	NORM( 0xbf3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0xc24aef09, 0x4019bb90, 0xc1bef8c8 ),
	NORM( 0xbf5db3da, 0xbefffff6, 0x00000000 ),
	VERT( 0xc24cee86, 0x4066e918, 0xc1bef8c8 ),
	NORM( 0xbf7746f1, 0xbe8483b9, 0x00000000 ),
	VERT( 0xc24d9cfb, 0x409cddc8, 0xc1bef8c8 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc24cee86, 0x40c64704, 0xc1bef8c8 ),
	NORM( 0xbf7746f1, 0x3e8483b9, 0x00000000 ),
	VERT( 0xc24aef09, 0x40ecddc8, 0xc1bef8c8 ),
	NORM( 0xbf5db3da, 0x3efffff6, 0x00000000 ),
	VERT( 0xc247c15f, 0x41070070, 0xc1bef8c8 ),
	NORM( 0xbf3504ed, 0x3f3504fa, 0x00000000 ),
	VERT( 0xc2439cfc, 0x4113b716, 0xc1bef8c8 ),
	NORM( 0xbf000002, 0x3f5db3d6, 0x00000000 ),
	VERT( 0xc23eca23, 0x411bb50e, 0xc1bef8c8 ),
	NORM( 0xbe8483e1, 0x3f7746ec, 0x00000000 ),
	VERT( 0xc2399cfc, 0x411e6ee2, 0xc1db0377 ),
	NORM( 0xb2b28cb8, 0x3f6de5dc, 0xbebd1c06 ),
	VERT( 0xc2346fd5, 0x411bb50e, 0xc1db0377 ),
	NORM( 0x3e763b4b, 0x3f65ce63, 0xbebd0edb ),
	VERT( 0xc22f9cfc, 0x4113b716, 0xc1db0377 ),
	NORM( 0x3eede0dd, 0x3f4e13c5, 0xbebce8b1 ),
	VERT( 0xc22b7899, 0x41070070, 0xc1db0377 ),
	NORM( 0x3f283f0c, 0x3f2850a7, 0xbebcabe9 ),
	VERT( 0xc2284aef, 0x40ecddc8, 0xc1db0377 ),
	NORM( 0x3f4e1fda, 0x3eee2642, 0xbebc5c51 ),
	VERT( 0xc2264b72, 0x40c64704, 0xc1db0377 ),
	NORM( 0x3f65fcb8, 0x3e76c687, 0xbebbff59 ),
	VERT( 0xc2259cfc, 0x409cddc8, 0xc1db0377 ),
	NORM( 0x3f6e31fc, 0x398dc6d9, 0xbebb9b2d ),
	VERT( 0xc2264b72, 0x4066e918, 0xc1db0377 ),
	NORM( 0x3f662bc1, 0xbe766b2a, 0xbebb36a5 ),
	VERT( 0xc2284aef, 0x4019bb90, 0xc1db0377 ),
	NORM( 0x3f4e7154, 0xbeee3d70, 0xbebad88b ),
	VERT( 0xc22b7899, 0x3faeeac0, 0xc1db0377 ),
	NORM( 0x3f289d27, 0xbf288b46, 0xbeba876d ),
	VERT( 0xc22f9cfc, 0x3f126b00, 0xc1db0377 ),
	NORM( 0x3eee83c9, 0xbf4e7d6d, 0xbeba4919 ),
	VERT( 0xc2346fd5, 0x3d945cff, 0xc1db0377 ),
	NORM( 0x3e76f776, 0xbf665a77, 0xbeba21cf ),
	VERT( 0xc2399cfc, 0xbdc88e01, 0xc1db0377 ),
	NORM( 0x32e4daf1, 0xbf6e7e91, 0xbeba146c ),
	VERT( 0xc23eca23, 0x3d945cff, 0xc1db0377 ),
	NORM( 0xbe76f788, 0xbf665a73, 0xbeba21e1 ),
	VERT( 0xc2439cfc, 0x3f126b00, 0xc1db0377 ),
	NORM( 0xbeee83c7, 0xbf4e7d69, 0xbeba492e ),
	VERT( 0xc247c15f, 0x3faeeac0, 0xc1db0377 ),
	NORM( 0xbf289d20, 0xbf288b3c, 0xbeba87ab ),
	VERT( 0xc24aef09, 0x4019bb90, 0xc1db0377 ),
	NORM( 0xbf4e714a, 0xbeee3d61, 0xbebad8cb ),
	VERT( 0xc24cee86, 0x4066e918, 0xc1db0377 ),
	NORM( 0xbf662bbb, 0xbe766ac7, 0xbebb36e1 ),
	VERT( 0xc24d9cfb, 0x409cddc8, 0xc1db0377 ),
	NORM( 0xbf6e31ee, 0x398dc7a5, 0xbebb9b75 ),
	VERT( 0xc24cee86, 0x40c64704, 0xc1db0377 ),
	NORM( 0xbf65fcb1, 0x3e76c61b, 0xbebbff9d ),
	VERT( 0xc24aef09, 0x40ecddc8, 0xc1db0377 ),
	NORM( 0xbf4e1fcf, 0x3eee2632, 0xbebc5c97 ),
	VERT( 0xc247c15f, 0x41070070, 0xc1db0377 ),
	NORM( 0xbf283f0a, 0x3f2850a3, 0xbebcabfc ),
	VERT( 0xc2439cfc, 0x4113b716, 0xc1db0377 ),
	NORM( 0xbeede0e0, 0x3f4e13bc, 0xbebce8d5 ),
	VERT( 0xc23eca23, 0x411bb50e, 0xc1db0377 ),
	NORM( 0xbe763b48, 0x3f65ce59, 0xbebd0f0d ),
	VERT( 0xc2399cfc, 0x4117f26e, 0xc1de4b4a ),
	NORM( 0x38cc5b38, 0x3f074060, 0xbf595aca ),
	VERT( 0xc234d9d8, 0x4115706e, 0xc1de4b4a ),
	NORM( 0x3e0c2eae, 0x3f029185, 0xbf596497 ),
	VERT( 0xc23069c8, 0x410e1626, 0xc1de4b4a ),
	NORM( 0x3e874d1f, 0x3eea0039, 0xbf596ad5 ),
	VERT( 0xc22c9a3a, 0x410263dc, 0xc1de4b4a ),
	NORM( 0x3ebf44b0, 0x3ebef514, 0xbf596cfa ),
	VERT( 0xc229ada8, 0x40e64b48, 0xc1de4b4a ),
	NORM( 0x3eea3704, 0x3e86ef39, 0xbf596aac ),
	VERT( 0xc227d716, 0x40c2cad0, 0xc1de4b4a ),
	NORM( 0x3f029ee7, 0x3e0b7358, 0xbf596415 ),
	VERT( 0xc2273695, 0x409cb1ac, 0xc1de4b4a ),
	NORM( 0x3f07422f, 0xba05bda1, 0xbf5959a8 ),
	VERT( 0xc227d716, 0x406d3118, 0xc1de4b4a ),
	NORM( 0x3f02b350, 0xbe0c94d1, 0xbf594c29 ),
	VERT( 0xc229ada8, 0x40263028, 0xc1de4b4a ),
	NORM( 0x3eea7d42, 0xbe879dd2, 0xbf593c91 ),
	VERT( 0xc22c9a3a, 0x3fd26e80, 0xc1de4b4a ),
	NORM( 0x3ebf94d5, 0xbebfcbc0, 0xbf592c10 ),
	VERT( 0xc23069c8, 0x3f69b880, 0xc1de4b4a ),
	NORM( 0x3e87912a, 0xbeeafd69, 0xbf591bea ),
	VERT( 0xc234d9d8, 0x3ee82800, 0xc1de4b4a ),
	NORM( 0x3e0c7b2e, 0xbf031d66, 0xbf590d40 ),
	VERT( 0xc2399cfc, 0x3e97e780, 0xc1de4b4a ),
	NORM( 0x38bfb76f, 0xbf07d027, 0xbf590110 ),
	VERT( 0xc23e601f, 0x3ee82800, 0xc1de4b4a ),
	NORM( 0xbe0c7123, 0xbf0340eb, 0xbf58f82f ),
	VERT( 0xc242d02f, 0x3f69b880, 0xc1de4b4a ),
	NORM( 0xbe87c034, 0xbeeb7905, 0xbf58f311 ),
	VERT( 0xc2469fbd, 0x3fd26e80, 0xc1de4b4a ),
	NORM( 0xbec00bb3, 0xbec05b63, 0xbf58f206 ),
	VERT( 0xc2498c4f, 0x40263028, 0xc1de4b4a ),
	NORM( 0xbeeb3d52, 0xbe881b71, 0xbf58f4f8 ),
	VERT( 0xc24b62e1, 0x406d3118, 0xc1de4b4a ),
	NORM( 0xbf032efc, 0xbe0d27d2, 0xbf58fb9f ),
	VERT( 0xc24c0361, 0x409cb1ac, 0xc1de4b4a ),
	NORM( 0xbf07c8f5, 0xba0752b2, 0xbf59058e ),
	VERT( 0xc24b62e1, 0x40c2cad0, 0xc1de4b4a ),
	NORM( 0xbf031d25, 0x3e0c063e, 0xbf591220 ),
	VERT( 0xc2498c4f, 0x40e64b48, 0xc1de4b4a ),
	NORM( 0xbeeaff00, 0x3e877085, 0xbf592094 ),
	VERT( 0xc2469fbd, 0x410263dc, 0xc1de4b4a ),
	NORM( 0xbebfc2cb, 0x3ebf8bf7, 0xbf592ffe ),
	VERT( 0xc242d02f, 0x410e1626, 0xc1de4b4a ),
	NORM( 0xbe877fd7, 0x3eea83bb, 0xbf593f7f ),
	VERT( 0xc23e601f, 0x4115706e, 0xc1de4b4a ),
	NORM( 0xbe0c2476, 0x3f02b798, 0xbf594e1e ),
	VERT( 0xc239a7a7, 0x41075442, 0xc1e0bf28 ),
	NORM( 0xb95e5c1f, 0x3e6fa14a, 0xbf78e448 ),
	VERT( 0xc235fcea, 0x410565ea, 0xc1e0bf28 ),
	NORM( 0x3d76c6f8, 0x3e6756c4, 0xbf78e774 ),
	VERT( 0xc2329225, 0x40ff791c, 0xc1e0bf28 ),
	NORM( 0x3dee80ea, 0x3e4f3457, 0xbf78ece4 ),
	VERT( 0xc22fa2f8, 0x40ed75e8, 0xc1e0bf28 ),
	NORM( 0x3e28774c, 0x3e28f579, 0xbf78f42e ),
	VERT( 0xc22d6292, 0x40d5fc7c, 0xc1e0bf28 ),
	NORM( 0x3e4df856, 0x3deea1e3, 0xbf78fcc9 ),
	VERT( 0xc22bf83b, 0x40baa660, 0xc1e0bf28 ),
	NORM( 0x3e654000, 0x3d77080c, 0xbf79061e ),
	VERT( 0xc22b7ca4, 0x409d5074, 0xc1e0bf28 ),
	NORM( 0x3e6ccd8d, 0x398aa753, 0xbf790f8f ),
	VERT( 0xc22bf83b, 0x407ff518, 0xc1e0bf28 ),
	NORM( 0x3e6437f6, 0xbd73c185, 0xbf791880 ),
	VERT( 0xc22d6292, 0x404948d8, 0xc1e0bf28 ),
	NORM( 0x3e4c2e4b, 0xbdeb79d5, 0xbf792060 ),
	VERT( 0xc22fa2f8, 0x401a5600, 0xc1e0bf28 ),
	NORM( 0x3e2664fb, 0xbe265668, 0xbf7926b2 ),
	VERT( 0xc2329225, 0x3fec9f40, 0xc1e0bf28 ),
	NORM( 0x3deae7a5, 0xbe4b87a2, 0xbf792b0e ),
	VERT( 0xc235fcea, 0x3fbf5460, 0xc1e0bf28 ),
	NORM( 0x3d729e6c, 0xbe62e148, 0xbf792d2c ),
	VERT( 0xc239a7a7, 0x3fafe190, 0xc1e0bf28 ),
	NORM( 0xb955ccd0, 0xbe6addea, 0xbf792ce2 ),
	VERT( 0xc23d5263, 0x3fbf5460, 0xc1e0bf28 ),
	NORM( 0xbd74629e, 0xbe62f786, 0xbf792a2e ),
	VERT( 0xc240bd28, 0x3fec9f40, 0xc1e0bf28 ),
	NORM( 0xbdebec6e, 0xbe4baeee, 0xbf792533 ),
	VERT( 0xc243ac55, 0x401a5600, 0xc1e0bf28 ),
	NORM( 0xbe2700a1, 0xbe268520, 0xbf791e3c ),
	VERT( 0xc245ecbb, 0x404948d8, 0xc1e0bf28 ),
	NORM( 0xbe4ce5b2, 0xbdebcd5b, 0xbf7915bb ),
	VERT( 0xc2475712, 0x407ff518, 0xc1e0bf28 ),
	NORM( 0xbe650707, 0xbd7422a6, 0xbf790c40 ),
	VERT( 0xc247d2a8, 0x409d5074, 0xc1e0bf28 ),
	NORM( 0xbe6da995, 0x398ee90a, 0xbf790275 ),
	VERT( 0xc2475712, 0x40baa660, 0xc1e0bf28 ),
	NORM( 0xbe661a32, 0x3d778482, 0xbf78f90e ),
	VERT( 0xc245ecbb, 0x40d5fc7c, 0xc1e0bf28 ),
	NORM( 0xbe4ec19c, 0x3def0f01, 0xbf78f0b9 ),
	VERT( 0xc243ac55, 0x40ed75e8, 0xc1e0bf28 ),
	NORM( 0xbe2924d7, 0x3e293616, 0xbf78ea15 ),
	VERT( 0xc240bd28, 0x40ff791c, 0xc1e0bf28 ),
	NORM( 0xbdef9f50, 0x3e4f6d89, 0xbf78e59e ),
	VERT( 0xc23d5263, 0x410565ea, 0xc1e0bf28 ),
	NORM( 0xbd78a699, 0x3e677844, 0xbf78e3a4 ),
	VERT( 0xc239918b, 0x40d6f140, 0xc1e33ae3 ),
	NORM( 0x38e6a934, 0x3dc35523, 0xbf7ed53c ),
	VERT( 0xc237b2c9, 0x40d4f908, 0xc1e33ae3 ),
	NORM( 0x3ccbc8b6, 0x3dbd3ad5, 0xbf7ed349 ),
	VERT( 0xc235f4a7, 0x40cf32ac, 0xc1e33ae3 ),
	NORM( 0x3d44ff4a, 0x3daa2676, 0xbf7ed153 ),
	VERT( 0xc234758e, 0x40c602f8, 0xc1e33ae3 ),
	NORM( 0x3d8b95a5, 0x3d8b4baf, 0xbf7ecf7d ),
	VERT( 0xc2334f97, 0x40ba0a28, 0xc1e33ae3 ),
	NORM( 0x3dab4e04, 0x3d456bc3, 0xbf7ecde7 ),
	VERT( 0xc23296cc, 0x40ac1920, 0xc1e33ae3 ),
	NORM( 0x3dbf618c, 0x3ccca30c, 0xbf7eccb0 ),
	VERT( 0xc23257c4, 0x409d2310, 0xc1e33ae3 ),
	NORM( 0x3dc65860, 0xb7f453fa, 0xbf7ecbed ),
	VERT( 0xc23296cc, 0x408e2d04, 0xc1e33ae3 ),
	NORM( 0x3dbfa9ab, 0xbccd6a0e, 0xbf7ecbaf ),
	VERT( 0xc2334f97, 0x40803bf8, 0xc1e33ae3 ),
	NORM( 0x3dabcacc, 0xbd46383e, 0xbf7ecbf8 ),
	VERT( 0xc234758e, 0x40688658, 0xc1e33ae3 ),
	NORM( 0x3d8c2548, 0xbd8bf923, 0xbf7eccc5 ),
	VERT( 0xc235f4a7, 0x405626e8, 0xc1e33ae3 ),
	NORM( 0x3d45f7b5, 0xbdab1ab5, 0xbf7ece04 ),
	VERT( 0xc237b2c9, 0x404a9a38, 0xc1e33ae3 ),
	NORM( 0x3ccce78c, 0xbdbe61a9, 0xbf7ecfa1 ),
	VERT( 0xc239918b, 0x4046a9c0, 0xc1e33ae3 ),
	NORM( 0x38e98513, 0xbdc48d9e, 0xbf7ed17b ),
	VERT( 0xc23b704c, 0x404a9a38, 0xc1e33ae3 ),
	NORM( 0xbcc9ec11, 0xbdbd4ce2, 0xbf7ed372 ),
	VERT( 0xc23d2e6e, 0x405626e8, 0xc1e33ae3 ),
	NORM( 0xbd42e52e, 0xbda93b79, 0xbf7ed563 ),
	VERT( 0xc23ead88, 0x40688658, 0xc1e33ae3 ),
	NORM( 0xbd89884f, 0xbd89d03c, 0xbf7ed72c ),
	VERT( 0xc23fd37e, 0x40803bf8, 0xc1e33ae3 ),
	NORM( 0xbda81a5c, 0xbd427acd, 0xbf7ed8b1 ),
	VERT( 0xc2408c49, 0x408e2d04, 0xc1e33ae3 ),
	NORM( 0xbdbb30a1, 0xbcc9185e, 0xbf7ed9d8 ),
	VERT( 0xc240cb51, 0x409d2310, 0xc1e33ae3 ),
	NORM( 0xbdc1970c, 0xb7e8ea26, 0xbf7eda8e ),
	VERT( 0xc2408c49, 0x40ac1920, 0xc1e33ae3 ),
	NORM( 0xbdbaeb6b, 0x3cc859ac, 0xbf7edac9 ),
	VERT( 0xc23fd37e, 0x40ba0a28, 0xc1e33ae3 ),
	NORM( 0xbda7a250, 0x3d41b572, 0xbf7eda84 ),
	VERT( 0xc23ead88, 0x40c602f8, 0xc1e33ae3 ),
	NORM( 0xbd88fd76, 0x3d892792, 0xbf7ed9c4 ),
	VERT( 0xc23d2e6e, 0x40cf32ac, 0xc1e33ae3 ),
	NORM( 0xbd41f3e6, 0x3da84bf6, 0xbf7ed895 ),
	VERT( 0xc23b704c, 0x40d4f908, 0xc1e33ae3 ),
	NORM( 0xbcc8d589, 0x3dbc28fa, 0xbf7ed70a ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_RedB[]
START
VList      vertex_Controller_VM2_CPBody12_RedB,
PList      strip_Controller_VM2_CPBody12_RedB,
Center      -46.403305F,  4.902072F, -26.137615F,
Radius       5.489570F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_RedB[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_RedB,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Controller_VM2_CPBody12_Sbottan01,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_GreenB[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 134, 238, 136 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 242, _NB( UFO_0, 9 ),
	StripR(24),  25, 1, 24, 0, 47, 23, 46, 22, 45, 21, 
                   44, 20, 43, 19, 42, 18, 41, 17, 40, 16, 
                   39, 15, 38, 14, 
	StripR(24),  37, 13, 36, 12, 35, 11, 34, 10, 33, 9, 
                   32, 8, 31, 7, 30, 6, 29, 5, 28, 4, 
                   27, 3, 26, 2, 
	StripL(40),  13, 14, 37, 38, 61, 62, 85, 86, 109, 110, 
                   108, 111, 107, 112, 106, 113, 105, 114, 104, 115, 
                   103, 116, 102, 117, 101, 118, 100, 119, 99, 96, 
                   98, 97, 74, 73, 50, 49, 26, 25, 2, 1, 
                   
	StripR(24),  49, 25, 48, 24, 71, 47, 70, 46, 69, 45, 
                   68, 44, 67, 43, 66, 42, 65, 41, 64, 40, 
                   63, 39, 62, 38, 
	StripR(24),  26, 50, 27, 51, 28, 52, 29, 53, 30, 54, 
                   31, 55, 32, 56, 33, 57, 34, 58, 35, 59, 
                   36, 60, 37, 61, 
	StripR(24),  85, 61, 84, 60, 83, 59, 82, 58, 81, 57, 
                   80, 56, 79, 55, 78, 54, 77, 53, 76, 52, 
                   75, 51, 74, 50, 
	StripR(24),  62, 86, 63, 87, 64, 88, 65, 89, 66, 90, 
                   67, 91, 68, 92, 69, 93, 70, 94, 71, 95, 
                   48, 72, 49, 73, 
	StripR(24),  109, 85, 108, 84, 107, 83, 106, 82, 105, 81, 
                   104, 80, 103, 79, 102, 78, 101, 77, 100, 76, 
                   99, 75, 98, 74, 
	StripR(24),  86, 110, 87, 111, 88, 112, 89, 113, 90, 114, 
                   91, 115, 92, 116, 93, 117, 94, 118, 95, 119, 
                   72, 96, 73, 97, 
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_GreenB[]
START
	CnkV_VN(0x0, 721),
	OffnbIdx(0, 120),
	VERT( 0xc238f8b4, 0x42045609, 0xc1bef8c8 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc233cb8d, 0x4203a794, 0xc1bef8c8 ),
	NORM( 0x3e8483e1, 0x3f7746ec, 0x00000000 ),
	VERT( 0xc22ef8b4, 0x4201a816, 0xc1bef8c8 ),
	NORM( 0x3f000002, 0x3f5db3d6, 0x00000000 ),
	VERT( 0xc22ad451, 0x41fcf4d9, 0xc1bef8c8 ),
	NORM( 0x3f3504ed, 0x3f3504fa, 0x00000000 ),
	VERT( 0xc227a6a7, 0x41f4ac13, 0xc1bef8c8 ),
	NORM( 0x3f5db3da, 0x3efffff6, 0x00000000 ),
	VERT( 0xc225a72a, 0x41eb0662, 0xc1bef8c8 ),
	NORM( 0x3f7746eb, 0x3e8483e9, 0x00000000 ),
	VERT( 0xc224f8b4, 0x41e0ac13, 0xc1bef8c8 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc225a72a, 0x41d651c4, 0xc1bef8c8 ),
	NORM( 0x3f7746eb, 0xbe8483e9, 0x00000000 ),
	VERT( 0xc227a6a7, 0x41ccac13, 0xc1bef8c8 ),
	NORM( 0x3f5db3da, 0xbefffff6, 0x00000000 ),
	VERT( 0xc22ad451, 0x41c4634d, 0xc1bef8c8 ),
	NORM( 0x3f3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0xc22ef8b4, 0x41be07f9, 0xc1bef8c8 ),
	NORM( 0x3f000001, 0xbf5db3d7, 0x00000000 ),
	VERT( 0xc233cb8d, 0x41ba08fe, 0xc1bef8c8 ),
	NORM( 0x3e8483e1, 0xbf7746ec, 0x00000000 ),
	VERT( 0xc238f8b4, 0x41b8ac13, 0xc1bef8c8 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc23e25db, 0x41ba08fe, 0xc1bef8c8 ),
	NORM( 0xbe8483e1, 0xbf7746ec, 0x00000000 ),
	VERT( 0xc242f8b4, 0x41be07f9, 0xc1bef8c8 ),
	NORM( 0xbf000001, 0xbf5db3d7, 0x00000000 ),
	VERT( 0xc2471d17, 0x41c4634d, 0xc1bef8c8 ),
	NORM( 0xbf3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0xc24a4ac1, 0x41ccac13, 0xc1bef8c8 ),
	NORM( 0xbf5db3da, 0xbefffff6, 0x00000000 ),
	VERT( 0xc24c4a3e, 0x41d651c4, 0xc1bef8c8 ),
	NORM( 0xbf7746f1, 0xbe8483b9, 0x00000000 ),
	VERT( 0xc24cf8b3, 0x41e0ac13, 0xc1bef8c8 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc24c4a3e, 0x41eb0662, 0xc1bef8c8 ),
	NORM( 0xbf7746f1, 0x3e8483b9, 0x00000000 ),
	VERT( 0xc24a4ac1, 0x41f4ac13, 0xc1bef8c8 ),
	NORM( 0xbf5db3da, 0x3efffff6, 0x00000000 ),
	VERT( 0xc2471d17, 0x41fcf4d9, 0xc1bef8c8 ),
	NORM( 0xbf3504ed, 0x3f3504fa, 0x00000000 ),
	VERT( 0xc242f8b4, 0x4201a816, 0xc1bef8c8 ),
	NORM( 0xbf000002, 0x3f5db3d6, 0x00000000 ),
	VERT( 0xc23e25db, 0x4203a794, 0xc1bef8c8 ),
	NORM( 0xbe8483e1, 0x3f7746ec, 0x00000000 ),
	VERT( 0xc238f8b4, 0x42045609, 0xc1db0377 ),
	NORM( 0xb2b28cb8, 0x3f6de5dc, 0xbebd1c06 ),
	VERT( 0xc233cb8d, 0x4203a794, 0xc1db0377 ),
	NORM( 0x3e763b4b, 0x3f65ce63, 0xbebd0edb ),
	VERT( 0xc22ef8b4, 0x4201a816, 0xc1db0377 ),
	NORM( 0x3eede0dd, 0x3f4e13c5, 0xbebce8b1 ),
	VERT( 0xc22ad451, 0x41fcf4d9, 0xc1db0377 ),
	NORM( 0x3f283f0c, 0x3f2850a7, 0xbebcabe9 ),
	VERT( 0xc227a6a7, 0x41f4ac13, 0xc1db0377 ),
	NORM( 0x3f4e1fda, 0x3eee2642, 0xbebc5c51 ),
	VERT( 0xc225a72a, 0x41eb0662, 0xc1db0377 ),
	NORM( 0x3f65fcb8, 0x3e76c687, 0xbebbff59 ),
	VERT( 0xc224f8b4, 0x41e0ac13, 0xc1db0377 ),
	NORM( 0x3f6e31fc, 0x398dc6d9, 0xbebb9b2d ),
	VERT( 0xc225a72a, 0x41d651c4, 0xc1db0377 ),
	NORM( 0x3f662bc1, 0xbe766b2a, 0xbebb36a5 ),
	VERT( 0xc227a6a7, 0x41ccac13, 0xc1db0377 ),
	NORM( 0x3f4e7154, 0xbeee3d70, 0xbebad88b ),
	VERT( 0xc22ad451, 0x41c4634d, 0xc1db0377 ),
	NORM( 0x3f289d27, 0xbf288b46, 0xbeba876d ),
	VERT( 0xc22ef8b4, 0x41be07f9, 0xc1db0377 ),
	NORM( 0x3eee83c9, 0xbf4e7d6d, 0xbeba4919 ),
	VERT( 0xc233cb8d, 0x41ba08fe, 0xc1db0377 ),
	NORM( 0x3e76f776, 0xbf665a77, 0xbeba21cf ),
	VERT( 0xc238f8b4, 0x41b8ac13, 0xc1db0377 ),
	NORM( 0x32e4daf1, 0xbf6e7e91, 0xbeba146c ),
	VERT( 0xc23e25db, 0x41ba08fe, 0xc1db0377 ),
	NORM( 0xbe76f788, 0xbf665a73, 0xbeba21e1 ),
	VERT( 0xc242f8b4, 0x41be07f9, 0xc1db0377 ),
	NORM( 0xbeee83c7, 0xbf4e7d69, 0xbeba492e ),
	VERT( 0xc2471d17, 0x41c4634d, 0xc1db0377 ),
	NORM( 0xbf289d20, 0xbf288b3c, 0xbeba87ab ),
	VERT( 0xc24a4ac1, 0x41ccac13, 0xc1db0377 ),
	NORM( 0xbf4e714a, 0xbeee3d61, 0xbebad8cb ),
	VERT( 0xc24c4a3e, 0x41d651c4, 0xc1db0377 ),
	NORM( 0xbf662bbb, 0xbe766ac7, 0xbebb36e1 ),
	VERT( 0xc24cf8b3, 0x41e0ac13, 0xc1db0377 ),
	NORM( 0xbf6e31ee, 0x398dc7a5, 0xbebb9b75 ),
	VERT( 0xc24c4a3e, 0x41eb0662, 0xc1db0377 ),
	NORM( 0xbf65fcb1, 0x3e76c61b, 0xbebbff9d ),
	VERT( 0xc24a4ac1, 0x41f4ac13, 0xc1db0377 ),
	NORM( 0xbf4e1fcf, 0x3eee2632, 0xbebc5c97 ),
	VERT( 0xc2471d17, 0x41fcf4d9, 0xc1db0377 ),
	NORM( 0xbf283f0a, 0x3f2850a3, 0xbebcabfc ),
	VERT( 0xc242f8b4, 0x4201a816, 0xc1db0377 ),
	NORM( 0xbeede0e0, 0x3f4e13bc, 0xbebce8d5 ),
	VERT( 0xc23e25db, 0x4203a794, 0xc1db0377 ),
	NORM( 0xbe763b48, 0x3f65ce59, 0xbebd0f0d ),
	VERT( 0xc238f8b4, 0x4202b6ec, 0xc1de4b4a ),
	NORM( 0x38cc5b38, 0x3f074060, 0xbf595aca ),
	VERT( 0xc2343590, 0x4202166c, 0xc1de4b4a ),
	NORM( 0x3e0c2eae, 0x3f029185, 0xbf596497 ),
	VERT( 0xc22fc580, 0x42003fda, 0xc1de4b4a ),
	NORM( 0x3e874d1f, 0x3eea0039, 0xbf596ad5 ),
	VERT( 0xc22bf5f2, 0x41faa68f, 0xc1de4b4a ),
	NORM( 0x3ebf44b0, 0x3ebef514, 0xbf596cfa ),
	VERT( 0xc2290960, 0x41f30773, 0xc1de4b4a ),
	NORM( 0x3eea3704, 0x3e86ef39, 0xbf596aac ),
	VERT( 0xc22732ce, 0x41ea2755, 0xc1de4b4a ),
	NORM( 0x3f029ee7, 0x3e0b7358, 0xbf596415 ),
	VERT( 0xc226924d, 0x41e0a10c, 0xc1de4b4a ),
	NORM( 0x3f07422f, 0xba05bda1, 0xbf5959a8 ),
	VERT( 0xc22732ce, 0x41d71ac4, 0xc1de4b4a ),
	NORM( 0x3f02b350, 0xbe0c94d1, 0xbf594c29 ),
	VERT( 0xc2290960, 0x41ce3aa6, 0xc1de4b4a ),
	NORM( 0x3eea7d42, 0xbe879dd2, 0xbf593c91 ),
	VERT( 0xc22bf5f2, 0x41c69b89, 0xc1de4b4a ),
	NORM( 0x3ebf94d5, 0xbebfcbc0, 0xbf592c10 ),
	VERT( 0xc22fc580, 0x41c0c265, 0xc1de4b4a ),
	NORM( 0x3e87912a, 0xbeeafd69, 0xbf591bea ),
	VERT( 0xc2343590, 0x41bd1541, 0xc1de4b4a ),
	NORM( 0x3e0c7b2e, 0xbf031d66, 0xbf590d40 ),
	VERT( 0xc238f8b4, 0x41bbd43f, 0xc1de4b4a ),
	NORM( 0x38bfb76f, 0xbf07d027, 0xbf590110 ),
	VERT( 0xc23dbbd7, 0x41bd1541, 0xc1de4b4a ),
	NORM( 0xbe0c7123, 0xbf0340eb, 0xbf58f82f ),
	VERT( 0xc2422be7, 0x41c0c265, 0xc1de4b4a ),
	NORM( 0xbe87c034, 0xbeeb7905, 0xbf58f311 ),
	VERT( 0xc245fb75, 0x41c69b89, 0xc1de4b4a ),
	NORM( 0xbec00bb3, 0xbec05b63, 0xbf58f206 ),
	VERT( 0xc248e807, 0x41ce3aa6, 0xc1de4b4a ),
	NORM( 0xbeeb3d52, 0xbe881b71, 0xbf58f4f8 ),
	VERT( 0xc24abe99, 0x41d71ac4, 0xc1de4b4a ),
	NORM( 0xbf032efc, 0xbe0d27d2, 0xbf58fb9f ),
	VERT( 0xc24b5f19, 0x41e0a10c, 0xc1de4b4a ),
	NORM( 0xbf07c8f5, 0xba0752b2, 0xbf59058e ),
	VERT( 0xc24abe99, 0x41ea2755, 0xc1de4b4a ),
	NORM( 0xbf031d25, 0x3e0c063e, 0xbf591220 ),
	VERT( 0xc248e807, 0x41f30773, 0xc1de4b4a ),
	NORM( 0xbeeaff00, 0x3e877085, 0xbf592094 ),
	VERT( 0xc245fb75, 0x41faa68f, 0xc1de4b4a ),
	NORM( 0xbebfc2cb, 0x3ebf8bf7, 0xbf592ffe ),
	VERT( 0xc2422be7, 0x42003fda, 0xc1de4b4a ),
	NORM( 0xbe877fd7, 0x3eea83bb, 0xbf593f7f ),
	VERT( 0xc23dbbd7, 0x4202166c, 0xc1de4b4a ),
	NORM( 0xbe0c2476, 0x3f02b798, 0xbf594e1e ),
	VERT( 0xc239035f, 0x41fd1ec2, 0xc1e0bf28 ),
	NORM( 0xb95e5c1f, 0x3e6fa14a, 0xbf78e448 ),
	VERT( 0xc23558a2, 0x41fc2796, 0xc1e0bf28 ),
	NORM( 0x3d76c6f8, 0x3e6756c4, 0xbf78e774 ),
	VERT( 0xc231eddd, 0x41f952e8, 0xc1e0bf28 ),
	NORM( 0x3dee80ea, 0x3e4f3457, 0xbf78ece4 ),
	VERT( 0xc22efeb0, 0x41f4d21b, 0xc1e0bf28 ),
	NORM( 0x3e28774c, 0x3e28f579, 0xbf78f42e ),
	VERT( 0xc22cbe4a, 0x41eef3c0, 0xc1e0bf28 ),
	NORM( 0x3e4df856, 0x3deea1e3, 0xbf78fcc9 ),
	VERT( 0xc22b53f3, 0x41e81e39, 0xc1e0bf28 ),
	NORM( 0x3e654000, 0x3d77080c, 0xbf79061e ),
	VERT( 0xc22ad85c, 0x41e0c8be, 0xc1e0bf28 ),
	NORM( 0x3e6ccd8d, 0x398aa753, 0xbf790f8f ),
	VERT( 0xc22b53f3, 0x41d97344, 0xc1e0bf28 ),
	NORM( 0x3e6437f6, 0xbd73c185, 0xbf791880 ),
	VERT( 0xc22cbe4a, 0x41d29dbc, 0xc1e0bf28 ),
	NORM( 0x3e4c2e4b, 0xbdeb79d5, 0xbf792060 ),
	VERT( 0xc22efeb0, 0x41ccbf61, 0xc1e0bf28 ),
	NORM( 0x3e2664fb, 0xbe265668, 0xbf7926b2 ),
	VERT( 0xc231eddd, 0x41c83e95, 0xc1e0bf28 ),
	NORM( 0x3deae7a5, 0xbe4b87a2, 0xbf792b0e ),
	VERT( 0xc23558a2, 0x41c569e7, 0xc1e0bf28 ),
	NORM( 0x3d729e6c, 0xbe62e148, 0xbf792d2c ),
	VERT( 0xc239035f, 0x41c472ba, 0xc1e0bf28 ),
	NORM( 0xb955ccd0, 0xbe6addea, 0xbf792ce2 ),
	VERT( 0xc23cae1b, 0x41c569e7, 0xc1e0bf28 ),
	NORM( 0xbd74629e, 0xbe62f786, 0xbf792a2e ),
	VERT( 0xc24018e0, 0x41c83e95, 0xc1e0bf28 ),
	NORM( 0xbdebec6e, 0xbe4baeee, 0xbf792533 ),
	VERT( 0xc243080d, 0x41ccbf61, 0xc1e0bf28 ),
	NORM( 0xbe2700a1, 0xbe268520, 0xbf791e3c ),
	VERT( 0xc2454873, 0x41d29dbc, 0xc1e0bf28 ),
	NORM( 0xbe4ce5b2, 0xbdebcd5b, 0xbf7915bb ),
	VERT( 0xc246b2ca, 0x41d97344, 0xc1e0bf28 ),
	NORM( 0xbe650707, 0xbd7422a6, 0xbf790c40 ),
	VERT( 0xc2472e60, 0x41e0c8be, 0xc1e0bf28 ),
	NORM( 0xbe6da995, 0x398ee90a, 0xbf790275 ),
	VERT( 0xc246b2ca, 0x41e81e39, 0xc1e0bf28 ),
	NORM( 0xbe661a32, 0x3d778482, 0xbf78f90e ),
	VERT( 0xc2454873, 0x41eef3c0, 0xc1e0bf28 ),
	NORM( 0xbe4ec19c, 0x3def0f01, 0xbf78f0b9 ),
	VERT( 0xc243080d, 0x41f4d21b, 0xc1e0bf28 ),
	NORM( 0xbe2924d7, 0x3e293616, 0xbf78ea15 ),
	VERT( 0xc24018e0, 0x41f952e8, 0xc1e0bf28 ),
	NORM( 0xbdef9f50, 0x3e4f6d89, 0xbf78e59e ),
	VERT( 0xc23cae1b, 0x41fc2796, 0xc1e0bf28 ),
	NORM( 0xbd78a699, 0x3e677844, 0xbf78e3a4 ),
	VERT( 0xc238ed43, 0x41ef30f1, 0xc1e33ae3 ),
	NORM( 0x38e6a934, 0x3dc35523, 0xbf7ed53c ),
	VERT( 0xc2370e81, 0x41eeb2e3, 0xc1e33ae3 ),
	NORM( 0x3ccbc8b6, 0x3dbd3ad5, 0xbf7ed349 ),
	VERT( 0xc235505f, 0x41ed414c, 0xc1e33ae3 ),
	NORM( 0x3d44ff4a, 0x3daa2676, 0xbf7ed153 ),
	VERT( 0xc233d146, 0x41eaf55f, 0xc1e33ae3 ),
	NORM( 0x3d8b95a5, 0x3d8b4baf, 0xbf7ecf7d ),
	VERT( 0xc232ab4f, 0x41e7f72b, 0xc1e33ae3 ),
	NORM( 0x3dab4e04, 0x3d456bc3, 0xbf7ecde7 ),
	VERT( 0xc231f284, 0x41e47ae9, 0xc1e33ae3 ),
	NORM( 0x3dbf618c, 0x3ccca30c, 0xbf7eccb0 ),
	VERT( 0xc231b37c, 0x41e0bd65, 0xc1e33ae3 ),
	NORM( 0x3dc65860, 0xb7f453fa, 0xbf7ecbed ),
	VERT( 0xc231f284, 0x41dcffe2, 0xc1e33ae3 ),
	NORM( 0x3dbfa9ab, 0xbccd6a0e, 0xbf7ecbaf ),
	VERT( 0xc232ab4f, 0x41d9839f, 0xc1e33ae3 ),
	NORM( 0x3dabcacc, 0xbd46383e, 0xbf7ecbf8 ),
	VERT( 0xc233d146, 0x41d6856c, 0xc1e33ae3 ),
	NORM( 0x3d8c2548, 0xbd8bf923, 0xbf7eccc5 ),
	VERT( 0xc235505f, 0x41d4397e, 0xc1e33ae3 ),
	NORM( 0x3d45f7b5, 0xbdab1ab5, 0xbf7ece04 ),
	VERT( 0xc2370e81, 0x41d2c7e8, 0xc1e33ae3 ),
	NORM( 0x3ccce78c, 0xbdbe61a9, 0xbf7ecfa1 ),
	VERT( 0xc238ed43, 0x41d249d9, 0xc1e33ae3 ),
	NORM( 0x38e98513, 0xbdc48d9e, 0xbf7ed17b ),
	VERT( 0xc23acc04, 0x41d2c7e8, 0xc1e33ae3 ),
	NORM( 0xbcc9ec11, 0xbdbd4ce2, 0xbf7ed372 ),
	VERT( 0xc23c8a26, 0x41d4397e, 0xc1e33ae3 ),
	NORM( 0xbd42e52e, 0xbda93b79, 0xbf7ed563 ),
	VERT( 0xc23e0940, 0x41d6856c, 0xc1e33ae3 ),
	NORM( 0xbd89884f, 0xbd89d03c, 0xbf7ed72c ),
	VERT( 0xc23f2f36, 0x41d9839f, 0xc1e33ae3 ),
	NORM( 0xbda81a5c, 0xbd427acd, 0xbf7ed8b1 ),
	VERT( 0xc23fe801, 0x41dcffe2, 0xc1e33ae3 ),
	NORM( 0xbdbb30a1, 0xbcc9185e, 0xbf7ed9d8 ),
	VERT( 0xc2402709, 0x41e0bd65, 0xc1e33ae3 ),
	NORM( 0xbdc1970c, 0xb7e8ea26, 0xbf7eda8e ),
	VERT( 0xc23fe801, 0x41e47ae9, 0xc1e33ae3 ),
	NORM( 0xbdbaeb6b, 0x3cc859ac, 0xbf7edac9 ),
	VERT( 0xc23f2f36, 0x41e7f72b, 0xc1e33ae3 ),
	NORM( 0xbda7a250, 0x3d41b572, 0xbf7eda84 ),
	VERT( 0xc23e0940, 0x41eaf55f, 0xc1e33ae3 ),
	NORM( 0xbd88fd76, 0x3d892792, 0xbf7ed9c4 ),
	VERT( 0xc23c8a26, 0x41ed414c, 0xc1e33ae3 ),
	NORM( 0xbd41f3e6, 0x3da84bf6, 0xbf7ed895 ),
	VERT( 0xc23acc04, 0x41eeb2e3, 0xc1e33ae3 ),
	NORM( 0xbcc8d589, 0x3dbc28fa, 0xbf7ed70a ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_GreenB[]
START
VList      vertex_Controller_VM2_CPBody12_GreenB,
PList      strip_Controller_VM2_CPBody12_GreenB,
Center      -46.242874F, 28.084019F, -26.137615F,
Radius       5.489570F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_GreenB[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_GreenB,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Controller_VM2_CPBody12_RedB,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_Degital_L01[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 278, _NB( UFO_0, 29 ),
	StripL(4),  85, 55, 80, 72, 
	StripR(8),  88, 85, 50, 55, 24, 32, 29, 35, 
	StripR(5),  99, 97, 50, 92, 88, 
	StripL(7),  99, 104, 50, 106, 51, 108, 111, 
	StripL(5),  61, 63, 55, 74, 72, 
	StripR(8),  61, 65, 55, 58, 13, 20, 17, 23, 
	StripL(4),  103, 51, 100, 111, 
	StripR(5),  87, 90, 51, 94, 103, 
	StripR(5),  70, 76, 58, 79, 83, 
	StripL(5),  70, 68, 58, 66, 65, 
	StripR(6),  51, 50, 42, 37, 44, 40, 
	StripR(8),  7, 10, 5, 8, 51, 58, 87, 83, 
	StripR(12),  127, 126, 125, 119, 124, 117, 123, 115, 122, 112, 
                   120, 121, 
	StripR(12),  133, 127, 132, 125, 131, 124, 130, 123, 129, 122, 
                   128, 120, 
	StripR(12),  128, 134, 129, 135, 130, 136, 131, 137, 132, 138, 
                   133, 139, 
	StripR(12),  145, 139, 144, 138, 143, 137, 142, 136, 141, 135, 
                   140, 134, 
	StripR(8),  141, 146, 142, 147, 143, 148, 144, 149, 
	StripR(19),  107, 109, 148, 110, 149, 101, 144, 102, 145, 95, 
                   139, 91, 133, 86, 127, 82, 126, 78, 77, 
	StripL(13),  148, 107, 147, 105, 146, 98, 141, 96, 140, 93, 
                   134, 89, 128, 
	StripR(10),  77, 71, 119, 118, 117, 116, 115, 114, 112, 113, 
	StripL(3),  119, 77, 126, 
	StripR(17),  69, 67, 116, 64, 114, 60, 113, 62, 112, 75, 
                   121, 73, 120, 81, 128, 84, 89, 
	StripL(4),  116, 69, 118, 71, 
	StripL(4),  3, 0, 2, 1, 
	StripL(4),  25, 27, 28, 34, 
	StripL(3),  30, 31, 26, 
	StripR(15),  49, 25, 26, 27, 31, 34, 30, 33, 56, 54, 
                   14, 12, 15, 16, 22, 
	StripL(22),  39, 45, 47, 43, 46, 52, 53, 4, 1, 6, 
                   2, 11, 3, 9, 0, 59, 57, 21, 18, 22, 
                   19, 15, 
	StripL(8),  47, 41, 39, 36, 38, 48, 49, 26, 
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_Degital_L01[]
START
	CnkV_VN(0x0, 901),
	OffnbIdx(0, 150),
	VERT( 0x4254383c, 0x3f712165, 0xc1bc6ad1 ),
	NORM( 0x3f137f57, 0x3f504267, 0x3da1b2cc ),
	VERT( 0x4254383c, 0xc0c90cd0, 0xc1bc6ad1 ),
	NORM( 0x3f167cc9, 0xbf4e5b2e, 0x3d8c17df ),
	VERT( 0x4256b957, 0xc098bdcd, 0xc1bc6ad1 ),
	NORM( 0x3f46d4ef, 0xbe1b85a0, 0x3f1c7e5a ),
	VERT( 0x4256b957, 0xbeeb77af, 0xc1bc6ad1 ),
	NORM( 0x3f46cce0, 0x3e263d9c, 0x3f1bd7ef ),
	VERT( 0x425203dd, 0xc0c90cd0, 0xc1da463e ),
	NORM( 0x3f04189c, 0xbf5a6ace, 0xbd9c0eeb ),
	VERT( 0x425203dd, 0xc0c90cd0, 0xc1da463e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x425484f8, 0xc098bdcd, 0xc1da463e ),
	NORM( 0x3f784cae, 0xbe498c11, 0xbe12aba3 ),
	VERT( 0x425484f8, 0xc098bdcd, 0xc1da463e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x425203dd, 0x3f712165, 0xc1da463e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x425203dd, 0x3f712165, 0xc1da463e ),
	NORM( 0x3f014aaf, 0x3f5c200d, 0xbd98bec2 ),
	VERT( 0x425484f8, 0xbeeb77af, 0xc1da463e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x425484f8, 0xbeeb77af, 0xc1da463e ),
	NORM( 0x3f779617, 0x3e576a4c, 0xbe123fc7 ),
	VERT( 0x4219b121, 0x40f98911, 0xc1e7807d ),
	NORM( 0xbf5bdb5e, 0x3f02769e, 0xbd559ed9 ),
	VERT( 0x4219b121, 0x40f98911, 0xc1e7807d ),
	NORM( 0x3e017453, 0xbdb8e3ae, 0xbf7ce468 ),
	VERT( 0x4219b121, 0x41059607, 0xc1bc6ad1 ),
	NORM( 0xbf571fc9, 0x3f0a0cfc, 0xbd620b46 ),
	VERT( 0x421e6fbf, 0x410f9a73, 0xc1bc6ad1 ),
	NORM( 0xbe67e2a1, 0x3f77efd4, 0xbdd40f8c ),
	VERT( 0x421e6fbf, 0x4106c8f4, 0xc1e7807d ),
	NORM( 0xbe7e0006, 0x3f769a90, 0xbdd23187 ),
	VERT( 0x421e6fbf, 0x4106c8f4, 0xc1e7807d ),
	NORM( 0x3e2bfb9f, 0xb509952d, 0xbf7c5d12 ),
	VERT( 0x42369740, 0x41059607, 0xc1bc6ad1 ),
	NORM( 0x3f565058, 0x3f0b01fb, 0xbd867182 ),
	VERT( 0x4231d8a3, 0x410f9a73, 0xc1bc6ad1 ),
	NORM( 0x3e79cca8, 0x3f76a091, 0xbde3d45d ),
	VERT( 0x42369740, 0x40f98911, 0xc1e0e35e ),
	NORM( 0x3e014612, 0xbdb9a8c7, 0xbf7ce3a1 ),
	VERT( 0x42369740, 0x40f98911, 0xc1e0e35e ),
	NORM( 0x3f5c7cd7, 0x3f012424, 0xbd79cd38 ),
	VERT( 0x4231d8a3, 0x4106c8f4, 0xc1e0e35e ),
	NORM( 0x3e764a29, 0x3f76d8d0, 0xbde3e296 ),
	VERT( 0x4231d8a3, 0x4106c8f4, 0xc1e0e35e ),
	NORM( 0x3e2bfb9f, 0xb509952d, 0xbf7c5d12 ),
	VERT( 0x41febd69, 0xc0c90cd0, 0xc1f16c2b ),
	NORM( 0x3e773e26, 0x00000000, 0xbf786d09 ),
	VERT( 0x41febd69, 0xc0c90cd0, 0xc1f16c2b ),
	NORM( 0xbf1a15bd, 0xbf4c55bf, 0xbccd13ed ),
	VERT( 0x41fc8908, 0xc0c90cd0, 0xc1bc6ad1 ),
	NORM( 0xbf0f9078, 0xbf517074, 0x3e024282 ),
	VERT( 0x41f786d2, 0xc098bdcd, 0xc1bc6ad1 ),
	NORM( 0xbf3eb997, 0xbe17209c, 0x3f2687e6 ),
	VERT( 0x41f9bb32, 0xc098bdcd, 0xc1f16c2b ),
	NORM( 0xbf7acf8f, 0xbe48d7f6, 0xbd26e839 ),
	VERT( 0x41f9bb32, 0xc098bdcd, 0xc1f16c2b ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x41fc8908, 0x3f712165, 0xc1bc6ad1 ),
	NORM( 0xbf0c887a, 0x3f531cad, 0x3e0b9bc5 ),
	VERT( 0x41f786d2, 0xbeeb77af, 0xc1bc6ad1 ),
	NORM( 0xbf3ec30a, 0x3e21be90, 0x3f25dd28 ),
	VERT( 0x41febd69, 0x3f712165, 0xc1f16c2b ),
	NORM( 0x3e73f92a, 0x00000000, 0xbf78a0bc ),
	VERT( 0x41febd69, 0x3f712165, 0xc1f16c2b ),
	NORM( 0xbf16f0ae, 0x3f4eac3e, 0xbcc8e472 ),
	VERT( 0x41f9bb32, 0xbeeb77af, 0xc1f16c2b ),
	NORM( 0xbf7a1b26, 0x3e567786, 0xbd26702a ),
	VERT( 0x41f9bb32, 0xbeeb77af, 0xc1f16c2b ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4219b121, 0xc156a19a, 0xc1bc6ad1 ),
	NORM( 0xbf594e75, 0xbf072926, 0xbcd7ca72 ),
	VERT( 0x4219b121, 0xc15238db, 0xc1e89aac ),
	NORM( 0x3e014e6c, 0x3dd72e33, 0xbf7c85b6 ),
	VERT( 0x4219b121, 0xc15238db, 0xc1e89aac ),
	NORM( 0xbf596d05, 0xbf06f816, 0xbcd77c1d ),
	VERT( 0x421e6fbf, 0xc15c3d47, 0xc1e89aac ),
	NORM( 0xbe82d6dd, 0xbf772ad6, 0xbd4d43bd ),
	VERT( 0x421e6fbf, 0xc15c3d47, 0xc1e89aac ),
	NORM( 0x3e2bfb9f, 0x35099526, 0xbf7c5d12 ),
	VERT( 0x421e6fbf, 0xc160a606, 0xc1bc6ad1 ),
	NORM( 0xbe742193, 0xbf784838, 0xbd4ec361 ),
	VERT( 0x42369740, 0xc15238db, 0xc1e1fd8d ),
	NORM( 0x3e011823, 0x3dd838fb, 0xbf7c83e2 ),
	VERT( 0x42369740, 0xc15238db, 0xc1e1fd8d ),
	NORM( 0x3f59c26f, 0xbf065e18, 0xbcfc4928 ),
	VERT( 0x4231d8a3, 0xc15c3d47, 0xc1e1fd8d ),
	NORM( 0x3e2bfb9f, 0x35099526, 0xbf7c5d12 ),
	VERT( 0x4231d8a3, 0xc15c3d47, 0xc1e1fd8d ),
	NORM( 0x3e6b75ff, 0xbf78bff1, 0xbd5f1a4b ),
	VERT( 0x42369740, 0xc156a19a, 0xc1bc6ad1 ),
	NORM( 0x3f58f3c7, 0xbf07a9a4, 0xbcfeb7a9 ),
	VERT( 0x4231d8a3, 0xc160a606, 0xc1bc6ad1 ),
	NORM( 0x3e73b5da, 0xbf7840ce, 0xbd5ef88c ),
	VERT( 0x4219b121, 0xc0c90cd0, 0xc1bc6ad1 ),
	NORM( 0xbf3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0x4219b121, 0xc0c90cd0, 0xc1e0e35e ),
	NORM( 0xbf2c87af, 0xbf3d20c3, 0x00000000 ),
	VERT( 0x4219b121, 0xc0c90cd0, 0xc1e0e35e ),
	NORM( 0x3e346976, 0x3d3f6fa6, 0xbf7bb616 ),
	VERT( 0x42369740, 0xc0c90cd0, 0xc1da463e ),
	NORM( 0x3d9ac548, 0x3d3c63e0, 0xbf7eff0a ),
	VERT( 0x42369740, 0xc0c90cd0, 0xc1da463e ),
	NORM( 0x3f3c8ef9, 0xbf2d26f8, 0x00000000 ),
	VERT( 0x42369740, 0xc0c90cd0, 0xc1bc6ad1 ),
	NORM( 0x3f3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0x4219b121, 0x3f712165, 0xc1e0e35e ),
	NORM( 0xbf2b6f06, 0x3f3e1f50, 0x00000000 ),
	VERT( 0x4219b121, 0x3f712165, 0xc1e0e35e ),
	NORM( 0x3e347090, 0xbd2442cd, 0xbf7bc8f7 ),
	VERT( 0x4219b121, 0x3f712165, 0xc1bc6ad1 ),
	NORM( 0xbf3504f3, 0x3f3504f3, 0x00000000 ),
	VERT( 0x42369740, 0x3f712165, 0xc1bc6ad1 ),
	NORM( 0x3f3504f3, 0x3f3504f3, 0x00000000 ),
	VERT( 0x42369740, 0x3f712165, 0xc1da463e ),
	NORM( 0x3d9aea81, 0xbd21f40f, 0xbf7f10d8 ),
	VERT( 0x42369740, 0x3f712165, 0xc1da463e ),
	NORM( 0x3f3b8d79, 0x3f2e3dc2, 0x00000000 ),
	VERT( 0x42253481, 0x3f43859b, 0xc1de40d5 ),
	NORM( 0x3e022f8e, 0xbf75ffc5, 0xbe7bc061 ),
	VERT( 0x42253481, 0x3f43859b, 0xc1de40d5 ),
	NORM( 0x3de8d470, 0xb7cb79aa, 0xbf7e571c ),
	VERT( 0x4224a0d2, 0x3f3db566, 0xc1de62a2 ),
	NORM( 0x3ecc49b6, 0xbf51b560, 0xbed2f328 ),
	VERT( 0x4224a0d2, 0x3f3db566, 0xc1de62a2 ),
	NORM( 0x3de8d5fc, 0x37d3b7ea, 0xbf7e5716 ),
	VERT( 0x422713b7, 0x3f4e083d, 0xc1ddd32a ),
	NORM( 0x3d87eb78, 0xbf7422ae, 0xbe9644f2 ),
	VERT( 0x422713b7, 0x3f4e083d, 0xc1ddd32a ),
	NORM( 0x3de8d4fc, 0x35ee0c05, 0xbf7e571a ),
	VERT( 0x4228a27d, 0x3f4e7ed8, 0xc1dd77e6 ),
	NORM( 0x3de8d6fc, 0xb8dcd91e, 0xbf7e5713 ),
	VERT( 0x4228a27d, 0x3f4e7ed8, 0xc1dd77e6 ),
	NORM( 0x3b487f42, 0xbf736db7, 0xbe9e7774 ),
	VERT( 0x422a704c, 0x3f455bd4, 0xc1dd0e36 ),
	NORM( 0x3de8d49d, 0x374df3ad, 0xbf7e571b ),
	VERT( 0x422a704c, 0x3f455bd4, 0xc1dd0e36 ),
	NORM( 0xbd78b873, 0xbf73f6d0, 0xbe97ff8c ),
	VERT( 0x422b3b1d, 0x3f3db566, 0xc1dcdfcc ),
	NORM( 0x3de8d45e, 0x37b9b5f0, 0xbf7e571c ),
	VERT( 0x422b3b1d, 0x3f3db566, 0xc1dcdfcc ),
	NORM( 0xbe834318, 0xbf4369f8, 0xbf17cbb9 ),
	VERT( 0x421f5a24, 0xbd506e8c, 0xc1df97bf ),
	NORM( 0x3de8d525, 0xb514909a, 0xbf7e5719 ),
	VERT( 0x421f5a24, 0xbd506e8c, 0xc1df97bf ),
	NORM( 0x3f3ae8ab, 0xbf253a13, 0xbe65d2b3 ),
	VERT( 0x4221ce59, 0x3ebc5b05, 0xc1df07fa ),
	NORM( 0x3de8d4fa, 0xb5537119, 0xbf7e571a ),
	VERT( 0x4221ce59, 0x3ebc5b05, 0xc1df07fa ),
	NORM( 0x3eef83c5, 0xbf43f7fd, 0xbee2308d ),
	VERT( 0x422d89b5, 0x3ee5c056, 0xc1dc58a2 ),
	NORM( 0x3de8d52d, 0xb594c893, 0xbf7e5719 ),
	VERT( 0x422d89b5, 0x3ee5c056, 0xc1dc58a2 ),
	NORM( 0xbe9beb5c, 0xbf36806b, 0xbf21b6cd ),
	VERT( 0x42308490, 0xbd506e8c, 0xc1dbaa0c ),
	NORM( 0xbf12200d, 0xbf1256d0, 0xbf16e444 ),
	VERT( 0x42308490, 0xbd506e8c, 0xc1dbaa0c ),
	NORM( 0x3de8d537, 0xb48cedaf, 0xbf7e5719 ),
	VERT( 0x421c4055, 0xbf9e389b, 0xc1e04d6b ),
	NORM( 0x3de8d4fe, 0xb355dbeb, 0xbf7e571a ),
	VERT( 0x421c4055, 0xbf9e389b, 0xc1e04d6b ),
	NORM( 0x3f668b80, 0xbeab9bd0, 0xbe8dbdcc ),
	VERT( 0x4233ac83, 0xbf9e389b, 0xc1daf123 ),
	NORM( 0xbf2ac1b3, 0xbe916d80, 0xbf305376 ),
	VERT( 0x4233ac83, 0xbf9e389b, 0xc1daf123 ),
	NORM( 0x3de8d368, 0x34b5d0a8, 0xbf7e5720 ),
	VERT( 0x421b2996, 0xc0289613, 0xc1e08d36 ),
	NORM( 0x3f74b2f4, 0xb508c2fa, 0xbe9671c6 ),
	VERT( 0x421b2996, 0xc0289613, 0xc1e08d36 ),
	NORM( 0x3de8d565, 0xaf6df8bc, 0xbf7e5718 ),
	VERT( 0x4234c83a, 0xc0289613, 0xc1dab036 ),
	NORM( 0xbf32177e, 0xb41608bd, 0xbf37e67b ),
	VERT( 0x4234c83a, 0xc0289613, 0xc1dab036 ),
	NORM( 0x3de8d59f, 0x3380140b, 0xbf7e5718 ),
	VERT( 0x421c4055, 0xc08107ec, 0xc1e04d6b ),
	NORM( 0x3de8d4fd, 0x33585f8f, 0xbf7e571a ),
	VERT( 0x421c4055, 0xc08107ec, 0xc1e04d6b ),
	NORM( 0x3f668b81, 0x3eab9bc1, 0xbe8dbdda ),
	VERT( 0x4233ac84, 0xc08107ec, 0xc1daf124 ),
	NORM( 0x3de8d53f, 0xb45f8d3e, 0xbf7e5719 ),
	VERT( 0x4233ac84, 0xc08107ec, 0xc1daf124 ),
	NORM( 0xbf2ac1a8, 0x3e916d76, 0xbf305383 ),
	VERT( 0x421f5a24, 0xc0a6f536, 0xc1df97bf ),
	NORM( 0x3de8d50d, 0x3552c9c2, 0xbf7e571a ),
	VERT( 0x421f5a24, 0xc0a6f536, 0xc1df97bf ),
	NORM( 0x3f3ae894, 0x3f253a1e, 0xbe65d365 ),
	VERT( 0x42308490, 0xc0a6f536, 0xc1dbaa0c ),
	NORM( 0x3de8d500, 0xb4b1ed35, 0xbf7e571a ),
	VERT( 0x42308490, 0xc0a6f536, 0xc1dbaa0c ),
	NORM( 0xbf12200f, 0x3f1256ca, 0xbf16e447 ),
	VERT( 0x4221ce5a, 0xc0b45bc6, 0xc1df07fa ),
	NORM( 0x3eef83bf, 0x3f43f804, 0xbee2307c ),
	VERT( 0x4221ce5a, 0xc0b45bc6, 0xc1df07fa ),
	NORM( 0x3de8d4aa, 0x36035d93, 0xbf7e571b ),
	VERT( 0x4224a0d1, 0xc0c04cc0, 0xc1de62a3 ),
	NORM( 0x3ecc49bf, 0x3f51b557, 0xbed2f341 ),
	VERT( 0x4224a0d1, 0xc0c04cc0, 0xc1de62a3 ),
	NORM( 0x3de8d57d, 0xb76df9c0, 0xbf7e5718 ),
	VERT( 0x422b3b1d, 0xc0c04cc0, 0xc1dcdfcc ),
	NORM( 0x3de8d432, 0xb7a4d74c, 0xbf7e571d ),
	VERT( 0x422b3b1d, 0xc0c04cc0, 0xc1dcdfcc ),
	NORM( 0xbe8342fd, 0x3f4369ec, 0xbf17cbcd ),
	VERT( 0x422d89b5, 0xc0b6f21c, 0xc1dc58a2 ),
	NORM( 0xbe9beb48, 0x3f368056, 0xbf21b6ea ),
	VERT( 0x422d89b5, 0xc0b6f21c, 0xc1dc58a2 ),
	NORM( 0x3de8d530, 0x358c29d3, 0xbf7e5719 ),
	VERT( 0x42253481, 0xc0c106c7, 0xc1de40d6 ),
	NORM( 0x3de8d50a, 0xb682dba7, 0xbf7e571a ),
	VERT( 0x42253481, 0xc0c106c7, 0xc1de40d6 ),
	NORM( 0x3e022f61, 0x3f75ffd4, 0xbe7bbf8d ),
	VERT( 0x422713b7, 0xc0c2571b, 0xc1ddd32a ),
	NORM( 0x3de8d506, 0xb5da57fc, 0xbf7e571a ),
	VERT( 0x422713b7, 0xc0c2571b, 0xc1ddd32a ),
	NORM( 0x3d87eb40, 0x3f7422b6, 0xbe9644c0 ),
	VERT( 0x4228a27d, 0xc0c265ee, 0xc1dd77e6 ),
	NORM( 0x3de8d6de, 0x3887f974, 0xbf7e5713 ),
	VERT( 0x4228a27d, 0xc0c265ee, 0xc1dd77e6 ),
	NORM( 0x3b487320, 0x3f736db9, 0xbe9e7766 ),
	VERT( 0x422a704c, 0xc0c1418d, 0xc1dd0e36 ),
	NORM( 0xbd78b8c6, 0x3f73f6d7, 0xbe97ff5f ),
	VERT( 0x422a704c, 0xc0c1418d, 0xc1dd0e36 ),
	NORM( 0x3de8d489, 0xb732216b, 0xbf7e571c ),
	VERT( 0x4221bbef, 0xbd506e8c, 0xc1d9c2e4 ),
	NORM( 0x3ee5224d, 0xbf16e4fe, 0xbf2c2a96 ),
	VERT( 0x4224e66f, 0x3f3db566, 0xc1dddbcd ),
	NORM( 0x3e8b06ca, 0xbf5cecbb, 0xbeda239e ),
	VERT( 0x42269d13, 0x3f3db566, 0xc1dc607f ),
	NORM( 0x3e0e2123, 0xbf570c2f, 0xbf0644b1 ),
	VERT( 0x4224e66f, 0xbd506e8c, 0xc1d70608 ),
	NORM( 0x3e63e02f, 0xbf0b73da, 0xbf4efc9e ),
	VERT( 0x4228a27d, 0x3f3db566, 0xc1dbdb4e ),
	NORM( 0xb40f2da8, 0xbf54cb97, 0xbf0e5130 ),
	VERT( 0x4228a27d, 0xbd506e8c, 0xc1d60fec ),
	NORM( 0xb488ca6f, 0xbf0746b5, 0xbf5956d9 ),
	VERT( 0x422aa7e6, 0x3f3db566, 0xc1dc607f ),
	NORM( 0xbe0e2136, 0xbf570c33, 0xbf0644a9 ),
	VERT( 0x422c5e8a, 0xbd506e8c, 0xc1d70608 ),
	NORM( 0xbe63e035, 0xbf0b73e0, 0xbf4efc99 ),
	VERT( 0x421cdacb, 0xbf9e389b, 0xc1dc607f ),
	NORM( 0x3f4e63d6, 0xbeaa7eeb, 0xbefa6020 ),
	VERT( 0x421f9e60, 0xbd506e8c, 0xc1dddbcd ),
	NORM( 0x3f266a8d, 0xbf24dbc3, 0xbece86df ),
	VERT( 0x421f9e60, 0xbf9e389b, 0xc1d70608 ),
	NORM( 0x3f091022, 0xbe950cc2, 0xbf4af7a7 ),
	VERT( 0x4223c158, 0xbf9e389b, 0xc1d37251 ),
	NORM( 0x3e845abe, 0xbe84fac0, 0xbf6e314b ),
	VERT( 0x4228a27d, 0xbf9e389b, 0xc1d230c2 ),
	NORM( 0xb45b2cf0, 0xbe7ef834, 0xbf77eff3 ),
	VERT( 0x422d83a1, 0xbf9e389b, 0xc1d37251 ),
	NORM( 0xbe845ab8, 0xbe84fac7, 0xbf6e314a ),
	VERT( 0x422f890a, 0xbd506e8c, 0xc1d9c2e4 ),
	NORM( 0xbee5221e, 0xbf16e50c, 0xbf2c2a9a ),
	VERT( 0x4231a69a, 0xbf9e389b, 0xc1d70608 ),
	NORM( 0xbf09101e, 0xbe950cbe, 0xbf4af7ab ),
	VERT( 0x421be252, 0xc0289613, 0xc1dbdb4e ),
	NORM( 0x3f5b493e, 0xb48fd474, 0xbf0418d2 ),
	VERT( 0x421ee034, 0xc0289613, 0xc1d60fec ),
	NORM( 0x3f0fa093, 0x31be13ed, 0xbf53e9c9 ),
	VERT( 0x42235a6d, 0xc0289613, 0xc1d230c2 ),
	NORM( 0x3e894bcd, 0x00000000, 0xbf769fc5 ),
	VERT( 0x4228a27d, 0xc0289613, 0xc1d0d4b5 ),
	NORM( 0xb4494afb, 0x00000000, 0xbf800000 ),
	VERT( 0x422dea8c, 0xc0289613, 0xc1d230c2 ),
	NORM( 0xbe894bc8, 0x31bb6885, 0xbf769fc6 ),
	VERT( 0x423264c5, 0xc0289613, 0xc1d60fec ),
	NORM( 0xbf0fa08f, 0xb41d687e, 0xbf53e9cc ),
	VERT( 0x421cdacb, 0xc08107ec, 0xc1dc607f ),
	NORM( 0x3f4e63d3, 0x3eaa7ee2, 0xbefa6030 ),
	VERT( 0x421f9e60, 0xc08107ec, 0xc1d70608 ),
	NORM( 0x3f091022, 0x3e950cc0, 0xbf4af7a8 ),
	VERT( 0x4223c158, 0xc08107ec, 0xc1d37251 ),
	NORM( 0x3e845abf, 0x3e84fac0, 0xbf6e314a ),
	VERT( 0x4228a27d, 0xc08107ec, 0xc1d230c2 ),
	NORM( 0xb45554b3, 0x3e7ef833, 0xbf77eff3 ),
	VERT( 0x422d83a1, 0xc08107ec, 0xc1d37251 ),
	NORM( 0xbe845ab8, 0x3e84fac6, 0xbf6e314a ),
	VERT( 0x4231a69a, 0xc08107ec, 0xc1d70608 ),
	NORM( 0xbf091018, 0x3e950cbc, 0xbf4af7af ),
	VERT( 0x421f9e60, 0xc0a6f536, 0xc1dddbcd ),
	NORM( 0x3f266a80, 0x3f24dbc7, 0xbece86fc ),
	VERT( 0x4221bbef, 0xc0a6f536, 0xc1d9c2e4 ),
	NORM( 0x3ee52251, 0x3f16e500, 0xbf2c2a93 ),
	VERT( 0x4224e66f, 0xc0a6f536, 0xc1d70608 ),
	NORM( 0x3e63e030, 0x3f0b73d9, 0xbf4efc9f ),
	VERT( 0x4228a27d, 0xc0a6f536, 0xc1d60fec ),
	NORM( 0xb48751e5, 0x3f0746b4, 0xbf5956da ),
	VERT( 0x422c5e8a, 0xc0a6f536, 0xc1d70608 ),
	NORM( 0xbe63e025, 0x3f0b73d9, 0xbf4efc9f ),
	VERT( 0x422f890a, 0xc0a6f536, 0xc1d9c2e4 ),
	NORM( 0xbee5221d, 0x3f16e502, 0xbf2c2aa2 ),
	VERT( 0x4224e66f, 0xc0c04cc0, 0xc1dddbcd ),
	NORM( 0x3e8b0694, 0x3f5cecc9, 0xbeda238a ),
	VERT( 0x42269d13, 0xc0c04cc0, 0xc1dc607f ),
	NORM( 0x3e0e2119, 0x3f570c3a, 0xbf0644a1 ),
	VERT( 0x4228a27d, 0xc0c04cc0, 0xc1dbdb4e ),
	NORM( 0xb502dfbc, 0x3f54cb9a, 0xbf0e512d ),
	VERT( 0x422aa7e6, 0xc0c04cc0, 0xc1dc607f ),
	NORM( 0xbe0e211f, 0x3f570c38, 0xbf0644a3 ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_Degital_L01[]
START
VList      vertex_Controller_VM2_CPBody12_Degital_L01,
PList      strip_Controller_VM2_CPBody12_Degital_L01,
Center      42.310913F, -2.532663F, -26.864986F,
Radius      11.975221F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_Degital_L01[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_Degital_L01,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Controller_VM2_CPBody12_GreenB,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_BlueB[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 126, 132, 235 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 242, _NB( UFO_0, 9 ),
	StripR(24),  25, 1, 24, 0, 47, 23, 46, 22, 45, 21, 
                   44, 20, 43, 19, 42, 18, 41, 17, 40, 16, 
                   39, 15, 38, 14, 
	StripR(24),  37, 13, 36, 12, 35, 11, 34, 10, 33, 9, 
                   32, 8, 31, 7, 30, 6, 29, 5, 28, 4, 
                   27, 3, 26, 2, 
	StripL(40),  13, 14, 37, 38, 61, 62, 85, 86, 109, 110, 
                   108, 111, 107, 112, 106, 113, 105, 114, 104, 115, 
                   103, 116, 102, 117, 101, 118, 100, 119, 99, 96, 
                   98, 97, 74, 73, 50, 49, 26, 25, 2, 1, 
                   
	StripR(24),  49, 25, 48, 24, 71, 47, 70, 46, 69, 45, 
                   68, 44, 67, 43, 66, 42, 65, 41, 64, 40, 
                   63, 39, 62, 38, 
	StripR(24),  26, 50, 27, 51, 28, 52, 29, 53, 30, 54, 
                   31, 55, 32, 56, 33, 57, 34, 58, 35, 59, 
                   36, 60, 37, 61, 
	StripR(24),  85, 61, 84, 60, 83, 59, 82, 58, 81, 57, 
                   80, 56, 79, 55, 78, 54, 77, 53, 76, 52, 
                   75, 51, 74, 50, 
	StripR(24),  62, 86, 63, 87, 64, 88, 65, 89, 66, 90, 
                   67, 91, 68, 92, 69, 93, 70, 94, 71, 95, 
                   48, 72, 49, 73, 
	StripR(24),  109, 85, 108, 84, 107, 83, 106, 82, 105, 81, 
                   104, 80, 103, 79, 102, 78, 101, 77, 100, 76, 
                   99, 75, 98, 74, 
	StripR(24),  86, 110, 87, 111, 88, 112, 89, 113, 90, 114, 
                   91, 115, 92, 116, 93, 117, 94, 118, 95, 119, 
                   72, 96, 73, 97, 
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_BlueB[]
START
	CnkV_VN(0x0, 721),
	OffnbIdx(0, 120),
	VERT( 0xc26c0be1, 0x41ab1518, 0xc1b1d8ae ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc266deba, 0x41a9b82d, 0xc1b1d8ae ),
	NORM( 0x3e8483e1, 0x3f7746ec, 0x00000000 ),
	VERT( 0xc2620be1, 0x41a5b932, 0xc1b1d8ae ),
	NORM( 0x3f000001, 0x3f5db3d7, 0x00000000 ),
	VERT( 0xc25de77e, 0x419f5dde, 0xc1b1d8ae ),
	NORM( 0x3f3504f3, 0x3f3504f3, 0x00000000 ),
	VERT( 0xc25ab9d4, 0x41971518, 0xc1b1d8ae ),
	NORM( 0x3f5db3da, 0x3efffff6, 0x00000000 ),
	VERT( 0xc258ba57, 0x418d6f67, 0xc1b1d8ae ),
	NORM( 0x3f7746eb, 0x3e8483e9, 0x00000000 ),
	VERT( 0xc2580be1, 0x41831518, 0xc1b1d8ae ),
	NORM( 0x3f800000, 0xb36584e7, 0x00000000 ),
	VERT( 0xc258ba57, 0x41717593, 0xc1b1d8ae ),
	NORM( 0x3f7746eb, 0xbe8483e6, 0x00000000 ),
	VERT( 0xc25ab9d4, 0x415e2a30, 0xc1b1d8ae ),
	NORM( 0x3f5db3db, 0xbefffff2, 0x00000000 ),
	VERT( 0xc25de77e, 0x414d98a4, 0xc1b1d8ae ),
	NORM( 0x3f3504f0, 0xbf3504f7, 0x00000000 ),
	VERT( 0xc2620be1, 0x4140e1fd, 0xc1b1d8ae ),
	NORM( 0x3efffff8, 0xbf5db3d9, 0x00000000 ),
	VERT( 0xc266deba, 0x4138e407, 0xc1b1d8ae ),
	NORM( 0x3e8483ed, 0xbf7746ea, 0x00000000 ),
	VERT( 0xc26c0be1, 0x41362a30, 0xc1b1d8ae ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc2713908, 0x4138e407, 0xc1b1d8ae ),
	NORM( 0xbe8483ed, 0xbf7746ea, 0x00000000 ),
	VERT( 0xc2760be1, 0x4140e1fd, 0xc1b1d8ae ),
	NORM( 0xbefffff8, 0xbf5db3d9, 0x00000000 ),
	VERT( 0xc27a3044, 0x414d98a4, 0xc1b1d8ae ),
	NORM( 0xbf3504f0, 0xbf3504f7, 0x00000000 ),
	VERT( 0xc27d5dee, 0x415e2a30, 0xc1b1d8ae ),
	NORM( 0xbf5db3db, 0xbefffff2, 0x00000000 ),
	VERT( 0xc27f5d6b, 0x41717593, 0xc1b1d8ae ),
	NORM( 0xbf7746f2, 0xbe8483b7, 0x00000000 ),
	VERT( 0xc28005f0, 0x41831518, 0xc1b1d8ae ),
	NORM( 0xbf800000, 0xb3379d81, 0x00000000 ),
	VERT( 0xc27f5d6b, 0x418d6f67, 0xc1b1d8ae ),
	NORM( 0xbf7746f1, 0x3e8483b9, 0x00000000 ),
	VERT( 0xc27d5dee, 0x41971518, 0xc1b1d8ae ),
	NORM( 0xbf5db3da, 0x3efffff6, 0x00000000 ),
	VERT( 0xc27a3044, 0x419f5dde, 0xc1b1d8ae ),
	NORM( 0xbf3504f3, 0x3f3504f3, 0x00000000 ),
	VERT( 0xc2760be1, 0x41a5b932, 0xc1b1d8ae ),
	NORM( 0xbf000001, 0x3f5db3d7, 0x00000000 ),
	VERT( 0xc2713908, 0x41a9b82d, 0xc1b1d8ae ),
	NORM( 0xbe8483e1, 0x3f7746ec, 0x00000000 ),
	VERT( 0xc26c0be1, 0x41ab1518, 0xc1cde35d ),
	NORM( 0xb2d8cf79, 0x3f6de5dc, 0xbebd1c05 ),
	VERT( 0xc266deba, 0x41a9b82d, 0xc1cde35d ),
	NORM( 0x3e763b4e, 0x3f65ce5f, 0xbebd0eef ),
	VERT( 0xc2620be1, 0x41a5b932, 0xc1cde35d ),
	NORM( 0x3eede0d9, 0x3f4e13c3, 0xbebce8bd ),
	VERT( 0xc25de77e, 0x419f5dde, 0xc1cde35d ),
	NORM( 0x3f283f11, 0x3f2850a1, 0xbebcabe9 ),
	VERT( 0xc25ab9d4, 0x41971518, 0xc1cde35d ),
	NORM( 0x3f4e1fda, 0x3eee2642, 0xbebc5c51 ),
	VERT( 0xc258ba57, 0x418d6f67, 0xc1cde35d ),
	NORM( 0x3f65fcb8, 0x3e76c687, 0xbebbff59 ),
	VERT( 0xc2580be1, 0x41831518, 0xc1cde35d ),
	NORM( 0x3f6e31fc, 0x398dc147, 0xbebb9b2b ),
	VERT( 0xc258ba57, 0x41717593, 0xc1cde35d ),
	NORM( 0x3f662bc1, 0xbe766b23, 0xbebb36a5 ),
	VERT( 0xc25ab9d4, 0x415e2a30, 0xc1cde35d ),
	NORM( 0x3f4e7153, 0xbeee3d6d, 0xbebad891 ),
	VERT( 0xc25de77e, 0x414d98a4, 0xc1cde35d ),
	NORM( 0x3f289d23, 0xbf288b49, 0xbeba8772 ),
	VERT( 0xc2620be1, 0x4140e1fd, 0xc1cde35d ),
	NORM( 0x3eee83c4, 0xbf4e7d71, 0xbeba4912 ),
	VERT( 0xc266deba, 0x4138e407, 0xc1cde35d ),
	NORM( 0x3e76f78a, 0xbf665a75, 0xbeba21d2 ),
	VERT( 0xc26c0be1, 0x41362a30, 0xc1cde35d ),
	NORM( 0xb30bdb23, 0xbf6e7e92, 0xbeba1469 ),
	VERT( 0xc2713908, 0x4138e407, 0xc1cde35d ),
	NORM( 0xbe76f799, 0xbf665a73, 0xbeba21d9 ),
	VERT( 0xc2760be1, 0x4140e1fd, 0xc1cde35d ),
	NORM( 0xbeee83c2, 0xbf4e7d69, 0xbeba4937 ),
	VERT( 0xc27a3044, 0x414d98a4, 0xc1cde35d ),
	NORM( 0xbf289d1c, 0xbf288b3e, 0xbeba87b1 ),
	VERT( 0xc27d5dee, 0x415e2a30, 0xc1cde35d ),
	NORM( 0xbf4e714b, 0xbeee3d5f, 0xbebad8c7 ),
	VERT( 0xc27f5d6b, 0x41717593, 0xc1cde35d ),
	NORM( 0xbf662bbc, 0xbe766ac0, 0xbebb36df ),
	VERT( 0xc28005f0, 0x41831518, 0xc1cde35d ),
	NORM( 0xbf6e31ee, 0x398dc378, 0xbebb9b76 ),
	VERT( 0xc27f5d6b, 0x418d6f67, 0xc1cde35d ),
	NORM( 0xbf65fcb1, 0x3e76c61b, 0xbebbff9d ),
	VERT( 0xc27d5dee, 0x41971518, 0xc1cde35d ),
	NORM( 0xbf4e1fcf, 0x3eee2632, 0xbebc5c97 ),
	VERT( 0xc27a3044, 0x419f5dde, 0xc1cde35d ),
	NORM( 0xbf283f0d, 0x3f28509c, 0xbebcac0b ),
	VERT( 0xc2760be1, 0x41a5b932, 0xc1cde35d ),
	NORM( 0xbeede0db, 0x3f4e13bb, 0xbebce8e1 ),
	VERT( 0xc2713908, 0x41a9b82d, 0xc1cde35d ),
	NORM( 0xbe763b53, 0x3f65ce58, 0xbebd0f10 ),
	VERT( 0xc26c0be1, 0x41a7d6de, 0xc1d12b30 ),
	NORM( 0x38cc5e35, 0x3f074061, 0xbf595ac9 ),
	VERT( 0xc26748bd, 0x41a695dd, 0xc1d12b30 ),
	NORM( 0x3e0c2eb0, 0x3f02917b, 0xbf59649e ),
	VERT( 0xc262d8ad, 0x41a2e8b9, 0xc1d12b30 ),
	NORM( 0x3e874d1b, 0x3eea0029, 0xbf596ada ),
	VERT( 0xc25f091f, 0x419d0f94, 0xc1d12b30 ),
	NORM( 0x3ebf44b4, 0x3ebef511, 0xbf596cfa ),
	VERT( 0xc25c1c8d, 0x41957078, 0xc1d12b30 ),
	NORM( 0x3eea3704, 0x3e86ef39, 0xbf596aac ),
	VERT( 0xc25a45fb, 0x418c905a, 0xc1d12b30 ),
	NORM( 0x3f029ee7, 0x3e0b7358, 0xbf596415 ),
	VERT( 0xc259a57a, 0x41830a11, 0xc1d12b30 ),
	NORM( 0x3f07422f, 0xba05be91, 0xbf5959a7 ),
	VERT( 0xc25a45fb, 0x41730792, 0xc1d12b30 ),
	NORM( 0x3f02b351, 0xbe0c94d4, 0xbf594c28 ),
	VERT( 0xc25c1c8d, 0x41614756, 0xc1d12b30 ),
	NORM( 0x3eea7d3f, 0xbe879dd1, 0xbf593c92 ),
	VERT( 0xc25f091f, 0x4152091d, 0xc1d12b30 ),
	NORM( 0x3ebf94cf, 0xbebfcbc0, 0xbf592c11 ),
	VERT( 0xc262d8ad, 0x414656d5, 0xc1d12b30 ),
	NORM( 0x3e87912f, 0xbeeafd6f, 0xbf591be7 ),
	VERT( 0xc26748bd, 0x413efc8c, 0xc1d12b30 ),
	NORM( 0x3e0c7b35, 0xbf031d68, 0xbf590d3e ),
	VERT( 0xc26c0be1, 0x413c7a89, 0xc1d12b30 ),
	NORM( 0x38bf998e, 0xbf07d026, 0xbf590111 ),
	VERT( 0xc270cf04, 0x413efc8c, 0xc1d12b30 ),
	NORM( 0xbe0c712c, 0xbf0340f1, 0xbf58f82b ),
	VERT( 0xc2753f14, 0x414656d5, 0xc1d12b30 ),
	NORM( 0xbe87c031, 0xbeeb78ff, 0xbf58f313 ),
	VERT( 0xc2790ea2, 0x4152091d, 0xc1d12b30 ),
	NORM( 0xbec00bac, 0xbec05b5f, 0xbf58f209 ),
	VERT( 0xc27bfb34, 0x41614756, 0xc1d12b30 ),
	NORM( 0xbeeb3d56, 0xbe881b74, 0xbf58f4f6 ),
	VERT( 0xc27dd1c6, 0x41730792, 0xc1d12b30 ),
	NORM( 0xbf032efe, 0xbe0d27d6, 0xbf58fb9e ),
	VERT( 0xc27e7246, 0x41830a11, 0xc1d12b30 ),
	NORM( 0xbf07c8f5, 0xba075371, 0xbf59058e ),
	VERT( 0xc27dd1c6, 0x418c905a, 0xc1d12b30 ),
	NORM( 0xbf031d25, 0x3e0c063e, 0xbf591220 ),
	VERT( 0xc27bfb34, 0x41957078, 0xc1d12b30 ),
	NORM( 0xbeeaff00, 0x3e877085, 0xbf592094 ),
	VERT( 0xc2790ea2, 0x419d0f94, 0xc1d12b30 ),
	NORM( 0xbebfc2c7, 0x3ebf8bea, 0xbf593002 ),
	VERT( 0xc2753f14, 0x41a2e8b9, 0xc1d12b30 ),
	NORM( 0xbe877fd0, 0x3eea83ae, 0xbf593f84 ),
	VERT( 0xc270cf04, 0x41a695dd, 0xc1d12b30 ),
	NORM( 0xbe0c2483, 0x3f02b795, 0xbf594e20 ),
	VERT( 0xc26c168c, 0x419f87c7, 0xc1d39f0e ),
	NORM( 0xb95e585f, 0x3e6fa141, 0xbf78e448 ),
	VERT( 0xc2686bcf, 0x419e909b, 0xc1d39f0e ),
	NORM( 0x3d76c708, 0x3e6756c1, 0xbf78e774 ),
	VERT( 0xc265010a, 0x419bbbed, 0xc1d39f0e ),
	NORM( 0x3dee80ea, 0x3e4f3457, 0xbf78ece4 ),
	VERT( 0xc26211dd, 0x41973b20, 0xc1d39f0e ),
	NORM( 0x3e28774c, 0x3e28f579, 0xbf78f42e ),
	VERT( 0xc25fd177, 0x41915cc5, 0xc1d39f0e ),
	NORM( 0x3e4df856, 0x3deea1e3, 0xbf78fcc9 ),
	VERT( 0xc25e6720, 0x418a873e, 0xc1d39f0e ),
	NORM( 0x3e654000, 0x3d77080c, 0xbf79061e ),
	VERT( 0xc25deb89, 0x418331c3, 0xc1d39f0e ),
	NORM( 0x3e6ccd8d, 0x398aa753, 0xbf790f8f ),
	VERT( 0xc25e6720, 0x4177b892, 0xc1d39f0e ),
	NORM( 0x3e6437f6, 0xbd73c188, 0xbf791880 ),
	VERT( 0xc25fd177, 0x416a0d82, 0xc1d39f0e ),
	NORM( 0x3e4c2e4c, 0xbdeb79da, 0xbf792060 ),
	VERT( 0xc26211dd, 0x415e50cc, 0xc1d39f0e ),
	NORM( 0x3e2664fd, 0xbe26566d, 0xbf7926b1 ),
	VERT( 0xc265010a, 0x41554f34, 0xc1d39f0e ),
	NORM( 0x3deae7a7, 0xbe4b87a3, 0xbf792b0e ),
	VERT( 0xc2686bcf, 0x414fa5d8, 0xc1d39f0e ),
	NORM( 0x3d729e6c, 0xbe62e149, 0xbf792d2c ),
	VERT( 0xc26c168c, 0x414db77e, 0xc1d39f0e ),
	NORM( 0xb955cadb, 0xbe6addea, 0xbf792ce2 ),
	VERT( 0xc26fc148, 0x414fa5d8, 0xc1d39f0e ),
	NORM( 0xbd7462a2, 0xbe62f787, 0xbf792a2e ),
	VERT( 0xc2732c0d, 0x41554f34, 0xc1d39f0e ),
	NORM( 0xbdebec76, 0xbe4baef2, 0xbf792532 ),
	VERT( 0xc2761b3a, 0x415e50cc, 0xc1d39f0e ),
	NORM( 0xbe2700a1, 0xbe268523, 0xbf791e3c ),
	VERT( 0xc2785ba0, 0x416a0d82, 0xc1d39f0e ),
	NORM( 0xbe4ce5b2, 0xbdebcd5e, 0xbf7915bb ),
	VERT( 0xc279c5f7, 0x4177b892, 0xc1d39f0e ),
	NORM( 0xbe650707, 0xbd7422a9, 0xbf790c40 ),
	VERT( 0xc27a418d, 0x418331c3, 0xc1d39f0e ),
	NORM( 0xbe6da995, 0x398ee90a, 0xbf790275 ),
	VERT( 0xc279c5f7, 0x418a873e, 0xc1d39f0e ),
	NORM( 0xbe661a32, 0x3d778482, 0xbf78f90e ),
	VERT( 0xc2785ba0, 0x41915cc5, 0xc1d39f0e ),
	NORM( 0xbe4ec19c, 0x3def0f01, 0xbf78f0b9 ),
	VERT( 0xc2761b3a, 0x41973b20, 0xc1d39f0e ),
	NORM( 0xbe2924d7, 0x3e293616, 0xbf78ea15 ),
	VERT( 0xc2732c0d, 0x419bbbed, 0xc1d39f0e ),
	NORM( 0xbdef9f50, 0x3e4f6d89, 0xbf78e59e ),
	VERT( 0xc26fc148, 0x419e909b, 0xc1d39f0e ),
	NORM( 0xbd78a6a6, 0x3e67783a, 0xbf78e3a5 ),
	VERT( 0xc26c0070, 0x419199f6, 0xc1d61ac9 ),
	NORM( 0x38e6a934, 0x3dc35523, 0xbf7ed53c ),
	VERT( 0xc26a21ae, 0x41911be8, 0xc1d61ac9 ),
	NORM( 0x3ccbc8b6, 0x3dbd3ad5, 0xbf7ed349 ),
	VERT( 0xc268638c, 0x418faa51, 0xc1d61ac9 ),
	NORM( 0x3d44ff4a, 0x3daa2676, 0xbf7ed153 ),
	VERT( 0xc266e473, 0x418d5e64, 0xc1d61ac9 ),
	NORM( 0x3d8b95a5, 0x3d8b4baf, 0xbf7ecf7d ),
	VERT( 0xc265be7c, 0x418a6030, 0xc1d61ac9 ),
	NORM( 0x3dab4e04, 0x3d456bc3, 0xbf7ecde7 ),
	VERT( 0xc26505b1, 0x4186e3ee, 0xc1d61ac9 ),
	NORM( 0x3dbf618c, 0x3ccca30c, 0xbf7eccb0 ),
	VERT( 0xc264c6a9, 0x4183266a, 0xc1d61ac9 ),
	NORM( 0x3dc65860, 0xb7f453fa, 0xbf7ecbed ),
	VERT( 0xc26505b1, 0x417ed1ce, 0xc1d61ac9 ),
	NORM( 0x3dbfa9ad, 0xbccd6a16, 0xbf7ecbaf ),
	VERT( 0xc265be7c, 0x4177d949, 0xc1d61ac9 ),
	NORM( 0x3dabcac6, 0xbd463832, 0xbf7ecbf8 ),
	VERT( 0xc266e473, 0x4171dce2, 0xc1d61ac9 ),
	NORM( 0x3d8c254c, 0xbd8bf928, 0xbf7eccc5 ),
	VERT( 0xc268638c, 0x416d4507, 0xc1d61ac9 ),
	NORM( 0x3d45f7a0, 0xbdab1aac, 0xbf7ece04 ),
	VERT( 0xc26a21ae, 0x416a61db, 0xc1d61ac9 ),
	NORM( 0x3ccce786, 0xbdbe61a1, 0xbf7ecfa1 ),
	VERT( 0xc26c0070, 0x416965bd, 0xc1d61ac9 ),
	NORM( 0x38e9856f, 0xbdc48d98, 0xbf7ed17b ),
	VERT( 0xc26ddf31, 0x416a61db, 0xc1d61ac9 ),
	NORM( 0xbcc9ec0a, 0xbdbd4cda, 0xbf7ed372 ),
	VERT( 0xc26f9d53, 0x416d4507, 0xc1d61ac9 ),
	NORM( 0xbd42e523, 0xbda93b75, 0xbf7ed563 ),
	VERT( 0xc2711c6d, 0x4171dce2, 0xc1d61ac9 ),
	NORM( 0xbd898853, 0xbd89d042, 0xbf7ed72c ),
	VERT( 0xc2724263, 0x4177d949, 0xc1d61ac9 ),
	NORM( 0xbda81a54, 0xbd427abf, 0xbf7ed8b1 ),
	VERT( 0xc272fb2e, 0x417ed1ce, 0xc1d61ac9 ),
	NORM( 0xbdbb30a4, 0xbcc91869, 0xbf7ed9d8 ),
	VERT( 0xc2733a36, 0x4183266a, 0xc1d61ac9 ),
	NORM( 0xbdc1970c, 0xb7e8ea26, 0xbf7eda8e ),
	VERT( 0xc272fb2e, 0x4186e3ee, 0xc1d61ac9 ),
	NORM( 0xbdbaeb6b, 0x3cc859ac, 0xbf7edac9 ),
	VERT( 0xc2724263, 0x418a6030, 0xc1d61ac9 ),
	NORM( 0xbda7a250, 0x3d41b572, 0xbf7eda84 ),
	VERT( 0xc2711c6d, 0x418d5e64, 0xc1d61ac9 ),
	NORM( 0xbd88fd76, 0x3d892792, 0xbf7ed9c4 ),
	VERT( 0xc26f9d53, 0x418faa51, 0xc1d61ac9 ),
	NORM( 0xbd41f3e6, 0x3da84bf6, 0xbf7ed895 ),
	VERT( 0xc26ddf31, 0x41911be8, 0xc1d61ac9 ),
	NORM( 0xbcc8d589, 0x3dbc28fa, 0xbf7ed70a ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_BlueB[]
START
VList      vertex_Controller_VM2_CPBody12_BlueB,
PList      strip_Controller_VM2_CPBody12_BlueB,
Center      -59.011597F, 16.385300F, -24.496941F,
Radius       5.489571F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_BlueB[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_BlueB,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Controller_VM2_CPBody12_Degital_L01,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_anarogue_L02[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 672, _NB( UFO_0, 24 ),
	StripL(26),  0, 1, 24, 25, 48, 49, 72, 73, 96, 97, 
                   120, 121, 144, 145, 168, 169, 192, 193, 216, 217, 
                   240, 241, 264, 265, 288, 289, 
	StripL(72),  1, 2, 25, 26, 49, 50, 73, 74, 97, 98, 
                   121, 122, 145, 146, 169, 170, 193, 194, 217, 218, 
                   241, 242, 265, 266, 289, 290, 288, 291, 311, 292, 
                   310, 293, 309, 294, 308, 295, 307, 296, 306, 297, 
                   305, 298, 304, 299, 303, 300, 302, 301, 278, 277, 
                   254, 253, 230, 229, 206, 205, 182, 181, 158, 157, 
                   134, 133, 110, 109, 86, 85, 62, 61, 38, 37, 
                   14, 13, 
	StripR(24),  37, 13, 36, 12, 35, 11, 34, 10, 33, 9, 
                   32, 8, 31, 7, 30, 6, 29, 5, 28, 4, 
                   27, 3, 26, 2, 
	StripL(26),  15, 16, 39, 40, 63, 64, 87, 88, 111, 112, 
                   135, 136, 159, 160, 183, 184, 207, 208, 231, 232, 
                   255, 256, 279, 280, 303, 304, 
	StripL(26),  16, 17, 40, 41, 64, 65, 88, 89, 112, 113, 
                   136, 137, 160, 161, 184, 185, 208, 209, 232, 233, 
                   256, 257, 280, 281, 304, 305, 
	StripL(26),  17, 18, 41, 42, 65, 66, 89, 90, 113, 114, 
                   137, 138, 161, 162, 185, 186, 209, 210, 233, 234, 
                   257, 258, 281, 282, 305, 306, 
	StripL(26),  18, 19, 42, 43, 66, 67, 90, 91, 114, 115, 
                   138, 139, 162, 163, 186, 187, 210, 211, 234, 235, 
                   258, 259, 282, 283, 306, 307, 
	StripL(26),  19, 20, 43, 44, 67, 68, 91, 92, 115, 116, 
                   139, 140, 163, 164, 187, 188, 211, 212, 235, 236, 
                   259, 260, 283, 284, 307, 308, 
	StripL(26),  20, 21, 44, 45, 68, 69, 92, 93, 116, 117, 
                   140, 141, 164, 165, 188, 189, 212, 213, 236, 237, 
                   260, 261, 284, 285, 308, 309, 
	StripL(26),  21, 22, 45, 46, 69, 70, 93, 94, 117, 118, 
                   141, 142, 165, 166, 189, 190, 213, 214, 237, 238, 
                   261, 262, 285, 286, 309, 310, 
	StripL(26),  22, 23, 46, 47, 70, 71, 94, 95, 118, 119, 
                   142, 143, 166, 167, 190, 191, 214, 215, 238, 239, 
                   262, 263, 286, 287, 310, 311, 
	StripL(26),  23, 0, 47, 24, 71, 48, 95, 72, 119, 96, 
                   143, 120, 167, 144, 191, 168, 215, 192, 239, 216, 
                   263, 240, 287, 264, 311, 288, 
	StripR(24),  26, 50, 27, 51, 28, 52, 29, 53, 30, 54, 
                   31, 55, 32, 56, 33, 57, 34, 58, 35, 59, 
                   36, 60, 37, 61, 
	StripR(24),  85, 61, 84, 60, 83, 59, 82, 58, 81, 57, 
                   80, 56, 79, 55, 78, 54, 77, 53, 76, 52, 
                   75, 51, 74, 50, 
	StripR(24),  74, 98, 75, 99, 76, 100, 77, 101, 78, 102, 
                   79, 103, 80, 104, 81, 105, 82, 106, 83, 107, 
                   84, 108, 85, 109, 
	StripR(24),  98, 122, 99, 123, 100, 124, 101, 125, 102, 126, 
                   103, 127, 104, 128, 105, 129, 106, 130, 107, 131, 
                   108, 132, 109, 133, 
	StripR(24),  157, 133, 156, 132, 155, 131, 154, 130, 153, 129, 
                   152, 128, 151, 127, 150, 126, 149, 125, 148, 124, 
                   147, 123, 146, 122, 
	StripR(24),  146, 170, 147, 171, 148, 172, 149, 173, 150, 174, 
                   151, 175, 152, 176, 153, 177, 154, 178, 155, 179, 
                   156, 180, 157, 181, 
	StripR(24),  205, 181, 204, 180, 203, 179, 202, 178, 201, 177, 
                   200, 176, 199, 175, 198, 174, 197, 173, 196, 172, 
                   195, 171, 194, 170, 
	StripR(24),  229, 205, 228, 204, 227, 203, 226, 202, 225, 201, 
                   224, 200, 223, 199, 222, 198, 221, 197, 220, 196, 
                   219, 195, 218, 194, 
	StripR(24),  218, 242, 219, 243, 220, 244, 221, 245, 222, 246, 
                   223, 247, 224, 248, 225, 249, 226, 250, 227, 251, 
                   228, 252, 229, 253, 
	StripR(24),  277, 253, 276, 252, 275, 251, 274, 250, 273, 249, 
                   272, 248, 271, 247, 270, 246, 269, 245, 268, 244, 
                   267, 243, 266, 242, 
	StripR(24),  266, 290, 267, 291, 268, 292, 269, 293, 270, 294, 
                   271, 295, 272, 296, 273, 297, 274, 298, 275, 299, 
                   276, 300, 277, 301, 
	StripL(26),  303, 302, 279, 278, 255, 254, 231, 230, 207, 206, 
                   183, 182, 159, 158, 135, 134, 111, 110, 87, 86, 
                   63, 62, 39, 38, 15, 14, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_anarogue_L02[]
START
	CnkV_VN(0x0, 1873),
	OffnbIdx(0, 312),
	VERT( 0x424bb9b9, 0x42199f8a, 0xc1e8a3a3 ),
	NORM( 0xb9b46c2f, 0x3f58c9d1, 0xbf082844 ),
	VERT( 0x42561407, 0x4218429f, 0xc1e8a3a3 ),
	NORM( 0x3e603316, 0x3f51996a, 0xbf07e083 ),
	VERT( 0x425fb9b9, 0x421443a4, 0xc1e8a3a3 ),
	NORM( 0x3ed8f59e, 0x3f3c2254, 0xbf078cb8 ),
	VERT( 0x4268027f, 0x420de850, 0xc1e8a3a3 ),
	NORM( 0x3f19a0d1, 0x3f19ce2b, 0xbf07327f ),
	VERT( 0x426e5dd2, 0x42059f8a, 0xc1e8a3a3 ),
	NORM( 0x3f3c64ad, 0x3ed9d16b, 0xbf06d7f8 ),
	VERT( 0x42725ccd, 0x41f7f3b1, 0xc1e8a3a3 ),
	NORM( 0x3f525cc0, 0x3e61eaeb, 0xbf06835b ),
	VERT( 0x4273b9b9, 0x41e33f14, 0xc1e8a3a3 ),
	NORM( 0x3f59fce7, 0x39b6ba4d, 0xbf063a79 ),
	VERT( 0x42725ccd, 0x41ce8a77, 0xc1e8a3a3 ),
	NORM( 0x3f52b4e6, 0xbe6192c5, 0xbf060264 ),
	VERT( 0x426e5dd2, 0x41bb3f14, 0xc1e8a3a3 ),
	NORM( 0x3f3cfd4f, 0xbeda2687, 0xbf05df17 ),
	VERT( 0x4268027f, 0x41aaad88, 0xc1e8a3a3 ),
	NORM( 0x3f1a50fe, 0xbf1a50f7, 0xbf05d305 ),
	VERT( 0x425fb9b9, 0x419df6e1, 0xc1e8a3a3 ),
	NORM( 0x3eda269b, 0xbf3cfd55, 0xbf05df07 ),
	VERT( 0x42561407, 0x4195f8eb, 0xc1e8a3a3 ),
	NORM( 0x3e6192d0, 0xbf52b4f6, 0xbf06024b ),
	VERT( 0x424bb9b9, 0x41933f14, 0xc1e8a3a3 ),
	NORM( 0xb9b6959e, 0xbf59fcfe, 0xbf063a54 ),
	VERT( 0x42415f6a, 0x4195f8eb, 0xc1e8a3a3 ),
	NORM( 0xbe61eaf6, 0xbf525cda, 0xbf068331 ),
	VERT( 0x4237b9b9, 0x419df6e1, 0xc1e8a3a3 ),
	NORM( 0xbed9d18b, 0xbf3c64c6, 0xbf06d7c8 ),
	VERT( 0x422f70f3, 0x41aaad88, 0xc1e8a3a3 ),
	NORM( 0xbf19ce45, 0xbf19a0e5, 0xbf07324a ),
	VERT( 0x4229159f, 0x41bb3f14, 0xc1e8a3a3 ),
	NORM( 0xbf3c226f, 0xbed8f5bf, 0xbf078c84 ),
	VERT( 0x422516a4, 0x41ce8a77, 0xc1e8a3a3 ),
	NORM( 0xbf519984, 0xbe603332, 0xbf07e057 ),
	VERT( 0x4223b9b9, 0x41e33f14, 0xc1e8a3a3 ),
	NORM( 0xbf58c9ea, 0x39b493da, 0xbf08281c ),
	VERT( 0x422516a4, 0x41f7f3b1, 0xc1e8a3a3 ),
	NORM( 0xbf514163, 0x3e60896e, 0xbf085f0c ),
	VERT( 0x4229159f, 0x42059f8a, 0xc1e8a3a3 ),
	NORM( 0xbf3b89c4, 0x3ed89ff5, 0xbf088184 ),
	VERT( 0x422f70f3, 0x420de850, 0xc1e8a3a3 ),
	NORM( 0xbf191dec, 0x3f191def, 0xbf088d4a ),
	VERT( 0x4237b9b9, 0x421443a4, 0xc1e8a3a3 ),
	NORM( 0xbed89fe2, 0x3f3b89bb, 0xbf088197 ),
	VERT( 0x42415f6a, 0x4218429f, 0xc1e8a3a3 ),
	NORM( 0xbe60894c, 0x3f514150, 0xbf085f2c ),
	VERT( 0x424bc5e0, 0x4214c694, 0xc1f81358 ),
	NORM( 0x3908b0cc, 0x3f489541, 0xbf1f1144 ),
	VERT( 0x4254e225, 0x42139388, 0xc1f81358 ),
	NORM( 0x3e4ff427, 0x3f41e565, 0xbf1edcfa ),
	VERT( 0x425d5f7a, 0x42100f4f, 0xc1f81358 ),
	NORM( 0x3ec90037, 0x3f2e02c5, 0xbf1e9b2b ),
	VERT( 0x4264a9c1, 0x420a7743, 0xc1f81358 ),
	NORM( 0x3f0e45e6, 0x3f0e3c86, 0xbf1e5045 ),
	VERT( 0x426a41cd, 0x42032cfb, 0xc1f81358 ),
	NORM( 0x3f2e7202, 0x3ec9632d, 0xbf1e014c ),
	VERT( 0x426dc606, 0x41f55f4d, 0xc1f81358 ),
	NORM( 0x3f42ca4e, 0x3e50ba87, 0xbf1db399 ),
	VERT( 0x426ef913, 0x41e326c3, 0xc1f81358 ),
	NORM( 0x3f49e023, 0xb73457c2, 0xbf1d6c82 ),
	VERT( 0x426dc606, 0x41d0ee38, 0xc1f81358 ),
	NORM( 0x3f432c64, 0xbe51294b, 0xbf1d30f0 ),
	VERT( 0x426a41cd, 0x41bff38f, 0xc1f81358 ),
	NORM( 0x3f2f1be4, 0xbeca2a30, 0xbf1d050f ),
	VERT( 0x4264a9c1, 0x41b15f00, 0xc1f81358 ),
	NORM( 0x3f0f0a0c, 0xbf0f0219, 0xbf1cebf6 ),
	VERT( 0x425d5f7a, 0x41a62ee8, 0xc1f81358 ),
	NORM( 0x3eca53f2, 0xbf2f2a64, 0xbf1ce76e ),
	VERT( 0x4254e225, 0x419f2676, 0xc1f81358 ),
	NORM( 0x3e517c92, 0xbf4354ca, 0xbf1cf7ca ),
	VERT( 0x424bc5e0, 0x419cc05c, 0xc1f81358 ),
	NORM( 0x3908de9e, 0xbf4a1ee3, 0xbf1d1be8 ),
	VERT( 0x4242a99a, 0x419f2676, 0xc1f81358 ),
	NORM( 0xbe50f4d0, 0xbf4315e4, 0xbf1d5138 ),
	VERT( 0x423a2c46, 0x41a62ee8, 0xc1f81358 ),
	NORM( 0xbec9b3fa, 0xbf2ebd77, 0xbf1d9401 ),
	VERT( 0x4232e1fe, 0x41b15f00, 0xc1f81358 ),
	NORM( 0xbf0e7b2c, 0xbf0e8456, 0xbf1ddf9f ),
	VERT( 0x422d49f2, 0x41bff38f, 0xc1f81358 ),
	NORM( 0xbf2e4e28, 0xbec95062, 0xbf1e2ed4 ),
	VERT( 0x4229c5b9, 0x41d0ee38, 0xc1f81358 ),
	NORM( 0xbf4230a8, 0xbe502d90, 0xbf1e7c3c ),
	VERT( 0x422892ad, 0x41e326c3, 0xc1f81358 ),
	NORM( 0xbf48d395, 0xb730893d, 0xbf1ec28c ),
	VERT( 0x4229c5b9, 0x41f55f4d, 0xc1f81358 ),
	NORM( 0xbf41cea8, 0x3e4fbef0, 0xbf1efd10 ),
	VERT( 0x422d49f2, 0x42032cfb, 0xc1f81358 ),
	NORM( 0xbf2da461, 0x3ec88987, 0xbf1f27ef ),
	VERT( 0x4232e1fe, 0x420a7743, 0xc1f81358 ),
	NORM( 0xbf0db722, 0x3f0dbee0, 0xbf1f404e ),
	VERT( 0x423a2c46, 0x42100f4f, 0xc1f81358 ),
	NORM( 0xbec8605f, 0x3f2d95f0, 0xbf1f44a2 ),
	VERT( 0x4242a99a, 0x42139388, 0xc1f81358 ),
	NORM( 0xbe4f6c82, 0x3f41a692, 0xbf1f3499 ),
	VERT( 0x424bca8a, 0x421075b1, 0xc2004bfe ),
	NORM( 0x3910e64a, 0x3f225069, 0xbf45f708 ),
	VERT( 0x4253cbe8, 0x420f67e3, 0xc2004bfe ),
	NORM( 0x3e285a84, 0x3f1cc860, 0xbf45f2e8 ),
	VERT( 0x425b419c, 0x420c50dd, 0xc2004bfe ),
	NORM( 0x3ea28498, 0x3f0c85b5, 0xbf45f4aa ),
	VERT( 0x4261a983, 0x42076686, 0xc2004bfe ),
	NORM( 0x3ee5b590, 0x3ee55106, 0xbf45fc0f ),
	VERT( 0x426693d9, 0x4200fe9f, 0xc2004bfe ),
	NORM( 0x3f0c932e, 0x3ea1f5c5, 0xbf46085b ),
	VERT( 0x4269aae0, 0x41f311d5, 0xc2004bfe ),
	NORM( 0x3f1cabe1, 0x3e273e2c, 0xbf461885 ),
	VERT( 0x426ab8ae, 0x41e30f1a, 0xc2004bfe ),
	NORM( 0x3f22107b, 0xba231daf, 0xbf462b5e ),
	VERT( 0x4269aae0, 0x41d30c5f, 0xc2004bfe ),
	NORM( 0x3f1c6950, 0xbe283d0e, 0xbf463f9e ),
	VERT( 0x426693d9, 0x41c420f6, 0xc2004bfe ),
	NORM( 0x3f0c1fc8, 0xbea213ab, 0xbf4653f9 ),
	VERT( 0x4261a983, 0x41b75129, 0xc2004bfe ),
	NORM( 0x3ee4aa92, 0xbee4e92a, 0xbf466743 ),
	VERT( 0x425b419c, 0x41ad7c7b, 0xc2004bfe ),
	NORM( 0x3ea19cd7, 0xbf0c0e90, 0xbf46785d ),
	VERT( 0x4253cbe8, 0x41a74e6e, 0xc2004bfe ),
	NORM( 0x3e274e61, 0xbf1c1fa5, 0xbf468643 ),
	VERT( 0x424bca8a, 0x41a532d2, 0xc2004bfe ),
	NORM( 0x391117c6, 0xbf2194fb, 0xbf469022 ),
	VERT( 0x4243c92c, 0x41a74e6e, 0xc2004bfe ),
	NORM( 0xbe26f789, 0xbf1c1256, 0xbf46954a ),
	VERT( 0x423c5377, 0x41ad7c7b, 0xc2004bfe ),
	NORM( 0xbea15e23, 0xbf0bf79f, 0xbf46954b ),
	VERT( 0x4235eb91, 0x41b75129, 0xc2004bfe ),
	NORM( 0xbee451b7, 0xbee4b499, 0xbf468ffb ),
	VERT( 0x4231013a, 0x41c420f6, 0xc2004bfe ),
	NORM( 0xbf0be6a1, 0xbea1e6a0, 0xbf46857e ),
	VERT( 0x422dea33, 0x41d30c5f, 0xc2004bfe ),
	NORM( 0xbf1c2746, 0xbe280961, 0xbf467663 ),
	VERT( 0x422cdc67, 0x41e30f1a, 0xc2004bfe ),
	NORM( 0xbf21cbb0, 0xba230de1, 0xbf46638c ),
	VERT( 0x422dea33, 0x41f311d5, 0xc2004bfe ),
	NORM( 0xbf1c6b2d, 0x3e270bfb, 0xbf464e45 ),
	VERT( 0x4231013a, 0x4200fe9f, 0xc2004bfe ),
	NORM( 0xbf0c5c18, 0x3ea1cb24, 0xbf46381f ),
	VERT( 0x4235eb91, 0x42076686, 0xc2004bfe ),
	NORM( 0xbee5609d, 0x3ee52054, 0xbf4622c3 ),
	VERT( 0x423c5377, 0x420c50dd, 0xc2004bfe ),
	NORM( 0xbea2483f, 0x3f0c70cb, 0xbf460fe0 ),
	VERT( 0x4243c92c, 0x420f67e3, 0xc2004bfe ),
	NORM( 0xbe28052c, 0x3f1cbc65, 0xbf4600ed ),
	VERT( 0x424bc653, 0x4208e624, 0xc205461a ),
	NORM( 0x368fa567, 0x3ee91dbe, 0xbf63ed07 ),
	VERT( 0x4251c759, 0x42081bca, 0xc205461a ),
	NORM( 0x3df0d3cd, 0x3ee0f921, 0xbf63fbd2 ),
	VERT( 0x42575fa0, 0x4205ca85, 0xc205461a ),
	NORM( 0x3e68477e, 0x3ec970ea, 0xbf6413cc ),
	VERT( 0x425c2d8e, 0x42021ac4, 0xc205461a ),
	NORM( 0x3ea3effd, 0x3ea437e3, 0xbf643330 ),
	VERT( 0x425fdd4e, 0x41fa99ae, 0xc205461a ),
	NORM( 0x3ec85872, 0x3e67e608, 0xbf6457b7 ),
	VERT( 0x42622e93, 0x41ef691f, 0xc205461a ),
	NORM( 0x3edef087, 0x3df00fc2, 0xbf647ec1 ),
	VERT( 0x4262f8ee, 0x41e36713, 0xc205461a ),
	NORM( 0x3ee64664, 0x3a0e0393, 0xbf64a592 ),
	VERT( 0x42622e93, 0x41d76507, 0xc205461a ),
	NORM( 0x3eddf53f, 0xbdecca38, 0xbf64c985 ),
	VERT( 0x425fdd4e, 0x41cc3478, 0xc205461a ),
	NORM( 0x3ec6a53f, 0xbe64d312, 0xbf64e837 ),
	VERT( 0x425c2d8e, 0x41c2989e, 0xc205461a ),
	NORM( 0x3ea1f976, 0xbea1b2d7, 0xbf64ffb3 ),
	VERT( 0x42575fa0, 0x41bb391c, 0xc205461a ),
	NORM( 0x3e64e13c, 0xbec5f03b, 0xbf650e84 ),
	VERT( 0x4251c759, 0x41b69692, 0xc205461a ),
	NORM( 0x3dece7be, 0xbedcc015, 0xbf6513c6 ),
	VERT( 0x424bc653, 0x41b501dd, 0xc205461a ),
	NORM( 0x37034790, 0xbee4a10b, 0xbf650f32 ),
	VERT( 0x4245c54c, 0x41b69692, 0xc205461a ),
	NORM( 0xbded2db8, 0xbedd08dc, 0xbf650119 ),
	VERT( 0x42402d05, 0x41bb391c, 0xc205461a ),
	NORM( 0xbe656f25, 0xbec66e41, 0xbf64ea5f ),
	VERT( 0x423b5f18, 0x41c2989e, 0xc205461a ),
	NORM( 0xbea28962, 0xbea24460, 0xbf64cc72 ),
	VERT( 0x4237af57, 0x41cc3478, 0xc205461a ),
	NORM( 0xbec77e3c, 0xbe65cf13, 0xbf64a939 ),
	VERT( 0x42355e12, 0x41d76507, 0xc205461a ),
	NORM( 0xbedf03f7, 0xbdedebc9, 0xbf6482f8 ),
	VERT( 0x423493b9, 0x41e36713, 0xc205461a ),
	NORM( 0xbee768e7, 0x3a0ef024, 0xbf645c33 ),
	VERT( 0x42355e12, 0x41ef691f, 0xc205461a ),
	NORM( 0xbedfffc8, 0x3df13543, 0xbf64378f ),
	VERT( 0x4237af57, 0x41fa99ae, 0xc205461a ),
	NORM( 0xbec9325f, 0x3e68e42f, 0xbf64179d ),
	VERT( 0x423b5f18, 0x42021ac4, 0xc205461a ),
	NORM( 0xbea480fa, 0x3ea4ca7a, 0xbf63fea9 ),
	VERT( 0x42402d05, 0x4205ca85, 0xc205461a ),
	NORM( 0xbe68d786, 0x3ec9efdc, 0xbf63ee8b ),
	VERT( 0x4245c54c, 0x42081bca, 0xc205461a ),
	NORM( 0xbdf11dba, 0x3ee14272, 0xbf63e87f ),
	VERT( 0x424bb9cb, 0x41fdc7df, 0xc208e140 ),
	NORM( 0xb8be5a61, 0x3f466d86, 0xbf21bf79 ),
	VERT( 0x424f25e6, 0x41fce131, 0xc208e140 ),
	NORM( 0x3e4d4f25, 0x3f3fa534, 0xbf21c852 ),
	VERT( 0x4252564c, 0x41fa3cdd, 0xc208e140 ),
	NORM( 0x3ec659f9, 0x3f2bd1ec, 0xbf21cbde ),
	VERT( 0x4255135b, 0x41f608fc, 0xc208e140 ),
	NORM( 0x3f0c45f2, 0x3f0c4c6c, 0xbf21ca09 ),
	VERT( 0x42572d4b, 0x41f08edf, 0xc208e140 ),
	NORM( 0x3f2bd3e6, 0x3ec670b4, 0xbf21c2cc ),
	VERT( 0x42587f75, 0x41ea2e12, 0xc208e140 ),
	NORM( 0x3f3fb0f3, 0x3e4d7d36, 0xbf21b6bf ),
	VERT( 0x4258f2cd, 0x41e355dd, 0xc208e140 ),
	NORM( 0x3f4681af, 0x3715d9b2, 0xbf21a6bb ),
	VERT( 0x42587f75, 0x41dc7da8, 0xc208e140 ),
	NORM( 0x3f3fccd5, 0xbe4d9683, 0xbf2193a9 ),
	VERT( 0x42572d4b, 0x41d61cdc, 0xc208e140 ),
	NORM( 0x3f2c043e, 0xbec6a635, 0xbf217ef2 ),
	VERT( 0x4255135b, 0x41d0a2be, 0xc208e140 ),
	NORM( 0x3f0c7dc3, 0xbf0c8319, 0xbf216a0c ),
	VERT( 0x4252564c, 0x41cc6edd, 0xc208e140 ),
	NORM( 0x3ec6ba97, 0xbf2c2491, 0xbf215636 ),
	VERT( 0x424f25e6, 0x41c9ca89, 0xc208e140 ),
	NORM( 0x3e4dbeb6, 0xbf400c55, 0xbf2144f6 ),
	VERT( 0x424bb9cb, 0x41c8e3db, 0xc208e140 ),
	NORM( 0xb8c0ad47, 0xbf46dc31, 0xbf213756 ),
	VERT( 0x42484db0, 0x41c9ca89, 0xc208e140 ),
	NORM( 0xbe4dfe8d, 0xbf401af8, 0xbf212e6e ),
	VERT( 0x42451d4a, 0x41cc6edd, 0xc208e140 ),
	NORM( 0xbec6effc, 0xbf2c3de1, 0xbf212ab8 ),
	VERT( 0x4242603c, 0x41d0a2be, 0xc208e140 ),
	NORM( 0xbf0ca701, 0xbf0ca072, 0xbf212c86 ),
	VERT( 0x4240464b, 0x41d61cdc, 0xc208e140 ),
	NORM( 0xbf2c3c08, 0xbec6d92e, 0xbf2133bb ),
	VERT( 0x423ef421, 0x41dc7da8, 0xc208e140 ),
	NORM( 0xbf400f62, 0xbe4dd068, 0xbf213fea ),
	VERT( 0x423e80cb, 0x41e355dd, 0xc208e140 ),
	NORM( 0xbf46c831, 0x37040e87, 0xbf214fff ),
	VERT( 0x423ef421, 0x41ea2e12, 0xc208e140 ),
	NORM( 0xbf3ff36a, 0x3e4db67e, 0xbf216345 ),
	VERT( 0x4240464b, 0x41f08edf, 0xc208e140 ),
	NORM( 0xbf2c0b88, 0x3ec6a352, 0xbf217811 ),
	VERT( 0x4242603c, 0x41f608fc, 0xc208e140 ),
	NORM( 0xbf0c6f02, 0x3f0c6998, 0xbf218d10 ),
	VERT( 0x42451d4a, 0x41fa3cdd, 0xc208e140 ),
	NORM( 0xbec68f07, 0x3f2beb14, 0xbf21a0da ),
	VERT( 0x42484db0, 0x41fce131, 0xc208e140 ),
	NORM( 0xbe4d8e5f, 0x3f3fb3c0, 0xbf21b210 ),
	VERT( 0x424bb9ca, 0x41fcf90c, 0xc20d9c8c ),
	NORM( 0xb5358c91, 0x3f349691, 0x3f357313 ),
	VERT( 0x424f0b9d, 0x41fc194a, 0xc20d9c8c ),
	NORM( 0x3e3af9c5, 0x3f2e6da6, 0x3f357460 ),
	VERT( 0x42522385, 0x41f98940, 0xc20d9c8c ),
	NORM( 0x3eb496d8, 0x3f1c5f36, 0x3f3577dc ),
	VERT( 0x4254cb8c, 0x41f575a6, 0xc20d9c8c ),
	NORM( 0x3eff5afb, 0x3eff4f06, 0x3f357d8d ),
	VERT( 0x4256d558, 0x41f02599, 0xc20d9c8c ),
	NORM( 0x3f1c5811, 0x3eb47bc4, 0x3f3584bf ),
	VERT( 0x42581d5d, 0x41e9f5c8, 0xc20d9c8c ),
	NORM( 0x3f2e5754, 0x3e3ac428, 0x3f358d46 ),
	VERT( 0x42588d3f, 0x41e35224, 0xc20d9c8c ),
	NORM( 0x3f347300, 0xb8bed811, 0x3f359671 ),
	VERT( 0x42581d5d, 0x41dcae80, 0xc20d9c8c ),
	NORM( 0x3f2e429e, 0xbe3addbd, 0x3f359f82 ),
	VERT( 0x4256d558, 0x41d67eb0, 0xc20d9c8c ),
	NORM( 0x3f1c343a, 0xbeb46a32, 0x3f35a7f5 ),
	VERT( 0x4254cb8c, 0x41d12ea2, 0xc20d9c8c ),
	NORM( 0x3eff0831, 0xbeff13ff, 0x3f35af60 ),
	VERT( 0x42522385, 0x41cd1b08, 0xc20d9c8c ),
	NORM( 0x3eb44f23, 0xbf1c2d0b, 0x3f35b4d9 ),
	VERT( 0x424f0b9d, 0x41ca8afe, 0xc20d9c8c ),
	NORM( 0x3e3aa718, 0xbf2e2c52, 0x3f35b866 ),
	VERT( 0x424bb9ca, 0x41c9ab3b, 0xc20d9c8c ),
	NORM( 0xb533f0e4, 0xbf344fa4, 0x3f35b98d ),
	VERT( 0x424867f8, 0x41ca8afe, 0xc20d9c8c ),
	NORM( 0xbe3aa76a, 0xbf2e2c5e, 0x3f35b855 ),
	VERT( 0x42455010, 0x41cd1b08, 0xc20d9c8c ),
	NORM( 0xbeb44f6a, 0xbf1c2d0c, 0x3f35b4c7 ),
	VERT( 0x4242a80a, 0x41d12ea2, 0xc20d9c8c ),
	NORM( 0xbeff0874, 0xbeff144f, 0x3f35af2c ),
	VERT( 0x42409e3c, 0x41d67eb0, 0xc20d9c8c ),
	NORM( 0xbf1c343c, 0xbeb46a69, 0x3f35a7e6 ),
	VERT( 0x423f5637, 0x41dcae80, 0xc20d9c8c ),
	NORM( 0xbf2e42b6, 0xbe3adcea, 0x3f359f78 ),
	VERT( 0x423ee657, 0x41e35224, 0xc20d9c8c ),
	NORM( 0xbf347345, 0xb8becd04, 0x3f35962c ),
	VERT( 0x423f5637, 0x41e9f5c8, 0xc20d9c8c ),
	NORM( 0xbf2e576c, 0x3e3ac350, 0x3f358d3c ),
	VERT( 0x42409e3c, 0x41f02599, 0xc20d9c8c ),
	NORM( 0xbf1c5813, 0x3eb47bf9, 0x3f3584b0 ),
	VERT( 0x4242a80a, 0x41f575a6, 0xc20d9c8c ),
	NORM( 0xbeff5b3d, 0x3eff4f56, 0x3f357d59 ),
	VERT( 0x42455010, 0x41f98940, 0xc20d9c8c ),
	NORM( 0xbeb4971f, 0x3f1c5f38, 0x3f3577c9 ),
	VERT( 0x424867f8, 0x41fc194a, 0xc20d9c8c ),
	NORM( 0xbe3afa19, 0x3f2e6daf, 0x3f357452 ),
	VERT( 0x424ba25a, 0x42123a2e, 0xc20d96c2 ),
	NORM( 0xbb2423bb, 0x3efbd9ca, 0x3f5ee2f2 ),
	VERT( 0x4254145f, 0x42111d8c, 0xc20d96c2 ),
	NORM( 0x3dfd37da, 0x3ef0e3fb, 0x3f5faad5 ),
	VERT( 0x425bf30b, 0x420ddb0b, 0xc20d96c2 ),
	NORM( 0x3e74bbb0, 0x3ed606c2, 0x3f605e15 ),
	VERT( 0x4262b517, 0x4208ab8a, 0xc20d96c2 ),
	NORM( 0x3eac414e, 0x3ead695d, 0x3f60f1dd ),
	VERT( 0x4267e494, 0x4201e97f, 0xc20d96c2 ),
	NORM( 0x3ed20c5b, 0x3e73cf79, 0x3f615e32 ),
	VERT( 0x426b2717, 0x41f415a4, 0xc20d96c2 ),
	NORM( 0x3ee9a29e, 0x3dfb7282, 0x3f619d39 ),
	VERT( 0x426c43ba, 0x41e3319f, 0xc20d96c2 ),
	NORM( 0x3ef1babe, 0xb900a92d, 0x3f61abf4 ),
	VERT( 0x426b2717, 0x41d24d99, 0xc20d96c2 ),
	NORM( 0x3ee9e101, 0xbdfc371e, 0x3f6189a1 ),
	VERT( 0x4267e494, 0x41c29041, 0xc20d96c2 ),
	NORM( 0x3ed278ad, 0xbe748ee3, 0x3f6137f4 ),
	VERT( 0x4262b517, 0x41b50c2a, 0xc20d96c2 ),
	NORM( 0x3eacbea7, 0xbeae093c, 0x3f60baf0 ),
	VERT( 0x425bf30b, 0x41aaad29, 0xc20d96c2 ),
	NORM( 0x3e7594f0, 0xbed6e7a6, 0x3f601977 ),
	VERT( 0x4254145f, 0x41a42825, 0xc20d96c2 ),
	NORM( 0x3dfe2ff1, 0xbef1f5c1, 0x3f5f5c81 ),
	VERT( 0x424ba25a, 0x41a1eee1, 0xc20d96c2 ),
	NORM( 0xbb255bf6, 0xbefcff0e, 0x3f5e8fd9 ),
	VERT( 0x42433057, 0x41a42825, 0xc20d96c2 ),
	NORM( 0xbe06d7aa, 0xbef6c727, 0x3f5dc0fa ),
	VERT( 0x423b51ac, 0x41aaad29, 0xc20d96c2 ),
	NORM( 0xbe82307f, 0xbedf3f6a, 0x3f5cfeb9 ),
	VERT( 0x42348fa2, 0x41b50c2a, 0xc20d96c2 ),
	NORM( 0xbeb8f381, 0xbeb7aa86, 0x3f5c57c3 ),
	VERT( 0x422f601f, 0x41c29041, 0xc20d96c2 ),
	NORM( 0xbee37b5a, 0xbe829e12, 0x3f5bd974 ),
	VERT( 0x422c1d9d, 0x41d24d99, 0xc20d96c2 ),
	NORM( 0xbefe6682, 0xbe07bc7f, 0x3f5b8e30 ),
	VERT( 0x422b00ff, 0x41e3319f, 0xc20d96c2 ),
	NORM( 0xbf03c38b, 0xb914317e, 0x3f5b7c86 ),
	VERT( 0x422c1d9d, 0x41f415a4, 0xc20d96c2 ),
	NORM( 0xbefe23e6, 0x3e074f36, 0x3f5ba5af ),
	VERT( 0x422f601f, 0x4201e97f, 0xc20d96c2 ),
	NORM( 0xbee30808, 0x3e82377e, 0x3f5c0673 ),
	VERT( 0x42348fa2, 0x4208ab8a, 0xc20d96c2 ),
	NORM( 0xbeb86e51, 0x3eb702d4, 0x3f5c9685 ),
	VERT( 0x423b51ac, 0x420ddb0b, 0xc20d96c2 ),
	NORM( 0xbe81bcf9, 0x3ede5773, 0x3f5d4a1e ),
	VERT( 0x42433057, 0x42111d8c, 0xc20d96c2 ),
	NORM( 0xbe065092, 0x3ef5b118, 0x3f5e133b ),
	VERT( 0x424bcc3e, 0x4213de0c, 0xc20ff20d ),
	NORM( 0x3af39a24, 0x3f74cc78, 0x3e95ca9c ),
	VERT( 0x4254aa5d, 0x4212b32e, 0xc20ff20d ),
	NORM( 0x3e7eb63d, 0x3f6bed6e, 0x3e9891c1 ),
	VERT( 0x425cedc5, 0x420f46f4, 0xc20ff20d ),
	NORM( 0x3ef4a578, 0x3f53189b, 0x3e9b113d ),
	VERT( 0x42640651, 0x4209d513, 0xc20ff20d ),
	NORM( 0x3f2c7fed, 0x3f2c1136, 0x3e9d221f ),
	VERT( 0x4269782e, 0x4202bc87, 0xc20ff20d ),
	NORM( 0x3f52e4b0, 0x3ef30b26, 0x3e9ea670 ),
	VERT( 0x426ce46b, 0x41f4f23c, 0xc20ff20d ),
	NORM( 0x3f6afd9a, 0x3e7b7a1b, 0x3e9f88fb ),
	VERT( 0x426e0f49, 0x41e33604, 0xc20ff20d ),
	NORM( 0x3f7338a8, 0x38c0db5d, 0x3e9fbe02 ),
	VERT( 0x426ce46b, 0x41d179ca, 0xc20ff20d ),
	NORM( 0x3f6b0bbe, 0xbe7b58ec, 0x3e9f42ab ),
	VERT( 0x4269782e, 0x41c0f2fb, 0xc20ff20d ),
	NORM( 0x3f52fd53, 0xbef30ef0, 0x3e9e1d62 ),
	VERT( 0x42640651, 0x41b2c1e3, 0xc20ff20d ),
	NORM( 0x3f2c9ca4, 0xbf2c2124, 0x3e9c5db8 ),
	VERT( 0x425cedc5, 0x41a7de22, 0xc20ff20d ),
	NORM( 0x3ef4d81b, 0xbf5336ba, 0x3e9a1c7f ),
	VERT( 0x4254aa5d, 0x41a105aa, 0xc20ff20d ),
	NORM( 0x3e7ef2bd, 0xbf6c1634, 0x3e977b38 ),
	VERT( 0x424bcc3e, 0x419eaff0, 0xc20ff20d ),
	NORM( 0x3af539b4, 0xbf74f95a, 0x3e94a3f7 ),
	VERT( 0x4242ee21, 0x41a105aa, 0xc20ff20d ),
	NORM( 0xbe7c4520, 0xbf6d296f, 0x3e91c6f5 ),
	VERT( 0x423aaabb, 0x41a7de22, 0xc20ff20d ),
	NORM( 0xbef5145f, 0xbf55133c, 0x3e8f181f ),
	VERT( 0x42339230, 0x41b2c1e3, 0xc20ff20d ),
	NORM( 0xbf2dcd9d, 0xbf2e4727, 0x3e8ccaf7 ),
	VERT( 0x422e204d, 0x41c0f2fb, 0xc20ff20d ),
	NORM( 0xbf554119, 0xbef6c6ae, 0x3e8b0dcf ),
	VERT( 0x422ab411, 0x41d179ca, 0xc20ff20d ),
	NORM( 0xbf6e188d, 0xbe7fa024, 0x3e8a04df ),
	VERT( 0x42298938, 0x41e33604, 0xc20ff20d ),
	NORM( 0xbf768eae, 0x38dad9c9, 0x3e89c659 ),
	VERT( 0x422ab411, 0x41f4f23c, 0xc20ff20d ),
	NORM( 0xbf6e09fa, 0x3e7fc6b8, 0x3e8a577b ),
	VERT( 0x422e204d, 0x4202bc87, 0xc20ff20d ),
	NORM( 0xbf5527f3, 0x3ef6c42b, 0x3e8bac28 ),
	VERT( 0x42339230, 0x4209d513, 0xc20ff20d ),
	NORM( 0xbf2db0c8, 0x3f2e371b, 0x3e8da80a ),
	VERT( 0x423aaabb, 0x420f46f4, 0xc20ff20d ),
	NORM( 0xbef4e2ff, 0x3f54f495, 0x3e902233 ),
	VERT( 0x4242ee21, 0x4212b32e, 0xc20ff20d ),
	NORM( 0xbe7c0dfe, 0x3f6d0035, 0x3e92e9d9 ),
	VERT( 0x424bcc3e, 0x4213de0c, 0xc212f097 ),
	NORM( 0xb934622a, 0x3f75d54b, 0xbe8edb72 ),
	VERT( 0x4254aa5d, 0x4212b32e, 0xc212f097 ),
	NORM( 0x3e7e61c7, 0x3f6d810e, 0xbe8e9895 ),
	VERT( 0x425cedc5, 0x420f46f4, 0xc212f097 ),
	NORM( 0x3ef5d753, 0x3f54fabc, 0xbe8e5b1a ),
	VERT( 0x42640651, 0x4209d513, 0xc212f097 ),
	NORM( 0x3f2de1cb, 0x3f2dec3f, 0xbe8e2747 ),
	VERT( 0x4269782e, 0x4202bc87, 0xc212f097 ),
	NORM( 0x3f54fec8, 0x3ef5fd94, 0xbe8e00af ),
	VERT( 0x426ce46b, 0x41f4f23c, 0xc212f097 ),
	NORM( 0x3f6d960a, 0x3e7eaef7, 0xbe8de9e5 ),
	VERT( 0x426e0f49, 0x41e33604, 0xc212f097 ),
	NORM( 0x3f75f903, 0xb71c306f, 0xbe8de4b1 ),
	VERT( 0x426ce46b, 0x41d179ca, 0xc212f097 ),
	NORM( 0x3f6d94af, 0xbe7eb291, 0xbe8df15a ),
	VERT( 0x4269782e, 0x41c0f2fb, 0xc212f097 ),
	NORM( 0x3f54fc75, 0xbef5fd6b, 0xbe8e0ee9 ),
	VERT( 0x42640651, 0x41b2c1e3, 0xc212f097 ),
	NORM( 0x3f2ddf1a, 0xbf2dead0, 0xbe8e3b72 ),
	VERT( 0x425cedc5, 0x41a7de22, 0xc212f097 ),
	NORM( 0x3ef5d2d0, 0xbf54f7e9, 0xbe8e73cb ),
	VERT( 0x4254aa5d, 0x41a105aa, 0xc212f097 ),
	NORM( 0x3e7e5ca1, 0xbf6d7d47, 0xbe8eb407 ),
	VERT( 0x424bcc3e, 0x419eaff0, 0xc212f097 ),
	NORM( 0xb9343e50, 0xbf75d129, 0xbe8ef7e4 ),
	VERT( 0x4242ee21, 0x41a105aa, 0xc212f097 ),
	NORM( 0xbe7e9c92, 0xbf6d64bb, 0xbe8f3aaa ),
	VERT( 0x423aaabb, 0x41a7de22, 0xc212f097 ),
	NORM( 0xbef5cee7, 0xbf54cd64, 0xbe8f77c9 ),
	VERT( 0x42339230, 0x41b2c1e3, 0xc212f097 ),
	NORM( 0xbf2dc467, 0xbf2db9ec, 0xbe8fab1a ),
	VERT( 0x422e204d, 0x41c0f2fb, 0xc212f097 ),
	NORM( 0xbf54c949, 0xbef5a8cc, 0xbe8fd14b ),
	VERT( 0x422ab411, 0x41d179ca, 0xc212f097 ),
	NORM( 0xbf6d4fc0, 0xbe7e4f3c, 0xbe8fe7aa ),
	VERT( 0x42298938, 0x41e33604, 0xc212f097 ),
	NORM( 0xbf75ad6b, 0xb71b6d9a, 0xbe8fecd3 ),
	VERT( 0x422ab411, 0x41f4f23c, 0xc212f097 ),
	NORM( 0xbf6d5118, 0x3e7e4baf, 0xbe8fe05f ),
	VERT( 0x422e204d, 0x4202bc87, 0xc212f097 ),
	NORM( 0xbf54cb9e, 0x3ef5a8fd, 0xbe8fc328 ),
	VERT( 0x42339230, 0x4209d513, 0xc212f097 ),
	NORM( 0xbf2dc718, 0x3f2dbb5b, 0xbe8f9723 ),
	VERT( 0x423aaabb, 0x420f46f4, 0xc212f097 ),
	NORM( 0xbef5d369, 0x3f54d037, 0xbe8f5f49 ),
	VERT( 0x4242ee21, 0x4212b32e, 0xc212f097 ),
	NORM( 0xbe7ea1c6, 0x3f6d6884, 0xbe8f1f3c ),
	VERT( 0x424bd061, 0x421227b9, 0xc2158f9d ),
	NORM( 0x39c2abcc, 0x3f323afc, 0xbf37c414 ),
	VERT( 0x42543cff, 0x42110bcc, 0xc2158f9d ),
	NORM( 0x3e38dbc3, 0x3f2c26f4, 0xbf37bfd9 ),
	VERT( 0x425c16a1, 0x420dcb62, 0xc2158f9d ),
	NORM( 0x3eb2650f, 0x3f1a5ca2, 0xbf37b7c5 ),
	VERT( 0x4262d45a, 0x42089f32, 0xc2158f9d ),
	NORM( 0x3efc4139, 0x3efc2035, 0xbf37ac77 ),
	VERT( 0x42680085, 0x4201e17a, 0xc2158f9d ),
	NORM( 0x3f1a7e17, 0x3eb25828, 0xbf379ec5 ),
	VERT( 0x426b40f2, 0x41f40fad, 0xc2158f9d ),
	NORM( 0x3f2c5c21, 0x3e38c27f, 0xbf378f90 ),
	VERT( 0x426c5cdf, 0x41e33678, 0xc2158f9d ),
	NORM( 0x3f32811d, 0x3900ed68, 0xbf377ff6 ),
	VERT( 0x426b40f2, 0x41d25d41, 0xc2158f9d ),
	NORM( 0x3f2c7e8d, 0xbe38a6fa, 0xbf3770f3 ),
	VERT( 0x42680085, 0x41c2a9fc, 0xc2158f9d ),
	NORM( 0x3f1ab9e6, 0xbeb27cea, 0xbf376372 ),
	VERT( 0x4262d45a, 0x41b52e8c, 0xc2158f9d ),
	NORM( 0x3efccbcf, 0xbefc8a42, 0xbf375855 ),
	VERT( 0x425c16a1, 0x41aad62e, 0xc2158f9d ),
	NORM( 0x3eb2ddcb, 0xbf1ab491, 0xbf375058 ),
	VERT( 0x42543cff, 0x41a45555, 0xc2158f9d ),
	NORM( 0x3e396847, 0xbf2c98ed, 0xbf374bf0 ),
	VERT( 0x424bd061, 0x41a21d7e, 0xc2158f9d ),
	NORM( 0x39c45761, 0xbf32b6f1, 0xbf374b89 ),
	VERT( 0x424363c6, 0x41a45555, 0xc2158f9d ),
	NORM( 0xbe38adbb, 0xbf2ca205, 0xbf374f25 ),
	VERT( 0x423b8a25, 0x41aad62e, 0xc2158f9d ),
	NORM( 0xbeb28deb, 0xbf1ac436, 0xbf37569b ),
	VERT( 0x4234cc6d, 0x41b52e8c, 0xc2158f9d ),
	NORM( 0xbefc8d75, 0xbefcae36, 0xbf37616e ),
	VERT( 0x422fa03c, 0x41c2a9fc, 0xc2158f9d ),
	NORM( 0xbf1aa35e, 0xbeb29b7a, 0xbf376f03 ),
	VERT( 0x422c5fd0, 0x41d25d41, 0xc2158f9d ),
	NORM( 0xbf2c6e15, 0xbe38c7fe, 0xbf377e5a ),
	VERT( 0x422b43e8, 0x41e33678, 0xc2158f9d ),
	NORM( 0xbf327234, 0x39042e17, 0xbf378e76 ),
	VERT( 0x422c5fd0, 0x41f40fad, 0xc2158f9d ),
	NORM( 0xbf2c4a61, 0x3e38e3a9, 0xbf379e22 ),
	VERT( 0x422fa03c, 0x4201e17a, 0xc2158f9d ),
	NORM( 0xbf1a65b0, 0x3eb2750d, 0xbf37ac47 ),
	VERT( 0x4234cc6d, 0x42089f32, 0xc2158f9d ),
	NORM( 0xbefbff81, 0x3efc40c9, 0xbf37b7d6 ),
	VERT( 0x423b8a25, 0x420dcb62, 0xc2158f9d ),
	NORM( 0xbeb21377, 0x3f1a6a62, 0xbf37c001 ),
	VERT( 0x424363c6, 0x42110bcc, 0xc2158f9d ),
	NORM( 0xbe382166, 0x3f2c2ed5, 0xbf37c429 ),
	VERT( 0x424bbfe8, 0x420bed35, 0xc2192136 ),
	NORM( 0xb989ff2d, 0x3ec7c976, 0xbf6bb4b8 ),
	VERT( 0x425292c5, 0x420b073a, 0xc2192136 ),
	NORM( 0x3dce3dca, 0x3ec0c7aa, 0xbf6bc13f ),
	VERT( 0x4258ee92, 0x420864f9, 0xc2192136 ),
	NORM( 0x3e474341, 0x3eaca70f, 0xbf6bcd17 ),
	VERT( 0x425e6468, 0x42043461, 0xc2192136 ),
	NORM( 0x3e8cd2e5, 0x3e8ccf66, 0xbf6bd777 ),
	VERT( 0x426294fb, 0x41fd7d19, 0xc2192136 ),
	NORM( 0x3eac5d08, 0x3e46e391, 0xbf6bdfac ),
	VERT( 0x4265373f, 0x41f0c57b, 0xc2192136 ),
	NORM( 0x3ec0248c, 0x3dcd800d, 0xbf6be51d ),
	VERT( 0x42661d3a, 0x41e31fc9, 0xc2192136 ),
	NORM( 0x3ec6d9b2, 0xb994e4f6, 0xbf6be763 ),
	VERT( 0x4265373f, 0x41d57a14, 0xc2192136 ),
	NORM( 0x3ec00c90, 0xbdce9074, 0xbf6be648 ),
	VERT( 0x426294fb, 0x41c8c279, 0xc2192136 ),
	NORM( 0x3eac33d9, 0xbe47494c, 0xbf6be1d4 ),
	VERT( 0x425e6468, 0x41bdd6cf, 0xc2192136 ),
	NORM( 0x3e8ca3f3, 0xbe8ceb59, 0xbf6bda4c ),
	VERT( 0x4258ee92, 0x41b575a1, 0xc2192136 ),
	NORM( 0x3e46f364, 0xbeacacf6, 0xbf6bd039 ),
	VERT( 0x425292c5, 0x41b0311a, 0xc2192136 ),
	NORM( 0x3dcde2d7, 0xbec0becf, 0xbf6bc44c ),
	VERT( 0x424bbfe8, 0x41ae6527, 0xc2192136 ),
	NORM( 0xb98b8348, 0xbec7bcd5, 0xbf6bb765 ),
	VERT( 0x4244ed0f, 0x41b0311a, 0xc2192136 ),
	NORM( 0xbdcf6559, 0xbec1235a, 0xbf6baa6e ),
	VERT( 0x423e9142, 0x41b575a1, 0xc2192136 ),
	NORM( 0xbe48473f, 0xbead5ac3, 0xbf6b9e58 ),
	VERT( 0x42391b6d, 0x41bdd6cf, 0xc2192136 ),
	NORM( 0xbe8db133, 0xbe8db392, 0xbf6b93fa ),
	VERT( 0x4234ead5, 0x41c8c279, 0xc2192136 ),
	NORM( 0xbeada3b4, 0xbe48a2e5, 0xbf6b8c0a ),
	VERT( 0x42324892, 0x41d57a14, 0xc2192136 ),
	NORM( 0xbec1c376, 0xbdd01cc1, 0xbf6b8709 ),
	VERT( 0x4231629b, 0x41e31fc9, 0xc2192136 ),
	NORM( 0xbec8a8bb, 0xb996663a, 0xbf6b8549 ),
	VERT( 0x42324892, 0x41f0c57b, 0xc2192136 ),
	NORM( 0xbec1d72f, 0x3dcf050e, 0xbf6b86d4 ),
	VERT( 0x4234ead5, 0x41fd7d19, 0xc2192136 ),
	NORM( 0xbeadc638, 0x3e483498, 0xbf6b8b8a ),
	VERT( 0x42391b6d, 0x42043461, 0xc2192136 ),
	NORM( 0xbe8dd9b1, 0x3e8d912f, 0xbf6b930d ),
	VERT( 0x423e9142, 0x420864f9, 0xc2192136 ),
	NORM( 0xbe488e8a, 0x3ead4e32, 0xbf6b9cdd ),
	VERT( 0x4244ed0f, 0x420b073a, 0xc2192136 ),
	NORM( 0xbdcfb901, 0x3ec127f7, 0xbf6ba855 ),
	VERT( 0x424bcac6, 0x420251a9, 0xc21bb3e7 ),
	NORM( 0x390885b8, 0x3e49f4f3, 0xbf7af8c7 ),
	VERT( 0x4250174c, 0x4201c0c5, 0xc21bb3e7 ),
	NORM( 0x3d5128e9, 0x3e42ecb2, 0xbf7afa96 ),
	VERT( 0x425418d0, 0x420017fd, 0xc21bb3e7 ),
	NORM( 0x3dc9929f, 0x3e2e9c2c, 0xbf7afd3e ),
	VERT( 0x42578973, 0x41fae883, 0xc21bb3e7 ),
	NORM( 0x3e0e4eb0, 0x3e0e71f3, 0xbf7b0093 ),
	VERT( 0x425a2d2b, 0x41f4073f, 0xc21bb3e7 ),
	NORM( 0x3e2e091b, 0x3dc95869, 0xbf7b045b ),
	VERT( 0x425bd5f5, 0x41ec0435, 0xc21bb3e7 ),
	NORM( 0x3e41d95a, 0x3d50b477, 0xbf7b084b ),
	VERT( 0x425c66d8, 0x41e36b2e, 0xc21bb3e7 ),
	NORM( 0x3e48734e, 0x39897661, 0xbf7b0c19 ),
	VERT( 0x425bd5f5, 0x41dad225, 0xc21bb3e7 ),
	NORM( 0x3e4170e3, 0xbd4e1e9d, 0xbf7b0f77 ),
	VERT( 0x425a2d2b, 0x41d2cf1d, 0xc21bb3e7 ),
	NORM( 0x3e2d5565, 0xbdc775a8, 0xbf7b1226 ),
	VERT( 0x42578973, 0x41cbedd8, 0xc21bb3e7 ),
	NORM( 0x3e0d8163, 0xbe0d1ab8, 0xbf7b13f1 ),
	VERT( 0x425418d0, 0x41c6a662, 0xc21bb3e7 ),
	NORM( 0x3dc83448, 0xbe2ce223, 0xbf7b14be ),
	VERT( 0x4250174c, 0x41c354cf, 0xc21bb3e7 ),
	NORM( 0x3d4f9bcb, 0xbe40ee89, 0xbf7b1482 ),
	VERT( 0x424bcac6, 0x41c2330b, 0xc21bb3e7 ),
	NORM( 0x390aa23a, 0xbe47e2f8, 0xbf7b134a ),
	VERT( 0x42477e42, 0x41c354cf, 0xc21bb3e7 ),
	NORM( 0xbd4edde7, 0xbe413fed, 0xbf7b1135 ),
	VERT( 0x42437cbe, 0x41c6a662, 0xc21bb3e7 ),
	NORM( 0xbdc84b80, 0xbe2d6dda, 0xbf7b0e6e ),
	VERT( 0x42400c1c, 0x41cbedd8, 0xc21bb3e7 ),
	NORM( 0xbe0ddb6f, 0xbe0db9e1, 0xbf7b0b2a ),
	VERT( 0x423d6860, 0x41d2cf1d, 0xc21bb3e7 ),
	NORM( 0xbe2dfafa, 0xbdc88414, 0xbf7b079f ),
	VERT( 0x423bbf97, 0x41dad225, 0xc21bb3e7 ),
	NORM( 0xbe4249c0, 0xbd4f4d61, 0xbf7b0406 ),
	VERT( 0x423b2eb7, 0x41e36b2e, 0xc21bb3e7 ),
	NORM( 0xbe49597b, 0x398a82f9, 0xbf7b0095 ),
	VERT( 0x423bbf97, 0x41ec0435, 0xc21bb3e7 ),
	NORM( 0xbe42a511, 0x3d51d8ea, 0xbf7afd7d ),
	VERT( 0x423d6860, 0x41f4073f, 0xc21bb3e7 ),
	NORM( 0xbe2e9a62, 0x3dca50a2, 0xbf7afaee ),
	VERT( 0x42400c1c, 0x41fae883, 0xc21bb3e7 ),
	NORM( 0xbe0e95d5, 0x3e0efe33, 0xbf7af911 ),
	VERT( 0x42437cbe, 0x420017fd, 0xc21bb3e7 ),
	NORM( 0xbdc99396, 0x3e2f1390, 0xbf7af808 ),
	VERT( 0x42477e42, 0x4201c0c5, 0xc21bb3e7 ),
	NORM( 0xbd5060c3, 0x3e4330f7, 0xbf7af7ec ),
	VERT( 0x424ba633, 0x41f46b85, 0xc21cb6fd ),
	NORM( 0xb8e914dd, 0x3d899b91, 0xbf7f6be5 ),
	VERT( 0x424de279, 0x41f3d4d6, 0xc21cb6fd ),
	NORM( 0x3c8d4648, 0x3d846ffe, 0xbf7f6d10 ),
	VERT( 0x424ff7bd, 0x41f21b10, 0xc21cb6fd ),
	NORM( 0x3d089110, 0x3d6ce419, 0xbf7f6dce ),
	VERT( 0x4251c1ac, 0x41ef5c4d, 0xc21cb6fd ),
	NORM( 0x3d4127a9, 0x3d412c79, 0xbf7f6e16 ),
	VERT( 0x4253210b, 0x41ebc871, 0xc21cb6fd ),
	NORM( 0x3d6ccece, 0x3d088ceb, 0xbf7f6de4 ),
	VERT( 0x4253fdef, 0x41e79de7, 0xc21cb6fd ),
	NORM( 0x3d845c18, 0x3c8d3eeb, 0xbf7f6d3a ),
	VERT( 0x42544947, 0x41e3255e, 0xc21cb6fd ),
	NORM( 0x3d897f9d, 0xb8ddfdc0, 0xbf7f6c22 ),
	VERT( 0x4253fdef, 0x41deacd4, 0xc21cb6fd ),
	NORM( 0x3d85659c, 0xbc901945, 0xbf7f6aab ),
	VERT( 0x4253210b, 0x41da824b, 0xc21cb6fd ),
	NORM( 0x3d7068d2, 0xbd0b8299, 0xbf7f68ee ),
	VERT( 0x4251c1ac, 0x41d6ee6f, 0xc21cb6fd ),
	NORM( 0x3d455403, 0xbd463ebd, 0xbf7f6703 ),
	VERT( 0x424ff7bd, 0x41d42fac, 0xc21cb6fd ),
	NORM( 0x3d0c31ad, 0xbd741a28, 0xbf7f650d ),
	VERT( 0x424de279, 0x41d275e5, 0xc21cb6fd ),
	NORM( 0x3c91760a, 0xbd88d894, 0xbf7f632d ),
	VERT( 0x424ba633, 0x41d1df38, 0xc21cb6fd ),
	NORM( 0xb8f9525c, 0xbd8e55b1, 0xbf7f6188 ),
	VERT( 0x424969ee, 0x41d275e5, 0xc21cb6fd ),
	NORM( 0xbc94a386, 0xbd89fffc, 0xbf7f603d ),
	VERT( 0x424754aa, 0x41d42fac, 0xc21cb6fd ),
	NORM( 0xbd0f750a, 0xbd78173a, 0xbf7f5f65 ),
	VERT( 0x42458abc, 0x41d6ee6f, 0xc21cb6fd ),
	NORM( 0xbd4adb97, 0xbd4ad5ed, 0xbf7f5f13 ),
	VERT( 0x42442b5a, 0x41da824b, 0xc21cb6fd ),
	NORM( 0xbd782e68, 0xbd0f7957, 0xbf7f5f4c ),
	VERT( 0x42434e77, 0x41deacd4, 0xc21cb6fd ),
	NORM( 0xbd8a156e, 0xbc94ab78, 0xbf7f600d ),
	VERT( 0x42430321, 0x41e3255e, 0xc21cb6fd ),
	NORM( 0xbd8e738b, 0xb8ee39a3, 0xbf7f6146 ),
	VERT( 0x42434e77, 0x41e79de7, 0xc21cb6fd ),
	NORM( 0xbd88fb1d, 0x3c91a205, 0xbf7f62dd ),
	VERT( 0x42442b5a, 0x41ebc871, 0xc21cb6fd ),
	NORM( 0xbd745ebd, 0x3d0c5b49, 0xbf7f64b5 ),
	VERT( 0x42458abc, 0x41ef5c4d, 0xc21cb6fd ),
	NORM( 0xbd4678cb, 0x3d458d37, 0xbf7f66a9 ),
	VERT( 0x424754aa, 0x41f21b10, 0xc21cb6fd ),
	NORM( 0xbd0bac0d, 0x3d70ab7c, 0xbf7f6898 ),
	VERT( 0x424969ee, 0x41f3d4d6, 0xc21cb6fd ),
	NORM( 0xbc9044ab, 0x3d85869c, 0xbf7f6a60 ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_anarogue_L02[]
START
VList      vertex_Controller_VM2_CPBody12_anarogue_L02,
PList      strip_Controller_VM2_CPBody12_anarogue_L02,
Center      50.931370F, 28.405800F, -34.129299F,
Radius      11.202519F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_anarogue_L02[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Controller_VM2_CPBody12_anarogue_L02,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Controller_VM2_CPBody12_BlueB,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Controller_VM2_CPBody12_CPBody12[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 2054, _NB( UFO_0, 292 ),
	StripL(4),  1455, 1458, 1464, 1463, 
	StripL(4),  1173, 1172, 1193, 1194, 
	StripL(4),  1171, 1153, 1174, 1126, 
	StripR(5),  911, 1060, 1090, 1068, 1099, 
	StripL(3),  1098, 1099, 1090, 
	StripR(7),  894, 920, 913, 919, 911, 916, 1060, 
	StripL(3),  913, 894, 891, 
	StripL(4),  1459, 1461, 1456, 1457, 
	StripR(5),  1013, 1010, 1011, 1005, 1012, 
	StripL(3),  1015, 992, 1014, 
	StripR(5),  999, 1003, 996, 1004, 997, 
	StripL(10),  1003, 1002, 999, 1000, 1005, 1006, 1010, 1007, 1009, 1008, 
	StripL(3),  1002, 1001, 1000, 
	StripR(5),  995, 996, 994, 997, 998, 
	StripL(3),  994, 993, 990, 
	StripL(6),  991, 990, 992, 993, 1014, 1011, 
	StripL(3),  1016, 1020, 1017, 
	StripL(3),  1025, 1028, 1029, 
	StripL(3),  1030, 1031, 1024, 
	StripR(7),  1024, 1027, 1031, 1041, 1042, 1038, 1039, 
	StripL(9),  1033, 1034, 1032, 1035, 1017, 1018, 1016, 1019, 944, 
	StripR(12),  1034, 1039, 1033, 1038, 1040, 1041, 1043, 1048, 1044, 1047, 
                   1045, 1046, 
	StripR(6),  1040, 1037, 1033, 1036, 1032, 1017, 
	StripR(8),  1048, 1041, 1028, 1027, 1025, 1024, 1023, 1030, 
	StripR(7),  984, 947, 1049, 1050, 1023, 1026, 1025, 
	StripR(5),  1036, 1022, 1017, 1021, 1020, 
	StripR(5),  1058, 1056, 1053, 1055, 1054, 
	StripR(7),  927, 1066, 946, 1065, 1063, 1064, 1057, 
	StripL(7),  1069, 1070, 1059, 1061, 917, 1062, 948, 
	StripR(5),  1072, 1071, 1069, 1067, 1059, 
	StripL(3),  1076, 1069, 1072, 
	StripL(6),  1077, 1079, 1080, 1054, 1081, 1053, 
	StripL(9),  1085, 1083, 1082, 1084, 1073, 1074, 1072, 1075, 1076, 
	StripL(3),  1088, 1078, 1087, 
	StripL(3),  1092, 1093, 1056, 
	StripL(12),  1066, 898, 927, 926, 946, 925, 939, 924, 940, 903, 
                   976, 975, 
	StripR(10),  898, 1095, 1066, 1094, 1065, 1093, 1064, 1056, 1057, 1058, 
	StripL(9),  1072, 1096, 1082, 1086, 1085, 1087, 1077, 1078, 1079, 
	StripL(3),  1082, 1073, 1072, 
	StripL(3),  1100, 1071, 1067, 
	StripR(6),  928, 930, 989, 973, 980, 981, 
	StripL(3),  974, 953, 977, 
	StripR(5),  977, 979, 953, 983, 950, 
	StripL(5),  982, 966, 981, 969, 973, 
	StripL(9),  950, 965, 983, 962, 982, 958, 966, 956, 960, 
	StripR(10),  938, 947, 986, 984, 945, 1049, 1051, 1023, 1052, 1030, 
	StripL(6),  945, 986, 935, 988, 936, 937, 
	StripR(6),  987, 944, 985, 1016, 949, 1020, 
	StripR(6),  985, 949, 987, 943, 989, 928, 
	StripL(20),  938, 941, 988, 977, 978, 979, 954, 983, 955, 982, 
                   968, 981, 971, 980, 934, 989, 933, 987, 932, 944, 
                   
	StripL(3),  988, 986, 938, 
	StripL(4),  988, 978, 937, 954, 
	StripL(4),  903, 904, 975, 905, 
	StripL(3),  972, 921, 918, 
	StripR(7),  972, 931, 918, 929, 917, 942, 948, 
	StripR(6),  964, 906, 951, 905, 952, 975, 
	StripR(9),  963, 959, 923, 957, 922, 961, 897, 967, 970, 
	StripL(3),  909, 907, 908, 
	StripR(7),  914, 910, 912, 1089, 1091, 1097, 1101, 
	StripL(8),  903, 924, 901, 925, 900, 926, 899, 898, 
	StripL(3),  903, 901, 902, 
	StripL(3),  922, 923, 897, 
	StripR(9),  897, 896, 923, 895, 963, 909, 964, 907, 906, 
	StripL(6),  893, 921, 892, 972, 897, 970, 
	StripR(5),  889, 890, 915, 914, 912, 
	StripL(4),  1630, 1664, 1686, 1672, 
	StripL(4),  1692, 1689, 1691, 1690, 
	StripL(4),  1672, 1670, 1753, 1750, 
	StripL(4),  1151, 1378, 1373, 1370, 
	StripL(4),  1170, 1176, 1197, 1198, 
	StripL(4),  1199, 1122, 1195, 1151, 
	StripL(3),  1663, 1668, 1671, 
	StripL(3),  1123, 1376, 1150, 
	StripR(5),  1687, 1631, 1715, 1627, 1724, 
	StripR(5),  1357, 1351, 1393, 1372, 1374, 
	StripL(3),  1357, 1355, 1393, 
	StripL(3),  1713, 1694, 1712, 
	StripR(8),  1712, 1115, 1694, 1113, 1474, 1475, 1104, 1394, 
	StripR(6),  1722, 1723, 1719, 1712, 1718, 1713, 
	StripR(7),  1713, 1717, 1718, 1716, 1719, 1721, 1722, 
	StripR(5),  1394, 1475, 1477, 1113, 1476, 
	StripR(5),  1476, 1478, 1477, 1354, 1394, 
	StripL(3),  1601, 1600, 1602, 
	StripL(4),  1605, 1603, 1604, 1611, 
	StripL(6),  1608, 1607, 1605, 1606, 1603, 1612, 
	StripL(5),  1606, 1613, 1612, 1614, 1615, 
	StripR(6),  1620, 1619, 1618, 1406, 1871, 1362, 
	StripL(3),  1624, 1625, 1623, 
	StripL(3),  1632, 1626, 1629, 
	StripL(7),  1634, 1633, 1626, 1628, 1629, 1636, 1637, 
	StripL(4),  1633, 1635, 1628, 1636, 
	StripL(4),  1638, 1639, 1640, 1654, 
	StripL(27),  1646, 1647, 1645, 1648, 1951, 1911, 1910, 1907, 1909, 1908, 
                   1920, 1815, 1916, 1813, 1917, 1814, 1816, 1802, 1804, 1795, 
                   1793, 1796, 1794, 1792, 1791, 1789, 1790, 
	StripL(7),  1646, 1645, 1649, 1951, 1952, 1910, 1956, 
	StripL(3),  1652, 1653, 1651, 
	StripL(4),  1654, 1655, 1656, 1856, 
	StripL(3),  1648, 1647, 1659, 
	StripL(4),  1637, 1662, 1629, 1637, 
	StripR(5),  1666, 1667, 1662, 1661, 1637, 
	StripL(4),  1681, 1678, 1680, 1679, 
	StripL(9),  1693, 1695, 1460, 1696, 1697, 1699, 1698, 1688, 1673, 
	StripR(5),  1701, 1700, 1702, 1673, 1698, 
	StripR(5),  1116, 1706, 1703, 1705, 1704, 
	StripL(3),  1708, 1709, 1707, 
	StripL(6),  1710, 1707, 1704, 1709, 1705, 1711, 
	StripL(3),  1720, 1725, 1714, 
	StripR(5),  1732, 1731, 1728, 1730, 1727, 
	StripL(3),  1736, 1733, 1735, 
	StripL(4),  1726, 1703, 1729, 1112, 
	StripL(10),  1745, 1744, 1743, 1742, 1674, 1831, 1650, 1661, 1660, 1637, 
	StripR(5),  1746, 1625, 1621, 1623, 1622, 
	StripL(4),  1677, 1754, 1749, 1755, 
	StripL(5),  1762, 1751, 1759, 1760, 1757, 
	StripL(11),  1764, 1763, 1758, 1756, 1747, 1757, 1748, 1760, 1761, 1751, 
                   1669, 
	StripL(4),  1763, 1759, 1756, 1757, 
	StripR(5),  1762, 1766, 1759, 1765, 1763, 
	StripR(9),  1761, 1748, 1669, 1667, 1665, 1666, 1632, 1662, 1629, 
	StripL(4),  1791, 1790, 1794, 1793, 
	StripR(5),  1797, 1799, 1767, 1771, 1770, 
	StripR(7),  1799, 1800, 1774, 1773, 1775, 1776, 1805, 
	StripL(23),  1807, 1784, 1783, 1781, 1782, 1802, 1800, 1813, 1799, 1815, 
                   1797, 1810, 1809, 1908, 1856, 1907, 1656, 1657, 1654, 1658, 
                   1640, 1641, 1638, 
	StripL(8),  1811, 1801, 1798, 1778, 1777, 1779, 1780, 1806, 
	StripL(3),  1802, 1814, 1813, 
	StripR(12),  1821, 1818, 1819, 1817, 1820, 1822, 1339, 1332, 1344, 1350, 
                   1291, 1290, 
	StripR(6),  1822, 1817, 1823, 1881, 1882, 1883, 
	StripL(7),  1824, 1619, 1460, 1406, 1358, 1362, 1360, 
	StripR(7),  1833, 1832, 1831, 1830, 1742, 1829, 1744, 
	StripL(3),  1840, 1841, 1839, 
	StripL(6),  1838, 1839, 1836, 1841, 1925, 1933, 
	StripL(7),  1847, 1818, 1846, 1817, 1939, 1881, 1938, 
	StripL(4),  1853, 1851, 1852, 1849, 
	StripL(3),  1850, 1851, 1854, 
	StripL(13),  1655, 1855, 1856, 1811, 1809, 1798, 1797, 1768, 1767, 1769, 
                   1770, 1772, 1771, 
	StripL(4),  1859, 1860, 1857, 1863, 
	StripR(6),  1861, 1862, 1860, 1861, 1863, 1860, 
	StripR(5),  1649, 1675, 1739, 1741, 1740, 
	StripL(8),  1869, 1870, 1868, 1877, 1867, 1871, 1866, 1865, 
	StripL(6),  1871, 1873, 1877, 1874, 1876, 1875, 
	StripL(5),  1877, 1854, 1871, 1872, 1873, 
	StripL(6),  1877, 1878, 1854, 1848, 1850, 1849, 
	StripL(3),  1878, 1879, 1848, 
	StripR(5),  1880, 1857, 1842, 1845, 1844, 
	StripL(6),  1880, 1843, 1842, 1673, 1844, 1901, 
	StripL(3),  1884, 1885, 1837, 
	StripL(7),  1885, 1838, 1837, 1836, 1924, 1925, 1926, 
	StripL(10),  1844, 1895, 1893, 1896, 1894, 1897, 1893, 1898, 1892, 1890, 
	StripL(3),  1900, 1700, 1899, 
	StripL(3),  1752, 1901, 1673, 
	StripR(5),  1903, 1877, 1904, 1887, 1889, 
	StripL(14),  1831, 1676, 1661, 1677, 1667, 1749, 1748, 1746, 1747, 1625, 
                   1738, 1624, 1737, 1956, 
	StripL(9),  1916, 1917, 1913, 1914, 1912, 1915, 1953, 1923, 1957, 
	StripR(7),  1916, 1920, 1913, 1918, 1912, 1919, 1954, 
	StripL(7),  1907, 1911, 1657, 1648, 1658, 1659, 1641, 
	StripR(15),  1920, 1909, 1918, 1910, 1919, 1956, 1954, 1737, 1953, 1955, 
                   1958, 1960, 1961, 1758, 1764, 
	StripR(7),  1928, 1821, 1930, 1326, 1327, 1328, 1329, 
	StripR(5),  1932, 1931, 1929, 1928, 1930, 
	StripR(5),  1825, 1937, 1934, 1936, 1935, 
	StripR(5),  1846, 1847, 1924, 1927, 1926, 
	StripL(6),  1924, 1938, 1837, 1881, 1884, 1883, 
	StripL(24),  1634, 1940, 1633, 1643, 1635, 1642, 1636, 1659, 1637, 1647, 
                   1660, 1646, 1650, 1649, 1674, 1675, 1864, 1741, 1743, 1740, 
                   1745, 1622, 1834, 1835, 
	StripL(6),  1940, 1644, 1643, 1641, 1642, 1659, 
	StripL(16),  1941, 1735, 1731, 1733, 1732, 1734, 1728, 1726, 1727, 1729, 
                   1730, 1644, 1731, 1940, 1941, 1634, 
	StripR(6),  1860, 1863, 1902, 1945, 1946, 1947, 
	StripL(8),  1891, 1889, 1859, 1904, 1860, 1903, 1902, 1877, 
	StripL(3),  1943, 1944, 1942, 
	StripL(3),  1947, 1948, 1945, 
	StripL(6),  1868, 1867, 1869, 1866, 1950, 1949, 
	StripL(3),  1954, 1912, 1953, 
	StripL(3),  1957, 1958, 1953, 
	StripL(8),  1952, 1956, 1649, 1624, 1739, 1623, 1740, 1622, 
	StripL(3),  1864, 1743, 1674, 
	StripR(11),  1959, 1855, 1812, 1811, 1803, 1801, 1786, 1785, 1787, 1788, 
                   1808, 
	StripR(6),  1955, 1737, 1960, 1738, 1758, 1747, 
	StripL(7),  1816, 1922, 1917, 1921, 1914, 1923, 1915, 
	StripL(3),  1810, 1815, 1908, 
	StripL(4),  1965, 1962, 1964, 1963, 
	StripL(7),  1970, 1969, 1968, 1962, 1966, 1965, 1967, 
	StripL(3),  1968, 1959, 1970, 
	StripL(3),  1972, 1973, 1971, 
	StripL(3),  1225, 1227, 1190, 
	StripL(6),  1232, 1225, 1601, 1190, 1600, 1599, 
	StripL(8),  1211, 1230, 1209, 1228, 1226, 1608, 1190, 1605, 
	StripR(11),  1228, 1608, 1161, 1607, 1609, 1606, 1610, 1613, 1616, 1614, 
                   1617, 
	StripL(3),  1228, 1230, 1161, 
	StripL(3),  1212, 1224, 1231, 
	StripL(7),  1166, 1165, 1186, 1209, 1212, 1226, 1224, 
	StripL(3),  1186, 1188, 1166, 
	StripR(6),  1209, 1211, 1165, 1162, 1166, 1164, 
	StripR(9),  1352, 1356, 1382, 1386, 1385, 1369, 1365, 1366, 1685, 
	StripR(5),  1383, 1384, 1380, 1381, 1379, 
	StripL(3),  1298, 1390, 1367, 
	StripL(3),  1156, 1267, 1387, 
	StripL(7),  1148, 1156, 1383, 1387, 1380, 1388, 1379, 
	StripL(3),  1383, 1130, 1148, 
	StripL(3),  1383, 1384, 1282, 
	StripL(8),  1383, 1282, 1130, 1127, 1257, 1251, 1252, 1249, 
	StripL(4),  1216, 1135, 1132, 1147, 
	StripL(3),  1257, 1244, 1130, 
	StripL(4),  1349, 1340, 1347, 1321, 
	StripL(3),  1282, 1384, 1383, 
	StripL(3),  1189, 1185, 1154, 
	StripR(9),  1390, 1368, 1304, 1685, 1462, 1683, 1905, 1906, 1653, 
	StripL(3),  1368, 1685, 1365, 
	StripL(3),  1371, 1377, 1319, 
	StripR(7),  1375, 1152, 1395, 1292, 1359, 1294, 1361, 
	StripL(7),  1359, 1395, 1364, 1103, 1460, 1471, 1693, 
	StripL(7),  1116, 1473, 1703, 1114, 1111, 1472, 1110, 
	StripR(5),  1111, 1470, 1110, 1107, 1109, 
	StripL(5),  1468, 1102, 1467, 1466, 1465, 
	StripL(3),  1106, 1108, 1105, 
	StripL(3),  1133, 1205, 1136, 
	StripL(6),  1220, 1245, 1223, 1246, 1219, 1247, 
	StripL(3),  1128, 1206, 1243, 
	StripR(5),  1243, 1133, 1206, 1205, 1182, 
	StripR(15),  1243, 1247, 1133, 1219, 1136, 1218, 1135, 1217, 1216, 1221, 
                   1220, 1222, 1223, 1218, 1219, 
	StripL(5),  1183, 1207, 1184, 1208, 1200, 
	StripR(11),  1131, 1129, 1182, 1183, 1206, 1207, 1128, 1208, 1118, 1200, 
                   1121, 
	StripR(5),  1183, 1129, 1184, 1117, 1125, 
	StripL(4),  1125, 1184, 1175, 1200, 
	StripL(3),  1118, 1128, 1121, 
	StripR(5),  1121, 1127, 1128, 1251, 1243, 
	StripL(10),  1419, 1437, 1438, 1436, 1420, 1418, 1410, 1411, 1159, 1191, 
	StripL(32),  1431, 1430, 1452, 1451, 1453, 1454, 1434, 1435, 1416, 1413, 
                   1143, 1178, 1177, 1201, 1202, 1142, 1119, 1124, 1400, 1401, 
                   1138, 1146, 1237, 1267, 1145, 1156, 1147, 1148, 1132, 1130, 
                   1242, 1244, 
	StripL(4),  1434, 1431, 1453, 1452, 
	StripL(5),  1410, 1415, 1420, 1419, 1438, 
	StripL(7),  1415, 1414, 1422, 1421, 1440, 1439, 1441, 
	StripL(7),  1408, 1412, 1427, 1428, 1448, 1450, 1449, 
	StripR(10),  1443, 1444, 1442, 1424, 1423, 1411, 1412, 1191, 1408, 1168, 
	StripR(23),  1447, 1445, 1446, 1425, 1426, 1413, 1414, 1201, 1415, 1142, 
                   1410, 1141, 1159, 1124, 1144, 1401, 1399, 1155, 1392, 1311, 
                   1298, 1365, 1367, 
	StripL(3),  1178, 1413, 1201, 
	StripR(5),  1820, 1339, 1819, 1343, 1821, 
	StripL(3),  1363, 1460, 1358, 
	StripL(3),  1333, 1930, 1334, 
	StripR(5),  1334, 1826, 1930, 1825, 1827, 
	StripR(15),  1369, 1729, 1828, 1644, 1366, 1641, 1685, 1684, 1683, 1639, 
                   1652, 1654, 1651, 1655, 1682, 
	StripL(7),  1256, 1255, 1242, 1253, 1254, 1258, 1250, 
	StripL(4),  1245, 1259, 1246, 1248, 
	StripR(13),  1342, 1343, 1341, 1339, 1348, 1344, 1346, 1345, 1320, 1322, 
                   1323, 1330, 1331, 
	StripL(3),  1301, 1303, 1297, 
	StripL(4),  1299, 1300, 1302, 1303, 
	StripR(5),  1304, 1305, 1390, 1392, 1298, 
	StripL(3),  1154, 1144, 1187, 
	StripL(4),  1265, 1277, 1157, 1276, 
	StripL(4),  1218, 1217, 1222, 1221, 
	StripR(7),  1314, 1318, 1389, 1317, 1871, 1312, 1877, 
	StripL(8),  1877, 1306, 1871, 1307, 1391, 1308, 1309, 1310, 
	StripR(5),  1296, 1297, 1391, 1301, 1302, 
	StripR(5),  1296, 1391, 1295, 1871, 1877, 
	StripR(6),  1149, 1286, 1285, 1152, 1158, 1192, 
	StripL(5),  1149, 1157, 1285, 1284, 1158, 
	StripL(7),  1344, 1345, 1289, 1322, 1288, 1330, 1287, 
	StripL(3),  1289, 1291, 1344, 
	StripL(3),  1350, 1290, 1397, 
	StripR(7),  1886, 1260, 1229, 1263, 1210, 1272, 1269, 
	StripL(3),  1268, 1269, 1210, 
	StripL(4),  1274, 1263, 1273, 1272, 
	StripL(14),  1273, 1158, 1274, 1275, 1264, 1276, 1278, 1277, 1264, 1265, 
                   1261, 1262, 1877, 1235, 
	StripL(3),  1158, 1270, 1275, 
	StripL(3),  1292, 1293, 1396, 
	StripL(3),  1192, 1196, 1152, 
	StripL(3),  1213, 1233, 1398, 
	StripR(6),  1398, 1304, 1233, 1462, 1601, 1905, 
	StripR(7),  1119, 1202, 1403, 1177, 1402, 1405, 1140, 
	StripR(20),  1401, 1146, 1155, 1267, 1311, 1387, 1365, 1388, 1385, 1379, 
                   1382, 1381, 1352, 1384, 1371, 1282, 1319, 1127, 1377, 1121, 
                   
	StripR(7),  1144, 1399, 1154, 1392, 1185, 1305, 1213, 
	StripR(5),  1323, 1324, 1320, 1325, 1342, 
	StripR(5),  1336, 1337, 1335, 1338, 1334, 
	StripL(3),  1341, 1342, 1320, 
	StripL(3),  1828, 1369, 1366, 
	StripR(16),  1353, 1105, 1102, 1106, 1468, 1469, 1467, 1112, 1465, 1729, 
                   1466, 1369, 1102, 1386, 1353, 1356, 
	StripR(5),  1262, 1235, 1265, 1215, 1157, 
	StripL(16),  1274, 1264, 1263, 1261, 1260, 1877, 1886, 1887, 1888, 1889, 
                   1890, 1891, 1892, 1859, 1858, 1857, 
	StripL(3),  1280, 1281, 1279, 
	StripL(3),  1214, 1234, 1266, 
	StripR(5),  1215, 1235, 1266, 1283, 1234, 
	StripL(4),  1315, 1318, 1314, 1315, 
	StripR(5),  1318, 1314, 1317, 1316, 1313, 
	StripL(7),  1132, 1242, 1216, 1254, 1220, 1250, 1245, 
	StripL(3),  1180, 1203, 1238, 
	StripR(5),  1238, 1239, 1203, 1139, 1404, 
	StripL(11),  1137, 1241, 1238, 1140, 1180, 1402, 1203, 1403, 1404, 1119, 
                   1400, 
	StripL(7),  1240, 1138, 1236, 1237, 1135, 1145, 1147, 
	StripL(8),  1236, 1135, 1240, 1136, 1204, 1205, 1181, 1182, 
	StripR(6),  1167, 1168, 1187, 1191, 1144, 1159, 
	StripL(3),  1179, 1204, 1181, 
	StripL(4),  1143, 1177, 1120, 1405, 
	StripR(14),  1131, 1182, 1134, 1181, 1137, 1179, 1238, 1204, 1239, 1240, 
                   1139, 1138, 1404, 1400, 
	StripL(3),  1142, 1141, 1124, 
	StripL(4),  1432, 1433, 1409, 1417, 
	StripL(3),  1167, 1169, 1163, 
	StripR(7),  1163, 1160, 1169, 1409, 1407, 1432, 1429, 
	StripL(3),  170, 153, 183, 
	CnkNull(),
	CnkM_D( FBS_SA|FBD_ISA ), 2,
	MDiff( 255, 241, 241, 241 ),
	CnkS( 0x0 ), 1826, _NB( UFO_0, 232 ),
	StripL(8),  492, 499, 500, 615, 502, 504, 477, 473, 
	StripR(8),  332, 432, 389, 386, 385, 382, 379, 374, 
	StripR(7),  475, 505, 503, 501, 614, 495, 497, 
	StripL(8),  471, 475, 554, 505, 556, 614, 610, 613, 
	StripR(9),  380, 377, 384, 383, 388, 387, 330, 279, 329, 
	StripR(6),  279, 387, 277, 384, 275, 254, 
	StripL(8),  1483, 1484, 1507, 1508, 1531, 1532, 1555, 1556, 
	StripL(8),  1484, 1485, 1508, 1509, 1532, 1533, 1556, 1557, 
	StripL(8),  1487, 1488, 1511, 1512, 1535, 1536, 1559, 1560, 
	StripL(8),  1488, 1489, 1512, 1513, 1536, 1537, 1560, 1561, 
	StripR(14),  1490, 1514, 1491, 1515, 1492, 1516, 1493, 1517, 1494, 1518, 
                   1495, 1519, 1496, 1520, 
	StripL(8),  1498, 1499, 1522, 1523, 1546, 1547, 1570, 1571, 
	StripL(8),  1499, 1500, 1523, 1524, 1547, 1548, 1571, 1572, 
	StripL(8),  1500, 1501, 1524, 1525, 1548, 1549, 1572, 1573, 
	StripR(14),  1514, 1538, 1515, 1539, 1516, 1540, 1517, 1541, 1518, 1542, 
                   1519, 1543, 1520, 1544, 
	StripL(8),  1552, 1551, 1528, 1527, 1504, 1503, 1480, 1479, 
	StripL(8),  1553, 1552, 1529, 1528, 1505, 1504, 1481, 1480, 
	StripL(8),  1554, 1553, 1530, 1529, 1506, 1505, 1482, 1481, 
	StripL(8),  1555, 1554, 1531, 1530, 1507, 1506, 1483, 1482, 
	StripL(8),  1558, 1557, 1534, 1533, 1510, 1509, 1486, 1485, 
	StripL(8),  1559, 1558, 1535, 1534, 1511, 1510, 1487, 1486, 
	StripR(14),  1538, 1562, 1539, 1563, 1540, 1564, 1541, 1565, 1542, 1566, 
                   1543, 1567, 1544, 1568, 
	StripL(8),  1569, 1568, 1545, 1544, 1521, 1520, 1497, 1496, 
	StripL(8),  1570, 1569, 1546, 1545, 1522, 1521, 1498, 1497, 
	StripL(8),  1551, 1574, 1527, 1550, 1503, 1526, 1479, 1502, 
	StripR(24),  1585, 1561, 1584, 1560, 1583, 1559, 1582, 1558, 1581, 1557, 
                   1580, 1556, 1579, 1555, 1578, 1554, 1577, 1553, 1576, 1552, 
                   1575, 1551, 1598, 1574, 
	StripR(24),  1562, 1586, 1563, 1587, 1564, 1588, 1565, 1589, 1566, 1590, 
                   1567, 1591, 1568, 1592, 1569, 1593, 1570, 1594, 1571, 1595, 
                   1572, 1596, 1573, 1597, 
	StripL(40),  1598, 1597, 1574, 1573, 1550, 1549, 1526, 1525, 1502, 1501, 
                   1479, 1500, 1480, 1499, 1481, 1498, 1482, 1497, 1483, 1496, 
                   1484, 1495, 1485, 1494, 1486, 1493, 1487, 1492, 1488, 1491, 
                   1489, 1490, 1513, 1514, 1537, 1538, 1561, 1562, 1585, 1586, 
                   
	StripL(4),  280, 466, 462, 457, 
	StripL(3),  216, 166, 34, 
	StripL(3),  28, 33, 168, 
	StripL(3),  133, 35, 30, 
	StripL(3),  31, 134, 130, 
	StripL(4),  32, 129, 218, 215, 
	StripR(6),  165, 210, 217, 209, 214, 219, 
	StripL(4),  605, 563, 611, 566, 
	StripR(5),  789, 787, 773, 793, 770, 
	StripL(3),  794, 787, 793, 
	StripL(3),  460, 461, 455, 
	StripL(3),  461, 258, 283, 
	StripR(17),  685, 683, 687, 675, 671, 674, 700, 693, 690, 692, 
                   711, 706, 702, 703, 720, 715, 714, 
	StripR(19),  715, 398, 714, 429, 430, 419, 207, 423, 424, 410, 
                   201, 415, 416, 401, 195, 405, 409, 406, 189, 
	StripL(17),  399, 718, 716, 707, 704, 709, 705, 695, 691, 698, 
                   694, 678, 673, 679, 676, 681, 684, 
	StripL(4),  724, 722, 739, 447, 
	StripL(19),  407, 185, 404, 402, 400, 191, 414, 412, 411, 198, 
                   422, 421, 418, 203, 428, 426, 399, 464, 718, 
	StripL(4),  447, 395, 396, 391, 
	StripR(5),  245, 397, 464, 731, 727, 
	StripL(3),  245, 259, 464, 
	StripL(7),  548, 552, 562, 564, 565, 567, 557, 
	StripR(5),  459, 616, 456, 529, 468, 
	StripR(13),  459, 589, 616, 617, 534, 618, 538, 619, 541, 620, 
                   545, 562, 548, 
	StripR(11),  604, 562, 601, 620, 599, 619, 596, 618, 592, 617, 
                   589, 
	StripR(8),  565, 608, 557, 555, 560, 553, 561, 470, 
	StripL(3),  616, 529, 534, 
	StripL(19),  327, 369, 278, 333, 276, 292, 273, 290, 271, 289, 
                   270, 288, 267, 287, 265, 286, 264, 285, 262, 
	StripR(7),  305, 335, 289, 337, 290, 339, 292, 
	StripL(5),  256, 284, 282, 296, 293, 
	StripL(13),  256, 262, 284, 285, 297, 286, 299, 287, 302, 288, 
                   304, 289, 305, 
	StripL(3),  297, 296, 284, 
	StripL(10),  453, 454, 452, 449, 451, 450, 652, 658, 659, 657, 
	StripR(5),  465, 458, 467, 469, 446, 
	StripL(3),  474, 476, 472, 
	StripL(3),  472, 476, 478, 
	StripL(3),  476, 474, 472, 
	StripL(4),  483, 482, 476, 472, 
	StripL(6),  488, 476, 487, 484, 486, 485, 
	StripL(3),  490, 491, 489, 
	StripL(4),  498, 493, 496, 494, 
	StripR(5),  509, 508, 506, 507, 520, 
	StripL(3),  506, 509, 510, 
	StripR(7),  515, 514, 513, 512, 445, 511, 446, 
	StripL(3),  513, 515, 516, 
	StripL(7),  515, 518, 517, 519, 520, 521, 507, 
	StripR(5),  525, 524, 522, 509, 523, 
	StripL(7),  446, 526, 469, 527, 530, 528, 531, 
	StripL(7),  531, 532, 533, 535, 537, 536, 539, 
	StripL(3),  531, 533, 530, 
	StripL(5),  537, 539, 542, 540, 543, 
	StripL(3),  542, 543, 544, 
	StripL(7),  543, 546, 544, 547, 549, 550, 551, 
	StripL(3),  568, 559, 558, 
	StripR(5),  573, 572, 569, 571, 570, 
	StripL(3),  575, 572, 574, 
	StripR(7),  580, 579, 578, 577, 574, 576, 572, 
	StripR(5),  583, 582, 581, 580, 578, 
	StripL(3),  585, 583, 584, 
	StripR(7),  446, 588, 445, 587, 584, 586, 583, 
	StripL(14),  594, 590, 593, 591, 597, 595, 600, 598, 603, 602, 
                   607, 606, 612, 609, 
	StripL(8),  626, 627, 625, 654, 655, 650, 649, 651, 
	StripL(4),  631, 628, 630, 629, 
	StripL(4),  635, 632, 634, 633, 
	StripL(4),  639, 636, 638, 637, 
	StripL(4),  643, 640, 642, 641, 
	StripL(3),  646, 647, 645, 
	StripL(7),  647, 648, 645, 627, 644, 656, 657, 
	StripL(3),  644, 657, 658, 
	StripL(8),  489, 661, 490, 660, 623, 621, 622, 236, 
	StripL(3),  665, 662, 664, 
	StripL(4),  662, 663, 664, 662, 
	StripL(7),  668, 669, 667, 670, 664, 666, 665, 
	StripL(4),  726, 721, 725, 723, 
	StripL(4),  732, 728, 730, 729, 
	StripL(3),  734, 682, 733, 
	StripL(5),  682, 680, 733, 677, 697, 
	StripL(9),  736, 737, 735, 738, 746, 747, 748, 749, 750, 
	StripR(6),  697, 733, 696, 740, 710, 708, 
	StripR(6),  463, 717, 208, 708, 741, 740, 
	StripL(3),  743, 742, 686, 
	StripL(7),  689, 699, 744, 672, 742, 688, 686, 
	StripR(7),  689, 712, 745, 701, 448, 719, 713, 
	StripL(3),  744, 745, 689, 
	StripR(5),  750, 748, 751, 753, 752, 
	StripL(5),  755, 756, 754, 757, 766, 
	StripL(3),  759, 760, 758, 
	StripL(16),  764, 765, 762, 831, 830, 828, 785, 887, 783, 876, 
                   781, 875, 779, 776, 778, 777, 
	StripL(4),  769, 767, 768, 782, 
	StripR(7),  772, 771, 774, 775, 784, 877, 786, 
	StripL(6),  769, 786, 767, 784, 785, 830, 
	StripL(4),  772, 790, 774, 763, 
	StripL(3),  792, 761, 791, 
	StripL(4),  797, 788, 796, 795, 
	StripR(24),  800, 766, 798, 754, 799, 755, 862, 856, 855, 758, 
                   849, 759, 843, 837, 836, 827, 835, 825, 834, 823, 
                   833, 821, 832, 818, 
	StripL(5),  798, 800, 801, 802, 817, 
	StripL(4),  804, 805, 803, 806, 
	StripL(4),  805, 808, 807, 809, 
	StripL(4),  808, 811, 810, 812, 
	StripL(4),  811, 814, 813, 815, 
	StripL(25),  817, 816, 801, 814, 798, 872, 799, 867, 862, 861, 
                   855, 854, 849, 848, 843, 842, 836, 841, 835, 840, 
                   834, 839, 833, 838, 832, 
	StripR(5),  819, 818, 820, 821, 822, 
	StripL(4),  823, 824, 825, 827, 
	StripL(9),  824, 826, 827, 829, 837, 791, 759, 761, 760, 
	StripL(10),  839, 840, 845, 846, 851, 852, 858, 859, 864, 865, 
	StripL(10),  840, 841, 846, 847, 852, 853, 859, 860, 865, 866, 
	StripL(12),  841, 842, 847, 848, 853, 854, 860, 861, 866, 867, 
                   871, 872, 
	StripL(10),  864, 863, 858, 857, 851, 850, 845, 844, 839, 838, 
	StripR(8),  863, 868, 864, 869, 865, 870, 866, 871, 
	StripR(10),  814, 872, 811, 871, 808, 870, 805, 869, 804, 868, 
	StripR(6),  784, 830, 774, 762, 763, 764, 
	StripR(8),  881, 880, 879, 878, 873, 776, 874, 777, 
	StripR(5),  880, 882, 878, 875, 776, 
	StripL(3),  876, 882, 875, 
	StripR(16),  881, 883, 880, 884, 882, 885, 876, 886, 887, 826, 
                   828, 829, 831, 791, 765, 792, 
	StripR(8),  785, 767, 783, 782, 781, 780, 779, 778, 
	StripR(7),  883, 888, 884, 820, 885, 822, 886, 
	StripR(6),  826, 886, 824, 822, 823, 821, 
	StripL(5),  465, 281, 467, 294, 446, 
	StripR(5),  331, 433, 328, 435, 434, 
	StripL(3),  433, 328, 436, 
	StripR(5),  443, 442, 479, 481, 480, 
	StripL(3),  443, 444, 479, 
	StripL(3),  331, 433, 328, 
	StripL(6),  440, 441, 439, 437, 438, 433, 
	StripL(3),  244, 243, 240, 
	StripL(4),  381, 375, 376, 378, 
	StripL(3),  310, 322, 309, 
	StripL(3),  314, 316, 311, 
	StripL(7),  316, 315, 311, 313, 445, 312, 446, 
	StripR(5),  316, 317, 307, 318, 308, 
	StripR(7),  318, 319, 308, 320, 309, 321, 322, 
	StripR(5),  323, 322, 324, 325, 326, 
	StripR(7),  446, 340, 294, 341, 295, 342, 343, 
	StripR(7),  343, 344, 298, 345, 300, 346, 347, 
	StripL(3),  298, 343, 295, 
	StripR(5),  300, 347, 301, 348, 349, 
	StripL(3),  349, 301, 303, 
	StripR(7),  349, 350, 303, 351, 306, 352, 336, 
	StripL(3),  334, 338, 291, 
	StripR(5),  368, 367, 366, 364, 365, 
	StripL(3),  370, 364, 371, 
	StripL(7),  360, 361, 372, 362, 370, 363, 364, 
	StripR(5),  372, 360, 373, 359, 358, 
	StripR(7),  358, 357, 353, 355, 445, 354, 446, 
	StripL(3),  353, 358, 356, 
	StripR(14),  248, 260, 249, 263, 250, 266, 251, 268, 252, 269, 
                   253, 272, 255, 274, 
	StripR(8),  108, 141, 66, 109, 75, 110, 83, 112, 
	StripL(4),  228, 223, 224, 233, 
	StripL(4),  231, 220, 225, 232, 
	StripL(4),  229, 222, 227, 234, 
	StripL(4),  230, 221, 226, 235, 
	StripL(3),  146, 145, 141, 
	StripL(5),  141, 142, 146, 143, 144, 
	StripR(7),  141, 140, 145, 138, 147, 51, 103, 
	StripR(7),  147, 103, 148, 136, 150, 131, 127, 
	StripL(3),  51, 139, 138, 
	StripR(10),  240, 239, 243, 238, 242, 237, 241, 236, 624, 622, 
	StripL(4),  155, 182, 152, 155, 
	StripL(8),  174, 176, 160, 180, 157, 182, 171, 155, 
	StripL(4),  394, 390, 392, 393, 
	StripL(4),  261, 257, 247, 246, 
	StripR(5),  187, 186, 193, 403, 192, 
	StripR(7),  192, 413, 193, 197, 199, 420, 204, 
	StripL(6),  463, 427, 208, 204, 205, 199, 
	StripL(3),  190, 184, 188, 
	StripR(7),  200, 417, 196, 194, 190, 408, 188, 
	StripL(7),  200, 425, 202, 206, 448, 431, 713, 
	StripL(3),  202, 196, 200, 
	StripL(4),  178, 167, 212, 211, 
	StripL(6),  164, 178, 162, 212, 175, 181, 
	StripR(5),  82, 111, 90, 113, 114, 
	StripL(3),  107, 59, 67, 
	StripL(3),  104, 135, 43, 
	StripR(16),  104, 52, 43, 42, 27, 26, 18, 17, 11, 10, 
                   6, 5, 2, 1, 172, 156, 
	StripL(3),  12, 173, 159, 
	StripR(9),  19, 18, 12, 11, 159, 6, 158, 2, 172, 
	StripL(3),  137, 106, 50, 
	StripL(4),  149, 151, 128, 213, 
	StripL(24),  115, 114, 96, 90, 89, 82, 81, 74, 73, 67, 
                   65, 59, 58, 49, 48, 40, 47, 39, 46, 38, 
                   45, 37, 44, 36, 
	StripR(5),  96, 115, 102, 116, 126, 
	StripL(4),  97, 117, 98, 118, 
	StripL(4),  98, 119, 99, 120, 
	StripL(4),  99, 121, 100, 122, 
	StripL(4),  100, 123, 101, 124, 
	StripR(25),  126, 125, 102, 101, 96, 95, 89, 88, 81, 80, 
                   73, 72, 65, 64, 58, 57, 48, 56, 47, 55, 
                   46, 54, 45, 53, 44, 
	StripR(5),  23, 37, 22, 36, 21, 
	StripL(4),  38, 39, 24, 40, 
	StripR(9),  24, 25, 40, 41, 49, 50, 59, 137, 107, 
	StripL(5),  27, 43, 29, 135, 132, 
	StripR(10),  54, 55, 61, 62, 69, 70, 77, 78, 85, 86, 
	StripR(10),  55, 56, 62, 63, 70, 71, 78, 79, 86, 87, 
	StripR(10),  85, 84, 77, 76, 69, 68, 61, 60, 54, 53, 
	StripL(8),  84, 91, 85, 92, 86, 93, 87, 94, 
	StripR(12),  95, 94, 88, 87, 80, 79, 72, 71, 64, 63, 
                   57, 56, 
	StripL(10),  101, 95, 100, 94, 99, 93, 98, 92, 97, 91, 
	StripL(3),  1, 156, 154, 
	StripL(7),  179, 163, 19, 161, 12, 177, 173, 
	StripL(3),  3, 4, 0, 
	StripL(5),  9, 4, 8, 3, 7, 
	StripR(7),  10, 9, 5, 4, 1, 0, 154, 
	StripL(16),  7, 13, 8, 14, 9, 15, 10, 16, 17, 25, 
                   26, 41, 42, 50, 52, 106, 
	StripL(7),  13, 20, 14, 22, 15, 23, 16, 
	StripL(6),  25, 16, 24, 23, 38, 37, 
	StripL(6),  18, 27, 19, 29, 179, 169, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_Controller_VM2_CPBody12_CPBody12[]
START
	CnkV_VN(0x0, 11845),
	OffnbIdx(0, 1974),
	VERT( 0xc25ea0a9, 0xc283ec5c, 0x408c268a ),
	NORM( 0xbf55f6af, 0xbf0b0d8b, 0xbda3ec8b ),
	VERT( 0xc25be969, 0xc283d87e, 0xbfb753d2 ),
	NORM( 0xbf44c9a3, 0xbf0d7934, 0xbea4dfd4 ),
	VERT( 0xc24a0855, 0xc2814473, 0xc0feb199 ),
	NORM( 0xbf119985, 0xbf030ff4, 0xbf24cd14 ),
	VERT( 0xc2733607, 0xc25fe90e, 0x4102cc6f ),
	NORM( 0xbf6ba8ca, 0xbec73e7f, 0xbd0b98ff ),
	VERT( 0xc2729786, 0xc25f9996, 0xbeb7ab83 ),
	NORM( 0xbf652208, 0xbec74da1, 0xbe5ed783 ),
	VERT( 0xc263e235, 0xc25f9996, 0xc0eb4001 ),
	NORM( 0xbf39e933, 0xbecc9a4c, 0xbf0f3461 ),
	VERT( 0xc247bffd, 0xc25f9996, 0xc15a0f17 ),
	NORM( 0xbef5373b, 0xbec11403, 0xbf4aefed ),
	VERT( 0xc280f965, 0xc23ab643, 0x4110f48b ),
	NORM( 0xbf7484d8, 0xbe92b8fa, 0xbd98c2af ),
	VERT( 0xc27f3b8a, 0xc23ab643, 0x3ebb1b90 ),
	NORM( 0xbf720814, 0xbe89ec15, 0xbe3ba9ce ),
	VERT( 0xc274f2a0, 0xc23ab643, 0xc0e40d9f ),
	NORM( 0xbf56a697, 0xbe957a8d, 0xbeeb95ca ),
	VERT( 0xc2602c58, 0xc23ab643, 0xc15a0f18 ),
	NORM( 0xbf1951ca, 0xbe9e8ebc, 0xbf3d0f95 ),
	VERT( 0xc24745de, 0xc23ab643, 0xc185e825 ),
	NORM( 0xbec429e1, 0xbe8752fd, 0xbf629417 ),
	VERT( 0xc2224746, 0xc23ab643, 0xc1a0535a ),
	NORM( 0xbe5329b4, 0xbe52e690, 0xbf74e2d7 ),
	VERT( 0xc2855e68, 0xc211eaef, 0x410803ab ),
	NORM( 0xbf7b1618, 0xbe381658, 0xbd9aa45f ),
	VERT( 0xc28402c8, 0xc211eaef, 0xbeb7ab83 ),
	NORM( 0xbf77aff3, 0xbe450f6c, 0xbe27cea4 ),
	VERT( 0xc2800fdb, 0xc2120d1e, 0xc100e621 ),
	NORM( 0xbf64f0dc, 0xbe8115a7, 0xbebd46b8 ),
	VERT( 0xc272a3b7, 0xc211eaef, 0xc15e22d6 ),
	NORM( 0xbf327fe8, 0xbe9752ef, 0xbf272e13 ),
	VERT( 0xc25f5030, 0xc211eaef, 0xc1862bb1 ),
	NORM( 0xbee3ad1a, 0xbe7c89f7, 0xbf5c6ef5 ),
	VERT( 0xc2402462, 0xc211eaef, 0xc1a21ff2 ),
	NORM( 0xbe85f96e, 0xbe3c7810, 0xbf728bd7 ),
	VERT( 0xc21bc2a1, 0xc211eaef, 0xc1ab17e3 ),
	NORM( 0xbe03d3cf, 0xbdebf6c2, 0xbf7c2686 ),
	VERT( 0xc2884b02, 0xc1c0ab29, 0x40a4bcca ),
	NORM( 0xbf7cd394, 0xbe0a4157, 0xbda3f930 ),
	VERT( 0xc2884b02, 0xc1c0ab29, 0x40a4bcca ),
	NORM( 0xbf7d8f50, 0xbde14b97, 0xbda9c49a ),
	VERT( 0xc286ef61, 0xc1c0ab29, 0xc03dbb6b ),
	NORM( 0xbf7b09af, 0xbe1002ce, 0xbe0bb411 ),
	VERT( 0xc28462b8, 0xc1c0ab29, 0xc11ea4c4 ),
	NORM( 0xbf71b62a, 0xbe415108, 0xbe8a36e9 ),
	VERT( 0xc280509a, 0xc1c0ab29, 0xc1781f6f ),
	NORM( 0xbf46e81f, 0xbe80aaca, 0xbf13c2cf ),
	VERT( 0xc2739447, 0xc1c0ab29, 0xc18da19f ),
	NORM( 0xbeefc992, 0xbe6c447a, 0xbf5a5730 ),
	VERT( 0xc257abad, 0xc1c0ab29, 0xc1a785bb ),
	NORM( 0xbe8e4440, 0xbe1cc46a, 0xbf72c696 ),
	VERT( 0xc2351685, 0xc1c0ab29, 0xc1b07dac ),
	NORM( 0xbe0462f1, 0xbdc8ada3, 0xbf7c9bef ),
	VERT( 0xc2171dc0, 0xc1c0ab29, 0xc1b87683 ),
	NORM( 0xbe06b50d, 0xbdf12eba, 0xbf7bfa67 ),
	VERT( 0xc2171dc0, 0xc1c0ab29, 0xc1b87683 ),
	NORM( 0xbe0acd72, 0xbddad577, 0xbf7c286d ),
	VERT( 0xc2171dc0, 0xc1c0ab29, 0xc1b87683 ),
	NORM( 0xbe06f966, 0xbdcc598f, 0xbf7c7a3e ),
	VERT( 0xc1f8d8d4, 0xc1c0ab29, 0xc1bf990f ),
	NORM( 0xbdd9352a, 0xbdb88f83, 0xbf7d8232 ),
	VERT( 0xc1f8d8d4, 0xc1c0ab29, 0xc1bf990f ),
	NORM( 0xbdc72340, 0xbdbea960, 0xbf7dab7a ),
	VERT( 0xc1f8d8d4, 0xc1c0ab29, 0xc1bf990f ),
	NORM( 0xbe06b50d, 0xbdf12eba, 0xbf7bfa67 ),
	VERT( 0xc1f8d8d4, 0xc1c0ab29, 0xc1bf990f ),
	NORM( 0xbdc6fa38, 0xbdcf75ea, 0xbf7d773a ),
	VERT( 0xc1f8d8d4, 0xc1c0ab29, 0xc1bf990f ),
	NORM( 0xbe06f965, 0xbdcc598f, 0xbf7c7a3e ),
	VERT( 0xc28a406c, 0xc13cacb3, 0x3f09b266 ),
	NORM( 0xbf7d3eec, 0xbdedb2fb, 0xbdb66209 ),
	VERT( 0xc288e912, 0xc13f0da7, 0xc0d2bbec ),
	NORM( 0xbf7b42f8, 0xbe028c39, 0xbe1256bb ),
	VERT( 0xc286ba31, 0xc13ee8ec, 0xc140a000 ),
	NORM( 0xbf77340e, 0xbe1f6ab5, 0xbe5518da ),
	VERT( 0xc2848ffa, 0xc13ee8ec, 0xc18936de ),
	NORM( 0xbf5e4fe5, 0xbe3d858c, 0xbeeb8754 ),
	VERT( 0xc2807a26, 0xc13ee8ec, 0xc19a5b90 ),
	NORM( 0xbf0591fa, 0xbe414e70, 0xbf54fa50 ),
	VERT( 0xc2670af3, 0xc13ee8ec, 0xc1ab1eec ),
	NORM( 0xbe6d7dd7, 0xbe0eccdc, 0xbf76728f ),
	VERT( 0xc2446c94, 0xc13ee8ec, 0xc1b416dd ),
	NORM( 0xbe08284b, 0xbdd4082f, 0xbf7c56ba ),
	VERT( 0xc22795fb, 0xc13ee8ec, 0xc1bc0fb4 ),
	NORM( 0xbe3adfb9, 0xbe0fb0e2, 0xbf791fd5 ),
	VERT( 0xc28bb76d, 0xc06beeb4, 0xc03d195c ),
	NORM( 0xbf7d6a0b, 0xbdc81f16, 0xbdd25dc8 ),
	VERT( 0xc28a5bcd, 0xc06beeb4, 0xc113da1b ),
	NORM( 0xbf7bf2ca, 0xbdcb9570, 0xbe1638b1 ),
	VERT( 0xc288b9b6, 0xc06beeb4, 0xc15b1726 ),
	NORM( 0xbf780b87, 0xbddc4211, 0xbe6417ae ),
	VERT( 0xc28606fb, 0xc06beeb4, 0xc1929bf9 ),
	NORM( 0xbf6185d0, 0xbe0ec7a0, 0xbee78754 ),
	VERT( 0xc28363ee, 0xc0585843, 0xc1a08513 ),
	NORM( 0xbf1059e9, 0xbe1b1d74, 0xbf4fd57b ),
	VERT( 0xc26ecce2, 0xc06beeb4, 0xc1b084b6 ),
	NORM( 0xbe707af3, 0xbdd967cf, 0xbf775a23 ),
	VERT( 0xc24fc7b3, 0xc06beeb4, 0xc1b97ca6 ),
	NORM( 0xbe1574f2, 0xbdd98fae, 0xbf7bcb53 ),
	VERT( 0xc234124b, 0xc0732f02, 0xc1c1757d ),
	NORM( 0x3f64b14f, 0x3ee60ecd, 0xbc00992e ),
	VERT( 0xc234124b, 0xc0732f02, 0xc1c1757d ),
	NORM( 0xbe1b9aaf, 0xbe0b3016, 0xbf7a9f7c ),
	VERT( 0xc28c346d, 0x412e81d3, 0xc10436af ),
	NORM( 0xbf7d9b7b, 0xbd15597b, 0xbe06977a ),
	VERT( 0xc28ad8cd, 0x412e81d3, 0xc153e6aa ),
	NORM( 0xbf7bf2a4, 0xbd3399eb, 0xbe2fd4db ),
	VERT( 0xc28927b8, 0x412e81d3, 0xc18894c2 ),
	NORM( 0xbf7bca1a, 0xbd743f9c, 0xbe2e963a ),
	VERT( 0xc2885aca, 0x412e81d3, 0xc1a5662f ),
	NORM( 0xbf684234, 0xbda9c79f, 0xbed31b67 ),
	VERT( 0xc2864ae4, 0x412e81d3, 0xc1aead34 ),
	NORM( 0xbefa74cd, 0xbdc33ec5, 0xbf5df12b ),
	VERT( 0xc273a3a0, 0x412e81d3, 0xc1b7b716 ),
	NORM( 0xbe33e073, 0xbd899a45, 0xbf7b6e87 ),
	VERT( 0xc256d05d, 0x412e81d3, 0xc1c0af07 ),
	NORM( 0xbe3bf508, 0xbd780c1c, 0xbf7b2c2e ),
	VERT( 0xc28bb76d, 0x41b6839c, 0xc130eb14 ),
	NORM( 0xbf7ed322, 0x3d26766b, 0xbdb17820 ),
	VERT( 0xc28b0909, 0x41b6839c, 0xc1752e9a ),
	NORM( 0xbf7c2a88, 0x3d682c5e, 0xbe26bdda ),
	VERT( 0xc2898d1a, 0x41b67285, 0xc1942afa ),
	NORM( 0xbf789710, 0x3d6ba621, 0xbe6d633a ),
	VERT( 0xc287ddca, 0x41b6839c, 0xc1acea44 ),
	NORM( 0xbf4e9760, 0x3d66d25a, 0xbf167e02 ),
	VERT( 0xc285cde4, 0x41b6839c, 0xc1b24666 ),
	NORM( 0xbec197fb, 0x3c97f4c6, 0xbf6cf267 ),
	VERT( 0xc272a99f, 0x41b6839c, 0xc1bb5047 ),
	NORM( 0xbe2a5f6e, 0xbbd134b6, 0xbf7c6d31 ),
	VERT( 0xc255d65c, 0x41b6839c, 0xc1c44838 ),
	NORM( 0xbe6ac029, 0xbb05a112, 0xbf792e80 ),
	VERT( 0xc255d65c, 0x41b6839c, 0xc1c44838 ),
	NORM( 0xbe22ab37, 0xbc02d834, 0xbf7cbdb0 ),
	VERT( 0xc28a406c, 0x41e4f22e, 0xc13c182d ),
	NORM( 0xbf78df8c, 0x3e3bb9f1, 0xbe156d85 ),
	VERT( 0xc288e4cc, 0x41e4f22e, 0xc17c2219 ),
	NORM( 0xbf77f0f0, 0x3e3d895a, 0xbe2a745b ),
	VERT( 0xc287cc67, 0x41e4f22e, 0xc19807b7 ),
	NORM( 0xbf73ccf2, 0x3e2c06d2, 0xbe825950 ),
	VERT( 0xc285b98c, 0x41e4f22e, 0xc1acea44 ),
	NORM( 0xbf500780, 0x3e201364, 0xbf0fbade ),
	VERT( 0xc28456e3, 0x41e4f22e, 0xc1b24666 ),
	NORM( 0xbeecf0f6, 0x3db845e8, 0xbf61c403 ),
	VERT( 0xc26fbb9d, 0x41e4f22e, 0xc1bb5047 ),
	NORM( 0xbe2a610d, 0x3d013b63, 0xbf7c4d63 ),
	VERT( 0xc252e85a, 0x41e4f22e, 0xc1c44838 ),
	NORM( 0xbe1d55fd, 0x3cf6f48d, 0xbf7cd7a8 ),
	VERT( 0xc252e85a, 0x41e4f22e, 0xc1c44838 ),
	NORM( 0xbe805672, 0x3d1cd8dd, 0xbf77a221 ),
	VERT( 0xc286d56a, 0x420d9863, 0xc146a51e ),
	NORM( 0xbf74b314, 0x3e8586c0, 0xbe0a9c79 ),
	VERT( 0xc285dc7b, 0x420d9863, 0xc17ffed6 ),
	NORM( 0xbf760789, 0x3e7da408, 0xbdfb08ec ),
	VERT( 0xc2850e7b, 0x420d9863, 0xc199f616 ),
	NORM( 0xbf68d3cb, 0x3e87eca0, 0xbea3cfdc ),
	VERT( 0xc28235ca, 0x420d9863, 0xc1acea44 ),
	NORM( 0xbf483319, 0x3e71cec6, 0xbf13a769 ),
	VERT( 0xc280ebe1, 0x420d9863, 0xc1b24666 ),
	NORM( 0xbeeed556, 0x3e01e808, 0xbf6019ab ),
	VERT( 0xc268e598, 0x420d9863, 0xc1bb5047 ),
	NORM( 0xbe2a15b5, 0x3d48722e, 0xbf7c2206 ),
	VERT( 0xc24c1255, 0x420d9863, 0xc1c44838 ),
	NORM( 0xbe2bcd83, 0x3d0fbbcc, 0xbf7c3617 ),
	VERT( 0xc24c1255, 0x420d9863, 0xc1c44838 ),
	NORM( 0xbe979b87, 0x3d896683, 0xbf73ea63 ),
	VERT( 0xc2827067, 0x4227bdae, 0xc14b8854 ),
	NORM( 0xbf71b62e, 0x3ea50bb4, 0xbd8ae690 ),
	VERT( 0xc2820bf6, 0x4227bdae, 0xc17ffed6 ),
	NORM( 0xbf6c53a3, 0x3eab35fa, 0xbe42365a ),
	VERT( 0xc27ecf30, 0x4227bdae, 0xc199f616 ),
	NORM( 0xbf69637d, 0x3e9f76de, 0xbe893cce ),
	VERT( 0xc27d2d88, 0x4227bdae, 0xc1acea44 ),
	NORM( 0xbf4dddb2, 0x3e825aa2, 0xbf0980d7 ),
	VERT( 0xc2790dbc, 0x4227bdae, 0xc1b24666 ),
	NORM( 0xbebb831d, 0x3e07fe93, 0xbf6bc66c ),
	VERT( 0xc2601b93, 0x4227bdae, 0xc1bb5047 ),
	NORM( 0xbe3867da, 0x3d6e3ec8, 0xbf7b5fc5 ),
	VERT( 0xc249aa8b, 0x4227bdae, 0xc1c44838 ),
	NORM( 0xbe003ba2, 0x3d9e7c66, 0xbf7d3603 ),
	VERT( 0xc27d10c8, 0x423c06f6, 0xc14df9ee ),
	NORM( 0xbf4d9576, 0x3f180381, 0xbd4c5a64 ),
	VERT( 0xc27c47e7, 0x423c06f6, 0xc17ffed6 ),
	NORM( 0xbf4db122, 0x3f1411ec, 0xbe1056ac ),
	VERT( 0xc278ed88, 0x423c06f6, 0xc199f616 ),
	NORM( 0xbf4aed31, 0x3f0ff861, 0xbe70fa57 ),
	VERT( 0xc2755d82, 0x423c06f6, 0xc1acea44 ),
	NORM( 0xbf2c2349, 0x3f019880, 0xbf0a3cb8 ),
	VERT( 0xc2713db7, 0x423c06f6, 0xc1b24666 ),
	NORM( 0xbeb43384, 0x3eac4f87, 0xbf5f988f ),
	VERT( 0xc2584b8d, 0x423c06f6, 0xc1bb5047 ),
	NORM( 0xbe221771, 0x3e406432, 0xbf782778 ),
	VERT( 0xc2782ec5, 0x423fb633, 0xc14df9ee ),
	NORM( 0xbedd8c50, 0x3f66b00a, 0xbcde6f32 ),
	VERT( 0xc27765e5, 0x423fb633, 0xc17ffed6 ),
	NORM( 0xbede39d7, 0x3f65e859, 0xbd91dac7 ),
	VERT( 0xc2740b85, 0x423fb633, 0xc199f616 ),
	NORM( 0xbed93dd1, 0x3f652be4, 0xbe0b9937 ),
	VERT( 0xc2707b7f, 0x423fb633, 0xc1acea44 ),
	NORM( 0xbec3a078, 0x3f536d45, 0xbed44b5d ),
	VERT( 0xc26c5bb4, 0x423ec521, 0xc1b24666 ),
	NORM( 0xbe67f2b1, 0x3f0b3b5b, 0xbf4eda44 ),
	VERT( 0xc253698a, 0x423ec521, 0xc1bb5047 ),
	NORM( 0xbe08b67a, 0x3e8a2a44, 0xbf741f2e ),
	VERT( 0xc2281ae9, 0xc10fcaa3, 0xc1c10238 ),
	NORM( 0x3f4ce445, 0x3f197765, 0xbbee6cbe ),
	VERT( 0xc2281ae9, 0xc10fcaa3, 0xc1c10238 ),
	NORM( 0xbea1eddb, 0xbe554bc6, 0xbf6ceedf ),
	VERT( 0xc2388c08, 0xbfa5985b, 0xc1c2dcca ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xc2388c08, 0xbfa5985b, 0xc1c2dcca ),
	NORM( 0xbe1b8271, 0xbde60cf6, 0xbf7b6431 ),
	VERT( 0xc24b2e96, 0x412e81d3, 0xc1c6143e ),
	NORM( 0xbe6699a5, 0xbda45922, 0xbf7893ab ),
	VERT( 0xc24b2e96, 0x412e81d3, 0xc1c6143e ),
	NORM( 0xbe66687a, 0xbd02ef39, 0xbf794d15 ),
	VERT( 0xc24c1341, 0x41e4f22e, 0xc1c79d5d ),
	NORM( 0xbe825961, 0x3d2523c9, 0xbf775975 ),
	VERT( 0xc248689b, 0x420d9863, 0xc1c6e624 ),
	NORM( 0xbe9d1f5f, 0x3d99d64f, 0xbf72e335 ),
	VERT( 0xc245e868, 0x4219478f, 0xc1c64a47 ),
	NORM( 0xbe2af7b1, 0x3ccd209b, 0xbf7c5345 ),
	VERT( 0xc245e868, 0x4219478f, 0xc1c64a47 ),
	NORM( 0xbeab6f1e, 0x3dc4c8bd, 0xbf6ff737 ),
	VERT( 0xc2417004, 0x4227291d, 0xc1c53a05 ),
	NORM( 0xbd543c38, 0x3d9af45e, 0xbf7eebdb ),
	VERT( 0xc23e1dc6, 0x422e4829, 0xc1c44838 ),
	NORM( 0xbdab14ac, 0x3e0ae404, 0xbf7cbb2a ),
	VERT( 0xc2382cd4, 0x423adf96, 0xc1c1caff ),
	NORM( 0xbdc2fb0b, 0x3e15dcc3, 0xbf7c116c ),
	VERT( 0xc236cb32, 0x423d9d99, 0xc1c13cbb ),
	NORM( 0xbdc6edb8, 0x3e003ed7, 0xbf7cc3a3 ),
	VERT( 0xc2252668, 0x4253861e, 0xc14df9ee ),
	NORM( 0xbe6aa0ae, 0x3f790914, 0xbd0c2224 ),
	VERT( 0xc2256b27, 0x4252fe8e, 0xc17ffed6 ),
	NORM( 0xbe6a4e2b, 0x3f790905, 0xbd149b95 ),
	VERT( 0xc2256aa1, 0x4252feaf, 0xc17ffed6 ),
	NORM( 0xbe6745b0, 0x3f78a62c, 0xbd99318f ),
	VERT( 0xc2260181, 0x4251d551, 0xc199f616 ),
	NORM( 0xbe66f094, 0x3f78a199, 0xbd9d0235 ),
	VERT( 0xc22600fd, 0x4251d431, 0xc199f616 ),
	NORM( 0xbe690371, 0x3f78aa18, 0xbd8c861c ),
	VERT( 0xc226ac96, 0x42507f11, 0xc1bbf2d9 ),
	NORM( 0xbe69368c, 0x3f78ada5, 0xbd899931 ),
	VERT( 0xc226acde, 0x42507efc, 0xc1bbf28e ),
	NORM( 0xbe47dac6, 0x3f0b7291, 0xbf50cab5 ),
	VERT( 0xc22836e8, 0x424d813e, 0xc1bf1e1e ),
	NORM( 0xbe45da88, 0x3f09029f, 0xbf528473 ),
	VERT( 0xc2283130, 0x424d7caf, 0xc1befade ),
	NORM( 0xbe0ec477, 0x3e954856, 0xbf724304 ),
	VERT( 0xc2327b7a, 0x42462cad, 0xc1c0272f ),
	NORM( 0xbdf7ce91, 0x3e63443a, 0xbf77af9f ),
	VERT( 0xc1ee7f63, 0xc1a12cf9, 0xc1c39280 ),
	NORM( 0x3f2ec5d6, 0x3f3b0cd0, 0xbbd44819 ),
	VERT( 0xc1ee7f63, 0xc1a12cf9, 0xc1c39280 ),
	NORM( 0x3f04bf4d, 0x3f5ae49e, 0x33bac3da ),
	VERT( 0xc1ee7f63, 0xc1a12cf9, 0xc1c39280 ),
	NORM( 0xbdf5ebd5, 0xbdcddb0f, 0xbf7cd778 ),
	VERT( 0xc1ee7f63, 0xc1a12cf9, 0xc1c39280 ),
	NORM( 0xbdd9352a, 0xbdb88f82, 0xbf7d8232 ),
	VERT( 0xc207b6a8, 0xc185b7db, 0xc1c28b52 ),
	NORM( 0x3f2ec5d6, 0x3f3b0cd0, 0xbbd44819 ),
	VERT( 0xc207b6a8, 0xc185b7db, 0xc1c28b52 ),
	NORM( 0xbdff339e, 0xbdd43e9a, 0xbf7c9d86 ),
	VERT( 0xc207b6a8, 0xc185b7db, 0xc1c28b52 ),
	NORM( 0xbe06f965, 0xbdcc598f, 0xbf7c7a3e ),
	VERT( 0xc207b6a8, 0xc185b7db, 0xc1c28b52 ),
	NORM( 0xbdd93529, 0xbdb88f83, 0xbf7d8232 ),
	VERT( 0xc215e25f, 0xc157ff68, 0xc1c1aa99 ),
	NORM( 0xbe35d2e0, 0xbdf0378c, 0xbf7a22e0 ),
	VERT( 0xc215e25f, 0xc157ff68, 0xc1c1aa99 ),
	NORM( 0x3f2ec5d6, 0x3f3b0cd0, 0xbbd44818 ),
	VERT( 0xc24428ca, 0x40a6a332, 0xc1c3e7a1 ),
	NORM( 0xbe3d2af8, 0xbdb5ac01, 0xbf7a9120 ),
	VERT( 0xc24428ca, 0x40a6a332, 0xc1c3e7a1 ),
	NORM( 0x3f739964, 0x3e9c84bc, 0xbd06c0af ),
	VERT( 0xc2388c08, 0xbfa5985b, 0xc1c2dcca ),
	NORM( 0x3f64b14f, 0x3ee60ece, 0xbc00992e ),
	VERT( 0xc24b2e96, 0x412e81d3, 0xc1c6143e ),
	NORM( 0x3f7c43de, 0x3e248129, 0xbd662d41 ),
	VERT( 0xc24f2150, 0x41b7acbf, 0xc1c76b6f ),
	NORM( 0x3f11bc53, 0x3bc101d4, 0xbf5276a3 ),
	VERT( 0xc24c1341, 0x41e4f22e, 0xc1c79d5d ),
	NORM( 0x3f7da7c5, 0xbe08fc8a, 0xbc968bdb ),
	VERT( 0xc248689b, 0x420d9863, 0xc1c6e624 ),
	NORM( 0x3f7c74d1, 0xbe296f69, 0xbc2fbb8d ),
	VERT( 0xc245e868, 0x4219478f, 0xc1c64a48 ),
	NORM( 0x3f7a549f, 0xbe565002, 0x00000000 ),
	VERT( 0xc24f4386, 0x41b5f7c7, 0xc13459a0 ),
	NORM( 0x3f7fd2ff, 0x3ca68234, 0xbcfdcada ),
	VERT( 0xc245e868, 0x4219478f, 0xc1471674 ),
	NORM( 0x3f7d0b03, 0xbe1b0217, 0xbbefdd2a ),
	VERT( 0xc24428ca, 0x40a6a332, 0xc0fb697d ),
	NORM( 0x3f729482, 0x3ea2d51c, 0xbcfc8e3b ),
	VERT( 0xc2281ae9, 0xc10fcaa3, 0xc0fb697d ),
	NORM( 0x3f4cebdb, 0x3f196d44, 0xbbee7312 ),
	VERT( 0xc1ee7f63, 0xc1a12cf9, 0xc0fb697d ),
	NORM( 0x3f04bf55, 0x3f5ae499, 0x00000000 ),
	VERT( 0xc1ee7f63, 0xc1a12cf9, 0xc0fb697d ),
	NORM( 0x3f2ec5d6, 0x3f3b0cd0, 0xbbd4481a ),
	VERT( 0xc1dac35a, 0xc1ad24c6, 0xc0fb697d ),
	NORM( 0x3f04bf54, 0x3f5ae49a, 0x32370883 ),
	VERT( 0xc23f51ca, 0xc293cddc, 0xbf7da3e8 ),
	NORM( 0x3f6b4054, 0xbec66f69, 0xbd95638e ),
	VERT( 0xc23f51ca, 0xc293cddc, 0xbf7da3e8 ),
	NORM( 0x3e9eba11, 0x3e91a416, 0x3f683d01 ),
	VERT( 0xc23f51ca, 0xc293cddc, 0xbf7da3e8 ),
	NORM( 0xbf372e08, 0xbf278e75, 0xbe79fdd9 ),
	VERT( 0xc23e489e, 0xc2915b19, 0xc0877191 ),
	NORM( 0x3f6b499a, 0xbec6626f, 0xbd92caae ),
	VERT( 0xc23e489e, 0xc2915b19, 0xc0877191 ),
	NORM( 0xbf2e0b87, 0xbf0a23ec, 0xbefe41a3 ),
	VERT( 0xc2305e4b, 0xc27b6b22, 0xc14d8cf8 ),
	NORM( 0x3f6f86a6, 0xbeb2bad0, 0xbd5500ad ),
	VERT( 0xc2305e4b, 0xc27b6b22, 0xc14d8cf8 ),
	NORM( 0xbed57b67, 0xbee3da3a, 0xbf4ae318 ),
	VERT( 0xc2268c40, 0xc25d2668, 0xc18ad2a1 ),
	NORM( 0xbeae0fdb, 0xbe9f715c, 0xbf632b77 ),
	VERT( 0xc2268c40, 0xc25d2668, 0xc18ad2a1 ),
	NORM( 0x3f70a496, 0xbead0c7b, 0xbd3daaa2 ),
	VERT( 0xc210a3d3, 0xc2220fb9, 0xc1aa619c ),
	NORM( 0xbe05776a, 0xbde45de1, 0xbf7c34b4 ),
	VERT( 0xc210a3d3, 0xc2220fb9, 0xc1aa619c ),
	NORM( 0x3f6c6648, 0xbec47b4c, 0x366919be ),
	VERT( 0xc209ee5a, 0xc211eaef, 0xc1b005a1 ),
	NORM( 0xbe0b3881, 0xbdf213a1, 0xbf7bcfb5 ),
	VERT( 0xc209ee5a, 0xc211eaef, 0xc1b005a1 ),
	NORM( 0x3f6c6648, 0xbec47b4b, 0x366919be ),
	VERT( 0xc1eea415, 0xc1d595b4, 0xc1be759c ),
	NORM( 0x3f64278c, 0xbee83852, 0x00000000 ),
	VERT( 0xc1eea415, 0xc1d595b4, 0xc1be759c ),
	NORM( 0xbdc6fa38, 0xbdcf75ea, 0xbf7d773a ),
	VERT( 0xc1eea415, 0xc1d595b4, 0xc1be759c ),
	NORM( 0x3f64b628, 0xbee60482, 0x00000000 ),
	VERT( 0xc1eea415, 0xc1d595b4, 0xc1be759c ),
	NORM( 0xbe06b50d, 0xbdf12eba, 0xbf7bfa67 ),
	VERT( 0xc1eea415, 0xc1d595b4, 0xc1be759c ),
	NORM( 0xbe06b4fa, 0xbdf12e3e, 0xbf7bfa6a ),
	VERT( 0xc23f7a39, 0xc293ab46, 0xbf7f9bb7 ),
	NORM( 0x3e9eba10, 0x3e91a417, 0x3f683d01 ),
	VERT( 0xc238bac3, 0xc28990dc, 0xc0fb8f92 ),
	NORM( 0x3f6b9cf5, 0xbec562ea, 0xbd865ec9 ),
	VERT( 0xc238bac3, 0xc28990dc, 0xc0fb8f92 ),
	NORM( 0xbf0c8d43, 0xbefb4eef, 0xbf2d2ec0 ),
	VERT( 0xc21d045b, 0xc240c60f, 0xc19e8d38 ),
	NORM( 0xbe16cbe7, 0xbe88ca6b, 0xbf73cbf7 ),
	VERT( 0xc21d045b, 0xc240c60f, 0xc19e8d38 ),
	NORM( 0x3f70a496, 0xbead0c7a, 0xbd3daaa1 ),
	VERT( 0xc21ae24f, 0xc23ab643, 0xc1a23dc1 ),
	NORM( 0x3f6c6648, 0xbec47b4c, 0x366919be ),
	VERT( 0xc21ae24f, 0xc23ab643, 0xc1a23dc1 ),
	NORM( 0x3f70a496, 0xbead0c7b, 0xbd3daaa2 ),
	VERT( 0xc21ae24f, 0xc23ab643, 0xc1a23dc1 ),
	NORM( 0xbe01c98c, 0xbe26bafa, 0xbf7a7db5 ),
	VERT( 0xc204de14, 0xc205bbad, 0xc1b46449 ),
	NORM( 0x3f684d3a, 0xbed72559, 0x35d0cb2f ),
	VERT( 0xc204de14, 0xc205bbad, 0xc1b46449 ),
	NORM( 0xbe09e847, 0xbdf43cb8, 0xbf7bd2ed ),
	VERT( 0xc21b7889, 0xc23c1fc2, 0xc0fef3da ),
	NORM( 0x3f70a496, 0xbead0c7b, 0xbd3daaa3 ),
	VERT( 0xc21b7889, 0xc23c1fc2, 0xc0fef3da ),
	NORM( 0x3f6c6648, 0xbec47b4d, 0x366919bf ),
	VERT( 0xc23077ca, 0xc28095d9, 0xc0a8ba14 ),
	NORM( 0x3f6d627d, 0xbebd1713, 0xbd7acf5e ),
	VERT( 0xc23077ca, 0xc28095d9, 0xc0a8ba14 ),
	NORM( 0x3e9eba11, 0x3e91a417, 0x3f683d01 ),
	VERT( 0xc22529e2, 0xc243931f, 0xc0fe2eb2 ),
	NORM( 0x3e76e021, 0xbf7872e1, 0x00000000 ),
	VERT( 0xc1e1ae4d, 0xc1a9cf01, 0xc1bb9003 ),
	NORM( 0xbe77f0f3, 0xbe720654, 0xbf70e668 ),
	VERT( 0xc1e1ae4d, 0xc1a9cf01, 0xc1bb9003 ),
	NORM( 0x3ef6879c, 0x3f6056fb, 0xbc6aa4b3 ),
	VERT( 0xc1e1ae4d, 0xc1a9cf01, 0xc0fe2eb2 ),
	NORM( 0x3ef11691, 0x3f61d7d8, 0x00000000 ),
	VERT( 0xc22529e2, 0xc243931f, 0xc16ec675 ),
	NORM( 0x3e72a787, 0xbf78b4a6, 0xbb98d951 ),
	VERT( 0xc22529e2, 0xc243931f, 0xc16ec675 ),
	NORM( 0xbd1875ae, 0xbe89c3df, 0xbf765fe0 ),
	VERT( 0xc1f7e879, 0xc2395669, 0xc0fe2eb2 ),
	NORM( 0x3e59628d, 0xbf7a29ca, 0xbb6a957e ),
	VERT( 0xc1a602ce, 0xc1c9a852, 0xc1c4e5c2 ),
	NORM( 0xbe4d7ffd, 0xbe923bd5, 0xbf6fe59d ),
	VERT( 0xc1a602ce, 0xc1c9a852, 0xc1c4e5c2 ),
	NORM( 0x3ed5fade, 0x3f68885d, 0xbc86a67d ),
	VERT( 0xc1a602ce, 0xc1c9a852, 0xc0fe2eb2 ),
	NORM( 0x3ecfa628, 0x3f69ff68, 0xbb9f6717 ),
	VERT( 0xc1f7e879, 0xc2395669, 0xc182162d ),
	NORM( 0x3e4f10d4, 0xbf7ab22e, 0xbc321f76 ),
	VERT( 0xc1f7e879, 0xc2395669, 0xc182162d ),
	NORM( 0xbdcdc2f2, 0xbe909dd5, 0xbf7439ac ),
	VERT( 0xc1a57d2f, 0xc2316015, 0xc0fe2eb2 ),
	NORM( 0x3e093db0, 0xbf7daf76, 0xbbcb788b ),
	VERT( 0xc16254e7, 0xc1dbdb5c, 0xc1c4e5c2 ),
	NORM( 0x3e95d78e, 0x3f74c557, 0xbc4b1f24 ),
	VERT( 0xc16254e7, 0xc1dbdb5c, 0xc1c4e5c2 ),
	NORM( 0xbd9310e0, 0xbebf0269, 0xbf6cce3e ),
	VERT( 0xc16254e7, 0xc1dbdb5c, 0xc0fe2eb2 ),
	NORM( 0x3e879cc1, 0x3f76db46, 0xbad5738a ),
	VERT( 0xc1a57d2f, 0xc2316015, 0xc18e919d ),
	NORM( 0x3dfc571c, 0xbf7e0586, 0xbc705e48 ),
	VERT( 0xc1a57d2f, 0xc2316015, 0xc18e919d ),
	NORM( 0xbcf66914, 0xbeb65aae, 0xbf6f16ba ),
	VERT( 0xc124f4bc, 0xc22d90bb, 0xc0fe2eb2 ),
	NORM( 0x3d80b389, 0xbf7f7dd5, 0xbb8fcb95 ),
	VERT( 0xc1064a7a, 0xc1e4f4e0, 0xc1c4e5c2 ),
	NORM( 0xbd2b3f0e, 0xbed8046d, 0xbf67da3d ),
	VERT( 0xc1064a7a, 0xc1e4f4e0, 0xc1c4e5c2 ),
	NORM( 0x3e1089e0, 0x3f7d5c49, 0xbcc73089 ),
	VERT( 0xc1064a7a, 0xc1e4f4e0, 0xc0fe2eb2 ),
	NORM( 0x3dea673b, 0x3f7e5154, 0x00000000 ),
	VERT( 0xc124f4bc, 0xc22d90bb, 0xc18e919d ),
	NORM( 0x3d62e3ca, 0xbf7f9673, 0xbc48cba8 ),
	VERT( 0xc124f4bc, 0xc22d90bb, 0xc18e919d ),
	NORM( 0x3cbd62b4, 0xbecef1be, 0xbf6a150d ),
	VERT( 0xbda69ad4, 0xc1e73b42, 0xc0fe2eb2 ),
	NORM( 0x3cb63495, 0x3f7feca4, 0xbc2084c3 ),
	VERT( 0xc1e3ff18, 0xc1c0ab24, 0xc0fb692d ),
	NORM( 0x3f65d097, 0xbee19384, 0xb35cb383 ),
	VERT( 0xc1eea415, 0xc1d595b4, 0xc0fb692d ),
	NORM( 0x3f64278c, 0xbee83853, 0x00000000 ),
	VERT( 0xc1eea415, 0xc1d595b4, 0xc0fb692d ),
	NORM( 0x3f64b628, 0xbee60482, 0x00000000 ),
	VERT( 0xc204de4e, 0xc205bbdc, 0xc0fb692d ),
	NORM( 0x3f68b28c, 0xbed56d9f, 0x35e8b1f7 ),
	VERT( 0xc1dac35a, 0xc1ad24c5, 0xc1c51623 ),
	NORM( 0x3f04bf4c, 0x3f5ae49f, 0x33d0ba6b ),
	VERT( 0xc1dac35a, 0xc1ad24c5, 0xc1c51623 ),
	NORM( 0x3f676d42, 0xbedae282, 0xb3dcae50 ),
	VERT( 0xc1dac35a, 0xc1ad24c5, 0xc1c51623 ),
	NORM( 0xbe0fd9b4, 0xbddb5ca0, 0xbf7bf94e ),
	VERT( 0xc1e3ff18, 0xc1c0ab24, 0xc1c1a4d8 ),
	NORM( 0xbdc6fa38, 0xbdcf75e9, 0xbf7d773a ),
	VERT( 0xc1e3ff18, 0xc1c0ab24, 0xc1c1a4d8 ),
	NORM( 0x3f65f750, 0xbee0f570, 0xb37121c8 ),
	VERT( 0xc1e3ff18, 0xc1c0ab24, 0xc1c1a4d8 ),
	NORM( 0xbde8b489, 0xbdc9922d, 0xbf7d1748 ),
	VERT( 0xc1dac359, 0xc1ad24c5, 0xc0fb6a17 ),
	NORM( 0x3f676d43, 0xbedae281, 0xb3dcae4f ),
	VERT( 0xc2327b88, 0x42462c97, 0xc1483f1e ),
	NORM( 0x3f144b59, 0xbf50ac84, 0x00000000 ),
	VERT( 0xc245e8bc, 0x4219469a, 0xc14a65cf ),
	NORM( 0x3f73ac32, 0xbe9cf783, 0x00000000 ),
	VERT( 0xc2417004, 0x4227291d, 0xc1483f1e ),
	NORM( 0x3f67b38a, 0xbed9b852, 0x00000000 ),
	VERT( 0xc238337b, 0x423ab455, 0xc1483f1e ),
	NORM( 0x3f651a2e, 0xbee47501, 0x00000000 ),
	VERT( 0xc2327b74, 0x42462ca8, 0xc1c02725 ),
	NORM( 0x3f651a2e, 0xbee47500, 0x00000000 ),
	VERT( 0xc2283132, 0x424d7caf, 0xc1befac3 ),
	NORM( 0x3f144b59, 0xbf50ac84, 0x00000000 ),
	VERT( 0xc2417004, 0x4227291d, 0xc1c53a07 ),
	NORM( 0x3f73ac32, 0xbe9cf783, 0x00000000 ),
	VERT( 0xc2382cf7, 0x423adfbd, 0xc1c1cbcf ),
	NORM( 0x3f67b389, 0xbed9b852, 0x00000000 ),
	VERT( 0xc2327b74, 0x42462ca8, 0xc1482a0d ),
	NORM( 0x3f651a2e, 0xbee47501, 0x00000000 ),
	VERT( 0xc2382cf7, 0x423adfbd, 0xc1483ce5 ),
	NORM( 0x3f67b389, 0xbed9b852, 0x00000000 ),
	VERT( 0xc2417004, 0x4227291d, 0xc14c6868 ),
	NORM( 0x3f73ac32, 0xbe9cf783, 0x00000000 ),
	VERT( 0xc2283132, 0x424d7caf, 0xc1482a0d ),
	NORM( 0x3f144b59, 0xbf50ac84, 0x00000000 ),
	VERT( 0xc2327b88, 0x42462c97, 0xc1c02d92 ),
	NORM( 0x3f144b59, 0xbf50ac84, 0x00000000 ),
	VERT( 0xc238337b, 0x423ab455, 0xc1c1bf01 ),
	NORM( 0x3f651a2e, 0xbee47500, 0x00000000 ),
	VERT( 0xc2417004, 0x4227291d, 0xc1c53a07 ),
	NORM( 0x3f67b38a, 0xbed9b852, 0x00000000 ),
	VERT( 0xc245e8bc, 0x42194775, 0xc1c649fb ),
	NORM( 0x3f73ac32, 0xbe9cf783, 0x00000000 ),
	VERT( 0xbc4a52b4, 0xc1f35cae, 0xc1914648 ),
	NORM( 0xb9f0ce83, 0xbf424621, 0xbf26b6d5 ),
	VERT( 0xc1db2219, 0xc1c7b8ba, 0xc1846872 ),
	NORM( 0xbdf741d2, 0xbe475e53, 0xbf793114 ),
	VERT( 0xc2414567, 0xc0a68cf3, 0xc193d90d ),
	NORM( 0x3d350ed1, 0xbe092b70, 0xbf7d70b6 ),
	VERT( 0xc25ef799, 0x41ae4f1c, 0xc1bbe5c1 ),
	NORM( 0x00000000, 0xbdc1fdb7, 0xbf7ed955 ),
	VERT( 0xc23718e6, 0x4243eba5, 0xc1bbe5c1 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc1b9d670, 0xc1a1d316, 0xc1914648 ),
	NORM( 0xbe189acb, 0xbe82e716, 0xbf748890 ),
	VERT( 0xc22521fa, 0xc01e0ff3, 0xc193d90d ),
	NORM( 0x3d0d11cc, 0xbe04a857, 0xbf7db086 ),
	VERT( 0xc23e9f79, 0x41ae4f1c, 0xc1bbe5c1 ),
	NORM( 0x3bb1fe29, 0xbdbb84b0, 0xbf7eebbd ),
	VERT( 0xc22521fa, 0x4238301a, 0xc1bbe5c1 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc1562d25, 0xc1d70ab5, 0xc1a510fd ),
	NORM( 0xbdf9fe5b, 0xbf7e15e9, 0x00000000 ),
	VERT( 0xc1562d25, 0xc1d70ab5, 0xc1a510fd ),
	NORM( 0xbec3ef17, 0xbf6c835e, 0x00000000 ),
	VERT( 0xc1ce347b, 0xc1adfc7d, 0xc1a510fd ),
	NORM( 0xbec3ef17, 0xbf6c835e, 0x00000000 ),
	VERT( 0xc1ce347b, 0xc1adfc7d, 0xc1a510fd ),
	NORM( 0xbf1bd7c8, 0xbf4b1936, 0x00000000 ),
	VERT( 0xc211a8c7, 0xc1595a4d, 0xc1a510fd ),
	NORM( 0xbf3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0xc2325072, 0xc03c80a4, 0xc1a510fd ),
	NORM( 0xbf5db3d8, 0xbefffffe, 0x00000000 ),
	VERT( 0xc246d78e, 0x41171ba9, 0xc1a510fd ),
	NORM( 0xbf7746ea, 0xbe8483ed, 0x00000000 ),
	VERT( 0xc24dd7f9, 0x41b5eb63, 0xc1a510fd ),
	NORM( 0xbf7ff36e, 0x3ca072dd, 0x00000000 ),
	VERT( 0xc246d78e, 0x42102479, 0xc146d23f ),
	NORM( 0xbf75556e, 0x3e92405e, 0x00000000 ),
	VERT( 0xc2325072, 0x4241b36e, 0xc146d23f ),
	NORM( 0xbf4afbce, 0x3f1bfdf2, 0x3acb0993 ),
	VERT( 0xc2325072, 0x4241b36e, 0xc146d23f ),
	NORM( 0xbf6c835f, 0x3ec3ef15, 0x00000000 ),
	VERT( 0xc1562d25, 0xc1d70ab5, 0xc1c93750 ),
	NORM( 0xbd2a4762, 0xbdcd8b72, 0xbf7e7c28 ),
	VERT( 0xc1562d25, 0xc1d70ab5, 0xc1c93750 ),
	NORM( 0xbec3ef17, 0xbf6c835e, 0x00000000 ),
	VERT( 0xc1562d25, 0xc1d70ab5, 0xc1c93750 ),
	NORM( 0x3ca699e4, 0xbdf02f98, 0xbf7e2e18 ),
	VERT( 0xc1562d25, 0xc1d70ab5, 0xc1c93750 ),
	NORM( 0xbdf9fe5b, 0xbf7e15e9, 0x00000000 ),
	VERT( 0xc1ce347b, 0xc1adfc7d, 0xc1c93750 ),
	NORM( 0xbf1bd7c8, 0xbf4b1936, 0x00000000 ),
	VERT( 0xc1ce347b, 0xc1adfc7d, 0xc1c93750 ),
	NORM( 0xbec3ef17, 0xbf6c835e, 0x00000000 ),
	VERT( 0xc1ce347b, 0xc1adfc7d, 0xc1c93750 ),
	NORM( 0xbd5c97b7, 0xbdbec1b0, 0xbf7e8393 ),
	VERT( 0xc211a8c7, 0xc1595a4d, 0xc1c93750 ),
	NORM( 0xbf3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0xc211a8c7, 0xc1595a4d, 0xc1c93750 ),
	NORM( 0xbd9b8bfd, 0xbd9b522f, 0xbf7e8569 ),
	VERT( 0xc2325072, 0xc03c80a4, 0xc1c93750 ),
	NORM( 0xbdbdf361, 0xbd5af33f, 0xbf7e8767 ),
	VERT( 0xc2325072, 0xc03c80a4, 0xc1c93750 ),
	NORM( 0xbf5db3d8, 0xbefffffe, 0x00000000 ),
	VERT( 0xc246d78e, 0x41171ba9, 0xc1c93750 ),
	NORM( 0xbdd33f95, 0xbce1bd61, 0xbf7e8968 ),
	VERT( 0xc246d78e, 0x41171ba9, 0xc1c93750 ),
	NORM( 0xbf7746ea, 0xbe8483ed, 0x00000000 ),
	VERT( 0xc24dd7f9, 0x41b5eb63, 0xc1c93750 ),
	NORM( 0xbf800000, 0xb1b79d84, 0x00000000 ),
	VERT( 0xc24dd7f9, 0x41b5eb63, 0xc1c93750 ),
	NORM( 0xbdda1b7b, 0x3897c2d1, 0xbf7e8b4b ),
	VERT( 0xc246d78e, 0x42102479, 0xc1c93750 ),
	NORM( 0xbdd22e4b, 0x3ce1c83b, 0xbf7e8cef ),
	VERT( 0xc246d78e, 0x42102479, 0xc1c93750 ),
	NORM( 0xbf7746eb, 0x3e8483eb, 0x00000000 ),
	VERT( 0xc2325072, 0x4241b36e, 0xc1c93750 ),
	NORM( 0xbdbc197f, 0x3d59686d, 0xbf7e8e39 ),
	VERT( 0xc2325072, 0x4241b36e, 0xc1c93750 ),
	NORM( 0xbf6c835f, 0x3ec3ef15, 0x00000000 ),
	VERT( 0xc2325072, 0x4241b36e, 0xc1c93750 ),
	NORM( 0xbf4afbce, 0x3f1bfdf2, 0x3acb0992 ),
	VERT( 0xc211a8c7, 0x426c41f6, 0xc1c93750 ),
	NORM( 0xbd9b08b2, 0x3d966184, 0xbf7e9287 ),
	VERT( 0xc211a8c7, 0x426c41f6, 0xc1c93750 ),
	NORM( 0xbf37b481, 0x3f324606, 0x3c292d81 ),
	VERT( 0xc1eda3d1, 0x42814eb8, 0xc1c93750 ),
	NORM( 0xbd7e55b3, 0x3daf64d1, 0xbf7e904b ),
	VERT( 0xc1eda3d1, 0x42814eb8, 0xc1c93750 ),
	NORM( 0xbf12edbe, 0x3f519f87, 0x3c1df675 ),
	VERT( 0xc1200ad4, 0xc1698170, 0xc1d44578 ),
	NORM( 0xbc9b7be9, 0xbe148aae, 0xbf7d3ee2 ),
	VERT( 0xc1200ad4, 0xc1698170, 0xc1d44578 ),
	NORM( 0xbc25ca64, 0xbd9cb9be, 0xbf7f3c75 ),
	VERT( 0xc1200ad4, 0xc1698170, 0xc1d44578 ),
	NORM( 0xbd137e7a, 0xbdb20a82, 0xbf7edd38 ),
	VERT( 0xc1200ad4, 0xc1698170, 0xc1d44578 ),
	NORM( 0x3ca699e5, 0xbdf02f99, 0xbf7e2e18 ),
	VERT( 0xc19a5bd9, 0xc12bec1c, 0xc1d44578 ),
	NORM( 0xbd3edf8f, 0xbda57a42, 0xbf7ee24b ),
	VERT( 0xc1da31a7, 0xc093ea33, 0xc1d44578 ),
	NORM( 0xbd86c84d, 0xbd86f00d, 0xbf7ee335 ),
	VERT( 0xc2059694, 0x4056da05, 0xc1d44578 ),
	NORM( 0xbda4d92b, 0xbd3ea2d5, 0xbf7ee41a ),
	VERT( 0xc214fbe8, 0x414a635e, 0xc1d44578 ),
	NORM( 0xbdb7a300, 0xbcc55b40, 0xbf7ee4ea ),
	VERT( 0xc21a3c39, 0x41b4f7db, 0xc1d44578 ),
	NORM( 0xbdbdec10, 0xb881184e, 0xbf7ee597 ),
	VERT( 0xc214fbe8, 0x42025f03, 0xc1d44578 ),
	NORM( 0xbdb751c0, 0x3cc401a8, 0xbf7ee617 ),
	VERT( 0xc2059694, 0x42278a3a, 0xc1d44578 ),
	NORM( 0xbda44c5e, 0x3d3d7eaf, 0xbf7ee65f ),
	VERT( 0xc1da31a7, 0x42477520, 0xc1d44578 ),
	NORM( 0xbd414f8b, 0x3d7bed60, 0xbf7f3ac2 ),
	VERT( 0xc1da31a7, 0x42477520, 0xc1d44578 ),
	NORM( 0xbd913a1f, 0x3d886e00, 0xbf7ec913 ),
	VERT( 0xc0db6532, 0xc0403fef, 0xc1dba1de ),
	NORM( 0xbcf16e60, 0xbd91b770, 0xbf7f3d5d ),
	VERT( 0xc0db6532, 0xc0403fef, 0xc1dba1de ),
	NORM( 0xbc3bffa0, 0xbd697f01, 0xbf7f911b ),
	VERT( 0xc1544898, 0xbeb23cf4, 0xc1dba1de ),
	NORM( 0xbcc1da96, 0xbd28377f, 0xbf7fb658 ),
	VERT( 0xc1544898, 0xbeb23cf4, 0xc1dba1de ),
	NORM( 0xbd1c4cd4, 0xbd87696c, 0xbf7f40c1 ),
	VERT( 0xc1963025, 0x40781a71, 0xc1dba1de ),
	NORM( 0xbd5d0c96, 0xbd5d0db4, 0xbf7f40d9 ),
	VERT( 0xc1963025, 0x40781a71, 0xc1dba1de ),
	NORM( 0xbd099224, 0xbd09c775, 0xbf7fb5eb ),
	VERT( 0xc1b7fc66, 0x41161e4d, 0xc1dba1de ),
	NORM( 0xbd876729, 0xbd1c4bfa, 0xbf7f40c6 ),
	VERT( 0xc1b7fc66, 0x41161e4d, 0xc1dba1de ),
	NORM( 0xbd28f718, 0xbcc3607e, 0xbf7fb58f ),
	VERT( 0xc1cd3b70, 0x417cb44b, 0xc1dba1de ),
	NORM( 0xbd3cd7b9, 0xbc4abaf7, 0xbf7fb54a ),
	VERT( 0xc1cd3b70, 0x417cb44b, 0xc1dba1de ),
	NORM( 0xbd971d26, 0xbca1c5ec, 0xbf7f408a ),
	VERT( 0xc1d47a97, 0x41b56571, 0xc1dba1de ),
	NORM( 0xbd43bb0c, 0xb71614cb, 0xbf7fb522 ),
	VERT( 0xc1d47a97, 0x41b56571, 0xc1dba1de ),
	NORM( 0xbd9c9666, 0x3806ff14, 0xbf7f4029 ),
	VERT( 0xc1cd3b70, 0x41ec70bd, 0xc1dba1de ),
	NORM( 0xbd976dab, 0x3ca2a34f, 0xbf7f3fa8 ),
	VERT( 0xc1cd3b70, 0x41ec70bd, 0xc1dba1de ),
	NORM( 0xbd3d19c0, 0x3c4ab92e, 0xbf7fb519 ),
	VERT( 0xc1413bf3, 0x40485871, 0xc1a52281 ),
	NORM( 0xbf1dbbb2, 0xbf49a24a, 0xb30de96a ),
	VERT( 0xc188e363, 0x40e22f67, 0xc1a52281 ),
	NORM( 0xbf36b2b5, 0xbf33532b, 0x32016307 ),
	VERT( 0xc1a7ca15, 0x41433433, 0xc1a52281 ),
	NORM( 0xbf5eb947, 0xbefc6de7, 0x32805dea ),
	VERT( 0xc1bb36f3, 0x4191698a, 0xc1a52281 ),
	NORM( 0xbf6d2be2, 0xbec0b98f, 0xb29d8647 ),
	VERT( 0xc0c6e1a2, 0x3f27a9ff, 0xc1a510fd ),
	NORM( 0xbe874916, 0xbf76e6d7, 0xb81cca9c ),
	VERT( 0xc0bddad9, 0x3f1df8d3, 0xc1dd0bda ),
	NORM( 0xbe0a1130, 0xbf7da990, 0xb89b8169 ),
	VERT( 0xc0c6e1a2, 0x3f27a9ff, 0xc1dd04b6 ),
	NORM( 0xbe870991, 0xbf76ef88, 0xb81d6278 ),
	VERT( 0xc1413bf3, 0x40485871, 0xc1a510fd ),
	NORM( 0xbec72d88, 0xbf6bd5b4, 0x3326b382 ),
	VERT( 0xc1375a05, 0x4037a70e, 0xc1dd088a ),
	NORM( 0xbec72d89, 0xbf6bd5b4, 0x3326b382 ),
	VERT( 0xc1413bf3, 0x40485871, 0xc1dcf7f1 ),
	NORM( 0xbf01af2b, 0xbf5cb8b6, 0x31514001 ),
	VERT( 0xc182417f, 0x40cd6e89, 0xc1dcfcd6 ),
	NORM( 0xbf1dbbb2, 0xbf49a249, 0xb30de96b ),
	VERT( 0xc188e363, 0x40e22f67, 0xc1dce2f5 ),
	NORM( 0xbf369c8f, 0xbf3369ba, 0x31fda10a ),
	VERT( 0xc1a1000b, 0x413129d6, 0xc1dce789 ),
	NORM( 0xbf4c89bf, 0xbf19f2d9, 0x334e0d4c ),
	VERT( 0xc1a7ca15, 0x41433433, 0xc1dcc4c2 ),
	NORM( 0xbf5ea9a3, 0xbefca511, 0x32816ed1 ),
	VERT( 0xc1b60cd8, 0x4184b384, 0xc1dcc7ed ),
	NORM( 0xbf6d2be2, 0xbec0b98f, 0xb29d8648 ),
	VERT( 0xc1bb36f3, 0x4191698a, 0xc1dc9d2e ),
	NORM( 0xbf778c6b, 0xbe8278d7, 0x3307fe07 ),
	VERT( 0xc1bb36f3, 0x4191698a, 0xc1a60f8f ),
	NORM( 0xbf7de44a, 0xbe0325be, 0x33af1136 ),
	VERT( 0xc1c1d71b, 0x41c4b815, 0xc1a53b72 ),
	NORM( 0xbf7de44a, 0xbe0325be, 0x33af1138 ),
	VERT( 0xc1bfde3f, 0x41b57295, 0xc1dc9e4a ),
	NORM( 0xbf7de44a, 0xbe0325be, 0x33af1137 ),
	VERT( 0xc1c1d71b, 0x41c4b815, 0xc1dc6d7f ),
	NORM( 0xbf7de44a, 0xbe0325be, 0x33af1137 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0xbd6cbbf2, 0x3dc9ee37, 0xbf7e5292 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0xbf02afd2, 0x3f5c2122, 0x00000000 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1a510fd ),
	NORM( 0xbf02ea42, 0x3f5bfe65, 0x00000000 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1a510fd ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1a510fd ),
	NORM( 0x3d7d7574, 0x3eccd368, 0x3f6a163c ),
	VERT( 0xc1c1aeb8, 0x4250dc97, 0xc1d44578 ),
	NORM( 0xbd83ea53, 0x3dab387b, 0xbf7e91fe ),
	VERT( 0xc1c1aeb8, 0x4250dc97, 0xc1d44578 ),
	NORM( 0xbd414f8a, 0x3d7bed5f, 0xbf7f3ac2 ),
	VERT( 0xc1c1cacc, 0x4204078d, 0xc1dba1de ),
	NORM( 0xbd923458, 0x3cf23cf6, 0xbf7f3c0f ),
	VERT( 0xc1c1cacc, 0x4204078d, 0xc1dba1de ),
	NORM( 0xbd366940, 0x3c971d45, 0xbf7fb3d1 ),
	VERT( 0xc1c1c574, 0x4212a6ba, 0xc1dac437 ),
	NORM( 0xbd8b5ba3, 0x3d1134af, 0xbf7f3ecf ),
	VERT( 0xc1c1b693, 0x423b5fb1, 0xc1d6ebd0 ),
	NORM( 0xbd414f8b, 0x3d7bed60, 0xbf7f3ac2 ),
	VERT( 0xc1c1b693, 0x423b5fb1, 0xc1d6ebd0 ),
	NORM( 0xbd7b80dd, 0x3d40fc5e, 0xbf7f3b6c ),
	VERT( 0xc0bddad9, 0x3f1df8d3, 0xc1dd0bda ),
	NORM( 0xbc40506c, 0xbd3b74ed, 0xbf7fb6d0 ),
	VERT( 0xc0c6e1a2, 0x3f27a9ff, 0xc1dd04b6 ),
	NORM( 0xbc95a313, 0xbd34a2aa, 0xbf7fb54c ),
	VERT( 0xc1375a05, 0x4037a70e, 0xc1dd088a ),
	NORM( 0xbcbf0420, 0xbd29039f, 0xbf7fb65a ),
	VERT( 0xc1413bf3, 0x40485871, 0xc1dcf7f1 ),
	NORM( 0xbceec61c, 0xbd1b970c, 0xbf7fb4d6 ),
	VERT( 0xc182417f, 0x40cd6e87, 0xc1dcfcd6 ),
	NORM( 0xbd086728, 0xbd0aec88, 0xbf7fb5ec ),
	VERT( 0xc188e363, 0x40e22f67, 0xc1dce2f4 ),
	NORM( 0xbd1c025e, 0xbcef6a60, 0xbf7fb46e ),
	VERT( 0xc1a1000b, 0x413129d6, 0xc1dce789 ),
	NORM( 0xbd281889, 0xbcc65458, 0xbf7fb590 ),
	VERT( 0xc1a7ca15, 0x41433433, 0xc1dcc4c2 ),
	NORM( 0xbd361072, 0xbc96d463, 0xbf7fb41b ),
	VERT( 0xc1b60cd8, 0x4184b384, 0xc1dcc7ed ),
	NORM( 0xbd3c5b33, 0xbc51db00, 0xbf7fb54a ),
	VERT( 0xc1bb36f3, 0x4191698a, 0xc1dc9d2e ),
	NORM( 0xbd43a9f1, 0xbbce103f, 0xbf7fb3e3 ),
	VERT( 0xc1bfde3f, 0x41b57295, 0xc1dc9e4a ),
	NORM( 0xbd43b990, 0xba03f011, 0xbf7fb521 ),
	VERT( 0xc1c1d71b, 0x41c4b815, 0xc1dc6d80 ),
	NORM( 0xbd43caa4, 0x3bce34ac, 0xbf7fb3c9 ),
	VERT( 0xc1c1d068, 0x41e95f41, 0xc1dc32b3 ),
	NORM( 0xbd3e3822, 0x3c3a0f4c, 0xbf7fb510 ),
	VERT( 0xc0c6e1a2, 0x3f27a9ff, 0xc1a510fd ),
	NORM( 0x3e874415, 0x3f76e786, 0x381603fd ),
	VERT( 0xc0bddad9, 0x3f1df8d3, 0xc1dd0bda ),
	NORM( 0x3e09fc9b, 0x3f7daa43, 0x3894c7c0 ),
	VERT( 0xc0c6e1a2, 0x3f27a9ff, 0xc1dd04b6 ),
	NORM( 0x3e87048b, 0x3f76f038, 0x38169549 ),
	VERT( 0xc1413bf3, 0x40485871, 0xc1a510fd ),
	NORM( 0x3ec72d8a, 0x3f6bd5b4, 0xb316f253 ),
	VERT( 0xc1375a05, 0x4037a70e, 0xc1dd088a ),
	NORM( 0x3ec72d8a, 0x3f6bd5b4, 0xb316f253 ),
	VERT( 0xc1413bf3, 0x40485871, 0xc1dcf7f1 ),
	NORM( 0x3f01af2b, 0x3f5cb8b6, 0xb1ac7e43 ),
	VERT( 0xc182417f, 0x40cd6e89, 0xc1dcfcd6 ),
	NORM( 0x3f1dbbb1, 0x3f49a24a, 0x32da516a ),
	VERT( 0xc188e363, 0x40e22f67, 0xc1dce2f5 ),
	NORM( 0x3f369c8f, 0x3f3369ba, 0xb1a693a5 ),
	VERT( 0xc1a1000b, 0x413129d6, 0xc1dce789 ),
	NORM( 0x3f4c89bf, 0x3f19f2d9, 0xb31766e2 ),
	VERT( 0xc1a7ca15, 0x41433433, 0xc1dcc4c2 ),
	NORM( 0x3f5ea9a2, 0x3efca515, 0xb2426c1a ),
	VERT( 0xc1b60cd8, 0x4184b384, 0xc1dcc7ed ),
	NORM( 0x3f6d2be2, 0x3ec0b991, 0x325f1a0d ),
	VERT( 0xc1bb36f3, 0x4191698a, 0xc1dc9d2e ),
	NORM( 0x3f778c6b, 0x3e8278d8, 0xb36de435 ),
	VERT( 0xc1bb36f3, 0x4191698a, 0xc19f7b8f ),
	NORM( 0x3f7de44a, 0x3e0325b7, 0xb40476ea ),
	VERT( 0xc1c1d71b, 0x41c4b815, 0xc19ea773 ),
	NORM( 0x3f7de44a, 0x3e0325b7, 0xb40476ea ),
	VERT( 0xc1bfde3f, 0x41b57295, 0xc1dc9e4a ),
	NORM( 0x3f7de44a, 0x3e0325b7, 0xb40476ea ),
	VERT( 0xc1c1d71b, 0x41c4b815, 0xc1dc6d7f ),
	NORM( 0x3f7de44a, 0x3e0325b7, 0xb40476ea ),
	VERT( 0xc1c19cc3, 0x4280feec, 0xc1cbe6b7 ),
	NORM( 0xbd6db7bd, 0x3dbb7ae8, 0xbf7e7de4 ),
	VERT( 0xc1a7ca15, 0x41433433, 0xc19e8e82 ),
	NORM( 0x3f5eb946, 0x3efc6de9, 0xb240df15 ),
	VERT( 0xc1bb36f3, 0x4191698a, 0xc19e8e82 ),
	NORM( 0x3f6d2be2, 0x3ec0b991, 0x325f1a0b ),
	VERT( 0xc188e363, 0x40e22f67, 0xc19e8e82 ),
	NORM( 0x3f36b2b5, 0x3f33532c, 0xb1aa6dd7 ),
	VERT( 0xc1413bf3, 0x40485871, 0xc19e8e82 ),
	NORM( 0x3f1dbbb1, 0x3f49a24a, 0x32da516b ),
	VERT( 0xc227444d, 0x4243aa1d, 0xc1384a8e ),
	NORM( 0x3eb151bf, 0x00000000, 0x3f70283c ),
	VERT( 0xc227444d, 0x4243aa1d, 0xc1384a8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc227444d, 0x4252147f, 0xc1a5889a ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc227444d, 0x4252147f, 0xc1a5889a ),
	NORM( 0xbf451ea2, 0x3f2356f3, 0x00000000 ),
	VERT( 0xc227444d, 0x4252147f, 0xc1384a8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc227444d, 0x4252147f, 0xc1384a8e ),
	NORM( 0x3eb151bf, 0x00000000, 0x3f70283c ),
	VERT( 0xc227444d, 0x4252147f, 0xc1384a8e ),
	NORM( 0xbf451ea1, 0x3f2356f4, 0x00000000 ),
	VERT( 0xc227444d, 0x4243aa1d, 0xc1a5889a ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc20ecddc, 0x4243aa1d, 0xc1384a8e ),
	NORM( 0x3e3aabb9, 0x3e559bc5, 0x3f75faf9 ),
	VERT( 0xc21194f2, 0x426c3c79, 0xc1a5889a ),
	NORM( 0xbf348acb, 0x3f357ec5, 0xba0b5e00 ),
	VERT( 0xc21194f2, 0x426c435d, 0xc17c6feb ),
	NORM( 0xbf3a93d2, 0x3f2f4865, 0x3b66236d ),
	VERT( 0xc21194f2, 0x426c435d, 0xc17c6feb ),
	NORM( 0x3dca3e06, 0x3e9b863c, 0x3f729710 ),
	VERT( 0xc1ecaed5, 0x4243aa1d, 0xc1384a8e ),
	NORM( 0x3d26068a, 0x3ec9c553, 0x3f6b0dde ),
	VERT( 0xc1ecaed5, 0x428148c5, 0xc1a5889a ),
	NORM( 0xbf14282f, 0x3f50c443, 0x3bb51e0a ),
	VERT( 0xc1ecaed5, 0x428148c5, 0xc1932fc3 ),
	NORM( 0xbf169500, 0x3f4f076f, 0xba27960d ),
	VERT( 0xc1ecaed5, 0x428148c5, 0xc1932fc3 ),
	NORM( 0x3d4d7b8b, 0x3ecb2967, 0x3f6aa1e9 ),
	VERT( 0xc12abd8e, 0xc21c3bb3, 0xc194fd95 ),
	NORM( 0xbf794b59, 0x3e574cc9, 0xbdb14e4c ),
	VERT( 0xc0ddcaab, 0xc1d9f99f, 0xc1ca8924 ),
	NORM( 0x00000000, 0xbed5c2a3, 0xbf689f08 ),
	VERT( 0xc0ddcaab, 0xc1d9f99f, 0xc1ca8924 ),
	NORM( 0xbf794b59, 0x3e574cc9, 0xbdb14e4c ),
	VERT( 0xc0ddcaab, 0xc1d9f99f, 0xc194fd95 ),
	NORM( 0xbf794b59, 0x3e574cc8, 0xbdb14e4a ),
	VERT( 0xc12abd8e, 0xc22741d8, 0xc194fd95 ),
	NORM( 0xbf794b59, 0x3e574cc8, 0xbdb14e4b ),
	VERT( 0xc12abd8e, 0xc22741d8, 0xc194fd95 ),
	NORM( 0x00000000, 0xbed5c2a4, 0xbf689f08 ),
	VERT( 0xbb3cab54, 0xc1d9f99f, 0xc1ca8924 ),
	NORM( 0x00000000, 0xbed5c2a3, 0xbf689f08 ),
	VERT( 0xbc6970a1, 0xc1e43650, 0xc1a510fd ),
	NORM( 0xba1f2ea3, 0xbf7ffffd, 0x3953a2cf ),
	VERT( 0xbc7d9f85, 0xc20faf53, 0xc1a99cae ),
	NORM( 0xb6a3ceb7, 0xbeddd565, 0xbf66b94a ),
	VERT( 0xbc7d9f85, 0xc20faf53, 0xc1a99cae ),
	NORM( 0x360e5b46, 0xbedcd74f, 0xbf66f632 ),
	VERT( 0xc1cedb33, 0xc20efa64, 0xc1a2d069 ),
	NORM( 0xbe4bd572, 0xbe8df54a, 0xbf70a06f ),
	VERT( 0xc1cedb33, 0xc20efa64, 0xc1a2d069 ),
	NORM( 0xbe2af3d9, 0xbe93d157, 0xbf715811 ),
	VERT( 0xc1c4243a, 0xc1ba576e, 0xc1c045c8 ),
	NORM( 0xbe8a0a9a, 0xbe74b3ab, 0xbf6ecf16 ),
	VERT( 0xc1c4243a, 0xc1ba576e, 0xc1c045c8 ),
	NORM( 0x3ef8c003, 0x3f5fb240, 0xbca5ba39 ),
	VERT( 0xc1ece0d9, 0xc2073454, 0xc19f69f5 ),
	NORM( 0xbe30a940, 0xbe81d4b4, 0xbf73a99a ),
	VERT( 0xc1ece0d9, 0xc2073454, 0xc19f69f5 ),
	NORM( 0xbe2b0abe, 0xbe83964d, 0xbf73ad74 ),
	VERT( 0xc20aea57, 0xc20c1bf4, 0xc1986ebd ),
	NORM( 0xbdbca91a, 0xbe86587b, 0xbf75e6da ),
	VERT( 0xc20aea57, 0xc20c1bf4, 0xc1986ebd ),
	NORM( 0xbdd126cc, 0xbe83d5d5, 0xbf75fb81 ),
	VERT( 0xc21089ac, 0xc23e42e8, 0xc177e881 ),
	NORM( 0x3e6c92c7, 0xbf790eb3, 0xbc3a3692 ),
	VERT( 0xc21089ac, 0xc23e42e8, 0xc177e881 ),
	NORM( 0xbd61840a, 0xbe89d0d5, 0xbf7625ff ),
	VERT( 0xc18b4d7b, 0xc20f8ff4, 0xc1a946c3 ),
	NORM( 0xbcab3970, 0xbeba9888, 0xbf6e5562 ),
	VERT( 0xc18b4d7b, 0xc20f8ff4, 0xc1a946c3 ),
	NORM( 0xbd1c6b8c, 0xbeb9f2a3, 0xbf6e51d8 ),
	VERT( 0xc18be038, 0xc1d3941e, 0xc1c57953 ),
	NORM( 0xbde545bb, 0xbeab8e96, 0xbf6f7e1c ),
	VERT( 0xc18be038, 0xc1d3941e, 0xc1c57953 ),
	NORM( 0x3eb59080, 0x3f6f5709, 0xbc53eb89 ),
	VERT( 0xc1a5dd45, 0xc20b431b, 0xc1aaa6cf ),
	NORM( 0xbdcc6fe4, 0xbeaa71e5, 0xbf700ab7 ),
	VERT( 0xc1a5dd45, 0xc20b431b, 0xc1aaa6cf ),
	NORM( 0xbdaab747, 0xbeab866d, 0xbf7042d9 ),
	VERT( 0xc1ceff34, 0xc234efcd, 0xc1895975 ),
	NORM( 0xbdb9896d, 0xbea64d3e, 0xbf7101a0 ),
	VERT( 0xc1ceff34, 0xc234efcd, 0xc1895975 ),
	NORM( 0x3e2a70b4, 0xbf7c5e40, 0xbcb1479c ),
	VERT( 0xc1159d06, 0xc20ff434, 0xc1a96f17 ),
	NORM( 0xbcb18cd6, 0xbed4af09, 0xbf68cd3b ),
	VERT( 0xc1159d06, 0xc20ff434, 0xc1a96f17 ),
	NORM( 0xbc6788de, 0xbed41407, 0xbf68fa4c ),
	VERT( 0xc134ba45, 0xc1e16381, 0xc1c4b1f1 ),
	NORM( 0x3e718607, 0x3f78bf4f, 0xbc7746df ),
	VERT( 0xc134ba45, 0xc1e16381, 0xc1c4b1f1 ),
	NORM( 0xbd9d4080, 0xbecfca03, 0xbf69248c ),
	VERT( 0xc143b2d0, 0xc20de22a, 0xc1aa5f95 ),
	NORM( 0xbcbe7ec0, 0xbecab63d, 0xbf6b0162 ),
	VERT( 0xc143b2d0, 0xc20de22a, 0xc1aa5f95 ),
	NORM( 0xbb646327, 0xbec9e825, 0xbf6b4092 ),
	VERT( 0xc1782fc7, 0xc22f21e1, 0xc18f414c ),
	NORM( 0x3ced5e2f, 0xbec3d6e9, 0xbf6c6a97 ),
	VERT( 0xc1782fc7, 0xc22f21e1, 0xc18f414c ),
	NORM( 0x3d9a57e8, 0xbf7f3c29, 0xbc8b0988 ),
	VERT( 0xc086f416, 0xc1e70e85, 0xc1c4b0a4 ),
	NORM( 0xbbb709c1, 0xbedcba08, 0xbf66fc0f ),
	VERT( 0xc086f416, 0xc1e70e85, 0xc1c4b0a4 ),
	NORM( 0x3d80fb15, 0x3f7f253b, 0xbd54c94b ),
	VERT( 0xc08661fc, 0xc20f36eb, 0xc1aa0697 ),
	NORM( 0xbb47a962, 0xbedc1d0d, 0xbf67224b ),
	VERT( 0xc08661fc, 0xc20f36eb, 0xc1aa0697 ),
	NORM( 0x3b949a03, 0xbeda028a, 0xbf67a158 ),
	VERT( 0xc0a51df4, 0xc22c61ad, 0xc18ef191 ),
	NORM( 0x3c74be79, 0xbed6f0f9, 0xbf68514a ),
	VERT( 0xc0a51df4, 0xc22c61ad, 0xc18ef191 ),
	NORM( 0x3ce34ed5, 0xbf7fdf09, 0xbc7b965b ),
	VERT( 0xc1c1dd25, 0x42443743, 0xc137cc09 ),
	NORM( 0x3d7d7575, 0x3eccd369, 0x3f6a163c ),
	VERT( 0xc1c1dd25, 0x42443743, 0xc137cc09 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1c1dd25, 0x425c1023, 0xc1d3143b ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xc1c1dd25, 0x425c1023, 0xc1d3143b ),
	NORM( 0x3f7fffc2, 0xbb2611ea, 0xba84eaec ),
	VERT( 0xc1c1dd25, 0x425c1023, 0xc1d3143b ),
	NORM( 0xbf7fffc2, 0x3b2611ea, 0x3a84eaec ),
	VERT( 0xc1c1dd25, 0x425c1023, 0xc1d3143b ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1c1dd25, 0x40d96312, 0xc10ee896 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1c1dd25, 0x40d96312, 0xc1b29d7d ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1c1dd25, 0x41c39ab5, 0xc1dc8160 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1c1dd25, 0x4214804d, 0xc1dba416 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x3c87f3d0, 0x40d8cadc, 0xc1b1a419 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc1c1bb28, 0x40d8cadc, 0xc1b1a419 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc1c1bb28, 0x40d8cadc, 0xc0cbfc2f ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xbc250596, 0xbe41f0f6, 0xc1a510fd ),
	NORM( 0xbf7ff3e7, 0x3c96ad04, 0xbbb5f894 ),
	VERT( 0xbc250596, 0xbe41f0f6, 0xc1dd07ee ),
	NORM( 0xb8ba6613, 0xbd3fd384, 0xbf7fb817 ),
	VERT( 0xbc050e4e, 0xc22741d8, 0xc194fd95 ),
	NORM( 0x00000000, 0xbed5c2a3, 0xbf689f09 ),
	VERT( 0xba903315, 0xc22bcf42, 0xc0fe25d5 ),
	NORM( 0xbbf75194, 0xbf7ff991, 0xbc4161b0 ),
	VERT( 0x41ee7f63, 0xc1a12cf9, 0xc0fb697d ),
	NORM( 0xbf2ccbfe, 0x3f3cdb61, 0xbc4d78b7 ),
	VERT( 0x42281ae9, 0xc10fcaa3, 0xc0fb697d ),
	NORM( 0xbf4b52f7, 0x3f1b883b, 0xbc1009e2 ),
	VERT( 0x42281ae9, 0xc10fcaa3, 0xc1c10238 ),
	NORM( 0xbf4b4b45, 0x3f1b9249, 0xbc101bcc ),
	VERT( 0x4215e25f, 0xc157ff68, 0xc1c1aa99 ),
	NORM( 0xbf2ccbfd, 0x3f3cdb61, 0xbc4d78b7 ),
	VERT( 0x4207b6a8, 0xc185b7db, 0xc1c28b52 ),
	NORM( 0xbf2ccbfd, 0x3f3cdb61, 0xbc4d78b7 ),
	VERT( 0x41ee7f63, 0xc1a12cf9, 0xc1c39280 ),
	NORM( 0xbf2ccbfe, 0x3f3cdb61, 0xbc4d78b8 ),
	VERT( 0x41200ad4, 0xc1698170, 0xc1d44578 ),
	NORM( 0xbca6f05b, 0xbdf0356d, 0xbf7e2df4 ),
	VERT( 0x41200ad4, 0xc1698170, 0xc1d44578 ),
	NORM( 0x3d137e7a, 0xbdb20a82, 0xbf7edd38 ),
	VERT( 0x41200ad4, 0xc1698170, 0xc1d44578 ),
	NORM( 0x3c9c8019, 0xbe1497a4, 0xbf7d3e40 ),
	VERT( 0x41200ad4, 0xc1698170, 0xc1d44578 ),
	NORM( 0x3c26bdd4, 0xbd9cb093, 0xbf7f3c81 ),
	VERT( 0x41562d25, 0xc1d70ab5, 0xc1c93750 ),
	NORM( 0x3d2a4762, 0xbdcd8b72, 0xbf7e7c28 ),
	VERT( 0x41562d25, 0xc1d70ab5, 0xc1c93750 ),
	NORM( 0xbca6f05b, 0xbdf0356d, 0xbf7e2df4 ),
	VERT( 0x3c65ddc0, 0xc1e43650, 0xc1c576f4 ),
	NORM( 0xb80d7942, 0xbdf03f41, 0xbf7e3b83 ),
	VERT( 0x3c65ddc0, 0xc1e43650, 0xc1c576f4 ),
	NORM( 0x3584649a, 0xbe149809, 0xbf7d4a53 ),
	VERT( 0x3c65ddc0, 0xc1e43650, 0xc1c576f4 ),
	NORM( 0x3d973cd8, 0x3f7f29ab, 0xbd066a8c ),
	VERT( 0x3c65ddc0, 0xc1e43650, 0xc1c576f4 ),
	NORM( 0x397d697f, 0xbf5b3235, 0xbf043f07 ),
	VERT( 0x3cfcfb5d, 0xc17e82b2, 0xc1d44578 ),
	NORM( 0x380d50a7, 0xbd9ce51a, 0xbf7f3f68 ),
	VERT( 0x3cfcfb5d, 0xc17e82b2, 0xc1d44578 ),
	NORM( 0x38aa69e9, 0xbe149810, 0xbf7d4a53 ),
	VERT( 0x3c9ebde8, 0xc07b9fe3, 0xc1dba1de ),
	NORM( 0x380ee5a9, 0xbd80b58f, 0xbf7f7e73 ),
	VERT( 0x40db6532, 0xc0403fef, 0xc1dba1de ),
	NORM( 0x3cf16e60, 0xbd91b770, 0xbf7f3d5d ),
	VERT( 0x40db6532, 0xc0403fef, 0xc1dba1de ),
	NORM( 0x3c3c4dfc, 0xbd69694d, 0xbf7f912c ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0x3d6cbbf2, 0x3dc9ee37, 0xbf7e5292 ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0x3f03f0ee, 0x3f5b5ed2, 0x3c02aa48 ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1a510fd ),
	NORM( 0xbdfafb55, 0x3ed5c0ac, 0x3f667f6c ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1a510fd ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1a510fd ),
	NORM( 0x3f03f086, 0x3f5b5fe0, 0x3bd56036 ),
	VERT( 0x41c1dd25, 0x42443743, 0xc137cc09 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41c1dd25, 0x42443743, 0xc137cc09 ),
	NORM( 0xbdfafb55, 0x3ed5c0ab, 0x3f667f6c ),
	VERT( 0x41c1dd25, 0x425c1023, 0xc1d3143b ),
	NORM( 0x3f7fffc2, 0x3b2611ea, 0x3a84eaec ),
	VERT( 0xbc87f3d0, 0x40d8cadc, 0xc0cbfc30 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x41c1bb28, 0x40d8cadc, 0xc0cbfc2f ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x41c1bb28, 0x40d8cadc, 0xc1b1a419 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x41c1dd25, 0x425c1023, 0xc1d3143b ),
	NORM( 0xbf7fffc2, 0xbb2611ea, 0xba84eaec ),
	VERT( 0x41c1dd25, 0x425c1023, 0xc1d3143b ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x41c1dd25, 0x425c1023, 0xc1d3143b ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41c1dd25, 0x4214804d, 0xc1dba416 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41c1dd25, 0x41c39ab5, 0xc1dc8160 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41c1dd25, 0x40d96312, 0xc1b29d7d ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41c1dd25, 0x40d96312, 0xc10ee896 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x423718e6, 0x4243eba5, 0xc1bbe5c1 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x423e9f79, 0x41ae4f1c, 0xc1bbe5c1 ),
	NORM( 0xbbb1fe2e, 0xbdbb84b0, 0xbf7eebbd ),
	VERT( 0x422521fa, 0x4238301a, 0xc1bbe5c1 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x4227444d, 0x4243aa1d, 0xc1384a8e ),
	NORM( 0xbec3f47f, 0x3ea643a1, 0x3f5d6abc ),
	VERT( 0x4227444d, 0x4243aa1d, 0xc1384a8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4227444d, 0x4243aa1d, 0xc1a5889a ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4227444d, 0x4252147f, 0xc1a5889a ),
	NORM( 0x3f451404, 0x3f2363aa, 0xbab1f9e6 ),
	VERT( 0x4227444d, 0x4252147f, 0xc1a5889a ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4227444d, 0x4252147f, 0xc1384a8e ),
	NORM( 0x3f451404, 0x3f2363aa, 0xbab1f9e6 ),
	VERT( 0x4227444d, 0x4252147f, 0xc1384a8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4227444d, 0x4252147f, 0xc1384a8e ),
	NORM( 0xbec3f47e, 0x3ea643a2, 0x3f5d6abc ),
	VERT( 0x420ecddc, 0x4243aa1d, 0xc1384a8e ),
	NORM( 0xbe1dda86, 0x3ec23f3f, 0x3f698cd5 ),
	VERT( 0x421194f2, 0x426c3c79, 0xc1a5889a ),
	NORM( 0x3f347ecb, 0x3f358a8c, 0xbafcdc5d ),
	VERT( 0x41ecaed5, 0x4243aa1d, 0xc1384a8e ),
	NORM( 0xbce96eed, 0x3ed4e2df, 0x3f68b50c ),
	VERT( 0x41ecaed5, 0x428148c5, 0xc1932fc3 ),
	NORM( 0x3f16599e, 0x3f4f3281, 0xbac19f99 ),
	VERT( 0x41ecaed5, 0x428148c5, 0xc1932fc3 ),
	NORM( 0xbd8fade6, 0x3ed5811e, 0x3f67fc5e ),
	VERT( 0x41ecaed5, 0x428148c5, 0xc1a5889a ),
	NORM( 0x3f142279, 0x3f50c91f, 0x3b532c08 ),
	VERT( 0x41a7ca15, 0x41433433, 0xc1a52281 ),
	NORM( 0x3f5eb947, 0xbefc6de7, 0x32579ad4 ),
	VERT( 0x41a7ca15, 0x41433433, 0xc1dcc4c2 ),
	NORM( 0x3f5ea9a2, 0xbefca513, 0x325956bf ),
	VERT( 0x41b60cd8, 0x4184b384, 0xc1dcc7ed ),
	NORM( 0x3f6d2be2, 0xbec0b990, 0xb27981e2 ),
	VERT( 0x41bb36f3, 0x4191698a, 0xc1dc9d2e ),
	NORM( 0x3f778c6b, 0xbe8278d7, 0x33853972 ),
	VERT( 0x41bb36f3, 0x4191698a, 0xc1a52281 ),
	NORM( 0x3f6d2be2, 0xbec0b990, 0xb27981e2 ),
	VERT( 0x40bddad9, 0x3f1df8d3, 0xc1dd0bda ),
	NORM( 0x3e099138, 0xbf7dade9, 0xb86309fc ),
	VERT( 0x40c6e1a2, 0x3f27a9ff, 0xc1dd04b6 ),
	NORM( 0x3e86ea4f, 0xbf76f3ce, 0xb7e5c2ec ),
	VERT( 0x40c6e1a2, 0x3f27a9ff, 0xc1a510fd ),
	NORM( 0x3e8729f3, 0xbf76eb1a, 0xb7e4e529 ),
	VERT( 0x41375a05, 0x4037a70e, 0xc1dd088a ),
	NORM( 0x3ec72d8a, 0xbf6bd5b4, 0x3316f253 ),
	VERT( 0x41413bf3, 0x40485871, 0xc1dcf7f1 ),
	NORM( 0x3f01af2b, 0xbf5cb8b6, 0x31719117 ),
	VERT( 0x41413bf3, 0x40485871, 0xc1a510fd ),
	NORM( 0x3ec72d8a, 0xbf6bd5b4, 0x3316f253 ),
	VERT( 0x41413bf3, 0x40485871, 0xc1a52281 ),
	NORM( 0x3f1dbbb1, 0xbf49a24a, 0xb2f40ae1 ),
	VERT( 0x4182417f, 0x40cd6e89, 0xc1dcfcd6 ),
	NORM( 0x3f1dbbb1, 0xbf49a24a, 0xb2f40ae2 ),
	VERT( 0x4188e363, 0x40e22f67, 0xc1dce2f5 ),
	NORM( 0x3f369c8f, 0xbf3369b9, 0x31ba564f ),
	VERT( 0x4188e363, 0x40e22f67, 0xc1a52281 ),
	NORM( 0x3f36b2b5, 0xbf33532c, 0x31bea4d4 ),
	VERT( 0x41a1000b, 0x413129d6, 0xc1dce789 ),
	NORM( 0x3f4c89bf, 0xbf19f2d8, 0x3329464d ),
	VERT( 0x41c1d71b, 0x41c4b815, 0xc1a53b72 ),
	NORM( 0x3f7de44a, 0xbe0325b8, 0x341457a3 ),
	VERT( 0x41bb36f3, 0x4191698a, 0xc1a60f8f ),
	NORM( 0x3f7de44a, 0xbe0325b8, 0x341457a3 ),
	VERT( 0x41bfde3f, 0x41b57295, 0xc1dc9e4a ),
	NORM( 0x3f7de44a, 0xbe0325b8, 0x341457a4 ),
	VERT( 0x41c1d71b, 0x41c4b815, 0xc1dc6d7f ),
	NORM( 0x3f7de44a, 0xbe0325b8, 0x341457a2 ),
	VERT( 0x40bddad9, 0x3f1df8d3, 0xc1dd0bda ),
	NORM( 0x3c401ffd, 0xbd3b7802, 0xbf7fb6d0 ),
	VERT( 0x40c6e1a2, 0x3f27a9ff, 0xc1dd04b6 ),
	NORM( 0x3c95a312, 0xbd34a2ab, 0xbf7fb54c ),
	VERT( 0x41375a05, 0x4037a70e, 0xc1dd088a ),
	NORM( 0x3cbf0420, 0xbd29039f, 0xbf7fb65a ),
	VERT( 0x41544898, 0xbeb23cf4, 0xc1dba1de ),
	NORM( 0x3d1c4cd4, 0xbd87696c, 0xbf7f40c1 ),
	VERT( 0x41544898, 0xbeb23cf4, 0xc1dba1de ),
	NORM( 0x3cc1da96, 0xbd283781, 0xbf7fb658 ),
	VERT( 0x41413bf3, 0x40485871, 0xc1dcf7f1 ),
	NORM( 0x3ceec61c, 0xbd1b970c, 0xbf7fb4d6 ),
	VERT( 0x4182417f, 0x40cd6e87, 0xc1dcfcd6 ),
	NORM( 0x3d086728, 0xbd0aec88, 0xbf7fb5ec ),
	VERT( 0x41963025, 0x40781a71, 0xc1dba1de ),
	NORM( 0x3d099224, 0xbd09c775, 0xbf7fb5eb ),
	VERT( 0x41963025, 0x40781a71, 0xc1dba1de ),
	NORM( 0x3d5d0c96, 0xbd5d0db4, 0xbf7f40d9 ),
	VERT( 0x4188e363, 0x40e22f67, 0xc1dce2f4 ),
	NORM( 0x3d1c025f, 0xbcef6a60, 0xbf7fb46e ),
	VERT( 0x41a1000b, 0x413129d6, 0xc1dce789 ),
	NORM( 0x3d281889, 0xbcc65458, 0xbf7fb590 ),
	VERT( 0x41b7fc66, 0x41161e4d, 0xc1dba1de ),
	NORM( 0x3d28f719, 0xbcc3607e, 0xbf7fb58f ),
	VERT( 0x41b7fc66, 0x41161e4d, 0xc1dba1de ),
	NORM( 0x3d87672a, 0xbd1c4bfb, 0xbf7f40c6 ),
	VERT( 0x41a7ca15, 0x41433433, 0xc1dcc4c2 ),
	NORM( 0x3d361072, 0xbc96d463, 0xbf7fb41b ),
	VERT( 0x41b60cd8, 0x4184b384, 0xc1dcc7ed ),
	NORM( 0x3d3c5b33, 0xbc51db00, 0xbf7fb54a ),
	VERT( 0x41cd3b70, 0x417cb44b, 0xc1dba1de ),
	NORM( 0x3d971d26, 0xbca1c5ec, 0xbf7f408a ),
	VERT( 0x41cd3b70, 0x417cb44b, 0xc1dba1de ),
	NORM( 0x3d3cd7b9, 0xbc4abaf7, 0xbf7fb54a ),
	VERT( 0x41bb36f3, 0x4191698a, 0xc1dc9d2e ),
	NORM( 0x3d43a9f1, 0xbbce103f, 0xbf7fb3e3 ),
	VERT( 0x41d47a97, 0x41b56571, 0xc1dba1de ),
	NORM( 0x3d43bb0c, 0xb71614cb, 0xbf7fb522 ),
	VERT( 0x41d47a97, 0x41b56571, 0xc1dba1de ),
	NORM( 0x3d9c9666, 0x3806ff14, 0xbf7f4029 ),
	VERT( 0x41bfde3f, 0x41b57295, 0xc1dc9e4a ),
	NORM( 0x3d43b990, 0xba03f011, 0xbf7fb521 ),
	VERT( 0x41c1d71b, 0x41c4b815, 0xc1dc6d80 ),
	NORM( 0x3d43caa4, 0x3bce34ac, 0xbf7fb3c9 ),
	VERT( 0x41cd3b70, 0x41ec70bd, 0xc1dba1de ),
	NORM( 0x3d976dab, 0x3ca2a34f, 0xbf7f3fa8 ),
	VERT( 0x41cd3b70, 0x41ec70bd, 0xc1dba1de ),
	NORM( 0x3d3d19c0, 0x3c4ab92e, 0xbf7fb519 ),
	VERT( 0x41c1d068, 0x41e95f41, 0xc1dc32b3 ),
	NORM( 0x3d3e3822, 0x3c3a0f4c, 0xbf7fb510 ),
	VERT( 0x41c1cacc, 0x4204078d, 0xc1dba1de ),
	NORM( 0x3d366940, 0x3c971d45, 0xbf7fb3d1 ),
	VERT( 0x41c1cacc, 0x4204078d, 0xc1dba1de ),
	NORM( 0x3d923458, 0x3cf23cf6, 0xbf7f3c0f ),
	VERT( 0x41eda3d1, 0x42814eb8, 0xc1c93750 ),
	NORM( 0x3d7e55b3, 0x3daf64d1, 0xbf7e904b ),
	VERT( 0x41eda3d1, 0x42814eb8, 0xc1c93750 ),
	NORM( 0x3f132d9d, 0x3f51745d, 0x3beb4a02 ),
	VERT( 0x4211a8c7, 0x426c41f6, 0xc1c93750 ),
	NORM( 0x3d9b08b2, 0x3d966184, 0xbf7e9287 ),
	VERT( 0x4211a8c7, 0x426c41f6, 0xc1c93750 ),
	NORM( 0x3f377747, 0x3f32898f, 0x3b52381f ),
	VERT( 0x41da31a7, 0x42477520, 0xc1d44578 ),
	NORM( 0x3d913a1f, 0x3d886e00, 0xbf7ec913 ),
	VERT( 0x41da31a7, 0x42477520, 0xc1d44578 ),
	NORM( 0x3d414f8b, 0x3d7bed60, 0xbf7f3ac2 ),
	VERT( 0x41c1aeb8, 0x4250dc97, 0xc1d44578 ),
	NORM( 0x3d414f8a, 0x3d7bed5f, 0xbf7f3ac2 ),
	VERT( 0x41c1aeb8, 0x4250dc97, 0xc1d44578 ),
	NORM( 0x3d83ea53, 0x3dab387c, 0xbf7e91fe ),
	VERT( 0x41c19cc3, 0x4280feec, 0xc1cbe6b7 ),
	NORM( 0x3d6db7bd, 0x3dbb7ae8, 0xbf7e7de4 ),
	VERT( 0x4214fbe8, 0x42025f03, 0xc1d44578 ),
	NORM( 0x3db03207, 0x3c90755b, 0xbf7f02c9 ),
	VERT( 0x4214fbe8, 0x42025f03, 0xc1d44578 ),
	NORM( 0x3dca9355, 0x3d27d1ae, 0xbf7e8750 ),
	VERT( 0x41c1c574, 0x4212a6ba, 0xc1dac437 ),
	NORM( 0x3d8b5ba3, 0x3d1134af, 0xbf7f3ecf ),
	VERT( 0x42059694, 0x42278a3a, 0xc1d44578 ),
	NORM( 0x3d960132, 0x3d458fcd, 0xbf7f037d ),
	VERT( 0x42059694, 0x42278a3a, 0xc1d44578 ),
	NORM( 0x3dca9356, 0x3d27d1ae, 0xbf7e8750 ),
	VERT( 0x41c1b693, 0x423b5fb1, 0xc1d6ebd0 ),
	NORM( 0x3d7b80dd, 0x3d40fc5e, 0xbf7f3b6c ),
	VERT( 0x41c1b693, 0x423b5fb1, 0xc1d6ebd0 ),
	NORM( 0x3d414f8b, 0x3d7bed60, 0xbf7f3ac2 ),
	VERT( 0x41c1d71b, 0x41c4b815, 0xc19ea773 ),
	NORM( 0xbf7de44a, 0x3e0325bd, 0xb39c40da ),
	VERT( 0x41c1d71b, 0x41c4b815, 0xc1dc6d7f ),
	NORM( 0xbf7de44a, 0x3e0325bc, 0xb39c40da ),
	VERT( 0x41bfde3f, 0x41b57295, 0xc1dc9e4a ),
	NORM( 0xbf7de44a, 0x3e0325bd, 0xb39c40da ),
	VERT( 0x41bb36f3, 0x4191698a, 0xc1dc9d2e ),
	NORM( 0xbf778c6b, 0x3e8278d7, 0xb2f29b1c ),
	VERT( 0x41bb36f3, 0x4191698a, 0xc19f7b8f ),
	NORM( 0xbf7de44a, 0x3e0325bd, 0xb39c40d9 ),
	VERT( 0x41a7ca15, 0x41433433, 0xc19e8e82 ),
	NORM( 0xbf5eb947, 0x3efc6de6, 0xb265b4f1 ),
	VERT( 0x41bb36f3, 0x4191698a, 0xc19e8e82 ),
	NORM( 0xbf6d2be3, 0x3ec0b98e, 0x328ce418 ),
	VERT( 0x41b60cd8, 0x4184b384, 0xc1dcc7ed ),
	NORM( 0xbf6d2be3, 0x3ec0b98e, 0x328ce418 ),
	VERT( 0x41a7ca15, 0x41433433, 0xc1dcc4c2 ),
	NORM( 0xbf5ea9a3, 0x3efca511, 0xb2679d2e ),
	VERT( 0x4188e363, 0x40e22f67, 0xc19e8e82 ),
	NORM( 0xbf36b2b5, 0x3f33532b, 0xb1e76e42 ),
	VERT( 0x41a1000b, 0x413129d6, 0xc1dce789 ),
	NORM( 0xbf4c89bf, 0x3f19f2d9, 0xb33855ca ),
	VERT( 0x4188e363, 0x40e22f67, 0xc1dce2f5 ),
	NORM( 0xbf369c8f, 0x3f3369b9, 0xb1e2d3fb ),
	VERT( 0x41413bf3, 0x40485871, 0xc19e8e82 ),
	NORM( 0xbf1dbbb2, 0x3f49a249, 0x32fdf1cb ),
	VERT( 0x4182417f, 0x40cd6e89, 0xc1dcfcd6 ),
	NORM( 0xbf1dbbb3, 0x3f49a249, 0x32fdf1ca ),
	VERT( 0x41413bf3, 0x40485871, 0xc1dcf7f1 ),
	NORM( 0xbf01af2c, 0x3f5cb8b6, 0xb1a4afae ),
	VERT( 0x40c6e1a2, 0x3f27a9ff, 0xc1a510fd ),
	NORM( 0xbe872dc2, 0x3f76ea95, 0x37ef32f0 ),
	VERT( 0x41413bf3, 0x40485871, 0xc1a510fd ),
	NORM( 0xbec72d88, 0x3f6bd5b4, 0xb326b382 ),
	VERT( 0x41375a05, 0x4037a70e, 0xc1dd088a ),
	NORM( 0xbec72d89, 0x3f6bd5b4, 0xb326b382 ),
	VERT( 0x40c6e1a2, 0x3f27a9ff, 0xc1dd04b6 ),
	NORM( 0xbe86ee21, 0x3f76f348, 0x37f01ab3 ),
	VERT( 0x40bddad9, 0x3f1df8d3, 0xc1dd0bda ),
	NORM( 0xbe09a0e1, 0x3f7dad61, 0x386d44de ),
	VERT( 0x41ce347b, 0xc1adfc7d, 0xc1c93750 ),
	NORM( 0x3d5c97b7, 0xbdbec1b0, 0xbf7e8393 ),
	VERT( 0x41ce347b, 0xc1adfc7d, 0xc1c93750 ),
	NORM( 0x3f1bd7c8, 0xbf4b1936, 0x00000000 ),
	VERT( 0x4211a8c7, 0xc1595a4d, 0xc1c93750 ),
	NORM( 0x3f3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0x4211a8c7, 0xc1595a4d, 0xc1c93750 ),
	NORM( 0x3d9b8bfd, 0xbd9b522f, 0xbf7e8569 ),
	VERT( 0x4211a8c7, 0xc1595a4d, 0xc1a510fd ),
	NORM( 0x3f3504f3, 0xbf3504f3, 0x00000000 ),
	VERT( 0x41ce347b, 0xc1adfc7d, 0xc1a510fd ),
	NORM( 0x3f1bd7c8, 0xbf4b1936, 0x00000000 ),
	VERT( 0x42325072, 0xc03c80a4, 0xc1c93750 ),
	NORM( 0x3f5db3d8, 0xbefffffe, 0x00000000 ),
	VERT( 0x42325072, 0xc03c80a4, 0xc1c93750 ),
	NORM( 0x3dbdf361, 0xbd5af33f, 0xbf7e8767 ),
	VERT( 0x42325072, 0xc03c80a4, 0xc1a510fd ),
	NORM( 0x3f5db3d8, 0xbefffffe, 0x00000000 ),
	VERT( 0x4246d78e, 0x41171ba9, 0xc1c93750 ),
	NORM( 0x3f7746ea, 0xbe8483ed, 0x00000000 ),
	VERT( 0x4246d78e, 0x41171ba9, 0xc1c93750 ),
	NORM( 0x3dd33f95, 0xbce1bd61, 0xbf7e8968 ),
	VERT( 0x4246d78e, 0x41171ba9, 0xc1a510fd ),
	NORM( 0x3f7746ea, 0xbe8483ed, 0x00000000 ),
	VERT( 0x424dd7f9, 0x41b5eb63, 0xc1c93750 ),
	NORM( 0x3dda1b7b, 0x3897c2d1, 0xbf7e8b4b ),
	VERT( 0x424dd7f9, 0x41b5eb63, 0xc1c93750 ),
	NORM( 0x3f800000, 0xb1b79d84, 0x00000000 ),
	VERT( 0x424dd7f9, 0x41b5eb63, 0xc1a510fd ),
	NORM( 0x3f7ff36e, 0x3ca072dd, 0x00000000 ),
	VERT( 0x4246d78e, 0x42102479, 0xc1c93750 ),
	NORM( 0x3dd9d373, 0x3c656b22, 0xbf7e85cc ),
	VERT( 0x4246d78e, 0x42102479, 0xc1c93750 ),
	NORM( 0x3dca9356, 0x3d27d1ae, 0xbf7e8750 ),
	VERT( 0x4246d78e, 0x42102479, 0xc1c93750 ),
	NORM( 0x3f7746eb, 0x3e8483eb, 0x00000000 ),
	VERT( 0x4246d78e, 0x42102479, 0xc146d23f ),
	NORM( 0x3f75556e, 0x3e92405e, 0x00000000 ),
	VERT( 0x42325072, 0x4241b36e, 0xc1c93750 ),
	NORM( 0x3dadb31e, 0x3d8548d2, 0xbf7e886c ),
	VERT( 0x42325072, 0x4241b36e, 0xc1c93750 ),
	NORM( 0x3f6c835f, 0x3ec3ef15, 0x00000000 ),
	VERT( 0x42325072, 0x4241b36e, 0xc1c93750 ),
	NORM( 0x3f4b1934, 0x3f1bd7ca, 0x00000000 ),
	VERT( 0x42325072, 0x4241b36e, 0xc1c93750 ),
	NORM( 0x3dca9355, 0x3d27d1ae, 0xbf7e8750 ),
	VERT( 0x42325072, 0x4241b36e, 0xc146d23f ),
	NORM( 0x3f6c835f, 0x3ec3ef15, 0x00000000 ),
	VERT( 0x42325072, 0x4241b36e, 0xc146d23f ),
	NORM( 0x3f4b1934, 0x3f1bd7ca, 0x00000000 ),
	VERT( 0x4211a8c7, 0x426c41f6, 0xc182ece6 ),
	NORM( 0x3f3a5294, 0x3f2f8e54, 0x3919a144 ),
	VERT( 0x4211a8c7, 0x426c41f6, 0xc182ece6 ),
	NORM( 0xbd258548, 0x3ecbcaaa, 0x3f6a9e8b ),
	VERT( 0x419a5bd9, 0xc12bec1c, 0xc1d44578 ),
	NORM( 0x3d3edf8f, 0xbda57a42, 0xbf7ee24b ),
	VERT( 0x41da31a7, 0xc093ea33, 0xc1d44578 ),
	NORM( 0x3d86c84d, 0xbd86f00d, 0xbf7ee335 ),
	VERT( 0x42059694, 0x4056da05, 0xc1d44578 ),
	NORM( 0x3da4d929, 0xbd3ea2d4, 0xbf7ee41a ),
	VERT( 0x4214fbe8, 0x414a635e, 0xc1d44578 ),
	NORM( 0x3db7a2ff, 0xbcc55b3f, 0xbf7ee4ea ),
	VERT( 0x421a3c39, 0x41b4f7db, 0xc1d44578 ),
	NORM( 0x3dbdec10, 0xb881184e, 0xbf7ee597 ),
	VERT( 0x41db2219, 0xc1c7b8ba, 0xc1846872 ),
	NORM( 0x3df73132, 0xbe476508, 0xbf793101 ),
	VERT( 0x41b9d670, 0xc1a1d316, 0xc1914648 ),
	NORM( 0x3e188e0a, 0xbe82f0c3, 0xbf7487c4 ),
	VERT( 0x422521fa, 0xc01e0ff3, 0xc193d90d ),
	NORM( 0xbd0d11d0, 0xbe04a857, 0xbf7db086 ),
	VERT( 0x3aaa118c, 0xc1d5d318, 0xc1bbe5c1 ),
	NORM( 0x39f18337, 0xbf5269e8, 0xbf11d0af ),
	VERT( 0x4255d65c, 0x41b6839c, 0xc1c44838 ),
	NORM( 0x3e68faa5, 0xbb362d90, 0xbf7948fa ),
	VERT( 0x424b2e96, 0x412e81d3, 0xc1c6143e ),
	NORM( 0x3e66687a, 0xbd02ef39, 0xbf794d15 ),
	VERT( 0x424f2150, 0x41b7acbf, 0xc1c76b6f ),
	NORM( 0xbf126bfb, 0x3c868919, 0xbf51f330 ),
	VERT( 0x4238337b, 0x423ab455, 0xc1483f1e ),
	NORM( 0xbf651a2d, 0xbee47502, 0x00000000 ),
	VERT( 0x42327b74, 0x42462ca8, 0xc1482a0d ),
	NORM( 0xbf651a2d, 0xbee47502, 0x00000000 ),
	VERT( 0x42327b74, 0x42462ca8, 0xc1c02725 ),
	NORM( 0xbf651a2d, 0xbee47501, 0x00000000 ),
	VERT( 0x4238337b, 0x423ab455, 0xc1c1bf01 ),
	NORM( 0xbf651a2d, 0xbee47502, 0x00000000 ),
	VERT( 0x42327b88, 0x42462c97, 0xc1483f1e ),
	NORM( 0xbf144b59, 0xbf50ac84, 0x00000000 ),
	VERT( 0x42283132, 0x424d7caf, 0xc1482a0d ),
	NORM( 0xbf144b59, 0xbf50ac84, 0x00000000 ),
	VERT( 0x42283132, 0x424d7caf, 0xc1befac3 ),
	NORM( 0xbf144b59, 0xbf50ac84, 0x00000000 ),
	VERT( 0x42327b88, 0x42462c97, 0xc1c02d92 ),
	NORM( 0xbf144b59, 0xbf50ac84, 0x00000000 ),
	VERT( 0x42417004, 0x4227291d, 0xc1483f1e ),
	NORM( 0xbf67b38a, 0xbed9b851, 0x00000000 ),
	VERT( 0x42382cf7, 0x423adfbd, 0xc1483ce5 ),
	NORM( 0xbf67b38a, 0xbed9b851, 0x00000000 ),
	VERT( 0x42382cf7, 0x423adfbd, 0xc1c1cbcf ),
	NORM( 0xbf67b38a, 0xbed9b851, 0x00000000 ),
	VERT( 0x42417004, 0x4227291d, 0xc1c53a07 ),
	NORM( 0xbf67b38a, 0xbed9b850, 0x00000000 ),
	VERT( 0x4245e8bc, 0x4219469a, 0xc14a65cf ),
	NORM( 0xbf73ab7f, 0xbe9cfbd7, 0xb732f452 ),
	VERT( 0x42417004, 0x4227291d, 0xc14c6868 ),
	NORM( 0xbf73ab7f, 0xbe9cfbd7, 0xb732f451 ),
	VERT( 0x42417004, 0x4227291d, 0xc1c53a07 ),
	NORM( 0xbf73ab7f, 0xbe9cfbd7, 0xb732f452 ),
	VERT( 0x4245e8bc, 0x42194775, 0xc1c649fb ),
	NORM( 0xbf73ab7f, 0xbe9cfbd6, 0xb732f450 ),
	VERT( 0x424f4386, 0x41b5f7c7, 0xc13459a0 ),
	NORM( 0xbf7fc491, 0x3d163128, 0xbcb14d4b ),
	VERT( 0x4245e868, 0x4219478f, 0xc1471674 ),
	NORM( 0xbf7d0b03, 0xbe1b0217, 0xbbefdd2a ),
	VERT( 0x4245e868, 0x4219478f, 0xc1c64a48 ),
	NORM( 0xbf7a549f, 0xbe565002, 0x00000000 ),
	VERT( 0x4248689b, 0x420d9863, 0xc1c6e624 ),
	NORM( 0xbf7c74d1, 0xbe296f69, 0xbc2fbb8d ),
	VERT( 0x424c1341, 0x41e4f22e, 0xc1c79d5d ),
	NORM( 0xbf7da7c5, 0xbe08fc8a, 0xbc968bdb ),
	VERT( 0x424c1255, 0x420d9863, 0xc1c44838 ),
	NORM( 0x3eababd9, 0x3da4f837, 0xbf704c39 ),
	VERT( 0x4248689b, 0x420d9863, 0xc1c6e624 ),
	NORM( 0x3eab9c28, 0x3dadc105, 0xbf703642 ),
	VERT( 0x4245e868, 0x4219478f, 0xc1c64a47 ),
	NORM( 0x3eab6f1e, 0x3dc4c8bd, 0xbf6ff737 ),
	VERT( 0x4234124b, 0xc0732f02, 0xc1c1757d ),
	NORM( 0xbf638306, 0x3eeab743, 0xbb9c3aaf ),
	VERT( 0x42388c08, 0xbfa5985b, 0xc1c2dcca ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x424c1341, 0x41e4f22e, 0xc1c79d5d ),
	NORM( 0x3e93407c, 0x3d52a36e, 0xbf74d493 ),
	VERT( 0x4252e85a, 0x41e4f22e, 0xc1c44838 ),
	NORM( 0x3e8dc757, 0x3d40b84a, 0xbf75b1b4 ),
	VERT( 0x424b2e96, 0x412e81d3, 0xc1c6143e ),
	NORM( 0xbf7b21a0, 0x3e42a9be, 0xbd208c4f ),
	VERT( 0x424428ca, 0x40a6a332, 0xc1c3e7a1 ),
	NORM( 0xbf720b06, 0x3ea658bf, 0xbcb8d068 ),
	VERT( 0x424428ca, 0x40a6a332, 0xc0fb697d ),
	NORM( 0xbf71066e, 0x3eac34ca, 0xbcacc3af ),
	VERT( 0x42388c08, 0xbfa5985b, 0xc1c2dcca ),
	NORM( 0xbf638306, 0x3eeab744, 0xbb9c3aaf ),
	VERT( 0x42414567, 0xc0a68cf3, 0xc193d90d ),
	NORM( 0xbd350ed5, 0xbe092b6f, 0xbf7d70b6 ),
	VERT( 0x425ef799, 0x41ae4f1c, 0xc1bbe5c1 ),
	NORM( 0x00000000, 0xbdc1fdb7, 0xbf7ed955 ),
	VERT( 0x423e489e, 0xc2915b19, 0xc0877191 ),
	NORM( 0xbf6b499a, 0xbec6626f, 0xbd92caae ),
	VERT( 0x423f51ca, 0xc293cddc, 0xbf7da3e8 ),
	NORM( 0xbf6b4054, 0xbec66f69, 0xbd95638e ),
	VERT( 0x423077ca, 0xc28095d9, 0xc0a8ba14 ),
	NORM( 0xbf6e30b3, 0xbeb8b531, 0xbd83fb26 ),
	VERT( 0x4238bac3, 0xc28990dc, 0xc0fb8f92 ),
	NORM( 0xbf6b9cf5, 0xbec562ea, 0xbd865ec9 ),
	VERT( 0x42305e4b, 0xc27b6b22, 0xc14d8cf8 ),
	NORM( 0xbf71347c, 0xbea8d799, 0xbd723dc6 ),
	VERT( 0x421b7889, 0xc23c1fc2, 0xc0fef3da ),
	NORM( 0xbf72c523, 0xbe9ff124, 0xbd642770 ),
	VERT( 0x421ae24f, 0xc23ab643, 0xc1a23dc1 ),
	NORM( 0xbf72c523, 0xbe9ff124, 0xbd642770 ),
	VERT( 0x421d045b, 0xc240c60f, 0xc19e8d38 ),
	NORM( 0xbf72c523, 0xbe9ff124, 0xbd642770 ),
	VERT( 0x42268c40, 0xc25d2668, 0xc18ad2a1 ),
	NORM( 0xbf72c523, 0xbe9ff124, 0xbd64276f ),
	VERT( 0x41f7e879, 0xc2395669, 0xc182162d ),
	NORM( 0x3dcdc2f2, 0xbe909dd5, 0xbf7439ac ),
	VERT( 0x41f7e879, 0xc2395669, 0xc182162d ),
	NORM( 0xbe605ed5, 0xbf79b7a2, 0xbcb1d4a7 ),
	VERT( 0x41cedb33, 0xc20efa64, 0xc1a2d069 ),
	NORM( 0x3e4bd572, 0xbe8df54a, 0xbf70a06f ),
	VERT( 0x41cedb33, 0xc20efa64, 0xc1a2d069 ),
	NORM( 0x3e2af3d9, 0xbe93d157, 0xbf715811 ),
	VERT( 0x41ece0d9, 0xc2073454, 0xc19f69f5 ),
	NORM( 0x3e2b0abe, 0xbe83964d, 0xbf73ad74 ),
	VERT( 0x41ece0d9, 0xc2073454, 0xc19f69f5 ),
	NORM( 0x3e30a940, 0xbe81d4b4, 0xbf73a99a ),
	VERT( 0x41a602ce, 0xc1c9a852, 0xc1c4e5c2 ),
	NORM( 0xbebe2f49, 0x3f6da316, 0xbc965773 ),
	VERT( 0x41a602ce, 0xc1c9a852, 0xc1c4e5c2 ),
	NORM( 0x3e4d7ffd, 0xbe923bd5, 0xbf6fe59d ),
	VERT( 0x41c4243a, 0xc1ba576e, 0xc1c045c8 ),
	NORM( 0x3e8a0a9a, 0xbe74b3ab, 0xbf6ecf16 ),
	VERT( 0x41c4243a, 0xc1ba576e, 0xc1c045c8 ),
	NORM( 0xbee75c77, 0x3f645b96, 0xbc2616ac ),
	VERT( 0x41e1ae4d, 0xc1a9cf01, 0xc1bb9003 ),
	NORM( 0x3e77f0f3, 0xbe720654, 0xbf70e668 ),
	VERT( 0x41e1ae4d, 0xc1a9cf01, 0xc1bb9003 ),
	NORM( 0xbeea3761, 0x3f63a2e7, 0xbbeb26b3 ),
	VERT( 0x420aea57, 0xc20c1bf4, 0xc1986ebd ),
	NORM( 0x3dbca91a, 0xbe86587b, 0xbf75e6da ),
	VERT( 0x420aea57, 0xc20c1bf4, 0xc1986ebd ),
	NORM( 0x3dd126cc, 0xbe83d5d5, 0xbf75fb81 ),
	VERT( 0x422529e2, 0xc243931f, 0xc16ec675 ),
	NORM( 0x3d1875ae, 0xbe89c3df, 0xbf765fe0 ),
	VERT( 0x422529e2, 0xc243931f, 0xc16ec675 ),
	NORM( 0xbe795f83, 0xbf7847e8, 0xbc1ba948 ),
	VERT( 0x421089ac, 0xc23e42e8, 0xc177e881 ),
	NORM( 0x3d61840a, 0xbe89d0d5, 0xbf7625ff ),
	VERT( 0x421089ac, 0xc23e42e8, 0xc177e881 ),
	NORM( 0xbe7ceb42, 0xbf77ff6c, 0xbcbda1b2 ),
	VERT( 0x41a57d2f, 0xc2316015, 0xc18e919d ),
	NORM( 0xbe186b6b, 0xbf7d0a67, 0xbcec2533 ),
	VERT( 0x41a57d2f, 0xc2316015, 0xc18e919d ),
	NORM( 0x3cf66914, 0xbeb65aae, 0xbf6f16ba ),
	VERT( 0x418b4d7b, 0xc20f8ff4, 0xc1a946c3 ),
	NORM( 0x3d1c6b8c, 0xbeb9f2a3, 0xbf6e51d8 ),
	VERT( 0x418b4d7b, 0xc20f8ff4, 0xc1a946c3 ),
	NORM( 0x3cab3970, 0xbeba9888, 0xbf6e5562 ),
	VERT( 0x41a5dd45, 0xc20b431b, 0xc1aaa6cf ),
	NORM( 0x3daab747, 0xbeab866d, 0xbf7042d9 ),
	VERT( 0x41a5dd45, 0xc20b431b, 0xc1aaa6cf ),
	NORM( 0x3dcc6fe4, 0xbeaa71e5, 0xbf700ab7 ),
	VERT( 0x416254e7, 0xc1dbdb5c, 0xc1c4e5c2 ),
	NORM( 0x3d9310e0, 0xbebf0269, 0xbf6cce3e ),
	VERT( 0x416254e7, 0xc1dbdb5c, 0xc1c4e5c2 ),
	NORM( 0xbe6a9153, 0x3f791cbf, 0xbccadd61 ),
	VERT( 0x418be038, 0xc1d3941e, 0xc1c57953 ),
	NORM( 0xbe97c7e2, 0x3f746790, 0xbcd2014b ),
	VERT( 0x418be038, 0xc1d3941e, 0xc1c57953 ),
	NORM( 0x3de545bb, 0xbeab8e96, 0xbf6f7e1c ),
	VERT( 0x41ceff34, 0xc234efcd, 0xc1895975 ),
	NORM( 0xbe4fcd69, 0xbf7a7017, 0xbd2dd1ab ),
	VERT( 0x41ceff34, 0xc234efcd, 0xc1895975 ),
	NORM( 0x3db9896d, 0xbea64d3e, 0xbf7101a0 ),
	VERT( 0x4124f4bc, 0xc22d90bb, 0xc18e919d ),
	NORM( 0xbda0c0f4, 0xbf7f2285, 0xbcc66256 ),
	VERT( 0x4124f4bc, 0xc22d90bb, 0xc18e919d ),
	NORM( 0xbcbd62b4, 0xbecef1be, 0xbf6a150d ),
	VERT( 0x41159d06, 0xc20ff434, 0xc1a96f17 ),
	NORM( 0x3c6788de, 0xbed41407, 0xbf68fa4c ),
	VERT( 0x41159d06, 0xc20ff434, 0xc1a96f17 ),
	NORM( 0x3cb18cd6, 0xbed4af09, 0xbf68cd3b ),
	VERT( 0x4143b2d0, 0xc20de22a, 0xc1aa5f95 ),
	NORM( 0x3cbe7ec0, 0xbecab63d, 0xbf6b0162 ),
	VERT( 0x4143b2d0, 0xc20de22a, 0xc1aa5f95 ),
	NORM( 0x3b646327, 0xbec9e825, 0xbf6b4092 ),
	VERT( 0x41064a7a, 0xc1e4f4e0, 0xc1c4e5c2 ),
	NORM( 0x3d2b3f0e, 0xbed8046d, 0xbf67da3d ),
	VERT( 0x41064a7a, 0xc1e4f4e0, 0xc1c4e5c2 ),
	NORM( 0xbd65d952, 0x3f7f8f80, 0xbc8966f7 ),
	VERT( 0x4134ba45, 0xc1e16381, 0xc1c4b1f1 ),
	NORM( 0x3d9d4080, 0xbecfca03, 0xbf69248c ),
	VERT( 0x4134ba45, 0xc1e16381, 0xc1c4b1f1 ),
	NORM( 0xbe1b316d, 0x3f7cecac, 0xbcf7a799 ),
	VERT( 0x41782fc7, 0xc22f21e1, 0xc18f414c ),
	NORM( 0xbced5e2f, 0xbec3d6e9, 0xbf6c6a97 ),
	VERT( 0x41782fc7, 0xc22f21e1, 0xc18f414c ),
	NORM( 0xbddb6671, 0xbf7e61ff, 0xbd08f395 ),
	VERT( 0xbb80c030, 0xc22bcfd7, 0xc18e919d ),
	NORM( 0xbc704d95, 0xbf7fe7ac, 0xbcbc18ce ),
	VERT( 0xbb80c030, 0xc22bcfd7, 0xc18e919d ),
	NORM( 0x3782ff6b, 0xbeda468b, 0xbf679213 ),
	VERT( 0x408661fc, 0xc20f36eb, 0xc1aa0697 ),
	NORM( 0xbb94a6b6, 0xbeda0212, 0xbf67a174 ),
	VERT( 0x408661fc, 0xc20f36eb, 0xc1aa0697 ),
	NORM( 0x3b476aaa, 0xbedc1d02, 0xbf67224e ),
	VERT( 0x4086f416, 0xc1e70e85, 0xc1c4b0a4 ),
	NORM( 0x3dad42f8, 0x3f7f0ec8, 0xbc622ff6 ),
	VERT( 0x4086f416, 0xc1e70e85, 0xc1c4b0a4 ),
	NORM( 0x3bb6521a, 0xbedcb651, 0xbf66fcf5 ),
	VERT( 0x40a51df4, 0xc22c61ad, 0xc18ef191 ),
	NORM( 0xbd69c223, 0xbf7f7699, 0xbcfa12e2 ),
	VERT( 0x40a51df4, 0xc22c61ad, 0xc18ef191 ),
	NORM( 0xbc748549, 0xbed6f0cd, 0xbf685158 ),
	VERT( 0x412abd8e, 0xc21c3bb3, 0xc194fd95 ),
	NORM( 0x3f7649d0, 0x3e8bafa8, 0x00000000 ),
	VERT( 0x412abd8e, 0xc22741d8, 0xc194fd95 ),
	NORM( 0x00000000, 0xbed5c2a2, 0xbf689f09 ),
	VERT( 0x412abd8e, 0xc22741d8, 0xc194fd95 ),
	NORM( 0x3f7649d0, 0x3e8bafa9, 0x00000000 ),
	VERT( 0x40ddcaab, 0xc1d9f99f, 0xc1ca8924 ),
	NORM( 0x00000000, 0xbed5c2a1, 0xbf689f09 ),
	VERT( 0x40ddcaab, 0xc1d9f99f, 0xc1ca8924 ),
	NORM( 0x3f7649d0, 0x3e8bafa8, 0x00000000 ),
	VERT( 0x40ddcaab, 0xc1d9f99f, 0xc194fd95 ),
	NORM( 0x3f7649d0, 0x3e8bafa8, 0x00000000 ),
	VERT( 0x41562d25, 0xc1d70ab5, 0xc1c93750 ),
	NORM( 0x3df9bacd, 0xbf7e16f2, 0x39d2fc62 ),
	VERT( 0x41562d25, 0xc1d70ab5, 0xc1c93750 ),
	NORM( 0x3ec3ef17, 0xbf6c835e, 0x00000000 ),
	VERT( 0x41ce347b, 0xc1adfc7d, 0xc1c93750 ),
	NORM( 0x3ec3ef17, 0xbf6c835e, 0x00000000 ),
	VERT( 0x41ce347b, 0xc1adfc7d, 0xc1a510fd ),
	NORM( 0x3ec3ef17, 0xbf6c835e, 0x00000000 ),
	VERT( 0x41562d25, 0xc1d70ab5, 0xc1a510fd ),
	NORM( 0x3df9bacd, 0xbf7e16f2, 0x39d2fc63 ),
	VERT( 0x41562d25, 0xc1d70ab5, 0xc1a510fd ),
	NORM( 0x3ec3ef17, 0xbf6c835e, 0x00000000 ),
	VERT( 0x41a602ce, 0xc1c9a852, 0xc0fe2eb2 ),
	NORM( 0xbec92196, 0x3f6b6aab, 0xbb9f7060 ),
	VERT( 0x41e1ae4d, 0xc1a9cf01, 0xc0fe2eb2 ),
	NORM( 0xbef11691, 0x3f61d7d8, 0x00000000 ),
	VERT( 0x41e3ff18, 0xc1c0ab24, 0xc0fb692d ),
	NORM( 0xbf65d098, 0xbee1937f, 0xb2df913b ),
	VERT( 0x41dac359, 0xc1ad24c5, 0xc0fb6a17 ),
	NORM( 0xbf676d45, 0xbedae278, 0xb35f8bf6 ),
	VERT( 0x41dac35a, 0xc1ad24c5, 0xc1c51623 ),
	NORM( 0xbf676d45, 0xbedae278, 0xb35f8bf6 ),
	VERT( 0x41e3ff18, 0xc1c0ab24, 0xc1c1a4d8 ),
	NORM( 0xbf65f751, 0xbee0f56b, 0xb2f4436c ),
	VERT( 0x3b3cab54, 0xc1d9f99f, 0xc1ca8924 ),
	NORM( 0x00000000, 0xbed5c2a2, 0xbf689f09 ),
	VERT( 0x416254e7, 0xc1dbdb5c, 0xc0fe2eb2 ),
	NORM( 0xbe830ab9, 0x3f7778ca, 0xbb55eb73 ),
	VERT( 0x41064a7a, 0xc1e4f4e0, 0xc0fe2eb2 ),
	NORM( 0xbde9bc5f, 0x3f7e53c9, 0x00000000 ),
	VERT( 0x41f7e879, 0xc2395669, 0xc0fe2eb2 ),
	NORM( 0xbe5e9245, 0xbf79df6c, 0xbbeeee88 ),
	VERT( 0x422529e2, 0xc243931f, 0xc0fe2eb2 ),
	NORM( 0xbe76e021, 0xbf7872e1, 0x00000000 ),
	VERT( 0x41a57d2f, 0xc2316015, 0xc0fe2eb2 ),
	NORM( 0xbe140dfb, 0xbf7d4a76, 0xbc479fdd ),
	VERT( 0x4124f4bc, 0xc22d90bb, 0xc0fe2eb2 ),
	NORM( 0xbd918dc0, 0xbf7f57d2, 0xbc0dad8f ),
	VERT( 0x41eea415, 0xc1d595b4, 0xc0fb692d ),
	NORM( 0xbf646f26, 0xbee71e18, 0x3600402c ),
	VERT( 0x41eea415, 0xc1d595b4, 0xc1be759c ),
	NORM( 0xbf646840, 0xbee7395a, 0x35e7be89 ),
	VERT( 0x4204de4e, 0xc205bbdc, 0xc0fb692d ),
	NORM( 0xbf68b2bc, 0xbed56cca, 0x360602ee ),
	VERT( 0x4204de14, 0xc205bbad, 0xc1b46449 ),
	NORM( 0xbf684d6c, 0xbed72480, 0x36129bba ),
	VERT( 0x4209ee5a, 0xc211eaef, 0xc1b005a1 ),
	NORM( 0xbf6c666c, 0xbec47a9f, 0x342c2fea ),
	VERT( 0x4210a3d3, 0xc2220fb9, 0xc1aa619c ),
	NORM( 0xbf6c666c, 0xbec47aa0, 0x342c2fea ),
	VERT( 0x421ae24f, 0xc23ab643, 0xc1a23dc1 ),
	NORM( 0xbf6c666c, 0xbec47a9f, 0x342c2fea ),
	VERT( 0x421b7889, 0xc23c1fc2, 0xc0fef3da ),
	NORM( 0xbf6c666c, 0xbec47aa0, 0x342c2fea ),
	VERT( 0x4249aa8b, 0x4227bdae, 0xc1c44838 ),
	NORM( 0x3e003ba2, 0x3d9e7c66, 0xbf7d3603 ),
	VERT( 0x424c1255, 0x420d9863, 0xc1c44838 ),
	NORM( 0x3e2bcd83, 0x3d0fbbcc, 0xbf7c3617 ),
	VERT( 0x4245e868, 0x4219478f, 0xc1c64a47 ),
	NORM( 0x3e2af7b1, 0x3ccd209b, 0xbf7c5345 ),
	VERT( 0x42417004, 0x4227291d, 0xc1c53a05 ),
	NORM( 0x3d543c38, 0x3d9af45e, 0xbf7eebdb ),
	VERT( 0x4255d65c, 0x41b6839c, 0xc1c44838 ),
	NORM( 0x3e22ab37, 0xbc02d834, 0xbf7cbdb0 ),
	VERT( 0x4256d05d, 0x412e81d3, 0xc1c0af07 ),
	NORM( 0x3e3bf508, 0xbd780c1c, 0xbf7b2c2e ),
	VERT( 0x424b2e96, 0x412e81d3, 0xc1c6143e ),
	NORM( 0x3e6699a5, 0xbda45922, 0xbf7893ab ),
	VERT( 0x424428ca, 0x40a6a332, 0xc1c3e7a1 ),
	NORM( 0x3e3d2af8, 0xbdb5ac01, 0xbf7a9120 ),
	VERT( 0x422795fb, 0xc13ee8ec, 0xc1bc0fb4 ),
	NORM( 0x3e3adfb9, 0xbe0fb0e2, 0xbf791fd5 ),
	VERT( 0x4215e25f, 0xc157ff68, 0xc1c1aa99 ),
	NORM( 0x3e35d2e0, 0xbdf0378c, 0xbf7a22e0 ),
	VERT( 0x42281ae9, 0xc10fcaa3, 0xc1c10238 ),
	NORM( 0x3ea1eddb, 0xbe554bc6, 0xbf6ceedf ),
	VERT( 0x4234124b, 0xc0732f02, 0xc1c1757d ),
	NORM( 0x3e1b9aaf, 0xbe0b3016, 0xbf7a9f7c ),
	VERT( 0x423e1dc6, 0x422e4829, 0xc1c44838 ),
	NORM( 0x3dab14ac, 0x3e0ae404, 0xbf7cbb2a ),
	VERT( 0x42224746, 0xc23ab643, 0xc1a0535a ),
	NORM( 0x3e5329b4, 0xbe52e690, 0xbf74e2d7 ),
	VERT( 0x421d045b, 0xc240c60f, 0xc19e8d38 ),
	NORM( 0x3e16cbe7, 0xbe88ca6b, 0xbf73cbf7 ),
	VERT( 0x421ae24f, 0xc23ab643, 0xc1a23dc1 ),
	NORM( 0x3e01c98c, 0xbe26bafa, 0xbf7a7db5 ),
	VERT( 0x41eea415, 0xc1d595b4, 0xc1be759c ),
	NORM( 0x3dc6fa38, 0xbdcf75ea, 0xbf7d773a ),
	VERT( 0x41eea415, 0xc1d595b4, 0xc1be759c ),
	NORM( 0x3e06b501, 0xbdf12e6b, 0xbf7bfa69 ),
	VERT( 0x41f8d8d4, 0xc1c0ab29, 0xc1bf990f ),
	NORM( 0x3e06d01c, 0xbde352df, 0xbf7c2d04 ),
	VERT( 0x41f8d8d4, 0xc1c0ab29, 0xc1bf990f ),
	NORM( 0x3dcb21ca, 0xbdc37c2d, 0xbf7d901e ),
	VERT( 0x42171dc0, 0xc1c0ab29, 0xc1b87683 ),
	NORM( 0x3e09f082, 0xbdd97c6b, 0xbf7c34ab ),
	VERT( 0x4204de14, 0xc205bbad, 0xc1b46449 ),
	NORM( 0x3e09e847, 0xbdf43cb8, 0xbf7bd2ed ),
	VERT( 0x425be969, 0xc283d87e, 0xbfb753d2 ),
	NORM( 0x3f44c9a3, 0xbf0d7934, 0xbea4dfd4 ),
	VERT( 0x423e489e, 0xc2915b19, 0xc0877191 ),
	NORM( 0x3f2e0b87, 0xbf0a23ec, 0xbefe41a3 ),
	VERT( 0x4238bac3, 0xc28990dc, 0xc0fb8f92 ),
	NORM( 0x3f0c8d43, 0xbefb4eef, 0xbf2d2ec0 ),
	VERT( 0x424a0855, 0xc2814473, 0xc0feb199 ),
	NORM( 0x3f119985, 0xbf030ff4, 0xbf24cd14 ),
	VERT( 0x42305e4b, 0xc27b6b22, 0xc14d8cf8 ),
	NORM( 0x3ed57b67, 0xbee3da3a, 0xbf4ae318 ),
	VERT( 0x4247bffd, 0xc25f9996, 0xc15a0f17 ),
	NORM( 0x3ef5373b, 0xbec11403, 0xbf4aefed ),
	VERT( 0x42268c40, 0xc25d2668, 0xc18ad2a1 ),
	NORM( 0x3eae0fdb, 0xbe9f715c, 0xbf632b77 ),
	VERT( 0x424745de, 0xc23ab643, 0xc185e825 ),
	NORM( 0x3ec429e1, 0xbe8752fd, 0xbf629417 ),
	VERT( 0x421bc2a1, 0xc211eaef, 0xc1ab17e3 ),
	NORM( 0x3e03d3cf, 0xbdebf6c2, 0xbf7c2686 ),
	VERT( 0x42402462, 0xc211eaef, 0xc1a21ff2 ),
	NORM( 0x3e85f96e, 0xbe3c7810, 0xbf728bd7 ),
	VERT( 0x4210a3d3, 0xc2220fb9, 0xc1aa619c ),
	NORM( 0x3e05776a, 0xbde45de1, 0xbf7c34b4 ),
	VERT( 0x41ee7f63, 0xc1a12cf9, 0xc1c39280 ),
	NORM( 0x3de501e1, 0xbdc15005, 0xbf7d3e88 ),
	VERT( 0x41ee7f63, 0xc1a12cf9, 0xc1c39280 ),
	NORM( 0xbf04bf4d, 0x3f5ae49e, 0x33bac3da ),
	VERT( 0x4207b6a8, 0xc185b7db, 0xc1c28b52 ),
	NORM( 0x3dd93529, 0xbdb88f83, 0xbf7d8232 ),
	VERT( 0x4207b6a8, 0xc185b7db, 0xc1c28b52 ),
	NORM( 0x3e01f289, 0xbdd1bc0d, 0xbf7c92c5 ),
	VERT( 0x424fc7b3, 0xc06beeb4, 0xc1b97ca6 ),
	NORM( 0x3e1574f2, 0xbdd98fae, 0xbf7bcb53 ),
	VERT( 0x42388c08, 0xbfa5985b, 0xc1c2dcca ),
	NORM( 0x3e1b8271, 0xbde60cf6, 0xbf7b6431 ),
	VERT( 0x41e3ff18, 0xc1c0ab24, 0xc1c1a4d8 ),
	NORM( 0x3ddce1a3, 0xbdcba4ba, 0xbf7d3b04 ),
	VERT( 0x41dac35a, 0xc1ad24c5, 0xc1c51623 ),
	NORM( 0x3e0fd9b4, 0xbddb5ca0, 0xbf7bf94e ),
	VERT( 0x41dac35a, 0xc1ad24c5, 0xc1c51623 ),
	NORM( 0xbf04bf4c, 0x3f5ae49f, 0x33d0ba6b ),
	VERT( 0x41dac35a, 0xc1ad24c6, 0xc0fb697d ),
	NORM( 0xbf04bf54, 0x3f5ae49a, 0x32370883 ),
	VERT( 0x41ee7f63, 0xc1a12cf9, 0xc0fb697d ),
	NORM( 0xbf04bf55, 0x3f5ae499, 0x00000000 ),
	VERT( 0x42584b8d, 0x423c06f6, 0xc1bb5047 ),
	NORM( 0x3e221771, 0x3e406432, 0xbf782778 ),
	VERT( 0x42601b93, 0x4227bdae, 0xc1bb5047 ),
	NORM( 0x3e3867da, 0x3d6e3ec8, 0xbf7b5fc5 ),
	VERT( 0x42382cd4, 0x423adf96, 0xc1c1caff ),
	NORM( 0x3dc2fb0b, 0x3e15dcc3, 0xbf7c116c ),
	VERT( 0x4253698a, 0x423ec521, 0xc1bb5047 ),
	NORM( 0x3e08b67a, 0x3e8a2a44, 0xbf741f2e ),
	VERT( 0x4236cb32, 0x423d9d99, 0xc1c13cbb ),
	NORM( 0x3dc6edb8, 0x3e003ed7, 0xbf7cc3a3 ),
	VERT( 0x42252668, 0x4253861e, 0xc14df9ee ),
	NORM( 0x3e6aa0ae, 0x3f790914, 0xbd0c2224 ),
	VERT( 0x42782ec5, 0x423fb633, 0xc14df9ee ),
	NORM( 0x3edd8c50, 0x3f66b00a, 0xbcde6f32 ),
	VERT( 0x427765e5, 0x423fb633, 0xc17ffed6 ),
	NORM( 0x3ede39d7, 0x3f65e859, 0xbd91dac7 ),
	VERT( 0x42256b27, 0x4252fe8e, 0xc17ffed6 ),
	NORM( 0x3e6a4e2b, 0x3f790905, 0xbd149b95 ),
	VERT( 0x42256aa1, 0x4252feaf, 0xc17ffed6 ),
	NORM( 0x3e6745b0, 0x3f78a62c, 0xbd99318f ),
	VERT( 0x42740b85, 0x423fb633, 0xc199f616 ),
	NORM( 0x3ed93dd1, 0x3f652be4, 0xbe0b9937 ),
	VERT( 0x42260181, 0x4251d551, 0xc199f616 ),
	NORM( 0x3e66f094, 0x3f78a199, 0xbd9d0235 ),
	VERT( 0x422600fd, 0x4251d431, 0xc199f616 ),
	NORM( 0x3e690371, 0x3f78aa18, 0xbd8c861c ),
	VERT( 0x42707b7f, 0x423fb633, 0xc1acea44 ),
	NORM( 0x3ec3a078, 0x3f536d45, 0xbed44b5d ),
	VERT( 0x4226ac96, 0x42507f11, 0xc1bbf2d9 ),
	NORM( 0x3e69368c, 0x3f78ada5, 0xbd899931 ),
	VERT( 0x4226acde, 0x42507efc, 0xc1bbf28e ),
	NORM( 0x3e47dac6, 0x3f0b7291, 0xbf50cab5 ),
	VERT( 0x426c5bb4, 0x423ec521, 0xc1b24666 ),
	NORM( 0x3e67f2b1, 0x3f0b3b5b, 0xbf4eda44 ),
	VERT( 0x422836e8, 0x424d813e, 0xc1bf1e1e ),
	NORM( 0x3e45da88, 0x3f09029f, 0xbf528473 ),
	VERT( 0x42283130, 0x424d7caf, 0xc1befade ),
	NORM( 0x3e0ec477, 0x3e954856, 0xbf724304 ),
	VERT( 0x42327b7a, 0x42462cad, 0xc1c0272f ),
	NORM( 0x3df7ce91, 0x3e63443a, 0xbf77af9f ),
	VERT( 0x428a406c, 0xc13cacb3, 0x3f09b266 ),
	NORM( 0x3f7d3eec, 0xbdedb2fb, 0xbdb66209 ),
	VERT( 0x42884b02, 0xc1c0ab29, 0x40a4bcca ),
	NORM( 0x3f7d8f50, 0xbde14b99, 0xbda9c49a ),
	VERT( 0x4286ef61, 0xc1c0ab29, 0xc03dbb6b ),
	NORM( 0x3f7b09af, 0xbe1002ce, 0xbe0bb411 ),
	VERT( 0x4288e912, 0xc13f0da7, 0xc0d2bbec ),
	NORM( 0x3f7b42f8, 0xbe028c39, 0xbe1256bb ),
	VERT( 0x428462b8, 0xc1c0ab29, 0xc11ea4c4 ),
	NORM( 0x3f71b62a, 0xbe415108, 0xbe8a36e9 ),
	VERT( 0x4286ba31, 0xc13ee8ec, 0xc140a000 ),
	NORM( 0x3f77340e, 0xbe1f6ab5, 0xbe5518da ),
	VERT( 0x4280509a, 0xc1c0ab29, 0xc1781f6f ),
	NORM( 0x3f46e81f, 0xbe80aaca, 0xbf13c2cf ),
	VERT( 0x42848ffa, 0xc13ee8ec, 0xc18936de ),
	NORM( 0x3f5e4fe5, 0xbe3d858c, 0xbeeb8754 ),
	VERT( 0x42739447, 0xc1c0ab29, 0xc18da19f ),
	NORM( 0x3eefc992, 0xbe6c447a, 0xbf5a5730 ),
	VERT( 0x42807a26, 0xc13ee8ec, 0xc19a5b90 ),
	NORM( 0x3f0591fa, 0xbe414e70, 0xbf54fa50 ),
	VERT( 0x4257abad, 0xc1c0ab29, 0xc1a785bb ),
	NORM( 0x3e8e4440, 0xbe1cc46a, 0xbf72c696 ),
	VERT( 0x42670af3, 0xc13ee8ec, 0xc1ab1eec ),
	NORM( 0x3e6d7dd7, 0xbe0eccdc, 0xbf76728f ),
	VERT( 0x42351685, 0xc1c0ab29, 0xc1b07dac ),
	NORM( 0x3e0462f1, 0xbdc8ada3, 0xbf7c9bef ),
	VERT( 0x42446c94, 0xc13ee8ec, 0xc1b416dd ),
	NORM( 0x3e08284b, 0xbdd4082f, 0xbf7c56ba ),
	VERT( 0x428bb76d, 0xc06beeb4, 0xc03d195c ),
	NORM( 0x3f7d6a0b, 0xbdc81f16, 0xbdd25dc8 ),
	VERT( 0x428a5bcd, 0xc06beeb4, 0xc113da1b ),
	NORM( 0x3f7bf2ca, 0xbdcb9570, 0xbe1638b1 ),
	VERT( 0x4288b9b6, 0xc06beeb4, 0xc15b1726 ),
	NORM( 0x3f780b87, 0xbddc4211, 0xbe6417ae ),
	VERT( 0x428606fb, 0xc06beeb4, 0xc1929bf9 ),
	NORM( 0x3f6185d0, 0xbe0ec7a0, 0xbee78754 ),
	VERT( 0x428363ee, 0xc0585843, 0xc1a08513 ),
	NORM( 0x3f1059e9, 0xbe1b1d74, 0xbf4fd57b ),
	VERT( 0x426ecce2, 0xc06beeb4, 0xc1b084b6 ),
	NORM( 0x3e707af3, 0xbdd967d1, 0xbf775a23 ),
	VERT( 0x428c346d, 0x412e81d3, 0xc10436af ),
	NORM( 0x3f7d9b7b, 0xbd15597b, 0xbe06977a ),
	VERT( 0x428ad8cd, 0x412e81d3, 0xc153e6aa ),
	NORM( 0x3f7bf2a4, 0xbd3399eb, 0xbe2fd4db ),
	VERT( 0x428927b8, 0x412e81d3, 0xc18894c2 ),
	NORM( 0x3f7bca1a, 0xbd743f9c, 0xbe2e963a ),
	VERT( 0x42885aca, 0x412e81d3, 0xc1a5662f ),
	NORM( 0x3f684234, 0xbda9c79f, 0xbed31b67 ),
	VERT( 0x42864ae4, 0x412e81d3, 0xc1aead34 ),
	NORM( 0x3efa74cd, 0xbdc33ec5, 0xbf5df12b ),
	VERT( 0x4273a3a0, 0x412e81d3, 0xc1b7b716 ),
	NORM( 0x3e33e073, 0xbd899a43, 0xbf7b6e87 ),
	VERT( 0x428bb76d, 0x41b6839c, 0xc130eb14 ),
	NORM( 0x3f7ed322, 0x3d26766b, 0xbdb17820 ),
	VERT( 0x428b0909, 0x41b6839c, 0xc1752e9a ),
	NORM( 0x3f7c2a88, 0x3d682c5e, 0xbe26bdda ),
	VERT( 0x42898d1a, 0x41b67285, 0xc1942afa ),
	NORM( 0x3f789710, 0x3d6ba621, 0xbe6d633a ),
	VERT( 0x4287ddca, 0x41b6839c, 0xc1acea44 ),
	NORM( 0x3f4e9760, 0x3d66d25a, 0xbf167e02 ),
	VERT( 0x4285cde4, 0x41b6839c, 0xc1b24666 ),
	NORM( 0x3ec197fb, 0x3c97f4c6, 0xbf6cf267 ),
	VERT( 0x4272a99f, 0x41b6839c, 0xc1bb5047 ),
	NORM( 0x3e2a5f6e, 0xbbd134b6, 0xbf7c6d31 ),
	VERT( 0x428a406c, 0x41e4f22e, 0xc13c182d ),
	NORM( 0x3f78df8c, 0x3e3bb9f1, 0xbe156d85 ),
	VERT( 0x4288e4cc, 0x41e4f22e, 0xc17c2219 ),
	NORM( 0x3f77f0f0, 0x3e3d895a, 0xbe2a745b ),
	VERT( 0x4287cc67, 0x41e4f22e, 0xc19807b7 ),
	NORM( 0x3f73ccf2, 0x3e2c06d2, 0xbe825950 ),
	VERT( 0x4285b98c, 0x41e4f22e, 0xc1acea44 ),
	NORM( 0x3f500780, 0x3e201364, 0xbf0fbade ),
	VERT( 0x428456e3, 0x41e4f22e, 0xc1b24666 ),
	NORM( 0x3eecf0f6, 0x3db845e8, 0xbf61c403 ),
	VERT( 0x426fbb9d, 0x41e4f22e, 0xc1bb5047 ),
	NORM( 0x3e2a610d, 0x3d013b63, 0xbf7c4d63 ),
	VERT( 0x4252e85a, 0x41e4f22e, 0xc1c44838 ),
	NORM( 0x3e1d55fd, 0x3cf6f48d, 0xbf7cd7a8 ),
	VERT( 0x4286d56a, 0x420d9863, 0xc146a51e ),
	NORM( 0x3f74b314, 0x3e8586c0, 0xbe0a9c79 ),
	VERT( 0x4285dc7b, 0x420d9863, 0xc17ffed6 ),
	NORM( 0x3f760789, 0x3e7da408, 0xbdfb08ec ),
	VERT( 0x42850e7b, 0x420d9863, 0xc199f616 ),
	NORM( 0x3f68d3cb, 0x3e87eca0, 0xbea3cfdc ),
	VERT( 0x428235ca, 0x420d9863, 0xc1acea44 ),
	NORM( 0x3f483319, 0x3e71cec6, 0xbf13a769 ),
	VERT( 0x4280ebe1, 0x420d9863, 0xc1b24666 ),
	NORM( 0x3eeed556, 0x3e01e808, 0xbf6019ab ),
	VERT( 0x4268e598, 0x420d9863, 0xc1bb5047 ),
	NORM( 0x3e2a15b5, 0x3d48722e, 0xbf7c2206 ),
	VERT( 0x42827067, 0x4227bdae, 0xc14b8854 ),
	NORM( 0x3f71b62e, 0x3ea50bb4, 0xbd8ae690 ),
	VERT( 0x42820bf6, 0x4227bdae, 0xc17ffed6 ),
	NORM( 0x3f6c53a3, 0x3eab35fa, 0xbe42365a ),
	VERT( 0x427ecf30, 0x4227bdae, 0xc199f616 ),
	NORM( 0x3f69637d, 0x3e9f76de, 0xbe893cce ),
	VERT( 0x427d2d88, 0x4227bdae, 0xc1acea44 ),
	NORM( 0x3f4dddb2, 0x3e825aa2, 0xbf0980d7 ),
	VERT( 0x42790dbc, 0x4227bdae, 0xc1b24666 ),
	NORM( 0x3ebb831d, 0x3e07fe93, 0xbf6bc66c ),
	VERT( 0x427d10c8, 0x423c06f6, 0xc14df9ee ),
	NORM( 0x3f4d9576, 0x3f180381, 0xbd4c5a64 ),
	VERT( 0x427c47e7, 0x423c06f6, 0xc17ffed6 ),
	NORM( 0x3f4db122, 0x3f1411ec, 0xbe1056ac ),
	VERT( 0x4278ed88, 0x423c06f6, 0xc199f616 ),
	NORM( 0x3f4aed31, 0x3f0ff861, 0xbe70fa57 ),
	VERT( 0x42755d82, 0x423c06f6, 0xc1acea44 ),
	NORM( 0x3f2c2349, 0x3f019880, 0xbf0a3cb8 ),
	VERT( 0x42713db7, 0x423c06f6, 0xc1b24666 ),
	NORM( 0x3eb43384, 0x3eac4f87, 0xbf5f988f ),
	VERT( 0x425ea0a9, 0xc283ec5c, 0x408c268a ),
	NORM( 0x3f55ab66, 0xbf0b6011, 0xbdaacf48 ),
	VERT( 0x423f51ca, 0xc293cddc, 0xbf7da3e8 ),
	NORM( 0x3f372e08, 0xbf278e75, 0xbe79fdd9 ),
	VERT( 0x4263e235, 0xc25f9996, 0xc0eb4001 ),
	NORM( 0x3f39e933, 0xbecc9a4c, 0xbf0f3461 ),
	VERT( 0x42602c58, 0xc23ab643, 0xc15a0f18 ),
	NORM( 0x3f1951ca, 0xbe9e8ebc, 0xbf3d0f95 ),
	VERT( 0x4209ee5a, 0xc211eaef, 0xc1b005a1 ),
	NORM( 0x3e0b3881, 0xbdf213a1, 0xbf7bcfb5 ),
	VERT( 0x42729786, 0xc25f9996, 0xbeb7ab83 ),
	NORM( 0x3f6497f8, 0xbec7c7fb, 0xbe65e17b ),
	VERT( 0x42744266, 0xc25edcaf, 0x4102cc6f ),
	NORM( 0x3f6bebbb, 0xbec55d25, 0xbd3ccdff ),
	VERT( 0x427f3b8a, 0xc23ab643, 0x3ebb1b90 ),
	NORM( 0x3f721bc3, 0xbe889b94, 0xbe3de8a6 ),
	VERT( 0x4280f965, 0xc23ab643, 0x4110f48b ),
	NORM( 0x3f7510bb, 0xbe8f01b0, 0xbd991a14 ),
	VERT( 0x4274f2a0, 0xc23ab643, 0xc0e40d9f ),
	NORM( 0x3f56a697, 0xbe957a8d, 0xbeeb95ca ),
	VERT( 0x42855e68, 0xc211eaef, 0x410803ab ),
	NORM( 0x3f7b1618, 0xbe381658, 0xbd9aa45f ),
	VERT( 0x428402c8, 0xc211eaef, 0xbeb7ab83 ),
	NORM( 0x3f77aff3, 0xbe450f6c, 0xbe27cea4 ),
	VERT( 0x42800fdb, 0xc2120d1e, 0xc100e621 ),
	NORM( 0x3f64f0dc, 0xbe8115a7, 0xbebd46b8 ),
	VERT( 0x4272a3b7, 0xc211eaef, 0xc15e22d6 ),
	NORM( 0x3f327fe8, 0xbe9752ef, 0xbf272e13 ),
	VERT( 0x425f5030, 0xc211eaef, 0xc1862bb1 ),
	NORM( 0x3ee3ad1a, 0xbe7c89f7, 0xbf5c6ef5 ),
	VERT( 0x42884b02, 0xc1c0ab29, 0x40a4bcca ),
	NORM( 0x3f7cd394, 0xbe0a4157, 0xbda3f930 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1a510fd ),
	NORM( 0xbec3ef26, 0x3f6c835b, 0x00000000 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0xbec3ef26, 0x3f6c835b, 0x00000000 ),
	VERT( 0xc1c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0xbd276779, 0x3dca1323, 0xbf7e892d ),
	VERT( 0xc1c1aeb8, 0x4250dc97, 0xc1d44578 ),
	NORM( 0xbd5cc5e9, 0x3d8d5646, 0xbf7f0442 ),
	VERT( 0xc1c19cc3, 0x4280feec, 0xc1cbe6b7 ),
	NORM( 0xbd852c06, 0x3dad8d9d, 0xbf7e890e ),
	VERT( 0xc1c19cc3, 0x4280feec, 0xc1cbe6b7 ),
	NORM( 0xbd27677a, 0x3dca1324, 0xbf7e892d ),
	VERT( 0xc1c1cacc, 0x4204078d, 0xc1dba1de ),
	NORM( 0xbd442e36, 0x3ca285ca, 0xbf7fa7e0 ),
	VERT( 0xc1c1c574, 0x4212a6ba, 0xc1dac437 ),
	NORM( 0xbd849c92, 0x3d28e786, 0xbf7f3e9b ),
	VERT( 0xc1c1b693, 0x423b5fb1, 0xc1d6ebd0 ),
	NORM( 0xbd576fdf, 0x3d6a1275, 0xbf7f3a0a ),
	VERT( 0xbca3f90c, 0xbe34c64e, 0xc1dd0a62 ),
	NORM( 0x3989e17d, 0xbd421843, 0xbf7fb660 ),
	VERT( 0xc0c6e1a2, 0x3f27a9ff, 0xc1dd04b6 ),
	NORM( 0xbc4e0c37, 0xbd3ab94b, 0xbf7fb6ae ),
	VERT( 0xc1413bf3, 0x40485871, 0xc1dcf7f1 ),
	NORM( 0xbcc6e12b, 0xbd2744a0, 0xbf7fb600 ),
	VERT( 0xc182417f, 0x40cd6e87, 0xc1dcfcd6 ),
	NORM( 0xbd0d0893, 0xbd066265, 0xbf7fb5d6 ),
	VERT( 0xc188e363, 0x40e22f67, 0xc1dce2f4 ),
	NORM( 0xbd1fce65, 0xbce7f802, 0xbf7fb3cd ),
	VERT( 0xc1a1000b, 0x413129d6, 0xc1dce789 ),
	NORM( 0xbd2b53f9, 0xbcbd7c44, 0xbf7fb518 ),
	VERT( 0xc1a7ca15, 0x41433433, 0xc1dcc4c2 ),
	NORM( 0xbd361007, 0xbc96d48d, 0xbf7fb41c ),
	VERT( 0xc1b60cd8, 0x4184b384, 0xc1dcc7ed ),
	NORM( 0xbd3d61b9, 0xbc42d60e, 0xbf7fb546 ),
	VERT( 0xc1bb36f3, 0x4191698a, 0xc1dc9d2e ),
	NORM( 0xbd43aa1b, 0xbbce0e93, 0xbf7fb3e3 ),
	VERT( 0xc1bfde3f, 0x41b57295, 0xc1dc9e4a ),
	NORM( 0xbd43bc96, 0x3a04db7d, 0xbf7fb51e ),
	VERT( 0xc1c1d71b, 0x41c4b815, 0xc1dc6d80 ),
	NORM( 0xbd43ca90, 0x3bce3437, 0xbf7fb3c9 ),
	VERT( 0xc1c1d068, 0x41e95f41, 0xc1dc32b3 ),
	NORM( 0xbd3bfd6b, 0x3c5b4849, 0xbf7fb510 ),
	VERT( 0x3d6d0f8b, 0x42943894, 0xc1c93750 ),
	NORM( 0x3a11b86d, 0x3f7ffffd, 0x00000000 ),
	VERT( 0x3d6d0f8b, 0x42943894, 0xc1c93750 ),
	NORM( 0xb983622e, 0x3dda6b3f, 0xbf7e8a39 ),
	VERT( 0x3d6d0f8b, 0x42943894, 0xc1a510fd ),
	NORM( 0x3a11b86d, 0x3f7ffffd, 0x00000000 ),
	VERT( 0xc1562d25, 0x4290b85f, 0xc1c93750 ),
	NORM( 0xbce288d5, 0x3dd26e67, 0xbf7e8bf0 ),
	VERT( 0xc1562d25, 0x4290b85f, 0xc1c93750 ),
	NORM( 0xbe84299a, 0x3f775300, 0x00000000 ),
	VERT( 0xc1562d25, 0x4290b85f, 0xc1a510fd ),
	NORM( 0xbe84299a, 0x3f775300, 0x00000000 ),
	VERT( 0x3df04c33, 0x427507f0, 0xc1d44578 ),
	NORM( 0xb91b899b, 0x3dda6a8a, 0xbf7e8a3c ),
	VERT( 0x3df04c33, 0x427507f0, 0xc1d44578 ),
	NORM( 0x391e01ee, 0x3dac5348, 0xbf7f1796 ),
	VERT( 0xc1200ad4, 0x426f5837, 0xc1d44578 ),
	NORM( 0xbcbc65ce, 0x3da432aa, 0xbf7f1ba4 ),
	VERT( 0xc1200ad4, 0x426f5837, 0xc1d44578 ),
	NORM( 0xbce278cc, 0x3dd26fa3, 0xbf7e8bf0 ),
	VERT( 0xc19a5bd9, 0x425ff2e1, 0xc1d44578 ),
	NORM( 0xbd276779, 0x3dca1324, 0xbf7e892d ),
	VERT( 0xc19a5bd9, 0x425ff2e1, 0xc1d44578 ),
	NORM( 0xbd49cea0, 0x3d994643, 0xbf7ef863 ),
	VERT( 0xc1963025, 0x4225e3ca, 0xc1dba1de ),
	NORM( 0xbd37b817, 0x3d37ee06, 0xbf7f7bde ),
	VERT( 0xc1b7fc66, 0x420fddde, 0xc1dba1de ),
	NORM( 0xbd60f055, 0x3d02036c, 0xbf7f7c08 ),
	VERT( 0xc10cb436, 0x41610142, 0xc1e10f99 ),
	NORM( 0xbc99385f, 0xbc9454ce, 0xbf7fe9ca ),
	VERT( 0xc0c85cdd, 0x4141e92f, 0xc1e10f99 ),
	NORM( 0xbc54dc98, 0xbcb605ac, 0xbf7fea4a ),
	VERT( 0xc053f7a6, 0x412e5d44, 0xc1e10f99 ),
	NORM( 0xbbddaca7, 0xbccace06, 0xbf7fea6a ),
	VERT( 0x3aa8b53a, 0x4127b287, 0xc1e10f99 ),
	NORM( 0x391d016c, 0xbcd19bc6, 0xbf7fea8b ),
	VERT( 0xc0e736a1, 0x424921af, 0xc1db05da ),
	NORM( 0x3db42d37, 0xbf52ba94, 0xbf0f9aa2 ),
	VERT( 0xc0e736a1, 0x424921af, 0xc1db05da ),
	NORM( 0xbca5bcb9, 0x3da2ed31, 0xbf7f22d5 ),
	VERT( 0xc1305c7a, 0x4245db10, 0xc1da6da4 ),
	NORM( 0x3e793b66, 0xbf58458f, 0xbef3f826 ),
	VERT( 0xc1305c7a, 0x4245db10, 0xc1da6da4 ),
	NORM( 0xbd1ca1ed, 0x3d9f1761, 0xbf7f09e3 ),
	VERT( 0xc09e26e2, 0x42399ba6, 0xc1a510fd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc1207f37, 0x42399ba6, 0xc1a510fd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc169221c, 0x42399ba6, 0xc1a510fd ),
	NORM( 0x3e35aa2c, 0xbf7bf071, 0x00000000 ),
	VERT( 0xc09e26e2, 0x419b8e8a, 0xc1a510fd ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc1207f37, 0x419b8e8a, 0xc1a510fd ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc169221c, 0x419b8e8a, 0xc1a510fd ),
	NORM( 0x3e427246, 0x3f7b579c, 0x00000000 ),
	VERT( 0xc0aa7f3b, 0x4180c197, 0xc1e10f99 ),
	NORM( 0x00000000, 0x3f610b72, 0xbef40e6f ),
	VERT( 0xc0aa7f3b, 0x4180c197, 0xc1e10f99 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc12cd791, 0x418712ba, 0xc1e10f99 ),
	NORM( 0xbcfae317, 0xbc9ada8b, 0xbf7fd58b ),
	VERT( 0xc12cd791, 0x418712ba, 0xc1e10f99 ),
	NORM( 0x3d757f88, 0x3f6fbec5, 0xbeb0e4b5 ),
	VERT( 0xc0a8f03a, 0x42498ed7, 0xc1dafdad ),
	NORM( 0xbbe4a653, 0x3da4db4b, 0xbf7f29ba ),
	VERT( 0xc0a8f03a, 0x42498ed7, 0xc1dafdad ),
	NORM( 0x3ce8fc85, 0xbf4d2542, 0xbf18f70c ),
	VERT( 0x3c4f40a8, 0x42399ba6, 0xc1a510fd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x3c4f40a8, 0x419b8e8a, 0xc1a510fd ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x3b23ac56, 0x417a4b05, 0xc1e10f99 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x3b23ac56, 0x417a4b05, 0xc1e10f99 ),
	NORM( 0xbc9d003a, 0x3f5da538, 0xbf000141 ),
	VERT( 0x3d7e754b, 0x424b4bc5, 0xc1db677b ),
	NORM( 0x39193b6f, 0x3dae5f75, 0xbf7f1205 ),
	VERT( 0x3d7e535e, 0x424b4bc5, 0xc1db677b ),
	NORM( 0x3c78f05b, 0xbf49e76d, 0xbf1d56da ),
	VERT( 0xc184bf7e, 0x419a5243, 0xc1df4663 ),
	NORM( 0x3f6f7094, 0x3e8b63ec, 0xbe676b5f ),
	VERT( 0xc184bf7e, 0x419a5243, 0xc1df4663 ),
	NORM( 0xbd43aa42, 0xbbce0b42, 0xbf7fb3e3 ),
	VERT( 0xc1823900, 0x419602ad, 0xc1df5e5c ),
	NORM( 0xbd43a8fe, 0xbbce27e6, 0xbf7fb3e3 ),
	VERT( 0xc1823900, 0x419602ad, 0xc1df5e5c ),
	NORM( 0x3f234ae8, 0x3f3b0fb9, 0xbe7924eb ),
	VERT( 0xc17288ce, 0x419d721a, 0xc1a510fd ),
	NORM( 0x3f26b515, 0x3f4247a4, 0x00000000 ),
	VERT( 0xc1774674, 0x41a17308, 0xc1a510fd ),
	NORM( 0x3f76e8f8, 0x3e87398b, 0x00000000 ),
	VERT( 0xc184455a, 0x421ccf21, 0xc1dcd9c2 ),
	NORM( 0x3f7b2e88, 0x329dd404, 0xbe45bc78 ),
	VERT( 0xc184455a, 0x421ccf21, 0xc1dcd9c2 ),
	NORM( 0xbd135592, 0x3d011a83, 0xbf7fb501 ),
	VERT( 0xc1849747, 0x4200e59a, 0xc1de7a0c ),
	NORM( 0x3f7b2e88, 0x329dd404, 0xbe45bc77 ),
	VERT( 0xc1849747, 0x4200e59a, 0xc1de7a0c ),
	NORM( 0xbd2dc4a7, 0x3cb4d025, 0xbf7fb505 ),
	VERT( 0xc18407f8, 0x422cdb1f, 0xc1dba1de ),
	NORM( 0x3f7b2e88, 0x329dd404, 0xbe45bc79 ),
	VERT( 0xc18407f8, 0x422cdb1f, 0xc1dba1de ),
	NORM( 0xbd317b4e, 0x3d54dad2, 0xbf7f69d1 ),
	VERT( 0xc184bcf2, 0x41d8f5a4, 0xc1df396e ),
	NORM( 0x3f7b2e88, 0x329dd403, 0xbe45bc77 ),
	VERT( 0xc184bcf2, 0x41d8f5a4, 0xc1df396e ),
	NORM( 0xbd3e36cb, 0x3c3a2d49, 0xbf7fb50f ),
	VERT( 0xc184c811, 0x41b5983e, 0xc1df71f0 ),
	NORM( 0xbd43bb4c, 0x37475777, 0xbf7fb522 ),
	VERT( 0xc184c811, 0x41b5983e, 0xc1df71f0 ),
	NORM( 0x3f7b2e88, 0x329dd404, 0xbe45bc78 ),
	VERT( 0xc183bd7b, 0x423ab0f6, 0xc1da2760 ),
	NORM( 0x3f6f7079, 0xbe871618, 0xbe716b7e ),
	VERT( 0xc183bd7b, 0x423ab0f6, 0xc1da2760 ),
	NORM( 0xbd4fa7e5, 0x3d72e6bc, 0xbf7f383d ),
	VERT( 0xc1774674, 0x4236a967, 0xc1a510fd ),
	NORM( 0x3f7747d0, 0xbe847d3e, 0x00000000 ),
	VERT( 0xc1812903, 0x423ce46f, 0xc1da011e ),
	NORM( 0x3f2a6efe, 0xbf322160, 0xbe89f4c5 ),
	VERT( 0xc1812903, 0x423ce46f, 0xc1da011e ),
	NORM( 0xbd5020d0, 0x3d8c57d2, 0xbf7f1115 ),
	VERT( 0xc1727be9, 0x4238bca4, 0xc1a510fd ),
	NORM( 0x3f254fbe, 0xbf43780d, 0x00000000 ),
	VERT( 0xc168f701, 0x4240880e, 0xc1da233c ),
	NORM( 0xbd2b871e, 0x3d90c797, 0xbf7f2267 ),
	VERT( 0xc168f701, 0x4240880e, 0xc1da233c ),
	NORM( 0x3ec036b1, 0xbf5b8da5, 0xbeb3f422 ),
	VERT( 0xc17c2d38, 0x41940733, 0xc1df8dc7 ),
	NORM( 0x3ec21f23, 0x3f65e8b7, 0xbe644813 ),
	VERT( 0xc17c2d38, 0x41940733, 0xc1df8dc7 ),
	NORM( 0xbd38f812, 0xbc8088c7, 0xbf7fb511 ),
	VERT( 0xc168f0f8, 0x418f7e82, 0xc1dfe5b0 ),
	NORM( 0xbd34b45c, 0xbc98e2db, 0xbf7fb4c4 ),
	VERT( 0xc168f0f8, 0x418f7e82, 0xc1dfe5b0 ),
	NORM( 0x3e761394, 0x3f70e7ce, 0xbe73d58d ),
	VERT( 0xc169221c, 0x419b8e8a, 0xc1b0fbc8 ),
	NORM( 0x3e660b9e, 0x3f778178, 0xbdf91369 ),
	VERT( 0xc17288ce, 0x419d721a, 0xc1b0fbc8 ),
	NORM( 0x3f25679d, 0x3f40b853, 0xbe00c3ac ),
	VERT( 0xc169221c, 0x42399ba6, 0xc1b0fbc8 ),
	NORM( 0x3e9426d0, 0xbf70c475, 0xbe366ba8 ),
	VERT( 0xc1727be9, 0x4238bca4, 0xc1b0fbc8 ),
	NORM( 0x3f2948b3, 0xbf3c988a, 0xbe10ce2f ),
	VERT( 0xc1774674, 0x4236a967, 0xc1b0fbc8 ),
	NORM( 0x3f7649ec, 0xbe7b9374, 0xbdf2f0cc ),
	VERT( 0xc1774674, 0x41a17308, 0xc1b0fbc8 ),
	NORM( 0x3f75d816, 0x3e8235e4, 0xbdea5514 ),
	VERT( 0x3c4f40a8, 0x419b8e8a, 0xc1b0fbc8 ),
	NORM( 0xbc22d420, 0x3f7743f0, 0xbe848128 ),
	VERT( 0x3c4f40a8, 0x42399ba6, 0xc1b0fbc8 ),
	NORM( 0x3c04c4f5, 0xbf721adf, 0xbea655ec ),
	VERT( 0xc09e26e2, 0x419b8e8a, 0xc1b0fbc8 ),
	NORM( 0x00000000, 0x3f781a0e, 0xbe7c659b ),
	VERT( 0xc09e26e2, 0x42399ba6, 0xc1b0fbc8 ),
	NORM( 0x3c083124, 0xbf7294ed, 0xbea387db ),
	VERT( 0xc1207f37, 0x419b8e8a, 0xc1b0fbc8 ),
	NORM( 0x3ce39b41, 0x3f7bbfd8, 0xbe37a301 ),
	VERT( 0xc1207f37, 0x42399ba6, 0xc1b0fbc8 ),
	NORM( 0x3dbc6cf8, 0xbf759835, 0xbe889859 ),
	VERT( 0xc1c1d9ee, 0x4287940d, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc156968e, 0x4290789f, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3d9b2700, 0x42945323, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3d9b2700, 0x42393138, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1c1d9ee, 0x42393138, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc177c9c3, 0x42393138, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc177c9c3, 0x419cf4aa, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1babcab, 0x418fe9b0, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1c1d9ee, 0x41c41597, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3d9b2701, 0x419cf4aa, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x3d9b2701, 0xbe770fb2, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0c00879, 0x3effe5f8, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc13edfb1, 0x4037c246, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc188efdb, 0x40d731a0, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1a8f386, 0x413e98d6, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4177c9c3, 0x419cf4aa, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40c00879, 0x3effe5f8, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x413edfb1, 0x4037c246, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4188efdb, 0x40d731a0, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41a8f386, 0x413e98d6, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41babcab, 0x418fe9b0, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41c1d9ee, 0x42393138, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4177c9c3, 0x42393138, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41c1d9ee, 0x41c41597, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41c1d9ee, 0x4287940d, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4156968e, 0x4290789f, 0xc1a4d080 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x409e26e2, 0x42399ba6, 0xc1b0fbc8 ),
	NORM( 0x00000000, 0xbf721fd9, 0xbea6462e ),
	VERT( 0x41207f37, 0x42399ba6, 0xc1b0fbc8 ),
	NORM( 0xbd5a9370, 0xbf783ad3, 0xbe7456d9 ),
	VERT( 0x41207f37, 0x42399ba6, 0xc1a510fd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x409e26e2, 0x42399ba6, 0xc1a510fd ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x40a8f03a, 0x42498ed7, 0xc1dafdad ),
	NORM( 0xbc5910c5, 0xbf4b89d0, 0xbf1b3b1f ),
	VERT( 0x40e736a1, 0x424921af, 0xc1db05da ),
	NORM( 0xbdb42d37, 0xbf52ba94, 0xbf0f9aa2 ),
	VERT( 0x41305c7a, 0x4245db10, 0xc1da6da4 ),
	NORM( 0xbe26434e, 0xbf643b27, 0xbed881e9 ),
	VERT( 0x41207f37, 0x419b8e8a, 0xc1b0fbc8 ),
	NORM( 0xbd9c5975, 0x3f7ab591, 0xbe3fc9ca ),
	VERT( 0x4169221c, 0x419b8e8a, 0xc1b0fbc8 ),
	NORM( 0xbe8494a2, 0x3f749c77, 0xbe109b95 ),
	VERT( 0x4168f0f8, 0x418f7e82, 0xc1dfe5b0 ),
	NORM( 0xbe9f3bcd, 0x3f6894a3, 0xbe8ee063 ),
	VERT( 0x412cd791, 0x418712ba, 0xc1e10f99 ),
	NORM( 0xbe212f39, 0x3f6af29e, 0xbebaac89 ),
	VERT( 0x417288ce, 0x419d721a, 0xc1b0fbc8 ),
	NORM( 0xbf25e0ac, 0x3f405d90, 0xbdff03cc ),
	VERT( 0x41823900, 0x419602ad, 0xc1df5e5c ),
	NORM( 0xbf243a4d, 0x3f3a72e1, 0xbe76a528 ),
	VERT( 0x417c2d38, 0x41940733, 0xc1df8dc7 ),
	NORM( 0xbec68921, 0x3f653849, 0xbe6025f3 ),
	VERT( 0x4169221c, 0x419b8e8a, 0xc1a510fd ),
	NORM( 0xbe427246, 0x3f7b579c, 0x00000000 ),
	VERT( 0x417288ce, 0x419d721a, 0xc1a510fd ),
	NORM( 0xbf26b515, 0x3f4247a4, 0x00000000 ),
	VERT( 0x4169221c, 0x42399ba6, 0xc1b0fbc8 ),
	NORM( 0xbe5db270, 0xbf76d6a5, 0xbe1cb669 ),
	VERT( 0x41727be9, 0x4238bca4, 0xc1b0fbc8 ),
	NORM( 0xbf234de3, 0xbf418474, 0xbe16aa35 ),
	VERT( 0x41727be9, 0x4238bca4, 0xc1a510fd ),
	NORM( 0xbf254fbe, 0xbf43780d, 0x00000000 ),
	VERT( 0x4169221c, 0x42399ba6, 0xc1a510fd ),
	NORM( 0xbe35aa2c, 0xbf7bf071, 0x00000000 ),
	VERT( 0x4168f701, 0x4240880e, 0xc1da233c ),
	NORM( 0xbe726bb6, 0xbf6cb919, 0xbe98a56a ),
	VERT( 0x41812903, 0x423ce46f, 0xc1da011e ),
	NORM( 0xbf1efdd1, 0xbf3b26b7, 0xbe90aaba ),
	VERT( 0x41774674, 0x4236a967, 0xc1b0fbc8 ),
	NORM( 0xbf764c48, 0xbe7b6e64, 0xbdf2f160 ),
	VERT( 0x41774674, 0x4236a967, 0xc1a510fd ),
	NORM( 0xbf7747d0, 0xbe847d3e, 0x00000000 ),
	VERT( 0x4183bd7b, 0x423ab0f6, 0xc1da2760 ),
	NORM( 0xbf6f7667, 0xbe86ecbb, 0xbe7169ef ),
	VERT( 0x41774674, 0x41a17308, 0xc1b0fbc8 ),
	NORM( 0xbf75d815, 0x3e8235ec, 0xbdea5512 ),
	VERT( 0x41774674, 0x41a17308, 0xc1a510fd ),
	NORM( 0xbf76e8f8, 0x3e87398b, 0x00000000 ),
	VERT( 0x418407f8, 0x422cdb1f, 0xc1dba1de ),
	NORM( 0xbf7b2e88, 0x349f45cf, 0xbe45bc72 ),
	VERT( 0x4184455a, 0x421ccf21, 0xc1dcd9c2 ),
	NORM( 0xbf7b2e88, 0x349f45ce, 0xbe45bc72 ),
	VERT( 0x41849747, 0x4200e59a, 0xc1de7a0c ),
	NORM( 0xbf7b2e88, 0x349f45ce, 0xbe45bc72 ),
	VERT( 0x4184bcf2, 0x41d8f5a4, 0xc1df396e ),
	NORM( 0xbf7b2e88, 0x349f45ce, 0xbe45bc71 ),
	VERT( 0x4184c811, 0x41b5983e, 0xc1df71f0 ),
	NORM( 0xbf7b2e88, 0x349f45ce, 0xbe45bc73 ),
	VERT( 0x4184bf7e, 0x419a5243, 0xc1df4663 ),
	NORM( 0xbf6f7092, 0x3e8b63fb, 0xbe676b5e ),
	VERT( 0x409e26e2, 0x419b8e8a, 0xc1b0fbc8 ),
	NORM( 0xbcde86a2, 0x3f791c11, 0xbe6a5589 ),
	VERT( 0x40aa7f3b, 0x4180c197, 0xc1e10f99 ),
	NORM( 0xbd5ae28c, 0x3f64f864, 0xbee3585f ),
	VERT( 0x409e26e2, 0x419b8e8a, 0xc1a510fd ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x41207f37, 0x419b8e8a, 0xc1a510fd ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x417c2d38, 0x41940733, 0xc1df8dc7 ),
	NORM( 0x3d38f812, 0xbc8088c7, 0xbf7fb511 ),
	VERT( 0x41b60cd8, 0x4184b384, 0xc1dcc7ed ),
	NORM( 0x3d3d61b9, 0xbc42d60e, 0xbf7fb546 ),
	VERT( 0x41a7ca15, 0x41433433, 0xc1dcc4c2 ),
	NORM( 0x3d361007, 0xbc96d48d, 0xbf7fb41c ),
	VERT( 0x41a1000b, 0x413129d6, 0xc1dce789 ),
	NORM( 0x3d2af6d9, 0xbcbbf1f5, 0xbf7fb59f ),
	VERT( 0x412cd791, 0x418712ba, 0xc1e10f99 ),
	NORM( 0x3cfa1e10, 0xbc993992, 0xbf7fd5fa ),
	VERT( 0x4168f0f8, 0x418f7e82, 0xc1dfe5b0 ),
	NORM( 0x3d34b45c, 0xbc98e2db, 0xbf7fb4c4 ),
	VERT( 0x41200ad4, 0x426f5837, 0xc1d44578 ),
	NORM( 0x3cbd6469, 0x3da420da, 0xbf7f1ba2 ),
	VERT( 0x41200ad4, 0x426f5837, 0xc1d44578 ),
	NORM( 0x3ce0f149, 0x3dd20bac, 0xbf7e8d91 ),
	VERT( 0x40e736a1, 0x424921af, 0xc1db05da ),
	NORM( 0x3ca5f2ff, 0x3da2cbf5, 0xbf7f2321 ),
	VERT( 0x40a8f03a, 0x42498ed7, 0xc1dafdad ),
	NORM( 0x3beb366e, 0x3da4be4c, 0xbf7f29ee ),
	VERT( 0x40aa7f3b, 0x4180c197, 0xc1e10f99 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x410cb436, 0x41610142, 0xc1e10f99 ),
	NORM( 0x3c98ca87, 0xbc936c58, 0xbf7fe9fc ),
	VERT( 0x40c85cdd, 0x4141e92f, 0xc1e10f99 ),
	NORM( 0x3c51b225, 0xbcb76632, 0xbf7fea35 ),
	VERT( 0x4053f7a6, 0x412e5d44, 0xc1e10f99 ),
	NORM( 0x3bdc6ba2, 0xbccc5af1, 0xbf7fea1f ),
	VERT( 0x419a5bd9, 0x425ff2e1, 0xc1d44578 ),
	NORM( 0x3d49cea0, 0x3d994643, 0xbf7ef863 ),
	VERT( 0x419a5bd9, 0x425ff2e1, 0xc1d44578 ),
	NORM( 0x3d276778, 0x3dca131d, 0xbf7e892d ),
	VERT( 0x4168f701, 0x4240880e, 0xc1da233c ),
	NORM( 0x3d2b871e, 0x3d90c797, 0xbf7f2267 ),
	VERT( 0x41305c7a, 0x4245db10, 0xc1da6da4 ),
	NORM( 0x3d1ca1ed, 0x3d9f1761, 0xbf7f09e3 ),
	VERT( 0x41c1aeb8, 0x4250dc97, 0xc1d44578 ),
	NORM( 0x3d5cc5e9, 0x3d8d5646, 0xbf7f0442 ),
	VERT( 0x41c1b693, 0x423b5fb1, 0xc1d6ebd0 ),
	NORM( 0x3d57701f, 0x3d6a127c, 0xbf7f3a0a ),
	VERT( 0x41963025, 0x4225e3ca, 0xc1dba1de ),
	NORM( 0x3d37b868, 0x3d37ee1d, 0xbf7f7bde ),
	VERT( 0x418407f8, 0x422cdb1f, 0xc1dba1de ),
	NORM( 0x3d317b4e, 0x3d54dad2, 0xbf7f69d1 ),
	VERT( 0x4183bd7b, 0x423ab0f6, 0xc1da2760 ),
	NORM( 0x3d4fa7e5, 0x3d72e6bc, 0xbf7f383d ),
	VERT( 0x41812903, 0x423ce46f, 0xc1da011e ),
	NORM( 0x3d5020d0, 0x3d8c57d2, 0xbf7f1115 ),
	VERT( 0x4184c811, 0x41b5983e, 0xc1df71f0 ),
	NORM( 0x3d43bb6d, 0x374811ab, 0xbf7fb522 ),
	VERT( 0x41bfde3f, 0x41b57295, 0xc1dc9e4a ),
	NORM( 0x3d43bcb8, 0x3a04dea5, 0xbf7fb51e ),
	VERT( 0x41bb36f3, 0x4191698a, 0xc1dc9d2e ),
	NORM( 0x3d43aa1b, 0xbbce0e93, 0xbf7fb3e3 ),
	VERT( 0x4184bf7e, 0x419a5243, 0xc1df4663 ),
	NORM( 0x3d43aa42, 0xbbce0b42, 0xbf7fb3e3 ),
	VERT( 0x41823900, 0x419602ad, 0xc1df5e5c ),
	NORM( 0x3d43a8fe, 0xbbce27e6, 0xbf7fb3e3 ),
	VERT( 0x41b7fc66, 0x420fddde, 0xc1dba1de ),
	NORM( 0x3d60f0b7, 0x3d020371, 0xbf7f7c07 ),
	VERT( 0x41849747, 0x4200e59a, 0xc1de7a0c ),
	NORM( 0x3d2dc4ea, 0x3cb4cfee, 0xbf7fb505 ),
	VERT( 0x4184455a, 0x421ccf21, 0xc1dcd9c2 ),
	NORM( 0x3d1355be, 0x3d011ab3, 0xbf7fb501 ),
	VERT( 0x4184bcf2, 0x41d8f5a4, 0xc1df396e ),
	NORM( 0x3d3e370e, 0x3c3a2d05, 0xbf7fb50f ),
	VERT( 0x41c1cacc, 0x4204078d, 0xc1dba1de ),
	NORM( 0x3d442e75, 0x3ca28549, 0xbf7fa7e0 ),
	VERT( 0x41c1d068, 0x41e95f41, 0xc1dc32b3 ),
	NORM( 0x3d3bfdaf, 0x3c5b47c3, 0xbf7fb510 ),
	VERT( 0x41c1d71b, 0x41c4b815, 0xc1dc6d80 ),
	NORM( 0x3d43cacf, 0x3bce34f1, 0xbf7fb3c9 ),
	VERT( 0x41562d25, 0x4290b85f, 0xc1c93750 ),
	NORM( 0x3e846ffd, 0x3f774996, 0x00000000 ),
	VERT( 0x41562d25, 0x4290b85f, 0xc1c93750 ),
	NORM( 0x3ce0dba7, 0x3dd20d3c, 0xbf7e8d90 ),
	VERT( 0x41562d25, 0x4290b85f, 0xc1a510fd ),
	NORM( 0x3e846ffd, 0x3f774996, 0x00000000 ),
	VERT( 0x4188e363, 0x40e22f67, 0xc1dce2f4 ),
	NORM( 0x3d1f092c, 0xbce4b4b5, 0xbf7fb505 ),
	VERT( 0x4182417f, 0x40cd6e87, 0xc1dcfcd6 ),
	NORM( 0x3d0c9ef8, 0xbd0582cb, 0xbf7fb686 ),
	VERT( 0x41413bf3, 0x40485871, 0xc1dcf7f1 ),
	NORM( 0x3cc42051, 0xbd28773f, 0xbf7fb5bf ),
	VERT( 0x40c6e1a2, 0x3f27a9ff, 0xc1dd04b6 ),
	NORM( 0x3c4cc0b6, 0xbd3c2c10, 0xbf7fb5af ),
	VERT( 0x41c1c574, 0x4212a6ba, 0xc1dac437 ),
	NORM( 0x3d849ce5, 0x3d28e797, 0xbf7f3e9a ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0x3ec3ef26, 0x3f6c835b, 0x00000000 ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1c93750 ),
	NORM( 0x3d276778, 0x3dca131c, 0xbf7e892d ),
	VERT( 0x41c19cc3, 0x4280feec, 0xc1cbe6b7 ),
	NORM( 0x3d276778, 0x3dca131c, 0xbf7e892d ),
	VERT( 0x41c19cc3, 0x4280feec, 0xc1cbe6b7 ),
	NORM( 0x3d852c06, 0x3dad8d9d, 0xbf7e890e ),
	VERT( 0x41c197d1, 0x4287c327, 0xc1a510fd ),
	NORM( 0x3ec3ef26, 0x3f6c835b, 0x00000000 ),
	VERT( 0xc14adcb4, 0x41cdd436, 0x4211091b ),
	NORM( 0x3a8cb489, 0xbe4ca88f, 0x3f7ad5b7 ),
	VERT( 0xc194e35f, 0x4246ad1a, 0x41a5cb47 ),
	NORM( 0x3ec95115, 0x3a1cbd4b, 0xbf6b6159 ),
	VERT( 0xc194e35f, 0x4246ad1a, 0x41a5cb47 ),
	NORM( 0xbdef22f4, 0x3f760155, 0x3e806f71 ),
	VERT( 0xc14adcb3, 0x4235ba2a, 0x421d78f6 ),
	NORM( 0x3b7661fe, 0xbe20635a, 0x3f7cd6a7 ),
	VERT( 0xc019d412, 0x42034536, 0x42159af4 ),
	NORM( 0xb894e5cd, 0xbe1f7155, 0x3f7ce0b0 ),
	VERT( 0xc019d412, 0x42034536, 0x42159af4 ),
	NORM( 0x3f5fd06d, 0x3d65e77f, 0x3ef6dfde ),
	VERT( 0xc019d412, 0x42371bd8, 0x421d78f6 ),
	NORM( 0x3ba5442e, 0xbe19a532, 0x3f7d193e ),
	VERT( 0xc019d412, 0x42371bd8, 0x421d78f6 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc019d412, 0x423a725d, 0x420f2eae ),
	NORM( 0x3f719c17, 0x3d1c8d2e, 0x3ea81b71 ),
	VERT( 0xbfc24d55, 0x41e11142, 0x4212977e ),
	NORM( 0x3eab7072, 0x3dfa080e, 0x3f6f305d ),
	VERT( 0xbfc24d55, 0x41e11142, 0x4212977e ),
	NORM( 0x3cc3109b, 0xbe15206b, 0x3f7d3288 ),
	VERT( 0xbfc24d55, 0x423c182d, 0x4208a076 ),
	NORM( 0xbd034f96, 0x3f78d9a1, 0x3e6e1159 ),
	VERT( 0xbfc24d55, 0x423c182d, 0x4208a076 ),
	NORM( 0x3f0be2fa, 0x3dd89ee2, 0x3f54af22 ),
	VERT( 0x39c23ab2, 0x423c4867, 0x42089b65 ),
	NORM( 0x3c024586, 0x3f796315, 0x3e6719b1 ),
	VERT( 0x39c23ab2, 0x423c4867, 0x42089b65 ),
	NORM( 0x3df8a9b6, 0x3dfa9a91, 0x3f7c2af1 ),
	VERT( 0xc27c13bd, 0x423c7624, 0xc14f7c0e ),
	NORM( 0xbf283bf2, 0x3f40aed7, 0x3d252682 ),
	VERT( 0xc27c13bd, 0x4239b4ab, 0xc0f8d986 ),
	NORM( 0xbf07703b, 0x3f0a30d6, 0x3f279e2d ),
	VERT( 0xc2582a22, 0xc2282ac5, 0x41a7023c ),
	NORM( 0xbeb4e01c, 0xbe7d89a0, 0x3f66f40d ),
	VERT( 0xc283ac58, 0xc2201076, 0x41126d08 ),
	NORM( 0xbf58350f, 0xbe7e37ed, 0x3ef2e8c9 ),
	VERT( 0xc2301b2d, 0x424c0312, 0xc0f8d986 ),
	NORM( 0xbe8f3952, 0x3ee44869, 0x3f59ab12 ),
	VERT( 0xc2301b2d, 0x424c0312, 0xc0f8d986 ),
	NORM( 0xbe258ddc, 0x3f734ffc, 0x3e87f8a2 ),
	VERT( 0xc2301b2d, 0x424c0312, 0xc0f8d986 ),
	NORM( 0xbe252df5, 0x3f747194, 0x3e7f700e ),
	VERT( 0xc245b26a, 0xc2281943, 0x41a736b9 ),
	NORM( 0x3f10a556, 0xbe1ee167, 0x3f4f7371 ),
	VERT( 0xc2301b2d, 0x424ec48a, 0xc1549882 ),
	NORM( 0xbe6f90d4, 0x3f788ca6, 0x3d51f74a ),
	VERT( 0xc2301b2d, 0x424ec48a, 0xc1549882 ),
	NORM( 0xbe3aa8e7, 0x3f7bb5f4, 0xba8dc9bf ),
	VERT( 0xc2301b2d, 0x41ef721f, 0xc0d98b89 ),
	NORM( 0xbe2a78bc, 0x3e456e15, 0x3f778e1e ),
	VERT( 0xc289c2c7, 0x41ef721f, 0xc0d98b89 ),
	NORM( 0xbf3bef0f, 0x3e837a89, 0x3f20eb80 ),
	VERT( 0xc289c2c7, 0x41ef721f, 0xc1457608 ),
	NORM( 0xbf7aadd5, 0x3e4f731b, 0x3c20d1e3 ),
	VERT( 0xc22034c6, 0x41873367, 0xc002c410 ),
	NORM( 0x3d423d63, 0x3e2f94e7, 0x3f7bea92 ),
	VERT( 0xc28b27f8, 0x41902acd, 0xc1246be6 ),
	NORM( 0xbf7f86a1, 0x3d792b2c, 0x00000000 ),
	VERT( 0xc2318376, 0x4140f103, 0x3fb78dfc ),
	NORM( 0x3f123374, 0x3ed19562, 0x3f362757 ),
	VERT( 0xc28b5f5c, 0x4182913e, 0xc002bf70 ),
	NORM( 0xbf37a917, 0x3ef8b2a9, 0x3effac42 ),
	VERT( 0xc28bc4ac, 0x4153b791, 0xc1165f98 ),
	NORM( 0xbf7ff846, 0x3c7b8ff8, 0x00000000 ),
	VERT( 0xc24560f4, 0x40ad93e5, 0x416275ca ),
	NORM( 0x3f1de7fc, 0x3e0a9a23, 0x3f467f2e ),
	VERT( 0xc2715045, 0x40ad93e5, 0x416275ca ),
	NORM( 0xbeead652, 0x3e680d41, 0x3f5bf653 ),
	VERT( 0xc28bc4ac, 0x40ad93e5, 0xc0dabebc ),
	NORM( 0xbf7f8baf, 0xbc8dbac0, 0x3d69681d ),
	VERT( 0xc24582ed, 0xc16c5921, 0x41b412c9 ),
	NORM( 0x3f1613b5, 0x3df769bf, 0x3f4d13a1 ),
	VERT( 0xc26aaea0, 0xc16c683f, 0x41b41704 ),
	NORM( 0xbebacec5, 0x3de78254, 0x3f6c96be ),
	VERT( 0xc28997f7, 0xc16c8e03, 0x3fe3c1b9 ),
	NORM( 0xbf793922, 0xbd3a2484, 0x3e656165 ),
	VERT( 0xc244ad17, 0xc26bc783, 0x417921c9 ),
	NORM( 0x3f11d48e, 0xbe95e5c5, 0x3f449a06 ),
	VERT( 0xc24bdcf4, 0xc26bad79, 0x417975c5 ),
	NORM( 0xbea6dc35, 0xbec260b2, 0x3f5da6fe ),
	VERT( 0xc26d6ca6, 0xc26b9b70, 0x40d28ec6 ),
	NORM( 0xbf4c891b, 0xbedc42dd, 0x3ed72691 ),
	VERT( 0xc230e473, 0xc2393a0f, 0x4086c5f2 ),
	NORM( 0x3f691598, 0xbdb3b924, 0x3ecee917 ),
	VERT( 0xc231ae7c, 0x40ad93e5, 0x40885ff7 ),
	NORM( 0x3f635fa3, 0x3e40fa5a, 0x3ed69119 ),
	VERT( 0xc231ae7c, 0xc16cc57a, 0x40898fd7 ),
	NORM( 0x3f68b602, 0x3c8bd215, 0x3ed530b1 ),
	VERT( 0xc231ae7c, 0x411e7d4b, 0x3fd59d2d ),
	NORM( 0x3f57ab55, 0x3d70bb97, 0x3f091996 ),
	VERT( 0xc2201867, 0x411e05c9, 0xc02a1a48 ),
	NORM( 0x3ea58bd9, 0xbd4705a1, 0x3f71edf4 ),
	VERT( 0xc1be652c, 0x41ef721f, 0xc0d98b89 ),
	NORM( 0x3f7e8b21, 0x3ca08d12, 0x3dd66e5b ),
	VERT( 0xc1bdaadb, 0x4259bddf, 0xc0f8d986 ),
	NORM( 0xbe252df5, 0x3f747194, 0x3e7f700f ),
	VERT( 0xc1bdaadb, 0x4259bddf, 0xc0f8d986 ),
	NORM( 0xbe34d910, 0x3f77b32f, 0x3e38e4f0 ),
	VERT( 0xc1bdaadb, 0x4259bddf, 0xc0f8d986 ),
	NORM( 0x3f7fc87f, 0x3725230c, 0xbd288aad ),
	VERT( 0xc1bec926, 0x425c7f58, 0xc1c17b1f ),
	NORM( 0xbe3aa8e6, 0x3f7bb5f4, 0xba8dc9bf ),
	VERT( 0xc21fa08a, 0xc23869f6, 0xc02a1a48 ),
	NORM( 0x3ef0147e, 0xbd18333b, 0x3f61e94a ),
	VERT( 0xc2202f8f, 0xc16ca72c, 0xc02a1a48 ),
	NORM( 0x3eefa1d6, 0xbbea369f, 0x3f62390a ),
	VERT( 0xc2202f8f, 0xbf0d7080, 0xc02a1a48 ),
	NORM( 0x3edac6e7, 0x3d3ed367, 0x3f672511 ),
	VERT( 0xc1bd4963, 0x3fff83c2, 0xc0257308 ),
	NORM( 0x3e9a9115, 0x3f13aaaf, 0x3f42504f ),
	VERT( 0xc1bd4963, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0x3f7003f1, 0x3e69071a, 0x3e86ae54 ),
	VERT( 0xc234eadd, 0xc26ba141, 0x4062f3f0 ),
	NORM( 0x3f6f3c60, 0xbe29ecd8, 0x3ea136fd ),
	VERT( 0xc22c5835, 0xc26bad8b, 0xc0cc4a15 ),
	NORM( 0x3f746044, 0xbe988709, 0xbae0fcb6 ),
	VERT( 0xbde6978e, 0xc22c61c1, 0xc103080c ),
	NORM( 0xbaffb39b, 0xbf7fffe0, 0xb945ae9a ),
	VERT( 0xc1bd6b03, 0xc2323cdc, 0xc103080c ),
	NORM( 0x3e2a365b, 0xbf7c7046, 0xb984deb2 ),
	VERT( 0xc21fa226, 0xc242539c, 0xc103080c ),
	NORM( 0x3f74b93e, 0xbe9648d5, 0xb848a667 ),
	VERT( 0xc21fa226, 0xc242539c, 0xc103080c ),
	NORM( 0x3e7645c5, 0xbf787c74, 0xb8ee9938 ),
	VERT( 0xc1bd6b0e, 0xc2323d38, 0xc0a7ab69 ),
	NORM( 0x3e294887, 0xbf7c7943, 0x3bb4a5d5 ),
	VERT( 0xc21fa9cf, 0xc24254a7, 0xc0a7ab69 ),
	NORM( 0x3e740d35, 0xbf789dc5, 0x3beaf702 ),
	VERT( 0xc21fa9cf, 0xc24254a7, 0xc0a7ab69 ),
	NORM( 0x3f756c15, 0xbe908bfc, 0x3d0f8ecc ),
	VERT( 0xc22c4c5c, 0xc26b8749, 0xc08d75a5 ),
	NORM( 0x3f756120, 0xbe8f7147, 0x3d57447b ),
	VERT( 0xc22c4c5c, 0xc26b8749, 0xc08d75a5 ),
	NORM( 0x3f744d98, 0xbe98fe39, 0xbb073716 ),
	VERT( 0xc1bec926, 0x425d243a, 0xc149058f ),
	NORM( 0xbe29a1fa, 0x3f79ccec, 0x3e12465a ),
	VERT( 0xc1bec926, 0x425d243a, 0xc149058f ),
	NORM( 0xbe3aa8e7, 0x3f7bb5f4, 0xba8dc9c0 ),
	VERT( 0xc1bd4964, 0x425d243a, 0xc149058f ),
	NORM( 0x3f7fffe0, 0x3b0028de, 0x393478c3 ),
	VERT( 0xc1bd4963, 0x40e48b70, 0xc131bc41 ),
	NORM( 0x3f7fffe0, 0x3b0028dd, 0x393478c3 ),
	VERT( 0xc2301b2d, 0x424e3006, 0xc126167e ),
	NORM( 0xbe3aa8e6, 0x3f7bb5f4, 0xba8dc9bf ),
	VERT( 0xc2301b2d, 0x424e3006, 0xc126167e ),
	NORM( 0xbe6ead91, 0x3f77a0dc, 0x3dccdc2c ),
	VERT( 0xc2301b2d, 0x424e3006, 0xc126167e ),
	NORM( 0xbe29a1fa, 0x3f79ccec, 0x3e12465a ),
	VERT( 0xc27aa116, 0xc22001fa, 0x415cf557 ),
	NORM( 0xbf3bc946, 0xbe84d3dc, 0x3f20d0b4 ),
	VERT( 0xc267d4ab, 0xc26b791d, 0x4116c0de ),
	NORM( 0xbf3dcaa7, 0xbed51ff8, 0x3f06c1ee ),
	VERT( 0xc28a214f, 0x40ad93e5, 0x402e0da0 ),
	NORM( 0xbf7ae33e, 0xbc747015, 0x3e4b0c63 ),
	VERT( 0xc283b57b, 0xc16ccdf4, 0x416fd97c ),
	NORM( 0xbf5f04c4, 0xbc339c48, 0x3efb52b4 ),
	VERT( 0xc28bc4ac, 0x4153b791, 0xc0a7ab69 ),
	NORM( 0xbf7fef49, 0xba6c4be8, 0x3cb8db09 ),
	VERT( 0xc28b27f8, 0x41902acd, 0xc0aab2af ),
	NORM( 0xbf7f856f, 0x3d7a6443, 0x31369efe ),
	VERT( 0xc289c2c7, 0x41ef721f, 0xc117988a ),
	NORM( 0xbf7b13a2, 0x3e4789a0, 0x3c3574a5 ),
	VERT( 0xc27c13bd, 0x423be19f, 0xc126167e ),
	NORM( 0xbf29fa36, 0x3f3e8fcc, 0x3d914f82 ),
	VERT( 0xc1bd6b0e, 0xc2323d38, 0xc02b9d15 ),
	NORM( 0x3a8a64a2, 0xbc5ea0cf, 0x3f7ff9ea ),
	VERT( 0xc1bd6b0e, 0xc2323d38, 0xc02b9d15 ),
	NORM( 0x3e284911, 0xbf7c80b8, 0x3c38be77 ),
	VERT( 0xc220dde2, 0xc24254a7, 0xc02ce057 ),
	NORM( 0x3f690d4d, 0xbe65e6ff, 0x3eb1fb3e ),
	VERT( 0xc220dde2, 0xc24254a7, 0xc02ce057 ),
	NORM( 0x3e71f8df, 0xbf78b974, 0x3c6488e7 ),
	VERT( 0xc220dde2, 0xc24254a7, 0xc02ce057 ),
	NORM( 0x3b4eb9ae, 0xbc926907, 0x3f7ff535 ),
	VERT( 0xbde6978e, 0xc22c61c1, 0xc0298b4f ),
	NORM( 0xbb3cae9f, 0xbf7fff4d, 0xbb6d0c32 ),
	VERT( 0xc22c4c5c, 0xc26b8749, 0xc045795f ),
	NORM( 0x3f72b7fb, 0xbe85f9e8, 0x3e38e0c0 ),
	VERT( 0xc1bdaada, 0x40dac038, 0xc0f43102 ),
	NORM( 0x3f7f42c2, 0x3a473008, 0xbd9b8486 ),
	VERT( 0xc1bd4963, 0x40dac038, 0xc0f43102 ),
	NORM( 0x3f7fffe0, 0x3b0028de, 0x393478c3 ),
	VERT( 0xc1bec926, 0x425b0c0b, 0xc10fcae6 ),
	NORM( 0x3f7fffe0, 0x3b0028de, 0x393478c3 ),
	VERT( 0xc1bec926, 0x425b0c0b, 0xc10fcae6 ),
	NORM( 0xbe258ddc, 0x3f734ffc, 0x3e87f8a2 ),
	VERT( 0xc1bec926, 0x425b0c0b, 0xc10fcae6 ),
	NORM( 0x3f7f42c2, 0x3a473008, 0xbd9b8487 ),
	VERT( 0xc1bec926, 0x425b0c0b, 0xc10fcae6 ),
	NORM( 0xbe29a1fa, 0x3f79ccec, 0x3e12465a ),
	VERT( 0xc2301b2d, 0x424d513e, 0xc10fcae6 ),
	NORM( 0xbe29a1fa, 0x3f79ccec, 0x3e12465a ),
	VERT( 0xc2301b2d, 0x424d513e, 0xc10fcae6 ),
	NORM( 0xbe258ddc, 0x3f734ffc, 0x3e87f8a2 ),
	VERT( 0xc2301b2d, 0x424d513e, 0xc10fcae6 ),
	NORM( 0xbe6b0303, 0x3f73d31b, 0x3e4d46b5 ),
	VERT( 0xc25fc6f0, 0xc26b791d, 0x4134d9ef ),
	NORM( 0xbf28aa4d, 0xbec4611f, 0x3f25abbc ),
	VERT( 0xc26c59d3, 0xc2200288, 0x41844344 ),
	NORM( 0xbf24b068, 0xbe83d3a5, 0x3f3893e5 ),
	VERT( 0xc27a1714, 0xc16c75f6, 0x41929850 ),
	NORM( 0xbf3a8d89, 0x3d1ab226, 0x3f2f0b5e ),
	VERT( 0xc286afd7, 0x40ad93e5, 0x40fe8745 ),
	NORM( 0xbf43afe7, 0x3e997274, 0x3f122318 ),
	VERT( 0xc28bc4ac, 0x4153b790, 0xbf98c8ee ),
	NORM( 0xbf70a6db, 0x3dab44ab, 0x3ea94917 ),
	VERT( 0xc28b27f8, 0x41902acd, 0xc06eb352 ),
	NORM( 0xbf482bf9, 0x3ea40454, 0x3f08e6a6 ),
	VERT( 0xc289c2c7, 0x41ef721f, 0xc100b86c ),
	NORM( 0xbf7af87e, 0x3e492a89, 0x3c90d060 ),
	VERT( 0xc27c13bd, 0x423b02d7, 0xc10fcae6 ),
	NORM( 0xbf291a66, 0x3f3cf8f4, 0x3e0c4262 ),
	VERT( 0xc0df4c65, 0xc22c2334, 0xc0a7ab69 ),
	NORM( 0x3d50234f, 0xbf7fab09, 0x3b45fca2 ),
	VERT( 0xc0daab49, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0xb131840e, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc0df4c6d, 0xc22c2204, 0xc103080c ),
	NORM( 0x3d54831a, 0xbf7fa7bb, 0xb9cddfb6 ),
	VERT( 0xc0df4d1d, 0xc22c0c85, 0xc02a1a48 ),
	NORM( 0x3d2916c5, 0xbf7fc6db, 0x3bcc8aac ),
	VERT( 0xc0df4d1d, 0xc22c0c85, 0xc02a1a48 ),
	NORM( 0xbeb06bee, 0xbc0aa069, 0x3f705009 ),
	VERT( 0xc0da120b, 0x4007c91e, 0xc02a1a48 ),
	NORM( 0x3f2f7cdb, 0x3b7f099e, 0xbf3a625a ),
	VERT( 0xc0da7d3c, 0x3fff83c2, 0xc0257308 ),
	NORM( 0x3c9f3dfa, 0x3f51dc06, 0x3f1286fb ),
	VERT( 0xc239a958, 0x412e1b1b, 0x40efdf7d ),
	NORM( 0x3f400bc0, 0x3f0f8bdd, 0x3eb36e33 ),
	VERT( 0xc24556c7, 0x40f2c337, 0x4168e0f5 ),
	NORM( 0x3f0cb933, 0xbdb8f74c, 0x3f54995a ),
	VERT( 0xc2707233, 0x40f2c337, 0x4168e0f5 ),
	NORM( 0xbf003a8e, 0xbd998902, 0x3f5cbcd0 ),
	VERT( 0xc2809932, 0x412e1b1b, 0x40c97436 ),
	NORM( 0xbe511547, 0x3f51142d, 0x3f0a2a78 ),
	VERT( 0xc24270c1, 0x4123c949, 0x414674fa ),
	NORM( 0x3f2c7ea2, 0x3f115b70, 0x3ef21923 ),
	VERT( 0xc2452309, 0x4114268f, 0x416904a2 ),
	NORM( 0x3ef4f156, 0x3ed554fa, 0x3f45e2fd ),
	VERT( 0xc27074a2, 0x4114268f, 0x416904a2 ),
	NORM( 0xbedbfcf9, 0x3ed6b3f5, 0x3f4cb9ff ),
	VERT( 0xc2753277, 0x4123c948, 0x414674fa ),
	NORM( 0xbf288d45, 0x3f131f98, 0x3ef8d85e ),
	VERT( 0xc062868a, 0xc22be93c, 0x3edc664d ),
	NORM( 0xbf09cf26, 0xbf15f1c8, 0x3f1b1df5 ),
	VERT( 0xc062868a, 0xc22be93c, 0x3edc664d ),
	NORM( 0xbe41b8b7, 0xbf2f1194, 0x3f34647c ),
	VERT( 0xc0252c86, 0xc22be9a5, 0xc02b9d15 ),
	NORM( 0xbc4357b8, 0xbf7ffb2d, 0x3b13d8b2 ),
	VERT( 0xc0252c86, 0xc22be9a5, 0xc02b9d15 ),
	NORM( 0xbd1420a3, 0xbf7fd128, 0xbc3469cc ),
	VERT( 0xc0252c86, 0xc22be9a5, 0xc0a7ab69 ),
	NORM( 0xbc97d556, 0xbf7ff4b7, 0x3a77e351 ),
	VERT( 0xc0252c86, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0x3298c559, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc0252c86, 0xc22be93c, 0xc103080c ),
	NORM( 0xbc8de806, 0xbf7ff62a, 0xb98aac2e ),
	VERT( 0xc062868a, 0xc22bdb9f, 0x3edc664d ),
	NORM( 0xbf2b0e42, 0x00000000, 0x3f3e7664 ),
	VERT( 0xc062868a, 0xc22bdb9f, 0x3edc664d ),
	NORM( 0xbe665cc7, 0x00000000, 0x3f797022 ),
	VERT( 0xc062868a, 0xc22bdb9f, 0x3edc664d ),
	NORM( 0xbeeb2932, 0xb78c7ef0, 0x3f636671 ),
	VERT( 0xc062868a, 0x4007c91e, 0x3edc664d ),
	NORM( 0x3f2f7cdb, 0x3b7f099d, 0xbf3a625a ),
	VERT( 0xc0252c86, 0x3fff83c2, 0xc0257308 ),
	NORM( 0x3c8f63e9, 0x3f4d5883, 0x3f18cdcf ),
	VERT( 0xc245925f, 0xc08315a5, 0x41977005 ),
	NORM( 0x3f0e7a85, 0x3e997993, 0x3f465c80 ),
	VERT( 0xc231ae7c, 0xc08315a5, 0x40885ff7 ),
	NORM( 0x3f6456e4, 0x3d6eacd2, 0x3ee58fac ),
	VERT( 0xc2868f17, 0xc08315a5, 0x4112fb9c ),
	NORM( 0xbf6d7897, 0x3d78b077, 0x3ebcb32c ),
	VERT( 0xc280eb18, 0xc08315a5, 0x4160c078 ),
	NORM( 0xbf3fb9bf, 0x3e3cb65e, 0x3f22f248 ),
	VERT( 0xc26ec0cd, 0xc08315a5, 0x4197ad36 ),
	NORM( 0xbebdabe5, 0x3ea762c4, 0x3f5e9215 ),
	VERT( 0xc28b6307, 0xc08315a5, 0xc043d863 ),
	NORM( 0xbf7c7b53, 0x3ca70ce2, 0x3e27e43a ),
	VERT( 0xc2452047, 0x415a1a87, 0x3f5301ba ),
	NORM( 0xbf39943a, 0x3f0c11fd, 0x3ed6425c ),
	VERT( 0xc27057f6, 0x418bd29b, 0xc01b325f ),
	NORM( 0xbd4ae4fe, 0x3efb72ad, 0x3f5ea3e7 ),
	VERT( 0xc2452047, 0x41870835, 0xc00ac29d ),
	NORM( 0x3d1e99fa, 0x3eefe64f, 0x3f61f126 ),
	VERT( 0xc27057f6, 0x412eac65, 0x413f05ac ),
	NORM( 0x3e2c3068, 0x3f50e186, 0x3f0d9a9d ),
	VERT( 0xc27057f6, 0x412e1b1b, 0x40efdf7d ),
	NORM( 0x3f1f5b9c, 0x3f41869b, 0x3e4f6a80 ),
	VERT( 0xc27057f6, 0x4172b23b, 0xbf307fa0 ),
	NORM( 0xbcb91fe6, 0x3f4655c8, 0x3f21c21b ),
	VERT( 0xc27057f6, 0x40d61205, 0xc0ab454e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc27057f6, 0x41c2f4df, 0xc10a37ad ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc2452047, 0x412eac65, 0x413f05ac ),
	NORM( 0xbd1a3681, 0x3f52a02c, 0x3f113075 ),
	VERT( 0xc27057f6, 0x41c2f4df, 0xc09b1c56 ),
	NORM( 0x380bc4ea, 0xbb0e51d8, 0x3f7fffd8 ),
	VERT( 0xc2452047, 0x41c2f4df, 0xc10a37ad ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc2452047, 0x40d61205, 0xc0ad8d29 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc2452047, 0x412e1b1b, 0x40efdf7d ),
	NORM( 0xbf35939b, 0x3f316a60, 0x3e040a84 ),
	VERT( 0xc2452047, 0x41595259, 0xc0c361c0 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc2452047, 0x41870835, 0xc00ac29d ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc2452047, 0x41c2f4df, 0xc09a69fc ),
	NORM( 0xbbcdc16b, 0x3b94ad19, 0x3f7ffe09 ),
	VERT( 0xc2452047, 0x40d61205, 0x413f05ac ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc27057f6, 0x40d61205, 0x413f05ac ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc0252c86, 0x4007f034, 0xc02bdf06 ),
	NORM( 0x31c59b42, 0x3f1e11e7, 0x3f495ebc ),
	VERT( 0xc0252c86, 0x4006d6ab, 0xc02b0207 ),
	NORM( 0xb1afec12, 0x3f1e11e5, 0x3f495ebd ),
	VERT( 0xc0252c86, 0x400510d0, 0xc0299dc3 ),
	NORM( 0xb1932ef3, 0x3f1e1207, 0x3f495ea3 ),
	VERT( 0xc0da7e74, 0x4007f034, 0xc02bdf06 ),
	NORM( 0xb1455224, 0x3f1e11f2, 0x3f495eb3 ),
	VERT( 0xc0da7e4a, 0x4006d3d2, 0xc02affcb ),
	NORM( 0xb00012eb, 0x3f1e11f2, 0x3f495eb3 ),
	VERT( 0xc0da7e06, 0x400510d0, 0xc0299dc3 ),
	NORM( 0x31196078, 0x3f1e1207, 0x3f495ea2 ),
	VERT( 0xc0da1d73, 0x4006ee66, 0xc0299b83 ),
	NORM( 0x3f12530f, 0x3f0d4fe0, 0xbf1b6c17 ),
	VERT( 0xc21fb8c0, 0xc0794aae, 0xc02a1a48 ),
	NORM( 0x3eda2cef, 0xbc9bc9b3, 0x3f678b02 ),
	VERT( 0xc1b82767, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0xb1b169a4, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc1b00044, 0x40b134d6, 0xc0abaf2d ),
	NORM( 0xb1b169a4, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc1bd4963, 0x4082ab7f, 0xc087277b ),
	NORM( 0xb1b169a3, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc1ac1e0f, 0x4086ce51, 0xc08a66a1 ),
	NORM( 0xb1b169a3, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc1bc8c15, 0x40b134d6, 0xc0abaf2d ),
	NORM( 0xb1b169a3, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc1bc8c15, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0xb1b169a3, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc1b56819, 0x4007f034, 0xc02bdf06 ),
	NORM( 0xb1537bbe, 0x3f1e11fe, 0x3f495eaa ),
	VERT( 0xc1bd4963, 0x4006d032, 0xc02afcf2 ),
	NORM( 0xb1b169a3, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0xc1bd4963, 0x4006c887, 0xc02af6ed ),
	NORM( 0x319960a1, 0x3f1e1205, 0x3f495ea4 ),
	VERT( 0xc19877ea, 0x400510d0, 0xc0299dc3 ),
	NORM( 0x319960a1, 0x3f1e1205, 0x3f495ea4 ),
	VERT( 0xc1b4be59, 0x40050909, 0xc02997a7 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0xc1bd4f60, 0x40257bdb, 0xc02b23aa ),
	NORM( 0x3d8d560c, 0x3e18b538, 0x3f7c8525 ),
	VERT( 0xc1bd7f37, 0x40260e9b, 0xc02b1f13 ),
	NORM( 0x3d8d560d, 0x3e18b538, 0x3f7c8525 ),
	VERT( 0xc1bd4f5a, 0x402557b3, 0xc02b1e36 ),
	NORM( 0x3d8d560d, 0x3e18b537, 0x3f7c8525 ),
	VERT( 0xc2058816, 0x41ef721f, 0xc0024d0e ),
	NORM( 0xbefa871e, 0x3d8e39b4, 0x3f5e8d06 ),
	VERT( 0xc0628682, 0x4006ee66, 0x3edc5d2f ),
	NORM( 0x3f114cd8, 0x3f0f8b1d, 0xbf1a55a4 ),
	VERT( 0xc1bd4963, 0x4085a276, 0xc0897b3f ),
	NORM( 0x3f7ef36e, 0x3c8c2d4f, 0x3db5e002 ),
	VERT( 0xc1bda642, 0x4193f5cf, 0xc0d47868 ),
	NORM( 0x3f78c820, 0x3c7caec5, 0x3e70eefa ),
	VERT( 0xc1bdfb08, 0x421c6236, 0xc0e540e8 ),
	NORM( 0x3f7436b3, 0x3c1db8c7, 0x3e997cd4 ),
	VERT( 0xc1b00044, 0x40b134d6, 0xc0abaf2d ),
	NORM( 0x3f3504eb, 0x350d704f, 0xbf3504fc ),
	VERT( 0xc1b82767, 0x40dac038, 0xc0cc4bb4 ),
	NORM( 0x3f3504e9, 0x33c69129, 0xbf3504fd ),
	VERT( 0xc1bc8c15, 0x40dac038, 0xc0ddde6a ),
	NORM( 0xbec3ef20, 0x33037b26, 0xbf6c835c ),
	VERT( 0xc1bc8c15, 0x40b134d6, 0xc0abaf2d ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1bc8c15, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc1bdb17c, 0x424bc3d1, 0xc0fb6615 ),
	NORM( 0x3f7ffff7, 0xba7552ff, 0xb9d9f8a6 ),
	VERT( 0xc1bd5005, 0x40dc45dc, 0xc04694a4 ),
	NORM( 0x3f7ffeef, 0x3adacb1c, 0x3bb2eb42 ),
	VERT( 0xc1bd5005, 0x40dc45dc, 0xc04694a4 ),
	NORM( 0x3f7ffff5, 0xba829a03, 0xba10cd3a ),
	VERT( 0xc0252c86, 0x4007f034, 0xc02bdf06 ),
	NORM( 0xba044c33, 0x3b861905, 0x3f7fff71 ),
	VERT( 0xc0da7e74, 0x4007f034, 0xc02bdf06 ),
	NORM( 0xba044c34, 0x3b861906, 0x3f7fff71 ),
	VERT( 0xc1b56819, 0x4007f034, 0xc02bdf06 ),
	NORM( 0x3e6137b0, 0x3d967770, 0x3f7905b0 ),
	VERT( 0xc1a243d6, 0xc0bde449, 0xbfc3c946 ),
	NORM( 0xbf29d4c4, 0xbecfc55c, 0x3f20f042 ),
	VERT( 0xc1ad798a, 0xbf8e7121, 0xc02a1a4a ),
	NORM( 0x3edbb89d, 0x3e0e6828, 0x3f6478ad ),
	VERT( 0xc1b092c3, 0x3da8a942, 0xc02a1a46 ),
	NORM( 0x3edbb89d, 0x3e0e6829, 0x3f6478ac ),
	VERT( 0xc1b5dc35, 0x4007c91e, 0xc02a1a48 ),
	NORM( 0x3edbb8f7, 0x3e0e6a9b, 0x3f64787e ),
	VERT( 0xc1b6be9f, 0x3fff83c2, 0xc0257307 ),
	NORM( 0x3edbb90c, 0x3e0e687b, 0x3f64788f ),
	VERT( 0xc1b5c66c, 0x4005af71, 0xc02a1a48 ),
	NORM( 0x3edbb895, 0x3e0e6c65, 0x3f647884 ),
	VERT( 0xc06284c3, 0xc1dcab22, 0x3edc9cfc ),
	NORM( 0xbe8e085d, 0xbede3f11, 0x3f5b6b0b ),
	VERT( 0xc0da8169, 0xc203f377, 0xc020535a ),
	NORM( 0xbce8ce18, 0xbe844ebb, 0x3f7732a3 ),
	VERT( 0xc0252c86, 0x4006d85b, 0xc02b035a ),
	NORM( 0xb7a3d989, 0xbba37cb1, 0xbf7fff2f ),
	VERT( 0xc0da7e4a, 0x4006d85b, 0xc02b035a ),
	NORM( 0xb7a3d989, 0xbba37cb1, 0xbf7fff2f ),
	VERT( 0xc1bd4963, 0x4006d85b, 0xc02b035a ),
	NORM( 0xb7a3d98a, 0xbba37cb1, 0xbf7fff2f ),
	VERT( 0xc1bd7f37, 0x402655f3, 0xc02b1f6e ),
	NORM( 0xb7a3d989, 0xbba37cb0, 0xbf7fff2f ),
	VERT( 0xc1bd4f66, 0x40259f25, 0xc02b28fc ),
	NORM( 0xb7a3d989, 0xbba37cb0, 0xbf7fff2f ),
	VERT( 0xc1bdc3b6, 0xc085d561, 0xbfd86ae3 ),
	NORM( 0xbeaf28dd, 0xbf107eed, 0x3f4051c2 ),
	VERT( 0xc0252c86, 0x400510d0, 0xc0299dc3 ),
	NORM( 0xbadab636, 0x3b83f17a, 0xbf7fff61 ),
	VERT( 0xc0da7e06, 0x400510d0, 0xc0299dc3 ),
	NORM( 0x32c9f5f2, 0x3b9a6025, 0xbf7fff46 ),
	VERT( 0xc1986fa5, 0x4006ee66, 0xc0299b83 ),
	NORM( 0xba478b22, 0x3b90246e, 0xbf7fff59 ),
	VERT( 0xc0da1d73, 0x4006ee66, 0xc0299b83 ),
	NORM( 0xba5ab573, 0x3b8f28d4, 0xbf7fff5a ),
	VERT( 0xc19877ea, 0x400510d0, 0xc0299dc3 ),
	NORM( 0x32c9f5f2, 0x3b9a6025, 0xbf7fff46 ),
	VERT( 0xc0d9c61f, 0x400510d0, 0xc0299dc3 ),
	NORM( 0xba5ca688, 0x3b8f0f56, 0xbf7fff5a ),
	VERT( 0xc0d9cafa, 0x4007c91e, 0xc0299a7a ),
	NORM( 0xba5ab574, 0x3b8f28d4, 0xbf7fff5a ),
	VERT( 0xc21c06b9, 0x42349efb, 0xc0eeb270 ),
	NORM( 0xbe84ca37, 0xbd8a3ada, 0x3f76a2bb ),
	VERT( 0xc18c5462, 0x424a93de, 0xbf67fd8e ),
	NORM( 0x3eac5121, 0x3ef3b16f, 0xbf500151 ),
	VERT( 0xc18c5462, 0x424a93de, 0xbf67fd8e ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc18c5462, 0x41e0ba79, 0xbf67fd8e ),
	NORM( 0x3ec3ef0b, 0x2f3ac812, 0xbf6c8361 ),
	VERT( 0xc17ca94c, 0x41e0ba79, 0xbf67fd8e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17ca94c, 0x420b9575, 0xbf67fd8e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc17ca94c, 0x424a93de, 0xbf67fd8e ),
	NORM( 0x00000000, 0x3f3504f3, 0xbf3504f3 ),
	VERT( 0xc17ca94c, 0x420b9575, 0x3fb6a4a9 ),
	NORM( 0x3f3504f3, 0x3f3504f3, 0x00000000 ),
	VERT( 0xc17ca94c, 0x420b9575, 0xbe03a696 ),
	NORM( 0x3f34fbe3, 0x3f350e03, 0x00000000 ),
	VERT( 0xc17ca94c, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17ca94c, 0x424a93de, 0xbe03a696 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc18c5462, 0x40b134d6, 0xbf67fd8e ),
	NORM( 0x3ec3ef0a, 0x33017556, 0xbf6c8361 ),
	VERT( 0xc17ca94c, 0x40b134d6, 0xbf67fd8e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc18c5462, 0x40b134d6, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc17ca94c, 0x420b9575, 0xbe03a696 ),
	NORM( 0xb9a10e75, 0xb9ad0396, 0xbf7ffffe ),
	VERT( 0xc17ca94c, 0x40b134d6, 0xbe03a696 ),
	NORM( 0x3f34fdd5, 0xb974b763, 0xbf350c11 ),
	VERT( 0xc17ca94c, 0x424a93de, 0xbe03a696 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17ca94c, 0x424a93de, 0xbf67fd8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17ca94c, 0x41e0ba79, 0xbf67fd8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc17ca94c, 0x40b134d6, 0xbf67fd8e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc18c5462, 0x41e0ba79, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc18c5462, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc18c5462, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3ee4f92e, 0x3f64f92e ),
	VERT( 0xc17ca94c, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3f3504f3, 0x3f3504f3 ),
	VERT( 0xc17ca94c, 0x420b9575, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1bc8c15, 0x41e0ba79, 0x3fb6a4a9 ),
	NORM( 0xbf3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0xc1bc8c15, 0x41e0ba79, 0xc0ddde6a ),
	NORM( 0xbec3ef22, 0x00000000, 0xbf6c835c ),
	VERT( 0xc1bc8c15, 0x424a93de, 0xc0ddde6a ),
	NORM( 0xbec3ef21, 0x00000000, 0xbf6c835c ),
	VERT( 0xc1bc8c15, 0x424a93de, 0xc0ddde6a ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc1bc8c15, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0xbf3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0xc1bc8c15, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc1bc8c15, 0x40b134d6, 0x3fb6a4a9 ),
	NORM( 0xbf3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0xc1ed16e5, 0x42375325, 0x41da7b8f ),
	NORM( 0xbe5194e6, 0x3f72b8ae, 0x3e791042 ),
	VERT( 0xc1ed16e5, 0x42375325, 0x41da7b8f ),
	NORM( 0xbf6ed886, 0xbd6c689b, 0x3eb5e216 ),
	VERT( 0xc19199f6, 0x4233692e, 0x421d7020 ),
	NORM( 0xbdac191e, 0xbe13f209, 0x3f7c6622 ),
	VERT( 0xc19199f6, 0x4233692e, 0x421d7020 ),
	NORM( 0xbd952e2b, 0x3f77769d, 0x3e7b66be ),
	VERT( 0xc19199f6, 0x4233692e, 0x421d7020 ),
	NORM( 0xbe18e774, 0x3f74fd45, 0x3e7eb72c ),
	VERT( 0xc1a57921, 0x4232bc98, 0x421a1136 ),
	NORM( 0xbf02bfcb, 0xbdf6da5e, 0x3f59eb29 ),
	VERT( 0xc1a57921, 0x4232bc98, 0x421a1136 ),
	NORM( 0xbe2310da, 0x3f7485c7, 0x3e7f9665 ),
	VERT( 0xc1bd5005, 0x40ab4920, 0x4176c878 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc1bd5005, 0x40ab4920, 0x4176c878 ),
	NORM( 0x3f6d0e2b, 0x38380552, 0xbec14b94 ),
	VERT( 0xc1bd5005, 0x40ab4920, 0xc028a0d8 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc1bd5005, 0x40ab4920, 0xc028a0d8 ),
	NORM( 0x3f7ffff5, 0xba829a03, 0xba10cd3a ),
	VERT( 0xc194d73f, 0x40ab4920, 0xc028a0d8 ),
	NORM( 0x3aa7d674, 0x3f7fffe4, 0xbaacf613 ),
	VERT( 0xc194dd0d, 0x40ab4920, 0x41a5dcf4 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc194dd0d, 0x40ab4920, 0x41a5dcf4 ),
	NORM( 0x3ec69152, 0x3a1a9e6e, 0xbf6bf69e ),
	VERT( 0xc18a0bba, 0xc093d40c, 0x41c63a41 ),
	NORM( 0xbea072e5, 0xbf386019, 0x3f1e72af ),
	VERT( 0x3b99c2eb, 0xc0f2536e, 0x41c980d4 ),
	NORM( 0xbc43fd3c, 0xbf15f02d, 0x3f4f7929 ),
	VERT( 0xc18a0bba, 0xc115e9e6, 0x41ad78ab ),
	NORM( 0xbf7dbd2e, 0xbd5b16ee, 0x3df88505 ),
	VERT( 0xc18a0bba, 0xc115e9e6, 0x41ad78ab ),
	NORM( 0xbdcee045, 0xbf380924, 0x3f30101b ),
	VERT( 0xc14af443, 0x406fc1f6, 0x41f68315 ),
	NORM( 0xbd157cc7, 0xbecb7398, 0x3f6abc31 ),
	VERT( 0xc200a10d, 0x424f8248, 0xbf4b2f1f ),
	NORM( 0xbe42de34, 0x3f7a2f10, 0x3dbf1d65 ),
	VERT( 0xc200a10d, 0x424f8248, 0xbf4b2f1f ),
	NORM( 0xbf5dbb90, 0xbdb5966d, 0x3efbd624 ),
	VERT( 0xc200a10d, 0x424f8248, 0xbf4b2f1f ),
	NORM( 0xbe76e997, 0x3f729853, 0x3e5669a7 ),
	VERT( 0xc1bd49ed, 0x42570b1e, 0xbf1d972d ),
	NORM( 0xbe42de34, 0x3f7a2f10, 0x3dbf1d66 ),
	VERT( 0xc1bd49ed, 0x42570b1e, 0xbf1d972d ),
	NORM( 0xbe76e998, 0x3f729853, 0x3e5669a7 ),
	VERT( 0xc1bd49ed, 0x42570b1e, 0xbf1d972d ),
	NORM( 0x3f7ffff5, 0xba829a03, 0xba10cd3a ),
	VERT( 0xc2255ff3, 0x424c8280, 0xc0d093c1 ),
	NORM( 0xbe252df5, 0x3f747194, 0x3e7f700e ),
	VERT( 0xc2255ff3, 0x424c8280, 0xc0d093c1 ),
	NORM( 0xbeb8efcc, 0xbe054c3d, 0x3f6c610d ),
	VERT( 0xc2255ff3, 0x424c8280, 0xc0d093c1 ),
	NORM( 0xbe42de34, 0x3f7a2f10, 0x3dbf1d66 ),
	VERT( 0xc1a01478, 0x40a86af4, 0x41f68314 ),
	NORM( 0xbe931dcf, 0xbe56aef3, 0x3f6f422d ),
	VERT( 0xc1dcfd7c, 0x40055fdb, 0x41db8afe ),
	NORM( 0xbf428538, 0xbe6cdb5f, 0x3f1b8942 ),
	VERT( 0xc1e6a654, 0x41cdd7d4, 0x41da0d35 ),
	NORM( 0xbf65d227, 0xbd8f9521, 0x3edead3b ),
	VERT( 0xc1a01478, 0x41cdd7d4, 0x4210f331 ),
	NORM( 0xbee83eae, 0xbe2612d1, 0x3f6056ae ),
	VERT( 0xc1f6be26, 0x409994be, 0xc002d472 ),
	NORM( 0xbf1fc700, 0xbd8b5c69, 0x3f47420a ),
	VERT( 0xc1f961bb, 0x41cdd7d4, 0xbed0f839 ),
	NORM( 0xbf7abd09, 0xbd0c1a2b, 0x3e4b8d1a ),
	VERT( 0xc19199f6, 0x406fc1fa, 0x41f68314 ),
	NORM( 0xbd99204d, 0xbecd9b00, 0x3f69ab47 ),
	VERT( 0xc19199f6, 0x41cdd7d4, 0x4210f331 ),
	NORM( 0xbd94d323, 0xbe4868ec, 0x3f7a5bed ),
	VERT( 0xc1d77704, 0xbfc33135, 0xbed6d913 ),
	NORM( 0xbf09bbb7, 0xbf1595fd, 0x3f1b87b3 ),
	VERT( 0xc1d77704, 0xbfc33135, 0x41d50910 ),
	NORM( 0xbf0f201a, 0xbf304df0, 0x3eec5f17 ),
	VERT( 0xc194d73f, 0x40ab4920, 0xc028a0d8 ),
	NORM( 0xbadab636, 0x3b83f17a, 0xbf7fff61 ),
	VERT( 0xc1a0f9bc, 0xc1ce04de, 0x3edc5e5f ),
	NORM( 0xbf004eab, 0xbeaf0868, 0x3f4b812c ),
	VERT( 0xc1bd7f37, 0x40a82a2b, 0xc02bf9be ),
	NORM( 0x3dde574d, 0x3cd0d16c, 0xbf7e6738 ),
	VERT( 0xc1bd7f37, 0xc1f8400a, 0xc020535a ),
	NORM( 0xbdac7742, 0xbdb21567, 0x3f7e1e16 ),
	VERT( 0xc1bd5005, 0x4248bcd3, 0x41791320 ),
	NORM( 0xbe6c0ad5, 0x3f72c51b, 0x3e5f4d7f ),
	VERT( 0xc1bd5005, 0x4248bcd3, 0x41791320 ),
	NORM( 0xbe226bbd, 0x3f74151b, 0x3e8350ee ),
	VERT( 0xc1bd5005, 0x4248bcd3, 0x41791320 ),
	NORM( 0x3f703dc9, 0xb8552d21, 0xbeb0dcd2 ),
	VERT( 0xc1bd5005, 0x419397dd, 0xc0d46f8a ),
	NORM( 0x3f7ffeef, 0x3adacb1b, 0x3bb2eb41 ),
	VERT( 0xc1bc8c15, 0x40b134d6, 0xc090eb01 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc0df85d9, 0xc1dcab20, 0xc02a1a48 ),
	NORM( 0xbf2af71b, 0xb781d8fd, 0x3f3e8b2d ),
	VERT( 0xc2202b8a, 0xc1dcab20, 0xc02a1a48 ),
	NORM( 0x3ef77ec4, 0x3b142d4d, 0x3f601a65 ),
	VERT( 0xc244fecc, 0xc1dcab20, 0x41afe5d0 ),
	NORM( 0x3f1e5cb6, 0xbd0899d0, 0x3f48f584 ),
	VERT( 0xc23104c1, 0xc1dcab20, 0x40880685 ),
	NORM( 0x3f699c16, 0x3aa66125, 0x3ed16729 ),
	VERT( 0xc280935e, 0xc1dcab20, 0x417ad726 ),
	NORM( 0xbf4cc044, 0xbe0e646a, 0x3f157c2f ),
	VERT( 0xc2746908, 0xc1dcab20, 0x4194964a ),
	NORM( 0xbf2dbc91, 0xbe0f19fa, 0x3f3895d4 ),
	VERT( 0xc2649d52, 0xc1dcab20, 0x41b69c3e ),
	NORM( 0xbebc9243, 0xbde0c705, 0x3f6c5721 ),
	VERT( 0xc287a24f, 0xc1dcab20, 0x40c68f64 ),
	NORM( 0xbf6ec52b, 0xbe09c597, 0x3eab5472 ),
	VERT( 0x3ba1a224, 0x40ab4920, 0x4176c878 ),
	NORM( 0x359dddef, 0x3f7ffff0, 0xbab3cd83 ),
	VERT( 0xc2332504, 0xc280a879, 0xc03d919f ),
	NORM( 0x3f740ab6, 0xbe9aa5d3, 0xbb45bea6 ),
	VERT( 0xc2332504, 0xc280a879, 0xc03d919f ),
	NORM( 0x3f746e6b, 0xbe97dbd6, 0x3c9cf454 ),
	VERT( 0xc23336bb, 0xc280a879, 0xc0a9b7c2 ),
	NORM( 0x3f57bcbe, 0xbedac17c, 0xbea7b063 ),
	VERT( 0xc243cd53, 0xc280a879, 0x414f7fc2 ),
	NORM( 0x3f0f5b88, 0xbee19cd1, 0x3f339be1 ),
	VERT( 0xc2378045, 0xc280a879, 0x40525833 ),
	NORM( 0x3f738765, 0xbe46b5a7, 0x3e7555da ),
	VERT( 0xc2336cb2, 0xc280a879, 0xbfd0479c ),
	NORM( 0x3f76037f, 0xbe8272d3, 0x3ddc6906 ),
	VERT( 0xc25cf1b7, 0xc280a879, 0x40e740b7 ),
	NORM( 0xbf3d9900, 0xbf166293, 0x3ea7027e ),
	VERT( 0xc2566290, 0xc280a879, 0x411bf3b1 ),
	NORM( 0xbf2abd4e, 0xbf0a666f, 0x3f0342ce ),
	VERT( 0xc248dfd0, 0xc280a879, 0x414ffb39 ),
	NORM( 0xbea45c6d, 0xbf0b28e2, 0x3f468979 ),
	VERT( 0xc25f8d80, 0xc280a879, 0x40918ccf ),
	NORM( 0xbf431102, 0xbf1bc432, 0x3e630c37 ),
	VERT( 0xc25f8d80, 0xc280a879, 0x40918ccf ),
	NORM( 0xbf293843, 0xbe1cced3, 0xbf3c0d88 ),
	VERT( 0xc23d2d4a, 0xc28d518f, 0x40307771 ),
	NORM( 0x3f72ed25, 0xbe6fe1c0, 0x3e5861df ),
	VERT( 0xc2429c37, 0xc28d518f, 0x40f265f0 ),
	NORM( 0x3ca3efad, 0xbf419ea6, 0x3f27652d ),
	VERT( 0xc240fefc, 0xc28d518f, 0x40f1d930 ),
	NORM( 0x3f0e9f2c, 0xbf20e0f3, 0x3f0af8b4 ),
	VERT( 0xc2462941, 0xc28d518f, 0x40b1fa0b ),
	NORM( 0xbf34cfcb, 0xbf1ad02d, 0x3ebc6cd8 ),
	VERT( 0xc2429c37, 0xc28d518f, 0x40f265f0 ),
	NORM( 0xbf294cef, 0xbf191f06, 0x3ee7c07f ),
	VERT( 0xc23b0db6, 0xc28d518f, 0x3deda44f ),
	NORM( 0x3f739b3b, 0xbe775ebd, 0x3e42a01a ),
	VERT( 0xc23d2d4a, 0xc28d518f, 0x40307771 ),
	NORM( 0x3f7394fe, 0xbe782478, 0x3e422122 ),
	VERT( 0xc2489f77, 0xc28d518f, 0x40695d20 ),
	NORM( 0xbf36ba93, 0xbf242a92, 0x3e902942 ),
	VERT( 0xc2462941, 0xc28d518f, 0x40b1fa0b ),
	NORM( 0xbf324ed8, 0xbf25f7a5, 0x3e9d717d ),
	VERT( 0xc23b3695, 0xc28d518f, 0xbf9a0c19 ),
	NORM( 0x3f7415fc, 0xbe9a5ee1, 0xbb3768ba ),
	VERT( 0xc23b0db6, 0xc28d518f, 0x3deda44f ),
	NORM( 0x3f740e23, 0xbe9a8167, 0xbc100ac3 ),
	VERT( 0xc23b3695, 0xc28d518f, 0xbf9a0c19 ),
	NORM( 0x3f741cfb, 0xbe9a32fa, 0xbb2296ac ),
	VERT( 0xc23b3695, 0xc28d518f, 0xbf9a0c19 ),
	NORM( 0x3f736f00, 0xbe9e5bde, 0xbc25ae58 ),
	VERT( 0xc23b40ae, 0xc28d6ea1, 0xc01a2991 ),
	NORM( 0x3edba5e3, 0xbec80ec8, 0xbf507df4 ),
	VERT( 0xc23b40ae, 0xc28d6ea1, 0xc01a2991 ),
	NORM( 0x3e886b29, 0xbefb954c, 0xbf5445f9 ),
	VERT( 0xc24a8c4b, 0xc28d518f, 0x3f924664 ),
	NORM( 0xbf293843, 0xbe1cced3, 0xbf3c0d88 ),
	VERT( 0xc24a8c4b, 0xc28d518f, 0x3f924664 ),
	NORM( 0xbf540336, 0xbf0ebd6e, 0xbd68f491 ),
	VERT( 0xc2489f77, 0xc28d518f, 0x40695d20 ),
	NORM( 0xbf42497a, 0xbf2363bf, 0x3e043478 ),
	VERT( 0xc23f696b, 0xc29379ec, 0x3fd13d3c ),
	NORM( 0x3f63ce07, 0xbeca8fa8, 0x3e68a971 ),
	VERT( 0xc24107f3, 0xc2920d4e, 0x405e08d1 ),
	NORM( 0x3c64fd33, 0xbf65b315, 0x3ee1ee99 ),
	VERT( 0xc23f9c91, 0xc2920d4e, 0x405d70cf ),
	NORM( 0x3f178093, 0xbf369848, 0x3ec045cb ),
	VERT( 0xc240a5d4, 0xc29317c2, 0x400df102 ),
	NORM( 0x3d80b87a, 0xbf6a7692, 0x3ecb04be ),
	VERT( 0xc24107f3, 0xc2920d4e, 0x405e08d1 ),
	NORM( 0xbf3876f3, 0xbf217cb0, 0x3e93630a ),
	VERT( 0xc23f696b, 0xc29379ec, 0x3fd13d3c ),
	NORM( 0x3e31ead6, 0xbf678e30, 0x3ec76556 ),
	VERT( 0xc23f0cb5, 0xc293a3ff, 0x3f6ba922 ),
	NORM( 0x3f6a1d90, 0xbeb6d6e3, 0x3e42aa01 ),
	VERT( 0xc240a5d4, 0xc29317c2, 0x400df102 ),
	NORM( 0xbeef9c9c, 0xbf61fa1c, 0x3d2d0802 ),
	VERT( 0xc23f696b, 0xc29379ec, 0x3fd13d3c ),
	NORM( 0x3e4ef62a, 0xbf776c23, 0x3e220a87 ),
	VERT( 0xc240a991, 0xc2934fda, 0x3ff2a400 ),
	NORM( 0x3dd7a47a, 0xbf70cfad, 0x3ea528ab ),
	VERT( 0xc240a5d4, 0xc29317c2, 0x400df102 ),
	NORM( 0xbf2a1917, 0xbf336d30, 0x3e84cc29 ),
	VERT( 0xc23f0cb5, 0xc293a3ff, 0x3f6ba922 ),
	NORM( 0x3eb6ffd2, 0xbf62acfe, 0x3e9813f0 ),
	VERT( 0xc23f22c7, 0xc293b205, 0x3d9183c9 ),
	NORM( 0x3f684406, 0xbed719af, 0xbc94bb13 ),
	VERT( 0xc240a991, 0xc2934fda, 0x3ff2a400 ),
	NORM( 0xbe97c08c, 0xbf744cef, 0x3d1cd455 ),
	VERT( 0xc23f0cb5, 0xc293a3ff, 0x3f6ba922 ),
	NORM( 0x3e298d99, 0xbf7c64cd, 0x3cc1a895 ),
	VERT( 0xc23f22c7, 0xc293b205, 0x3d9183c9 ),
	NORM( 0x3efadb01, 0xbf5ed4d6, 0x3d43fe28 ),
	VERT( 0xc23f4447, 0xc293b205, 0xbf7d9bd6 ),
	NORM( 0x3ea1aac9, 0xbf4bb9ed, 0xbf04473d ),
	VERT( 0xc2404298, 0xc293cf17, 0xbf7f8e86 ),
	NORM( 0xbf1297ab, 0xbf3416c2, 0xbed78ae2 ),
	VERT( 0xc240a991, 0xc2934fda, 0x3ff2a400 ),
	NORM( 0xbf4329d9, 0xbf2432fb, 0x3db05693 ),
	VERT( 0x41ba6c24, 0x425b0c0b, 0xc10fcae6 ),
	NORM( 0xbf800000, 0x332b806c, 0x31a15dab ),
	VERT( 0x422eac8d, 0x424e3006, 0xc126167e ),
	NORM( 0x3e219d62, 0x3f7c7a37, 0x3d498fd2 ),
	VERT( 0x41ba6c24, 0x425d243a, 0xc149058f ),
	NORM( 0x3e219d62, 0x3f7c7a37, 0x3d498fd1 ),
	VERT( 0x41ba6c24, 0x425d243a, 0xc149058f ),
	NORM( 0xbf800000, 0x332b806c, 0x31a15dab ),
	VERT( 0x422eac8d, 0x424ec48a, 0xc1549882 ),
	NORM( 0x3e219d62, 0x3f7c7a37, 0x3d498fd2 ),
	VERT( 0x3b0ef306, 0x40ab4920, 0x41a5dcf4 ),
	NORM( 0x396a63a7, 0x3f3502c8, 0xbf35071e ),
	VERT( 0x41ba6c24, 0x425c7f58, 0xc1c17b1f ),
	NORM( 0x3e219d63, 0x3f7c7a37, 0x3d498fd1 ),
	VERT( 0xb9a4b877, 0xc1dcab20, 0x3f9fb5d4 ),
	NORM( 0xb71e9b5e, 0xbeed5bf9, 0x3f62d415 ),
	VERT( 0x41ba6c23, 0x40e48b70, 0xc131bc41 ),
	NORM( 0xbf800000, 0x332b806b, 0x31a15dab ),
	VERT( 0x41ba6c23, 0x40dac038, 0xc0f43102 ),
	NORM( 0xbf800000, 0x332b806c, 0x31a15dab ),
	VERT( 0xbf49dc21, 0x41d7748b, 0x4211ce79 ),
	NORM( 0x3e034c3d, 0xbdaabb18, 0x3f7cfd04 ),
	VERT( 0xc0cc1792, 0x41cdd605, 0x4210fe26 ),
	NORM( 0x3a9ef423, 0xbe50ec68, 0x3f7a9d6c ),
	VERT( 0xc0e3265f, 0x41d772bc, 0x4211d04c ),
	NORM( 0x39f8c40a, 0xbe26efa7, 0x3f7c9343 ),
	VERT( 0xc0f151b8, 0x41ea2f51, 0x42135208 ),
	NORM( 0xbaa251ab, 0xbe212135, 0x3f7ccf87 ),
	VERT( 0xbffafabc, 0x41f3cdd7, 0x42141939 ),
	NORM( 0xb94a4352, 0xbe22a47a, 0x3f7cc013 ),
	VERT( 0xbffafabc, 0x41f3cdd7, 0x42141939 ),
	NORM( 0x3f59dbd7, 0x3d78b6c2, 0x3f058947 ),
	VERT( 0xc1157033, 0x4247ab31, 0x41a5dd6a ),
	NORM( 0x3a797e37, 0x36daf1e9, 0xbf7ffff8 ),
	VERT( 0xbffafabc, 0x423b4545, 0x420be792 ),
	NORM( 0x3f59dbd7, 0x3d78b6c2, 0x3f058947 ),
	VERT( 0xbf4ba82f, 0x423c304a, 0x42089dee ),
	NORM( 0x3e7670b9, 0x3e01f326, 0x3f7657c0 ),
	VERT( 0xbfb6c306, 0x4248bb65, 0x41a566bc ),
	NORM( 0xbccbcf31, 0x3f78d033, 0x3e6f9449 ),
	VERT( 0xc18fab1d, 0x4238b6a8, 0x42085e4d ),
	NORM( 0xbdd78629, 0x3f76aab3, 0x3e7be52e ),
	VERT( 0xc0199e0f, 0x423a6b3b, 0x420f37ab ),
	NORM( 0xbd5ba166, 0x3f787aad, 0x3e70304a ),
	VERT( 0xc18ef40c, 0x42373636, 0x420e9617 ),
	NORM( 0xbdd4ec2b, 0x3f76b498, 0x3e7bd7bd ),
	VERT( 0xc0199e0f, 0x42371fec, 0x421d6da6 ),
	NORM( 0xbd607387, 0x3f77ee93, 0x3e78cdde ),
	VERT( 0x424ae04e, 0x422eda51, 0xc1ae3c02 ),
	NORM( 0x3943cc6f, 0x3f50181e, 0x3f151b4f ),
	VERT( 0x425aec48, 0x422cbd7e, 0xc1ae3c02 ),
	NORM( 0x3e57abc6, 0x3f490ac4, 0x3f150890 ),
	VERT( 0x4269e04e, 0x42268bdf, 0xc1ae3c02 ),
	NORM( 0x3ed04560, 0x3f344825, 0x3f14f6c7 ),
	VERT( 0x4276b781, 0x421cb184, 0xc1ae3c02 ),
	NORM( 0x3f13460b, 0x3f1338f1, 0x3f14e71e ),
	VERT( 0x428048ee, 0x420fda51, 0xc1ae3c02 ),
	NORM( 0x3f34627c, 0x3ed03a81, 0x3f14daae ),
	VERT( 0x428361be, 0x4200e64b, 0xc1ae3c02 ),
	NORM( 0x3f49346d, 0x3e579605, 0x3f14d245 ),
	VERT( 0x42847027, 0x41e1b4a2, 0xc1ae3c02 ),
	NORM( 0x3f504f06, 0xb75d141b, 0x3f14ce90 ),
	VERT( 0x428361be, 0x41c19caf, 0xc1ae3c02 ),
	NORM( 0x3f4935cd, 0xbe579e64, 0x3f14cfa7 ),
	VERT( 0x428048ee, 0x41a3b4a2, 0xc1ae3c02 ),
	NORM( 0x3f3464dd, 0xbed040b6, 0x3f14d5a1 ),
	VERT( 0x4276b781, 0x418a063c, 0xc1ae3c02 ),
	NORM( 0x3f1348cd, 0xbf133d6a, 0x3f14dff7 ),
	VERT( 0x4269e04e, 0x416ca30c, 0xc1ae3c02 ),
	NORM( 0x3ed04a26, 0xbf344e03, 0x3f14ee02 ),
	VERT( 0x425aec48, 0x4153dc91, 0xc1ae3c02 ),
	NORM( 0x3e57b154, 0xbf4911a2, 0x3f14fecc ),
	VERT( 0x424ae04e, 0x414b6944, 0xc1ae3c02 ),
	NORM( 0x3943c898, 0xbf501f5d, 0x3f151132 ),
	VERT( 0x423ad455, 0x4153dc91, 0xc1ae3c02 ),
	NORM( 0xbe573a65, 0xbf48fe0d, 0x3f1523f2 ),
	VERT( 0x422be04e, 0x416ca30c, 0xc1ae3c02 ),
	NORM( 0xbecff210, 0xbf342c19, 0x3f1535c2 ),
	VERT( 0x421f091c, 0x418a063c, 0xc1ae3c02 ),
	NORM( 0xbf13092d, 0xbf131643, 0x3f15456d ),
	VERT( 0x42152ec0, 0x41a3b4a2, 0xc1ae3c02 ),
	NORM( 0xbf3411ab, 0xbecffcdf, 0x3f1551e2 ),
	VERT( 0x420efd22, 0x41c19caf, 0xc1ae3c02 ),
	NORM( 0xbf48d439, 0xbe57500f, 0x3f155a4e ),
	VERT( 0x420ce04e, 0x41e1b4a2, 0xc1ae3c02 ),
	NORM( 0xbf4fe83e, 0xb75cdb65, 0x3f155e09 ),
	VERT( 0x420efd22, 0x4200e64b, 0xc1ae3c02 ),
	NORM( 0xbf48d2d8, 0x3e5747ac, 0x3f155cea ),
	VERT( 0x42152ec0, 0x420fda51, 0xc1ae3c02 ),
	NORM( 0xbf340f46, 0x3ecff6a6, 0x3f1556f0 ),
	VERT( 0x421f091c, 0x421cb184, 0xc1ae3c02 ),
	NORM( 0xbf130664, 0x3f1311c3, 0x3f154c9a ),
	VERT( 0x422be04e, 0x42268bdf, 0xc1ae3c02 ),
	NORM( 0xbecfed44, 0x3f342638, 0x3f153e86 ),
	VERT( 0x423ad455, 0x422cbd7e, 0xc1ae3c02 ),
	NORM( 0xbe5734d7, 0x3f48f72e, 0x3f152db4 ),
	VERT( 0x424ad554, 0x422b17a8, 0xc1cb609b ),
	NORM( 0xb9521c48, 0x3f748d84, 0xbe976481 ),
	VERT( 0x4259e7f3, 0x42291baa, 0xc1cb609b ),
	NORM( 0x3e7cf615, 0x3f6c3a61, 0xbe976ecc ),
	VERT( 0x4267f39d, 0x42234a4a, 0xc1cb609b ),
	NORM( 0x3ef47346, 0x3f53cf2f, 0xbe9771b2 ),
	VERT( 0x42740348, 0x421a090b, 0xc1cb609b ),
	NORM( 0x3f2ce2b1, 0x3f2cf504, 0xbe976cfe ),
	VERT( 0x427d4487, 0x420df960, 0xc1cb609b ),
	NORM( 0x3f53c4e4, 0x3ef4a140, 0xbe976108 ),
	VERT( 0x42818af4, 0x41ffdb6c, 0xc1cb609b ),
	NORM( 0x3f6c3960, 0x3e7d5208, 0xbe974ea2 ),
	VERT( 0x428288f3, 0x41e1b62e, 0xc1cb609b ),
	NORM( 0x3f74948f, 0x38a65ce7, 0xbe9736fa ),
	VERT( 0x42818af4, 0x41c390f0, 0xc1cb609b ),
	NORM( 0x3f6c4392, 0xbe7d335f, 0xbe971bbf ),
	VERT( 0x427d4487, 0x41a7799d, 0xc1cb609b ),
	NORM( 0x3f53d68a, 0xbef4a0d7, 0xbe96feca ),
	VERT( 0x42740348, 0x418f5a47, 0xc1cb609b ),
	NORM( 0x3f2cf711, 0xbf2cfefc, 0xbe96e223 ),
	VERT( 0x4267f39d, 0x4179af90, 0xc1cb609b ),
	NORM( 0x3ef49680, 0xbf53e354, 0xbe96c7ba ),
	VERT( 0x4259e7f3, 0x41626a12, 0xc1cb609b ),
	NORM( 0x3e7d1eca, 0xbf6c55f1, 0xbe96b152 ),
	VERT( 0x424ad554, 0x415a7a15, 0xc1cb609b ),
	NORM( 0xb952588e, 0xbf74abc7, 0xbe96a06d ),
	VERT( 0x423bc2b6, 0x41626a12, 0xc1cb609b ),
	NORM( 0xbe7d852e, 0xbf6c5367, 0xbe969631 ),
	VERT( 0x422db70b, 0x4179af90, 0xc1cb609b ),
	NORM( 0xbef4c606, 0xbf53deec, 0xbe969356 ),
	VERT( 0x4221a762, 0x418f5a47, 0xc1cb609b ),
	NORM( 0xbf2d0c46, 0xbf2cf9ea, 0xbe96980d ),
	VERT( 0x42186622, 0x41a7799d, 0xc1cb609b ),
	NORM( 0xbf53e93b, 0xbef49813, 0xbe96a3f9 ),
	VERT( 0x421294c2, 0x41c390f0, 0xc1cb609b ),
	NORM( 0xbf6c546f, 0xbe7d2961, 0xbe96b64f ),
	VERT( 0x421098c3, 0x41e1b62e, 0xc1cb609b ),
	NORM( 0xbf74a4c9, 0x38a5f831, 0xbe96cdd6 ),
	VERT( 0x421294c2, 0x41ffdb6c, 0xc1cb609b ),
	NORM( 0xbf6c4a4e, 0x3e7d4801, 0xbe96e8f5 ),
	VERT( 0x42186622, 0x420df960, 0xc1cb609b ),
	NORM( 0xbf53d7ad, 0x3ef49891, 0xbe9705d1 ),
	VERT( 0x4221a762, 0x421a090b, 0xc1cb609b ),
	NORM( 0xbf2cf7fc, 0x3f2cf007, 0xbe972275 ),
	VERT( 0x422db70b, 0x42234a4a, 0xc1cb609b ),
	NORM( 0xbef4a2de, 0x3f53cade, 0xbe973cf2 ),
	VERT( 0x423bc2b6, 0x42291baa, 0xc1cb609b ),
	NORM( 0xbe7d5c70, 0x3f6c37e5, 0xbe975384 ),
	VERT( 0x424adbf0, 0x4226fe27, 0xc1e1d369 ),
	NORM( 0x39b2f550, 0x3f6d5ec3, 0xbebfbe5b ),
	VERT( 0x4258e075, 0x422525b9, 0xc1e1d369 ),
	NORM( 0x3e7600f5, 0x3f653877, 0xbebff42e ),
	VERT( 0x4265f06d, 0x421fbc9a, 0xc1e1d369 ),
	NORM( 0x3eed6b94, 0x3f4d7b6f, 0xbec00d4d ),
	VERT( 0x427127f5, 0x42172134, 0xc1e1d369 ),
	NORM( 0x3f27d67c, 0x3f27c598, 0xbec0082f ),
	VERT( 0x4279c35b, 0x420be9ac, 0xc1e1d369 ),
	NORM( 0x3f4d8dfe, 0x3eed4bbf, 0xbebfe530 ),
	VERT( 0x427f2c7a, 0x41fdb369, 0xc1e1d369 ),
	NORM( 0x3f654ced, 0x3e75c13a, 0xbebfa6c9 ),
	VERT( 0x42808274, 0x41e1aa60, 0xc1e1d369 ),
	NORM( 0x3f6d74d1, 0x38ae8bfd, 0xbebf5104 ),
	VERT( 0x427f2c7a, 0x41c5a157, 0xc1e1d369 ),
	NORM( 0x3f65746e, 0xbe75bfde, 0xbebee9b8 ),
	VERT( 0x4279c35b, 0x41ab8168, 0xc1e1d369 ),
	NORM( 0x3f4dd26c, 0xbeed84d3, 0xbebe77d2 ),
	VERT( 0x427127f5, 0x41951258, 0xc1e1d369 ),
	NORM( 0x3f28258c, 0xbf280994, 0xbebe0307 ),
	VERT( 0x4265f06d, 0x4183db8b, 0xc1e1d369 ),
	NORM( 0x3eedf49b, 0xbf4de6e8, 0xbebd9333 ),
	VERT( 0x4258e075, 0x4172129e, 0xc1e1d369 ),
	NORM( 0x3e769fab, 0xbf65c0da, 0xbebd2fef ),
	VERT( 0x424adbf0, 0x416ab0df, 0xc1e1d369 ),
	NORM( 0x39b4374e, 0xbf6df1c2, 0xbebce012 ),
	VERT( 0x423cd76d, 0x4172129e, 0xc1e1d369 ),
	NORM( 0xbe761337, 0xbf65e5f9, 0xbebca91a ),
	VERT( 0x422fc774, 0x4183db8b, 0xc1e1d369 ),
	NORM( 0xbeede4db, 0xbf4e272a, 0xbebc8ef1 ),
	VERT( 0x42248fee, 0x41951258, 0xc1e1d369 ),
	NORM( 0xbf2842d1, 0xbf2853bd, 0xbebc9370 ),
	VERT( 0x421bf487, 0x41ab8168, 0xc1e1d369 ),
	NORM( 0xbf4e14d0, 0xbeee0527, 0xbebcb666 ),
	VERT( 0x42168b69, 0x41c5a157, 0xc1e1d369 ),
	NORM( 0xbf65d1fb, 0xbe7653d1, 0xbebcf564 ),
	VERT( 0x4214b2f9, 0x41e1aa60, 0xc1e1d369 ),
	NORM( 0xbf6ddc4d, 0x38b396c3, 0xbebd4c15 ),
	VERT( 0x42168b69, 0x41fdb369, 0xc1e1d369 ),
	NORM( 0xbf65aa72, 0x3e765648, 0xbebdb47a ),
	VERT( 0x421bf487, 0x420be9ac, 0xc1e1d369 ),
	NORM( 0xbf4dd05d, 0x3eedcc6a, 0xbebe2751 ),
	VERT( 0x42248fee, 0x42172134, 0xc1e1d369 ),
	NORM( 0xbf27f3cd, 0x3f280fcf, 0xbebe9cbf ),
	VERT( 0x422fc774, 0x421fbc9a, 0xc1e1d369 ),
	NORM( 0xbeed5c27, 0x3f4dbba9, 0xbebf0caa ),
	VERT( 0x423cd76d, 0x422525b9, 0xc1e1d369 ),
	NORM( 0xbe757593, 0x3f655d8b, 0xbebf6f71 ),
	VERT( 0x424acd2a, 0x4223b48a, 0xc1f08fe6 ),
	NORM( 0xb9c9cf93, 0x3f23846a, 0xbf44f8eb ),
	VERT( 0x4257fa60, 0x4221f874, 0xc1f08fe6 ),
	NORM( 0x3e28d963, 0x3f1dd5d3, 0xbf451589 ),
	VERT( 0x426441b4, 0x421ce271, 0xc1f08fe6 ),
	NORM( 0x3ea3312e, 0x3f0d6da4, 0xbf452b98 ),
	VERT( 0x426eccf2, 0x4214cb3f, 0xc1f08fe6 ),
	NORM( 0x3ee6ca27, 0x3ee6d84f, 0xbf453997 ),
	VERT( 0x4276e423, 0x420a4002, 0xc1f08fe6 ),
	NORM( 0x3f0d54d9, 0x3ea32af7, 0xbf453ea7 ),
	VERT( 0x427bfa27, 0x41fbf15b, 0xc1f08fe6 ),
	NORM( 0x3f1da8a3, 0x3e28cd0e, 0xbf453a5a ),
	VERT( 0x427db63c, 0x41e196f1, 0xc1f08fe6 ),
	NORM( 0x3f234587, 0xb99079c6, 0xbf452d0f ),
	VERT( 0x427bfa27, 0x41c73c88, 0xc1f08fe6 ),
	NORM( 0x3f1dc83e, 0xbe297f6f, 0xbf451781 ),
	VERT( 0x4276e423, 0x41aeaddf, 0xc1f08fe6 ),
	NORM( 0x3f0d8ba0, 0xbea3b290, 0xbf44fb3f ),
	VERT( 0x426eccf2, 0x41999765, 0xc1f08fe6 ),
	NORM( 0x3ee748cc, 0xbee79f6b, 0xbf44da0d ),
	VERT( 0x426441b4, 0x41896900, 0xc1f08fe6 ),
	NORM( 0x3ea39ef4, 0xbf0df119, 0xbf44b640 ),
	VERT( 0x4257fa60, 0x417e79f6, 0xc1f08fe6 ),
	NORM( 0x3e29583a, 0xbf1e70cd, 0xbf449237 ),
	VERT( 0x424acd2a, 0x41778999, 0xc1f08fe6 ),
	NORM( 0xb9cae1e2, 0xbf24283d, 0xbf447078 ),
	VERT( 0x423d9ff7, 0x417e79f6, 0xc1f08fe6 ),
	NORM( 0xbe2a6348, 0xbf1eacd2, 0xbf445356 ),
	VERT( 0x423158a1, 0x41896900, 0xc1f08fe6 ),
	NORM( 0xbea47c52, 0xbf0e590a, 0xbf443cd8 ),
	VERT( 0x4226cd66, 0x41999765, 0xc1f08fe6 ),
	NORM( 0xbee89dd0, 0xbee88f4d, 0xbf442e99 ),
	VERT( 0x421eb633, 0x41aeaddf, 0xc1f08fe6 ),
	NORM( 0xbf0e71e7, 0xbea48237, 0xbf442990 ),
	VERT( 0x4219a031, 0x41c73c88, 0xc1f08fe6 ),
	NORM( 0xbf1eda0c, 0xbe2a6f47, 0xbf442e1a ),
	VERT( 0x4217e419, 0x41e196f1, 0xc1f08fe6 ),
	NORM( 0xbf246720, 0xb9918c77, 0xbf443bda ),
	VERT( 0x4219a031, 0x41fbf15b, 0xc1f08fe6 ),
	NORM( 0xbf1eb9e0, 0x3e29bb59, 0xbf4451e1 ),
	VERT( 0x421eb633, 0x420a4002, 0xc1f08fe6 ),
	NORM( 0xbf0e3a3a, 0x3ea3f947, 0xbf446e93 ),
	VERT( 0x4226cd66, 0x4214cb3f, 0xc1f08fe6 ),
	NORM( 0xbee81d56, 0x3ee7c65b, 0xbf448fff ),
	VERT( 0x423158a1, 0x421ce271, 0xc1f08fe6 ),
	NORM( 0xbea40d2c, 0x3f0dd4a8, 0xbf44b3d0 ),
	VERT( 0x423d9ff7, 0x4221f874, 0xc1f08fe6 ),
	NORM( 0xbe29e2d9, 0x3f1e1149, 0xbf44d796 ),
	VERT( 0x424ade89, 0x4219183d, 0xc1f451ad ),
	NORM( 0x38d974b9, 0x3e328300, 0xbf7c147e ),
	VERT( 0x4255475f, 0x4217b969, 0xc1f451ad ),
	NORM( 0x3d39545a, 0x3e2ca4f7, 0xbf7c11c0 ),
	VERT( 0x425efa9a, 0x4213b4d3, 0xc1f451ad ),
	NORM( 0x3db2f071, 0x3e1ae87f, 0xbf7c1035 ),
	VERT( 0x42674f01, 0x420d5094, 0xc1f451ad ),
	NORM( 0x3dfcfef6, 0x3dfd0934, 0xbf7c0ffb ),
	VERT( 0x426db33e, 0x4204fc2e, 0xc1f451ad ),
	NORM( 0x3e1ad3fd, 0x3db2e907, 0xbf7c1114 ),
	VERT( 0x4271b7d6, 0x41f691e6, 0xc1f451ad ),
	NORM( 0x3e2c7ed6, 0x3d394570, 0xbf7c136d ),
	VERT( 0x427316a9, 0x41e1c03b, 0xc1f451ad ),
	NORM( 0x3e324dbe, 0x3900f3fe, 0xbf7c16d9 ),
	VERT( 0x4271b7d6, 0x41ccee91, 0xc1f451ad ),
	NORM( 0x3e2be731, 0xbd37a14a, 0xbf7c1b1a ),
	VERT( 0x426db33e, 0x41b9881b, 0xc1f451ad ),
	NORM( 0x3e19cd8f, 0xbdb139b5, 0xbf7c1fe1 ),
	VERT( 0x42674f01, 0x41a8df4f, 0xc1f451ad ),
	NORM( 0x3dfaa1a3, 0xbdfa2c77, 0xbf7c24db ),
	VERT( 0x425efa9a, 0x419c16d1, 0xc1f451ad ),
	NORM( 0x3db0e4ce, 0xbe18e415, 0xbf7c29af ),
	VERT( 0x4255475f, 0x41940da4, 0xc1f451ad ),
	NORM( 0x3d36f7c1, 0xbe2a33ad, 0xbf7c2e0c ),
	VERT( 0x424ade89, 0x41914ffa, 0xc1f451ad ),
	NORM( 0x38d3345b, 0xbe2feb1c, 0xbf7c31a7 ),
	VERT( 0x424075b5, 0x41940da4, 0xc1f451ad ),
	NORM( 0xbd359e83, 0xbe29b6fe, 0xbf7c3446 ),
	VERT( 0x4236c279, 0x419c16d1, 0xc1f451ad ),
	NORM( 0xbdaf80f7, 0xbe180be8, 0xbf7c35bd ),
	VERT( 0x422e6e14, 0x41a8df4f, 0xc1f451ad ),
	NORM( 0xbdf84295, 0xbdf83899, 0xbf7c35f5 ),
	VERT( 0x422809d5, 0x41b9881b, 0xc1f451ad ),
	NORM( 0xbe181fbd, 0xbdaf8825, 0xbf7c34ea ),
	VERT( 0x4224053f, 0x41ccee91, 0xc1f451ad ),
	NORM( 0xbe29dc03, 0xbd35ace1, 0xbf7c32ad ),
	VERT( 0x4222a66a, 0x41e1c03b, 0xc1f451ad ),
	NORM( 0xbe301f20, 0x38fbae20, 0xbf7c2f63 ),
	VERT( 0x4224053f, 0x41f691e6, 0xc1f451ad ),
	NORM( 0xbe2a7083, 0x3d374804, 0xbf7c2b40 ),
	VERT( 0x422809d5, 0x4204fc2e, 0xc1f451ad ),
	NORM( 0xbe192121, 0x3db12fd8, 0xbf7c268c ),
	VERT( 0x422e6e14, 0x420d5094, 0xc1f451ad ),
	NORM( 0xbdfa95ac, 0x3dfb0b19, 0xbf7c2195 ),
	VERT( 0x4236c279, 0x4213b4d3, 0xc1f451ad ),
	NORM( 0xbdb184ee, 0x3e1a0b3d, 0xbf7c1cb3 ),
	VERT( 0x424075b5, 0x4217b969, 0xc1f451ad ),
	NORM( 0xbd37f211, 0x3e2c251b, 0xbf7c183b ),
	VERT( 0x40252c86, 0xc22be9a5, 0xc02b9d15 ),
	NORM( 0x3cf6ef9f, 0xbf7fe1d8, 0xbb5da82c ),
	VERT( 0x4062868a, 0xc22be93c, 0x3edc664d ),
	NORM( 0x3e3cf4a2, 0xbf2e95cf, 0x3f352ce2 ),
	VERT( 0x39a49c77, 0xc22c595c, 0x3f9fb5d4 ),
	NORM( 0xbacaa240, 0xbf2b5053, 0x3f3e3ade ),
	VERT( 0x4062868a, 0xc22bdb9f, 0x3edc664d ),
	NORM( 0x3e6666b6, 0x00000000, 0x3f796f8f ),
	VERT( 0x40df4d1d, 0xc22c0c85, 0xc02a1a48 ),
	NORM( 0xbd2c24db, 0xbf7fc5d8, 0x3b35b6b7 ),
	VERT( 0x4062868a, 0xc22be93c, 0x3edc664d ),
	NORM( 0x3f09cf26, 0xbf15f1c8, 0x3f1b1df5 ),
	VERT( 0x40252c86, 0xc22be9a5, 0xc02b9d15 ),
	NORM( 0x3c1ebb86, 0xbf7ffce7, 0x3a4f88a7 ),
	VERT( 0x40df4c65, 0xc22c2334, 0xc0a7ab69 ),
	NORM( 0xbd522311, 0xbf7fa9ab, 0x3a77a551 ),
	VERT( 0x40252c86, 0xc22be9a5, 0xc0a7ab69 ),
	NORM( 0x3c83d741, 0xbf7ff783, 0xb8a1e2ce ),
	VERT( 0xbdb6c38b, 0xc22c61c1, 0xc0a7ab69 ),
	NORM( 0xbacb2ef1, 0xbf7fffec, 0xb83c2507 ),
	VERT( 0x40252c86, 0xc22be93c, 0xc103080c ),
	NORM( 0x3c7ee9b3, 0xbf7ff811, 0xb984b2ea ),
	VERT( 0x40df4c6d, 0xc22c2204, 0xc103080c ),
	NORM( 0xbd54bce9, 0xbf7fa78b, 0xb9883412 ),
	VERT( 0x4062868a, 0xc22bdb9f, 0x3edc664d ),
	NORM( 0x3f2b0e42, 0x00000000, 0x3f3e7664 ),
	VERT( 0x41bd6b0e, 0xc2323d38, 0xc02b9d15 ),
	NORM( 0xbe290a3e, 0xbf7c7cb9, 0x3b0d31b4 ),
	VERT( 0x41bd6b0e, 0xc2323d38, 0xc0a7ab69 ),
	NORM( 0xbe29ac5a, 0xbf7c760c, 0x3a875c32 ),
	VERT( 0x421fa9cf, 0xc24254a7, 0xc0a7ab69 ),
	NORM( 0xbe752ae8, 0xbf788def, 0x3822d158 ),
	VERT( 0x4220dde2, 0xc24254a7, 0xc02ce057 ),
	NORM( 0xbe741b81, 0xbf789ea0, 0x00000000 ),
	VERT( 0x41bd6b03, 0xc2323cdc, 0xc103080c ),
	NORM( 0xbe2a3de6, 0xbf7c6ff5, 0xb8b73034 ),
	VERT( 0x421fa226, 0xc242539c, 0xc103080c ),
	NORM( 0xbe764e80, 0xbf787bea, 0x38a8e49a ),
	VERT( 0x4194d73f, 0x40ab4920, 0xc028a0d8 ),
	NORM( 0xbaa92415, 0x3f7fffe3, 0xbaae363c ),
	VERT( 0x41bd5005, 0x40ab4920, 0x4176c878 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x41bd5005, 0x40ab4920, 0xc028a0d8 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x427057f6, 0x4172b23b, 0xbf307fa0 ),
	NORM( 0x3cd11641, 0x3f4ba321, 0x3f1b0029 ),
	VERT( 0x427057f6, 0x412e1b1b, 0x40efdf7d ),
	NORM( 0xbf1f5b9c, 0x3f41869b, 0x3e4f6a80 ),
	VERT( 0x42809932, 0x412e1b1b, 0x40c97436 ),
	NORM( 0x3e50bbb7, 0x3f50fb0c, 0x3f0a58ec ),
	VERT( 0x42715045, 0x40ad93e5, 0x416275ca ),
	NORM( 0x3ef2504a, 0x3e58ca24, 0x3f5ae7d6 ),
	VERT( 0x428b5f5c, 0x4182913e, 0xc002bf70 ),
	NORM( 0x3f37d10f, 0x3f0140b7, 0x3ef548eb ),
	VERT( 0x41ed16e5, 0x42375325, 0x41da7b8f ),
	NORM( 0x3f6ed886, 0xbd6c689b, 0x3eb5e216 ),
	VERT( 0x41ed16e5, 0x42375325, 0x41da7b8f ),
	NORM( 0x3e54c6b0, 0x3f726860, 0x3e7b3bd1 ),
	VERT( 0x41e6a654, 0x41cdd7d4, 0x41da0d35 ),
	NORM( 0x3f65d227, 0xbd8f9521, 0x3edead3b ),
	VERT( 0x41f961bb, 0x41cdd7d4, 0xbed0f839 ),
	NORM( 0x3f7abd0a, 0xbd0c1a2c, 0x3e4b8d15 ),
	VERT( 0x4200a10d, 0x424f8248, 0xbf4b2f1f ),
	NORM( 0x3e5e343f, 0x3f76eff8, 0x3e1977b1 ),
	VERT( 0x4200a10d, 0x424f8248, 0xbf4b2f1f ),
	NORM( 0x3e82d26d, 0x3f710fb9, 0x3e60629a ),
	VERT( 0x4200a10d, 0x424f8248, 0xbf4b2f1f ),
	NORM( 0x3f5dbb90, 0xbdb5966d, 0x3efbd624 ),
	VERT( 0x41a01478, 0x41cdd7d4, 0x4210f331 ),
	NORM( 0x3eebc0ea, 0xbe28f7e5, 0x3f5f493c ),
	VERT( 0x41a57921, 0x4232bc98, 0x421a1136 ),
	NORM( 0x3f10c213, 0xbe010545, 0x3f50aa01 ),
	VERT( 0x41a01478, 0x40a86af4, 0x41f68314 ),
	NORM( 0x3e805d41, 0xbe55d12a, 0x3f71fd83 ),
	VERT( 0x41dcfd7c, 0x40055fdb, 0x41db8afe ),
	NORM( 0x3f47ab20, 0xbe2c1c36, 0x3f1a53f9 ),
	VERT( 0x41f6be26, 0x409994be, 0xc002d472 ),
	NORM( 0x3f2354f4, 0xbc5f28bc, 0x3f451864 ),
	VERT( 0x418a0bba, 0xc115e9e6, 0x41ad78ab ),
	NORM( 0x3f7dbd2e, 0xbd5b16ee, 0x3df88505 ),
	VERT( 0x41a0f9bc, 0xc1ce04de, 0x3edc5e5f ),
	NORM( 0x3f004eac, 0xbeaf0867, 0x3f4b812c ),
	VERT( 0x41a243d6, 0xc0bde449, 0xbfc3c946 ),
	NORM( 0x3f29d4c4, 0xbecfc55c, 0x3f20f042 ),
	VERT( 0x418a0bba, 0xc093d40c, 0x41c63a41 ),
	NORM( 0x3e9bc2e1, 0xbf355ad6, 0x3f230973 ),
	VERT( 0x41d77704, 0xbfc33135, 0x41d50910 ),
	NORM( 0x3f1dc21e, 0xbf206f58, 0x3ef4345a ),
	VERT( 0x419199f6, 0x406fc1fa, 0x41f68314 ),
	NORM( 0x3d74005f, 0xbecd34e6, 0x3f6a0af0 ),
	VERT( 0x414af443, 0x406fc1f6, 0x41f68315 ),
	NORM( 0x3cf9c69e, 0xbec8f429, 0x3f6b5414 ),
	VERT( 0x4231ae7c, 0x40ad93e5, 0x40885ff7 ),
	NORM( 0xbf61f2c9, 0x3e2ebf1c, 0x3ee04660 ),
	VERT( 0x4231ae7c, 0x411e7d4b, 0x3fd59d2d ),
	NORM( 0xbf5847f2, 0x3d873904, 0x3f07ea2a ),
	VERT( 0x42202f8f, 0xbf0d7080, 0xc02a1a48 ),
	NORM( 0xbedac6e7, 0x3d3ed368, 0x3f672511 ),
	VERT( 0x421fb8c0, 0xc0794aae, 0xc02a1a48 ),
	NORM( 0xbedafa1d, 0xbca8b5f7, 0x3f67584d ),
	VERT( 0x424560f4, 0x40ad93e5, 0x416275ca ),
	NORM( 0xbf19c982, 0x3ddf1e56, 0x3f4ac012 ),
	VERT( 0x42318376, 0x4140f103, 0x3fb78dfc ),
	NORM( 0xbf073856, 0x3eec1ada, 0x3f36863f ),
	VERT( 0x41bd6b0e, 0xc2323d38, 0xc02b9d15 ),
	NORM( 0xba8a64a2, 0xbc5ea0cf, 0x3f7ff9ea ),
	VERT( 0x40da8169, 0xc203f377, 0xc020535a ),
	NORM( 0x3ce8ce19, 0xbe844ebb, 0x3f7732a3 ),
	VERT( 0x40df4d1d, 0xc22c0c85, 0xc02a1a48 ),
	NORM( 0x3eb087cc, 0xbc0bd7e2, 0x3f704ae0 ),
	VERT( 0x41bd7f37, 0xc1f8400a, 0xc020535a ),
	NORM( 0x3dac7742, 0xbdb21567, 0x3f7e1e16 ),
	VERT( 0x421fa08a, 0xc23869f6, 0xc02a1a48 ),
	NORM( 0xbef0d5e5, 0xbd1bc2e4, 0x3f61b35f ),
	VERT( 0x42202b8a, 0xc1dcab20, 0xc02a1a48 ),
	NORM( 0xbef77b99, 0x3b2f3e45, 0x3f601b31 ),
	VERT( 0x42202f8f, 0xc16ca72c, 0xc02a1a48 ),
	NORM( 0xbeefaa71, 0xbbf45726, 0x3f623697 ),
	VERT( 0x41bdc3b6, 0xc085d561, 0xbfd86ae3 ),
	NORM( 0x3eaf28dc, 0xbf107eed, 0x3f4051c2 ),
	VERT( 0x41d77704, 0xbfc33135, 0xbed6d913 ),
	NORM( 0x3f14042d, 0xbf077982, 0x3f1efa33 ),
	VERT( 0x42201867, 0x411e05c9, 0xc02a1a48 ),
	NORM( 0xbea84b08, 0xbd265830, 0x3f718d43 ),
	VERT( 0x422034c6, 0x41873367, 0xc002c410 ),
	NORM( 0xbd2bdd28, 0x3e4377b5, 0x3f7b1023 ),
	VERT( 0x42058816, 0x41ef721f, 0xc0024d0e ),
	NORM( 0x3efa871e, 0x3d8e39b4, 0x3f5e8d06 ),
	VERT( 0x42255ff3, 0x424c8280, 0xc0d093c1 ),
	NORM( 0x3e252df5, 0x3f747194, 0x3e7f700e ),
	VERT( 0x42255ff3, 0x424c8280, 0xc0d093c1 ),
	NORM( 0x3e5e3442, 0x3f76eff8, 0x3e1977b1 ),
	VERT( 0x42255ff3, 0x424c8280, 0xc0d093c1 ),
	NORM( 0x3eb8efcc, 0xbe054c3d, 0x3f6c610d ),
	VERT( 0x421c06b9, 0x42349efb, 0xc0eeb270 ),
	NORM( 0x3e84ca37, 0xbd8a3ada, 0x3f76a2bb ),
	VERT( 0x42301b2d, 0x41ef721f, 0xc0d98b89 ),
	NORM( 0x3e2c12ae, 0x3e47d318, 0x3f775da2 ),
	VERT( 0x42301b2d, 0x424c0312, 0xc0f8d986 ),
	NORM( 0x3e252df5, 0x3f747194, 0x3e7f700e ),
	VERT( 0x42301b2d, 0x424c0312, 0xc0f8d986 ),
	NORM( 0x3e901bd2, 0x3ee58dc7, 0x3f593003 ),
	VERT( 0x42301b2d, 0x424c0312, 0xc0f8d986 ),
	NORM( 0x3e2495ed, 0x3f72ba1b, 0x3e8c611c ),
	VERT( 0x41bdaadb, 0x4259bddf, 0xc0f8d986 ),
	NORM( 0x3e252df5, 0x3f747194, 0x3e7f700f ),
	VERT( 0x41bdaadb, 0x4259bddf, 0xc0f8d986 ),
	NORM( 0x3e41b70e, 0x3f7566f7, 0x3e59eebb ),
	VERT( 0x41bdaadb, 0x4259bddf, 0xc0f8d986 ),
	NORM( 0xbf7fef0c, 0xbb4496fe, 0xbcb8af94 ),
	VERT( 0x4239a958, 0x412e1b1b, 0x40efdf7d ),
	NORM( 0xbf33ba5d, 0x3f18ea4d, 0x3ec68090 ),
	VERT( 0x424556c7, 0x40f2c337, 0x4168e0f5 ),
	NORM( 0xbf0bfd01, 0xbd34c47e, 0x3f56095a ),
	VERT( 0x42452047, 0x41870835, 0xc00ac29d ),
	NORM( 0xbc3be5f7, 0x3f040d75, 0x3f5b4b0e ),
	VERT( 0x42452047, 0x41c2f4df, 0xc09a69fc ),
	NORM( 0x3bcdc16b, 0x3b94ad19, 0x3f7ffe09 ),
	VERT( 0x418c5462, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x41bc8c15, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x41bc8c15, 0x424a93de, 0xc0ddde6a ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x418c5462, 0x424a93de, 0xbf67fd8e ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x4220dde2, 0xc24254a7, 0xc02ce057 ),
	NORM( 0xbb4eb9ae, 0xbc926907, 0x3f7ff535 ),
	VERT( 0x406284c3, 0xc1dcab22, 0x3edc9cfc ),
	NORM( 0x3e8e1205, 0xbede44b8, 0x3f5b680c ),
	VERT( 0x418a0bba, 0xc115e9e6, 0x41ad78ab ),
	NORM( 0x3db4f0c2, 0xbf31df7f, 0x3f36b7a5 ),
	VERT( 0xbb99c2eb, 0xc13309e2, 0x41b0bf3e ),
	NORM( 0xbbd0c730, 0xbf36c888, 0x3f333b07 ),
	VERT( 0x41bd49ed, 0x42570b1e, 0xbf1d972d ),
	NORM( 0x3e5e3440, 0x3f76eff8, 0x3e1977b1 ),
	VERT( 0x41bd49ed, 0x42570b1e, 0xbf1d972d ),
	NORM( 0x3e82d26c, 0x3f710fb9, 0x3e60629a ),
	VERT( 0x41bd49ed, 0x42570b1e, 0xbf1d972d ),
	NORM( 0xbf7ffce5, 0xbc0144e1, 0xbbbabadc ),
	VERT( 0x42301b2d, 0x424e3006, 0xc126167e ),
	NORM( 0x3e29e4eb, 0x3f79b0e6, 0x3e14efff ),
	VERT( 0x41bec926, 0x425d243a, 0xc149058f ),
	NORM( 0x3e29e4ec, 0x3f79b0e6, 0x3e14efff ),
	VERT( 0x41bec926, 0x425b0c0b, 0xc10fcae6 ),
	NORM( 0x3e29e4ec, 0x3f79b0e6, 0x3e14effe ),
	VERT( 0x42301b2d, 0x424d513e, 0xc10fcae6 ),
	NORM( 0x3e29e4ec, 0x3f79b0e6, 0x3e14efff ),
	VERT( 0xbb99c2eb, 0x4248a948, 0x41a5ef8d ),
	NORM( 0x39a5cb11, 0xb8c4c61f, 0xbf7fffff ),
	VERT( 0xbb99c2eb, 0x4248a948, 0x41a5ef8d ),
	NORM( 0x3c023654, 0x3f796314, 0x3e6719d2 ),
	VERT( 0x41157033, 0x4247ab31, 0x41a5dd6a ),
	NORM( 0xb9a775c6, 0xb94ba290, 0xbf7fffff ),
	VERT( 0x4194e35f, 0x4246ad1a, 0x41a5cb47 ),
	NORM( 0xbecae155, 0x3a928aa3, 0xbf6b0b57 ),
	VERT( 0x4194dd0d, 0x40ab4920, 0x41a5dcf4 ),
	NORM( 0xbec81adf, 0x3a9027fb, 0xbf6ba369 ),
	VERT( 0x41bd5005, 0x40ab4920, 0x4176c878 ),
	NORM( 0xbf6d263d, 0xbb48ceb1, 0xbec0d3b7 ),
	VERT( 0x41bd5005, 0x4248bcd3, 0x41791320 ),
	NORM( 0xbf70460d, 0xbb66cd4b, 0xbeb0ad8a ),
	VERT( 0x41bdb17c, 0x424bc3d1, 0xc0fb6615 ),
	NORM( 0xbf7ffd19, 0xbbfb6bbb, 0xbbb26be3 ),
	VERT( 0x41bd5005, 0x40dc45dc, 0xc04694a4 ),
	NORM( 0xbf7ffce5, 0xbc0144e1, 0xbbbabadc ),
	VERT( 0x41bd5005, 0x40ab4920, 0xc028a0d8 ),
	NORM( 0xbf7ffce5, 0xbc0144e1, 0xbbbabadd ),
	VERT( 0xb9c23ab2, 0x41d771f6, 0x4210fb91 ),
	NORM( 0x3d2a0ab8, 0x3d15a5c6, 0x3f7f9bb6 ),
	VERT( 0x3fc24d55, 0x41e11142, 0x4212977e ),
	NORM( 0xbdfd1712, 0x3deca86b, 0x3f7c4f35 ),
	VERT( 0x3fc24d55, 0x423c182d, 0x4208a076 ),
	NORM( 0xbedbfc1a, 0x3dd9933b, 0x3f658f7a ),
	VERT( 0x3f4ba82f, 0x423c304a, 0x42089dee ),
	NORM( 0x39c8651e, 0x3ded9c24, 0x3f7e456b ),
	VERT( 0x4019d412, 0x42034536, 0x42159af4 ),
	NORM( 0xbf61b5ac, 0x3d6b5eac, 0x3eefca1d ),
	VERT( 0x4019d412, 0x42371bd8, 0x421d78f6 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x4019d412, 0x423a725d, 0x420f2eae ),
	NORM( 0xbf7277e8, 0x3d200784, 0x3ea308ca ),
	VERT( 0x3ffafabc, 0x41f3cdd7, 0x42141939 ),
	NORM( 0xbf5c14b8, 0x3d7ece38, 0x3f01cb8b ),
	VERT( 0x3ffafabc, 0x423b4545, 0x420be792 ),
	NORM( 0xbf5c14b8, 0x3d7ece38, 0x3f01cb8b ),
	VERT( 0x3fc24d55, 0x423c182d, 0x4208a076 ),
	NORM( 0x3d0862e6, 0x3f786d7b, 0x3e74da26 ),
	VERT( 0x3fb6c306, 0x4248bb65, 0x41a566bc ),
	NORM( 0x3cdc7497, 0x3f7870d4, 0x3e757662 ),
	VERT( 0x41bd5005, 0x4248bcd3, 0x41791320 ),
	NORM( 0x3e18e775, 0x3f74fd45, 0x3e7eb72b ),
	VERT( 0x41bd5005, 0x4248bcd3, 0x41791320 ),
	NORM( 0x3e7a94f8, 0x3f716e79, 0x3e668f47 ),
	VERT( 0x41bd5005, 0x4248bcd3, 0x41791320 ),
	NORM( 0x3dab002c, 0x3f77b4d4, 0x3e73fd36 ),
	VERT( 0x4194e35f, 0x4246ad1a, 0x41a5cb47 ),
	NORM( 0x3d87acd0, 0x3f77a573, 0x3e7a6e17 ),
	VERT( 0x418fab1d, 0x4238b6a8, 0x42085e4d ),
	NORM( 0x3d83d457, 0x3f77d4d8, 0x3e780052 ),
	VERT( 0x418ef40c, 0x42373636, 0x420e9617 ),
	NORM( 0x3d898951, 0x3f781b91, 0x3e72c054 ),
	VERT( 0x419199f6, 0x4233692e, 0x421d7020 ),
	NORM( 0x3e18e774, 0x3f74fd45, 0x3e7eb72c ),
	VERT( 0x419199f6, 0x4233692e, 0x421d7020 ),
	NORM( 0x3d6dbe46, 0x3f785f68, 0x3e70df62 ),
	VERT( 0x40199e0f, 0x42371fec, 0x421d6da6 ),
	NORM( 0x3d57e037, 0x3f787dcd, 0x3e703302 ),
	VERT( 0x40199e0f, 0x423a6b3b, 0x420f37ab ),
	NORM( 0x3d5599d8, 0x3f786783, 0x3e71c323 ),
	VERT( 0x41a57921, 0x4232bc98, 0x421a1136 ),
	NORM( 0x3e473897, 0x3f72a69f, 0x3e813e70 ),
	VERT( 0x41a57921, 0x4232bc98, 0x421a1136 ),
	NORM( 0x3e18e774, 0x3f74fd45, 0x3e7eb72b ),
	VERT( 0x3fc24d55, 0x41e11142, 0x4212977e ),
	NORM( 0xbcb9b44d, 0xbe15abcf, 0x3f7d2f27 ),
	VERT( 0x3f49dc21, 0x41d7748b, 0x4211ce79 ),
	NORM( 0xbdf9a4c6, 0xbdb112fd, 0x3f7d2004 ),
	VERT( 0x40e3265f, 0x41d772bc, 0x4211d04c ),
	NORM( 0xb9f8c40a, 0xbe26efa7, 0x3f7c9343 ),
	VERT( 0x35482c2f, 0x41cdd607, 0x4210fe27 ),
	NORM( 0x3abc799d, 0xbe2eb8dd, 0x3f7c3ee4 ),
	VERT( 0x40cc1792, 0x41cdd605, 0x4210fe26 ),
	NORM( 0xb9c28810, 0xbe50b10f, 0x3f7aa08e ),
	VERT( 0x414adcb4, 0x41cdd436, 0x4211091b ),
	NORM( 0xbb247164, 0xbe4bfb75, 0x3f7ade5b ),
	VERT( 0x40f151b8, 0x41ea2f51, 0x42135208 ),
	NORM( 0x3aa25142, 0xbe21212b, 0x3f7ccf87 ),
	VERT( 0x4019d412, 0x42034536, 0x42159af4 ),
	NORM( 0x3894dfd7, 0xbe1f714b, 0x3f7ce0b1 ),
	VERT( 0x3ffafabc, 0x41f3cdd7, 0x42141939 ),
	NORM( 0x394a4352, 0xbe22a47a, 0x3f7cc013 ),
	VERT( 0x414adcb3, 0x4235ba2a, 0x421d78f6 ),
	NORM( 0xbc06ab97, 0xbe1f141d, 0x3f7ce21e ),
	VERT( 0x4019d412, 0x42371bd8, 0x421d78f6 ),
	NORM( 0xbba5442e, 0xbe19a532, 0x3f7d193e ),
	VERT( 0x4286afd7, 0x40ad93e5, 0x40fe8745 ),
	NORM( 0x3f473f49, 0x3ea04f6a, 0x3f0b536e ),
	VERT( 0x428bc4ac, 0x4153b790, 0xbf98c8ee ),
	NORM( 0x3f68afc9, 0x3e37c72c, 0x3ec0afbe ),
	VERT( 0x42707233, 0x40f2c337, 0x4168e0f5 ),
	NORM( 0x3efebc11, 0xbd9ecec5, 0x3f5d2d73 ),
	VERT( 0x42753277, 0x4123c948, 0x414674fa ),
	NORM( 0x3f279a3d, 0x3f11b205, 0x3efeb3ac ),
	VERT( 0x427074a2, 0x4114268f, 0x416904a2 ),
	NORM( 0x3ed94e75, 0x3ed3624f, 0x3f4e4cca ),
	VERT( 0x42452047, 0x412e1b1b, 0x40efdf7d ),
	NORM( 0x3f3c770d, 0x3f297c09, 0x3e0fc607 ),
	VERT( 0x424270c1, 0x4123c949, 0x414674fa ),
	NORM( 0xbf1efc0d, 0x3f243b32, 0x3ee68c19 ),
	VERT( 0x42452047, 0x412eac65, 0x413f05ac ),
	NORM( 0x3d1a3681, 0x3f52a02c, 0x3f113075 ),
	VERT( 0x427057f6, 0x412eac65, 0x413f05ac ),
	NORM( 0xbe2c3068, 0x3f50e186, 0x3f0d9a9d ),
	VERT( 0x427057f6, 0x418bd29b, 0xc01b325f ),
	NORM( 0x3d5c15e8, 0x3f06ad88, 0x3f59468b ),
	VERT( 0x428b27f8, 0x41902acd, 0xc06eb352 ),
	NORM( 0x3f48e7a9, 0x3eaca961, 0x3f051e04 ),
	VERT( 0x4289c2c7, 0x41ef721f, 0xc0d98b89 ),
	NORM( 0x3f39f2b8, 0x3e841778, 0x3f23162d ),
	VERT( 0x427057f6, 0x41c2f4df, 0xc09b1c56 ),
	NORM( 0xb80bdd05, 0xbb0e50d7, 0x3f7fffd8 ),
	VERT( 0x42301b2d, 0x424d513e, 0xc10fcae6 ),
	NORM( 0x3e2495ed, 0x3f72ba1b, 0x3e8c611c ),
	VERT( 0x42301b2d, 0x424d513e, 0xc10fcae6 ),
	NORM( 0x3e6b0303, 0x3f73d31b, 0x3e4d46b5 ),
	VERT( 0x41bec926, 0x425b0c0b, 0xc10fcae6 ),
	NORM( 0xbf7fd048, 0x3a622b16, 0xbd1c3cc9 ),
	VERT( 0x41bec926, 0x425b0c0b, 0xc10fcae6 ),
	NORM( 0x3e2495ed, 0x3f72ba1b, 0x3e8c611c ),
	VERT( 0x42452047, 0x41c2f4df, 0xc10a37ad ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x427057f6, 0x41c2f4df, 0xc10a37ad ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4289c2c7, 0x41ef721f, 0xc117988a ),
	NORM( 0x3f7b1f3d, 0x3e46ef48, 0x3b0aa903 ),
	VERT( 0x4289c2c7, 0x41ef721f, 0xc100b86c ),
	NORM( 0x3f7ae9a6, 0x3e49af9d, 0x3cc1516a ),
	VERT( 0x428b27f8, 0x41902acd, 0xc0aab2af ),
	NORM( 0x3f7f856f, 0x3d7a6443, 0x317f0bf3 ),
	VERT( 0x427c13bd, 0x423be19f, 0xc126167e ),
	NORM( 0x3f2a2899, 0x3f3e97c0, 0x3d801d01 ),
	VERT( 0x427c13bd, 0x423b02d7, 0xc10fcae6 ),
	NORM( 0x3f28f23c, 0x3f3cfd57, 0x3e0ee3d3 ),
	VERT( 0x427c13bd, 0x4239b4ab, 0xc0f8d986 ),
	NORM( 0x3f05423e, 0x3f09728d, 0x3f29f5af ),
	VERT( 0x42301b2d, 0x424e3006, 0xc126167e ),
	NORM( 0x3e6e69f8, 0x3f779a01, 0x3dd022b4 ),
	VERT( 0x4289c2c7, 0x41ef721f, 0xc1457608 ),
	NORM( 0x3f7aa939, 0x3e4ffc48, 0x3b990a34 ),
	VERT( 0x428b27f8, 0x41902acd, 0xc1246be6 ),
	NORM( 0x3f7f86a1, 0x3d792b29, 0x00000000 ),
	VERT( 0x427c13bd, 0x423c7624, 0xc14f7c0e ),
	NORM( 0x3f282347, 0x3f40cfac, 0x3d1760cb ),
	VERT( 0x42301b2d, 0x424ec48a, 0xc1549882 ),
	NORM( 0x3e6f1522, 0x3f7888d0, 0x3d5eeadf ),
	VERT( 0x4240fefc, 0xc28d518f, 0x40f1d930 ),
	NORM( 0xbf1af895, 0xbf198c4b, 0x3f05f391 ),
	VERT( 0x423d2d4a, 0xc28d518f, 0x40307771 ),
	NORM( 0xbf7c1103, 0xbdfb4125, 0x3dfe82bb ),
	VERT( 0x423f696b, 0xc29379ec, 0x3fd13d3c ),
	NORM( 0xbf733ab5, 0xbe8fd0a8, 0x3e0ad752 ),
	VERT( 0x423f9c91, 0xc2920d4e, 0x405d70cf ),
	NORM( 0xbf27bf05, 0xbf2d5ff1, 0x3eab543f ),
	VERT( 0x42429c37, 0xc28d518f, 0x40f265f0 ),
	NORM( 0xbcc594e4, 0xbf4178af, 0x3f2787f9 ),
	VERT( 0x424107f3, 0xc2920d4e, 0x405e08d1 ),
	NORM( 0xbc3ce24e, 0xbf65bfa4, 0x3ee1c4c6 ),
	VERT( 0x42462941, 0xc28d518f, 0x40b1fa0b ),
	NORM( 0x3f53614c, 0xbf060d9b, 0x3e56d1e2 ),
	VERT( 0x42429c37, 0xc28d518f, 0x40f265f0 ),
	NORM( 0x3f47b58a, 0xbf0f1425, 0x3e8ff472 ),
	VERT( 0x424107f3, 0xc2920d4e, 0x405e08d1 ),
	NORM( 0x3f58186c, 0xbf03cfd1, 0x3e19124a ),
	VERT( 0x4240a5d4, 0xc29317c2, 0x400df102 ),
	NORM( 0xbd45ba7a, 0xbf6bc387, 0x3ec5fa1c ),
	VERT( 0x423d2d4a, 0xc28d518f, 0x40307771 ),
	NORM( 0xbf749e47, 0xbe7456b1, 0x3e316252 ),
	VERT( 0x423b0db6, 0xc28d518f, 0x3deda44f ),
	NORM( 0xbf7494ba, 0xbe73cbbe, 0x3e32f273 ),
	VERT( 0x423f0cb5, 0xc293a3ff, 0x3f6ba922 ),
	NORM( 0xbf6c60e9, 0xbeb3501f, 0x3e2123f6 ),
	VERT( 0x423f696b, 0xc29379ec, 0x3fd13d3c ),
	NORM( 0xbe55796f, 0xbf77e038, 0x3e0d287f ),
	VERT( 0x42489f77, 0xc28d518f, 0x40695d20 ),
	NORM( 0x3f3cc95a, 0xbf231864, 0x3e65a0de ),
	VERT( 0x42462941, 0xc28d518f, 0x40b1fa0b ),
	NORM( 0x3f3a8800, 0xbf257057, 0x3e684756 ),
	VERT( 0x4240a5d4, 0xc29317c2, 0x400df102 ),
	NORM( 0x3f2cedcd, 0xbf321bd7, 0x3e7a1570 ),
	VERT( 0x4240a991, 0xc2934fda, 0x3ff2a400 ),
	NORM( 0xbdd273f6, 0xbf712df5, 0x3ea36b23 ),
	VERT( 0x423b0db6, 0xc28d518f, 0x3deda44f ),
	NORM( 0xbf73f371, 0xbe9adf2a, 0xbca831c6 ),
	VERT( 0x423b3695, 0xc28d518f, 0xbf9a0c19 ),
	NORM( 0xbf73eaf5, 0xbe9afcad, 0xbcbceeae ),
	VERT( 0x423f22c7, 0xc293b205, 0x3d9183c9 ),
	NORM( 0xbf685919, 0xbed6e3f9, 0xbc1b91b8 ),
	VERT( 0x423f0cb5, 0xc293a3ff, 0x3f6ba922 ),
	NORM( 0xbe29b487, 0xbf7c5c76, 0x3ce1ed4e ),
	VERT( 0x423b3695, 0xc28d518f, 0xbf9a0c19 ),
	NORM( 0xbf73361c, 0xbe9f192f, 0xbcefd00e ),
	VERT( 0x423b40ae, 0xc28d6ea1, 0xc01a2991 ),
	NORM( 0xbf35f1f6, 0xbe1f2f7a, 0xbf2fa2f7 ),
	VERT( 0x423f4447, 0xc293b205, 0xbf7d9bd6 ),
	NORM( 0xbf12028e, 0xbf16c2d2, 0xbf1296aa ),
	VERT( 0x423f22c7, 0xc293b205, 0x3d9183c9 ),
	NORM( 0xbeb8f0d2, 0xbf6e323c, 0x3d7bdc9b ),
	VERT( 0x424a8c4b, 0xc28d518f, 0x3f924664 ),
	NORM( 0x3f46f189, 0xbf1b79d4, 0xbe28fbfc ),
	VERT( 0x42404298, 0xc293cf17, 0xbf7f8e86 ),
	NORM( 0x3e8aa333, 0xbf354832, 0xbf26efb4 ),
	VERT( 0x42489f77, 0xc28d518f, 0x40695d20 ),
	NORM( 0x3f423cd5, 0xbf2502b7, 0x3dc08a2a ),
	VERT( 0x4240a991, 0xc2934fda, 0x3ff2a400 ),
	NORM( 0x3f42a295, 0xbf261f86, 0x3cf013ef ),
	VERT( 0x4243cd53, 0xc280a879, 0x414f7fc2 ),
	NORM( 0xbf13b695, 0xbed9359b, 0x3f32aab4 ),
	VERT( 0x42378045, 0xc280a879, 0x40525833 ),
	NORM( 0xbf757894, 0xbe1ce9ed, 0x3e74a896 ),
	VERT( 0x4248dfd0, 0xc280a879, 0x414ffb39 ),
	NORM( 0x3eb5c9e7, 0xbf0f77d5, 0x3f3f8c9e ),
	VERT( 0x42566290, 0xc280a879, 0x411bf3b1 ),
	NORM( 0x3f3206fc, 0xbf0e987e, 0x3ee87453 ),
	VERT( 0x42336cb2, 0xc280a879, 0xbfd0479c ),
	NORM( 0xbf76d630, 0xbe721912, 0x3df5dae9 ),
	VERT( 0x425cf1b7, 0xc280a879, 0x40e740b7 ),
	NORM( 0x3f3e23ce, 0xbf1b8b94, 0x3e90100b ),
	VERT( 0x42332504, 0xc280a879, 0xc03d919f ),
	NORM( 0xbf7461d3, 0xbe983ab6, 0x3c8ee1b1 ),
	VERT( 0x425f8d80, 0xc280a879, 0x40918ccf ),
	NORM( 0x3f44f7cf, 0xbf1de2f0, 0x3e2a3ed7 ),
	VERT( 0x423f696b, 0xc29379ec, 0x3fd13d3c ),
	NORM( 0xbe31ead6, 0xbf678e30, 0x3ec76556 ),
	VERT( 0x4240a5d4, 0xc29317c2, 0x400df102 ),
	NORM( 0x3eef9c9c, 0xbf61fa1c, 0x3d2d0802 ),
	VERT( 0x423f0cb5, 0xc293a3ff, 0x3f6ba922 ),
	NORM( 0xbeb6ffd2, 0xbf62acfe, 0x3e9813f0 ),
	VERT( 0x4240a991, 0xc2934fda, 0x3ff2a400 ),
	NORM( 0x3e97c08c, 0xbf744cef, 0x3d1cd454 ),
	VERT( 0x4234eadd, 0xc26ba141, 0x4062f3f0 ),
	NORM( 0xbf727ae7, 0xbdfe2184, 0x3e9765c6 ),
	VERT( 0x4244ad17, 0xc26bc783, 0x417921c9 ),
	NORM( 0xbf124bd2, 0xbe93abf1, 0x3f44ad38 ),
	VERT( 0x422c4c5c, 0xc26b8749, 0xc045795f ),
	NORM( 0xbf754a51, 0xbe6804df, 0x3e3311d5 ),
	VERT( 0x422c4c5c, 0xc26b8749, 0xc08d75a5 ),
	NORM( 0xbf748108, 0xbe9150e0, 0x3dae4871 ),
	VERT( 0x425fc6f0, 0xc26b791d, 0x4134d9ef ),
	NORM( 0x3f2862c5, 0xbecdb8fe, 0x3f2319b9 ),
	VERT( 0x4267d4ab, 0xc26b791d, 0x4116c0de ),
	NORM( 0x3f3ffe12, 0xbedd635e, 0x3f0025b1 ),
	VERT( 0x424bdcf4, 0xc26bad79, 0x417975c5 ),
	NORM( 0x3eae4da7, 0xbec74c89, 0x3f5b1cf7 ),
	VERT( 0x426d6ca6, 0xc26b9b70, 0x40d28ec6 ),
	NORM( 0x3f53c885, 0xbee03fd3, 0x3eb421db ),
	VERT( 0x418c5462, 0x41e0ba79, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x417ca94c, 0x420b9575, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbcb7332b, 0x41fcf639, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbcb7332b, 0x41e0ba79, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xbcb7332b, 0x420b9575, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3f3504f3, 0x3f3504f3 ),
	VERT( 0xbcb7332b, 0x40b134d6, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x418c5462, 0x40b134d6, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x4194dd0d, 0x40ab4920, 0x41a5dcf4 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x417ca94c, 0x40b134d6, 0xbe03a696 ),
	NORM( 0xbf34f6bf, 0xb8f4d04b, 0xbf351326 ),
	VERT( 0xbcb7332b, 0x40b134d6, 0xbe03a696 ),
	NORM( 0x39203272, 0xb981c605, 0xbf7fffff ),
	VERT( 0x417ca94c, 0x420b9575, 0xbe03a696 ),
	NORM( 0x3a20a3e5, 0xb92d0e6c, 0xbf7ffffd ),
	VERT( 0xbb99c2eb, 0x3ff68410, 0x41f69893 ),
	NORM( 0xbbc606aa, 0xbecd188f, 0x3f6a8ee2 ),
	VERT( 0x42452047, 0x40d61205, 0x413f05ac ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42452047, 0x40d61205, 0xc0ad8d29 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42452047, 0x415a1a87, 0x3f5301ba ),
	NORM( 0x3f3f7d09, 0x3f0b870f, 0x3ec1e8e3 ),
	VERT( 0x42452047, 0x41595259, 0xc0c361c0 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42452047, 0x41870835, 0xc00ac29d ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x427057f6, 0x40d61205, 0x413f05ac ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x427057f6, 0x40d61205, 0xc0ab454e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x418c5462, 0x41e0ba79, 0xbf67fd8e ),
	NORM( 0xbec3ef0b, 0x2f3ac812, 0xbf6c8361 ),
	VERT( 0x41bc8c15, 0x41e0ba79, 0xc0ddde6a ),
	NORM( 0x3ec3ef22, 0x00000000, 0xbf6c835c ),
	VERT( 0x41bc8c15, 0x40dac038, 0xc0ddde6a ),
	NORM( 0x3ec3ef20, 0x33037b26, 0xbf6c835c ),
	VERT( 0x41b82767, 0x40dac038, 0xc0cc4bb4 ),
	NORM( 0xbf3504e9, 0x33c69129, 0xbf3504fd ),
	VERT( 0x41b00044, 0x40b134d6, 0xc0abaf2d ),
	NORM( 0xbf3504eb, 0x350d704f, 0xbf3504fc ),
	VERT( 0x418c5462, 0x40b134d6, 0xbf67fd8e ),
	NORM( 0xbec3ef0a, 0x33017556, 0xbf6c8361 ),
	VERT( 0x41bda642, 0x4193f5cf, 0xc0d47868 ),
	NORM( 0xbf70b9ec, 0x3ccd6655, 0x3eadbb4d ),
	VERT( 0x41bdfb08, 0x421c6236, 0xc0e540e8 ),
	NORM( 0xbf741f83, 0x3c1f71ea, 0x3e9a0fa5 ),
	VERT( 0x41bd4963, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0xbf6f2b0f, 0x3e680d37, 0x3e8cfbba ),
	VERT( 0x41bd4963, 0x4085a276, 0xc0897b3f ),
	NORM( 0xbf75def1, 0x3d0d3b17, 0x3e8d8027 ),
	VERT( 0x418c5462, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3ee4f92e, 0x3f64f92e ),
	VERT( 0x417ca94c, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x00000000, 0x3f3504f3, 0x3f3504f3 ),
	VERT( 0x41b56819, 0x4007f034, 0xc02bdf06 ),
	NORM( 0xbe6122ed, 0x3d924c7a, 0x3f7910cb ),
	VERT( 0x41b5c66c, 0x4005af71, 0xc02a1a48 ),
	NORM( 0xbedbb895, 0x3e0e6c65, 0x3f647884 ),
	VERT( 0x41b5dc35, 0x4007c91e, 0xc02a1a48 ),
	NORM( 0xbedbb8f7, 0x3e0e6a9b, 0x3f64787e ),
	VERT( 0x41b6be9f, 0x3fff83c2, 0xc0257307 ),
	NORM( 0xbedbb90d, 0x3e0e687b, 0x3f64788e ),
	VERT( 0x41b092c3, 0x3da8a942, 0xc02a1a46 ),
	NORM( 0xbedbb8a1, 0x3e0e682b, 0x3f6478ab ),
	VERT( 0x41ad798a, 0xbf8e7121, 0xc02a1a4a ),
	NORM( 0xbedbb8a0, 0x3e0e682a, 0x3f6478ac ),
	VERT( 0x41bd7f37, 0x40a82a2b, 0xc02bf9be ),
	NORM( 0xbddb4f85, 0x3beb2879, 0xbf7e8576 ),
	VERT( 0x4220dde2, 0xc24254a7, 0xc02ce057 ),
	NORM( 0xbf6e5f17, 0xbe467d67, 0x3e9e25cc ),
	VERT( 0x4230e473, 0xc2393a0f, 0x4086c5f2 ),
	NORM( 0xbf6d0648, 0xbd96aa2c, 0x3ebdbe70 ),
	VERT( 0x41bd4963, 0x3fff83c2, 0xc0257308 ),
	NORM( 0xbe8bb5f2, 0x3f0e012f, 0x3f49393b ),
	VERT( 0x41bd4963, 0x4006c887, 0xc02af6ed ),
	NORM( 0xb08adbec, 0x3f1e1209, 0x3f495ea1 ),
	VERT( 0x40da7e4a, 0x4006d3d2, 0xc02affcb ),
	NORM( 0x3186de3a, 0x3f1e11e7, 0x3f495ebc ),
	VERT( 0x40da7e06, 0x400510d0, 0xc0299dc3 ),
	NORM( 0x306f3272, 0x3f1e120b, 0x3f495e9f ),
	VERT( 0x419877ea, 0x400510d0, 0xc0299dc3 ),
	NORM( 0xb08adbed, 0x3f1e1209, 0x3f495ea1 ),
	VERT( 0x41b4be59, 0x40050909, 0xc02997a7 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x40da7d3c, 0x3fff83c2, 0xc0257308 ),
	NORM( 0xbe888057, 0x3f288ddd, 0x3f342fdd ),
	VERT( 0x42452309, 0x4114268f, 0x416904a2 ),
	NORM( 0xbee4d125, 0x3efe23a6, 0x3f3e868e ),
	VERT( 0x4194d73f, 0x40ab4920, 0xc028a0d8 ),
	NORM( 0x3aba79f6, 0x3aa30ffa, 0xbf7fffe2 ),
	VERT( 0x41986fa5, 0x4006ee66, 0xc0299b83 ),
	NORM( 0x3bf2a22f, 0xbcbb84e5, 0x3f7fed08 ),
	VERT( 0x40da1d73, 0x4006ee66, 0xc0299b83 ),
	NORM( 0x3ec15300, 0xbf6d0c6f, 0xbb24068b ),
	VERT( 0x40d9cafa, 0x4007c91e, 0xc0299a7a ),
	NORM( 0x3ec15301, 0xbf6d0c70, 0xbb232945 ),
	VERT( 0x40d9c61f, 0x400510d0, 0xc0299dc3 ),
	NORM( 0x3da1f176, 0xbe41d43c, 0xbf7a8e3d ),
	VERT( 0x40252c86, 0x400510d0, 0xc0299dc3 ),
	NORM( 0x3aba79f7, 0x3aa30ffa, 0xbf7fffe2 ),
	VERT( 0x3d8cd3a7, 0x40a82a2b, 0xc02bf9be ),
	NORM( 0xb74f2df2, 0x3f340e72, 0xbf35fa26 ),
	VERT( 0x41bd7f37, 0x402655f3, 0xc02b1f6e ),
	NORM( 0x38b6996c, 0xbb9c8bf2, 0xbf7fff40 ),
	VERT( 0x41bd4f66, 0x40259f25, 0xc02b28fc ),
	NORM( 0x38b6996d, 0xbb9c8bf2, 0xbf7fff40 ),
	VERT( 0x41bd4963, 0x4006d85b, 0xc02b035a ),
	NORM( 0x38b6996c, 0xbb9c8bf3, 0xbf7fff40 ),
	VERT( 0x40da7e4a, 0x4006d85b, 0xc02b035a ),
	NORM( 0x38b6996c, 0xbb9c8bf2, 0xbf7fff40 ),
	VERT( 0x40252c86, 0x4006d85b, 0xc02b035a ),
	NORM( 0x38b6996c, 0xbb9c8bf2, 0xbf7fff40 ),
	VERT( 0x3dbb74bf, 0x4006d85b, 0xc02b035a ),
	NORM( 0x38501af7, 0x3f749c18, 0xbe970631 ),
	VERT( 0x40252c86, 0x4007f034, 0xc02bdf06 ),
	NORM( 0x3a3fa516, 0x38f2b54f, 0x3f7ffffb ),
	VERT( 0x40da7e74, 0x4007f034, 0xc02bdf06 ),
	NORM( 0x3a3fa516, 0x38f2b54f, 0x3f7ffffb ),
	VERT( 0x41be652c, 0x41ef721f, 0xc0d98b89 ),
	NORM( 0xbf71d238, 0x3d23d47c, 0x3ea6c707 ),
	VERT( 0x41bc8c15, 0x41e0ba79, 0x3fb6a4a9 ),
	NORM( 0x3f3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x41bc8c15, 0x40b134d6, 0x3fb6a4a9 ),
	NORM( 0x3f3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x41bc8c15, 0x40b134d6, 0xc090eb01 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41bc8c15, 0x40b134d6, 0xc0abaf2d ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x41bc8c15, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xbde1e65c, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0x321dfee2, 0x3f1e120a, 0x3f495ea0 ),
	VERT( 0x40252c86, 0x4007f034, 0xc02bdf06 ),
	NORM( 0x2e1e4dde, 0x3f1e11e3, 0x3f495ebf ),
	VERT( 0x40252c86, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0xb21d7000, 0x3f1e1209, 0x3f495ea1 ),
	VERT( 0x40da7e74, 0x4007f034, 0xc02bdf06 ),
	NORM( 0x31de38c1, 0x3f1e11e3, 0x3f495ebe ),
	VERT( 0x40daab49, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0x31fc3b7c, 0x3f1e1209, 0x3f495ea1 ),
	VERT( 0x41b56819, 0x4007f034, 0xc02bdf06 ),
	NORM( 0x320321c3, 0x3f1e11e7, 0x3f495ebc ),
	VERT( 0x41bd4963, 0x4006d032, 0xc02afcf2 ),
	NORM( 0x327c15f4, 0x3f1e1208, 0x3f495ea2 ),
	VERT( 0x41bd4963, 0x4082ab7f, 0xc087277b ),
	NORM( 0x327c15f4, 0x3f1e1209, 0x3f495ea1 ),
	VERT( 0x41ac1e0f, 0x4086ce51, 0xc08a66a1 ),
	NORM( 0x327c15f4, 0x3f1e1208, 0x3f495ea1 ),
	VERT( 0x41bc8c15, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0x327c15f4, 0x3f1e1208, 0x3f495ea1 ),
	VERT( 0x41bc8c15, 0x40b134d6, 0xc0abaf2d ),
	NORM( 0x327c15f4, 0x3f1e1208, 0x3f495ea1 ),
	VERT( 0x41b00044, 0x40b134d6, 0xc0abaf2d ),
	NORM( 0x327c15f4, 0x3f1e1208, 0x3f495ea1 ),
	VERT( 0x41b82767, 0x40dac038, 0xc0cc4bb3 ),
	NORM( 0x327c15f4, 0x3f1e1208, 0x3f495ea1 ),
	VERT( 0x41bd5005, 0x419397dd, 0xc0d46f8a ),
	NORM( 0xbf7ffeef, 0x3adacb20, 0x3bb2eb4a ),
	VERT( 0x41bd5005, 0x40dc45dc, 0xc04694a4 ),
	NORM( 0xbf7ffeef, 0x3adacb20, 0x3bb2eb4a ),
	VERT( 0x41bdaada, 0x40dac038, 0xc0f43102 ),
	NORM( 0xbf7fd048, 0x3a622b16, 0xbd1c3cca ),
	VERT( 0x40252c86, 0x3fff83c2, 0xc0257308 ),
	NORM( 0xbe5a06fc, 0x3f277c03, 0x3f39c785 ),
	VERT( 0x40252c86, 0x400510d0, 0xc0299dc3 ),
	NORM( 0x31cd3f04, 0x3f1e1209, 0x3f495ea1 ),
	VERT( 0x40252c86, 0x4006d6ab, 0xc02b0207 ),
	NORM( 0x320b0bf5, 0x3f1e11e5, 0x3f495ebd ),
	VERT( 0x4062868a, 0xc22bdb9f, 0x3edc664d ),
	NORM( 0x3eeb4282, 0xb8c4daf8, 0x3f635fe5 ),
	VERT( 0x40df85d9, 0xc1dcab20, 0xc02a1a48 ),
	NORM( 0x3f2b0e2d, 0xb92597a0, 0x3f3e7676 ),
	VERT( 0x423104c1, 0xc1dcab20, 0x40880685 ),
	NORM( 0xbf69d891, 0xbb9bb02e, 0x3ed05513 ),
	VERT( 0x4245b26a, 0xc2281943, 0x41a736b9 ),
	NORM( 0xbf14f793, 0xbe28a721, 0x3f4be14a ),
	VERT( 0x4244fecc, 0xc1dcab20, 0x41afe5d0 ),
	NORM( 0xbf1f6ade, 0xbd12b56c, 0x3f481851 ),
	VERT( 0x424582ed, 0xc16c5921, 0x41b412c9 ),
	NORM( 0xbf140ffc, 0x3dee50f6, 0x3f4eb3f3 ),
	VERT( 0x4231ae7c, 0xc16cc57a, 0x40898fd7 ),
	NORM( 0xbf69875c, 0x3aca9347, 0x3ed1c36d ),
	VERT( 0x427a1714, 0xc16c75f6, 0x41929850 ),
	NORM( 0x3f37c5a2, 0x3d6deb78, 0x3f319a4e ),
	VERT( 0x42746908, 0xc1dcab20, 0x4194964a ),
	NORM( 0x3f31de9f, 0xbe0cd548, 0x3f34b7a7 ),
	VERT( 0x4280935e, 0xc1dcab20, 0x417ad726 ),
	NORM( 0x3f480b1d, 0xbdbcb73c, 0x3f1dfe84 ),
	VERT( 0x4283b57b, 0xc16ccdf4, 0x416fd97c ),
	NORM( 0x3f56856d, 0x3d5433ca, 0x3f0b1231 ),
	VERT( 0x426c59d3, 0xc2200288, 0x41844344 ),
	NORM( 0x3f2c3757, 0xbe85a085, 0x3f313d19 ),
	VERT( 0x427aa116, 0xc22001fa, 0x415cf557 ),
	NORM( 0x3f3cbcbd, 0xbe6be038, 0x3f229824 ),
	VERT( 0x42649d52, 0xc1dcab20, 0x41b69c3e ),
	NORM( 0x3ebf8a63, 0xbddb590c, 0x3f6bd293 ),
	VERT( 0x426aaea0, 0xc16c683f, 0x41b41704 ),
	NORM( 0x3ec33886, 0x3defb88e, 0x3f6ac17e ),
	VERT( 0x42582a22, 0xc2282ac5, 0x41a7023c ),
	NORM( 0x3eb3de8f, 0xbe85d9bf, 0x3f662641 ),
	VERT( 0x4287a24f, 0xc1dcab20, 0x40c68f64 ),
	NORM( 0x3f65ae35, 0xbd58c0c6, 0x3ee07e5f ),
	VERT( 0x4283ac58, 0xc2201076, 0x41126d08 ),
	NORM( 0x3f5252ce, 0xbe4851ad, 0x3f09158b ),
	VERT( 0x428997f7, 0xc16c8e03, 0x3fe3c1b9 ),
	NORM( 0x3f771271, 0xbca84175, 0x3e859f6d ),
	VERT( 0x418c5462, 0x424a93de, 0xbf67fd8e ),
	NORM( 0xbeac5121, 0x3ef3b16f, 0xbf500151 ),
	VERT( 0x417ca94c, 0x41e0ba79, 0xbf67fd8e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x417ca94c, 0x420b9575, 0xbf67fd8e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x417ca94c, 0x424a93de, 0xbf67fd8e ),
	NORM( 0x00000000, 0x3f3504f3, 0xbf3504f3 ),
	VERT( 0x417ca94c, 0x420b9575, 0x3fb6a4a9 ),
	NORM( 0xbf3504f3, 0x3f3504f3, 0x00000000 ),
	VERT( 0x417ca94c, 0x420b9575, 0xbe03a696 ),
	NORM( 0xbf34fbe9, 0x3f350dfd, 0x00000000 ),
	VERT( 0xbca215d3, 0x420b9575, 0xbe0d927d ),
	NORM( 0x38e2b38e, 0x3f34f62a, 0xbf3513bc ),
	VERT( 0x417ca94c, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417ca94c, 0x424a93de, 0xbe03a696 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417ca94c, 0x40b134d6, 0xbf67fd8e ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x417ca94c, 0x424a93de, 0xbe03a696 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417ca94c, 0x424a93de, 0xbf67fd8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417ca94c, 0x41e0ba79, 0xbf67fd8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x417ca94c, 0x40b134d6, 0xbf67fd8e ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x41bc8c15, 0x424a93de, 0xc0ddde6a ),
	NORM( 0x3ec3ef21, 0x00000000, 0xbf6c835c ),
	VERT( 0x41bc8c15, 0x424a93de, 0x3fb6a4a9 ),
	NORM( 0x3f3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x419199f6, 0x41cdd7d4, 0x4210f331 ),
	NORM( 0x3d9a6fc1, 0xbe4b1725, 0x3f7a2bc0 ),
	VERT( 0x419199f6, 0x4233692e, 0x421d7020 ),
	NORM( 0x3e0d232e, 0xbe1b0c07, 0x3f7a9390 ),
	VERT( 0x41bd4f60, 0x40257bdb, 0xc02b23aa ),
	NORM( 0xbd8d560c, 0x3e18b538, 0x3f7c8525 ),
	VERT( 0x41bd4f5a, 0x402557b3, 0xc02b1e36 ),
	NORM( 0xbd8d560d, 0x3e18b537, 0x3f7c8525 ),
	VERT( 0x41bd7f37, 0x40260e9b, 0xc02b1f13 ),
	NORM( 0xbd8d560d, 0x3e18b538, 0x3f7c8525 ),
	VERT( 0x40da1d73, 0x4006ee66, 0xc0299b83 ),
	NORM( 0xbf0a4aca, 0xbeb4e972, 0xbf4385bb ),
	VERT( 0x40628682, 0x4006ee66, 0x3edc5d2f ),
	NORM( 0xbf09c9b4, 0xbeb5bb58, 0xbf43b030 ),
	VERT( 0x4062868a, 0x4007c91e, 0x3edc664d ),
	NORM( 0xbf2a9814, 0xbe735fad, 0xbf34eb4e ),
	VERT( 0x40da120b, 0x4007c91e, 0xc02a1a48 ),
	NORM( 0xbf2a9814, 0xbe735fae, 0xbf34eb4e ),
	VERT( 0x419877ea, 0x400510d0, 0xc0299dc3 ),
	NORM( 0xb35f1d40, 0xbb9b1662, 0x3f7fff44 ),
	VERT( 0x40da7e06, 0x400510d0, 0xc0299dc3 ),
	NORM( 0xb35f1d3e, 0xbb9b1661, 0x3f7fff44 ),
	VERT( 0x4231ae7c, 0xc08315a5, 0x40885ff7 ),
	NORM( 0xbf63936e, 0x3ccfe375, 0x3eea1ea3 ),
	VERT( 0x4245925f, 0xc08315a5, 0x41977005 ),
	NORM( 0xbf0f15a1, 0x3e880cbf, 0x3f4915ee ),
	VERT( 0x42868f17, 0xc08315a5, 0x4112fb9c ),
	NORM( 0x3f6f3874, 0x3d79ff84, 0x3eb39d7e ),
	VERT( 0x4280eb18, 0xc08315a5, 0x4160c078 ),
	NORM( 0x3f3d147f, 0x3e4ed5c0, 0x3f24a76c ),
	VERT( 0x428a214f, 0x40ad93e5, 0x402e0da0 ),
	NORM( 0x3f798f94, 0x3d2f9f0b, 0x3e5ff5f4 ),
	VERT( 0x426ec0cd, 0xc08315a5, 0x4197ad36 ),
	NORM( 0x3ec576d8, 0x3ea0fa95, 0x3f5e0ea8 ),
	VERT( 0x428b6307, 0xc08315a5, 0xc043d863 ),
	NORM( 0x3f7d95d2, 0xbd30ba7e, 0x3e052d9e ),
	VERT( 0x428bc4ac, 0x40ad93e5, 0xc0dabebc ),
	NORM( 0x3f7f121a, 0xbd493682, 0x3d8e6336 ),
	VERT( 0x421fa9cf, 0xc24254a7, 0xc0a7ab69 ),
	NORM( 0xbf74f0c3, 0xbe924713, 0x3d5d0de6 ),
	VERT( 0x428bc4ac, 0x4153b791, 0xc0a7ab69 ),
	NORM( 0x3f7f627c, 0x3d0542f7, 0x3d7a9560 ),
	VERT( 0x428bc4ac, 0x4153b791, 0xc1165f98 ),
	NORM( 0x3f7fdffc, 0x3c9ad650, 0x3ccbe7f5 ),
	VERT( 0x423336bb, 0xc280a879, 0xc0a9b7c2 ),
	NORM( 0xbf5849bb, 0xbed9e973, 0xbea5f0e1 ),
	VERT( 0x425f8d80, 0xc280a879, 0x40918ccf ),
	NORM( 0x3f2cb8bd, 0xbe1250df, 0xbf3960ea ),
	VERT( 0x424a8c4b, 0xc28d518f, 0x3f924664 ),
	NORM( 0x3f2cb8bd, 0xbe1250df, 0xbf3960ea ),
	VERT( 0x423b40ae, 0xc28d6ea1, 0xc01a2991 ),
	NORM( 0xbe8473f9, 0xbefbed75, 0xbf54cc66 ),
	VERT( 0x42332504, 0xc280a879, 0xc03d919f ),
	NORM( 0xbf7420eb, 0xbe9a1b44, 0x3a395083 ),
	VERT( 0x423b3695, 0xc28d518f, 0xbf9a0c19 ),
	NORM( 0xbf7438cd, 0xbe997afa, 0x3bcef7be ),
	VERT( 0x422c4c5c, 0xc26b8749, 0xc08d75a5 ),
	NORM( 0xbf7457d6, 0xbe98bb6a, 0xbb518caf ),
	VERT( 0x422c5835, 0xc26bad8b, 0xc0cc4a15 ),
	NORM( 0xbf746a3d, 0xbe98466f, 0xbb1e0750 ),
	VERT( 0x421fa226, 0xc242539c, 0xc103080c ),
	NORM( 0xbf74c17f, 0xbe961299, 0x3ab3e079 ),
	VERT( 0x423077ca, 0xc28095d9, 0xc0a8ba14 ),
	NORM( 0xbe9eba11, 0x3e91a417, 0x3f683d01 ),
	VERT( 0x423f51ca, 0xc293cddc, 0xbf7da3e8 ),
	NORM( 0xbe9eba11, 0x3e91a416, 0x3f683d01 ),
	VERT( 0x423f7a39, 0xc293ab46, 0xbf7f9bb7 ),
	NORM( 0xbe9eba10, 0x3e91a417, 0x3f683d01 ),
	CnkEnd()
END

CNKMODEL   model_Controller_VM2_CPBody12_CPBody12[]
START
VList      vertex_Controller_VM2_CPBody12_CPBody12,
PList      strip_Controller_VM2_CPBody12_CPBody12,
Center       0.000000F,  0.128952F,  4.414123F,
Radius      81.870201F,
END

CNKOBJECT  object_Controller_VM2_CPBody12_CPBody12[]
START
EvalFlags ( 0x00000024 ),
CNKModel   model_Controller_VM2_CPBody12_CPBody12,
OPosition  (  0.007083F,  0.000000F, -4.815784F ),
OAngle     (  0.000000F, -180.000042F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_Controller_VM2_CPBody12_anarogue_L02,
Sibling     NULL,
END

CNKOBJECT_END


DEFAULT_START

#ifndef DEFAULT_OBJECT_NAME
#define DEFAULT_OBJECT_NAME object_Controller_VM2_CPBody12_CPBody12
#endif

DEFAULT_END


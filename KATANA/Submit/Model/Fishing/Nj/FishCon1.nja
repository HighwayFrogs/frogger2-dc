/* NJA 0.98alpha1 NinjaAsciiDataMix CnkModel (LW) */

/* ROOT OBJECT : object_FishCon1_Fish_stick n(13) d(3) v(1496) */


CNKOBJECT_START

CNKOBJECT  object_FishCon1_Fish_handle_Bone2[]
START
EvalFlags ( 0x0000003e ),
CNKModel   NULL,
OPosition  ( -4.500000F, -30.000000F, -7.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_FishCon1_Fish_handle_Bone[]
START
EvalFlags ( 0x0000003e ),
CNKModel   NULL,
OPosition  ( 60.000000F, -30.000000F, -1.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_FishCon1_Fish_handle_Bone2,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_Fish_handle_R[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 438, _NB( UFO_0, 19 ),
	StripR(8),  34, 36, 37, 39, 40, 42, 43, 45, 
	StripR(8),  43, 44, 40, 41, 37, 38, 34, 35, 
	StripR(15),  71, 67, 70, 69, 1, 168, 169, 145, 146, 122, 
                   123, 99, 100, 76, 77, 
	StripL(32),  75, 74, 98, 97, 121, 120, 144, 167, 191, 190, 
                   66, 63, 64, 61, 65, 62, 4, 8, 3, 7, 
                   6, 9, 171, 172, 148, 149, 125, 126, 102, 103, 
                   79, 80, 
	StripL(32),  76, 75, 99, 98, 122, 121, 145, 144, 168, 191, 
                   69, 66, 67, 64, 68, 65, 5, 4, 2, 3, 
                   0, 6, 170, 171, 147, 148, 124, 125, 101, 102, 
                   78, 79, 
	StripL(18),  78, 77, 101, 100, 124, 123, 147, 146, 170, 169, 
                   0, 1, 2, 70, 5, 71, 68, 67, 
	StripL(32),  82, 81, 105, 104, 128, 127, 151, 150, 174, 173, 
                   15, 12, 13, 10, 14, 11, 56, 59, 55, 58, 
                   57, 60, 188, 189, 165, 166, 142, 143, 119, 96, 
                   72, 73, 
	StripL(16),  87, 86, 110, 109, 133, 132, 156, 155, 179, 178, 
                   30, 27, 28, 25, 29, 26, 
	StripL(16),  88, 87, 111, 110, 134, 133, 157, 156, 180, 179, 
                   33, 30, 31, 28, 32, 29, 
	StripR(8),  112, 89, 113, 90, 114, 91, 115, 92, 
	StripL(21),  89, 88, 112, 111, 135, 134, 158, 157, 181, 180, 
                   36, 33, 34, 31, 35, 32, 38, 29, 41, 26, 
                   44, 
	StripL(84),  93, 92, 116, 115, 139, 138, 162, 161, 185, 184, 
                   48, 45, 46, 43, 47, 44, 23, 26, 22, 25, 
                   24, 27, 177, 178, 154, 155, 131, 132, 108, 109, 
                   85, 86, 84, 87, 83, 88, 82, 89, 81, 90, 
                   80, 91, 79, 92, 78, 93, 77, 94, 76, 95, 
                   75, 72, 74, 73, 97, 96, 120, 143, 167, 166, 
                   190, 189, 63, 60, 61, 58, 62, 59, 8, 11, 
                   7, 10, 9, 12, 172, 173, 149, 150, 126, 127, 
                   103, 104, 80, 81, 
	StripL(32),  94, 93, 117, 116, 140, 139, 163, 162, 186, 185, 
                   51, 48, 49, 46, 50, 47, 20, 23, 19, 22, 
                   21, 24, 176, 177, 153, 154, 130, 131, 107, 108, 
                   84, 85, 
	StripL(32),  95, 94, 118, 117, 141, 140, 164, 163, 187, 186, 
                   54, 51, 52, 49, 53, 50, 17, 20, 16, 19, 
                   18, 21, 175, 176, 152, 153, 129, 130, 106, 107, 
                   83, 84, 
	StripL(32),  72, 95, 119, 118, 142, 141, 165, 164, 188, 187, 
                   57, 54, 55, 52, 56, 53, 14, 17, 13, 16, 
                   15, 18, 174, 175, 151, 152, 128, 129, 105, 106, 
                   82, 83, 
	StripR(8),  135, 112, 136, 113, 137, 114, 138, 115, 
	StripR(8),  158, 135, 159, 136, 160, 137, 161, 138, 
	StripR(8),  181, 158, 182, 159, 183, 160, 184, 161, 
	StripR(8),  184, 45, 183, 42, 182, 39, 181, 36, 
	CnkEnd()
END

VLIST      vertex_FishCon1_Fish_handle_R[]
START
	CnkV_VN(0x0, 1153),
	OffnbIdx(0, 192),
	VERT( 0xc2940c9b, 0x4298be1c, 0xc233e697 ),
	NORM( 0xbf2c6c08, 0x3f2bbb24, 0xbe9eef77 ),
	VERT( 0xc2949cc6, 0x4298be1c, 0xc22ddc15 ),
	NORM( 0xbf39fd23, 0x3f2fe876, 0xbb3836b8 ),
	VERT( 0xc293b2bf, 0x4298e031, 0xc22dd759 ),
	NORM( 0x3f194140, 0x3f4d0eb4, 0x3b201e90 ),
	VERT( 0xc2932859, 0x4298e031, 0xc233a3ff ),
	NORM( 0x3f05a713, 0x3f522fa7, 0x3e6c774d ),
	VERT( 0xc2932859, 0x42895bb4, 0xc233a3ff ),
	NORM( 0x3f2f9f4d, 0x3f280bb5, 0x3ea0aab1 ),
	VERT( 0xc293b2bf, 0x42895bb4, 0xc22dd759 ),
	NORM( 0x3f3e4e27, 0x3f2b3a9a, 0x3b3ed8a6 ),
	VERT( 0xc291c057, 0x4298be1c, 0xc239a86a ),
	NORM( 0xbede45ef, 0x3f22a040, 0xbf238412 ),
	VERT( 0xc290f39d, 0x4298e031, 0xc2392ade ),
	NORM( 0x3ea27762, 0x3f5b9d10, 0x3ecef332 ),
	VERT( 0xc290f39d, 0x42895bb4, 0xc2392ade ),
	NORM( 0x3edca8b9, 0x3f2599b4, 0x3f210f07 ),
	VERT( 0xc28dee84, 0x4298be1c, 0xc23c0e2e ),
	NORM( 0xbe5889be, 0x3f21f29e, 0xbf3ebb2f ),
	VERT( 0xc28d48e7, 0x4298e031, 0xc23b7816 ),
	NORM( 0x3e27595e, 0x3f4efcff, 0x3f10b637 ),
	VERT( 0xc28d48e7, 0x42895bb4, 0xc23b7816 ),
	NORM( 0x3e4649ff, 0x3f3358b9, 0x3f2fd272 ),
	VERT( 0xc289370a, 0x4298be1c, 0xc23e6b4c ),
	NORM( 0xbe2875d6, 0x3f1f3363, 0xbf4400f2 ),
	VERT( 0xc288c1b9, 0x4298e031, 0xc23dbcff ),
	NORM( 0x3dff1780, 0x3f50ba96, 0x3f10bf13 ),
	VERT( 0xc288c1b9, 0x42895bb4, 0xc23dbcff ),
	NORM( 0x3e184295, 0x3f32f757, 0x3f330c45 ),
	VERT( 0xc283b8e6, 0x4298be1c, 0xc2405804 ),
	NORM( 0xbdbda041, 0x3f1be7e4, 0xbf49a973 ),
	VERT( 0xc2837bd4, 0x4298e031, 0xc23f9601 ),
	NORM( 0x3d8d82b7, 0x3f53573a, 0x3f0f619e ),
	VERT( 0xc2837bd4, 0x42895bb4, 0xc23f9601 ),
	NORM( 0x3da87e3e, 0x3f31b013, 0x3f37154c ),
	VERT( 0xc27ba7da, 0x4298be1c, 0xc2410012 ),
	NORM( 0xb8a20383, 0x3f1ac253, 0xbf4becf1 ),
	VERT( 0xc27ba66e, 0x4298e031, 0xc2403757 ),
	NORM( 0x3892ff23, 0x3f539ca8, 0x3f10121f ),
	VERT( 0xc27ba66e, 0x42895bb4, 0xc2403757 ),
	NORM( 0x00000000, 0x3f31deac, 0x3f381d70 ),
	VERT( 0xc26fdde8, 0x4298be1c, 0xc2405804 ),
	NORM( 0x3dbd5d2e, 0x3f1be2be, 0xbf49ae6a ),
	VERT( 0xc2705534, 0x4298e031, 0xc23f9601 ),
	NORM( 0xbd8d42eb, 0x3f535dee, 0x3f0f58b7 ),
	VERT( 0xc2705534, 0x42895bb4, 0xc23f9601 ),
	NORM( 0xbda87e3e, 0x3f31b013, 0x3f37154c ),
	VERT( 0xc264e1a0, 0x4298be1c, 0xc23e6b4c ),
	NORM( 0x3e286952, 0x3f1f2f2a, 0xbf44050c ),
	VERT( 0xc265c96a, 0x4298e031, 0xc23dbcff ),
	NORM( 0xbdfeeb79, 0x3f50c7f9, 0x3f10acfa ),
	VERT( 0xc265c96a, 0x42895bb4, 0xc23dbcff ),
	NORM( 0xbe184295, 0x3f32f757, 0x3f330c45 ),
	VERT( 0xc25b72ac, 0x4298be1c, 0xc23c0e2e ),
	NORM( 0x3e58b0c7, 0x3f21f1d1, 0xbf3eb918 ),
	VERT( 0xc25cbb0e, 0x4298e031, 0xc23b7816 ),
	NORM( 0xbe2765d4, 0x3f4f10a1, 0x3f109938 ),
	VERT( 0xc25cbb0e, 0x42895bb4, 0xc23b7816 ),
	NORM( 0xbe4677be, 0x3f335555, 0x3f2fd2ae ),
	VERT( 0xc253d238, 0x4298be1c, 0xc239a86a ),
	NORM( 0x3ede227a, 0x3f22b802, 0xbf23787a ),
	VERT( 0xc25568b4, 0x4298e031, 0xc2392ade ),
	NORM( 0xbea26ad8, 0x3f5ba89c, 0x3ececc01 ),
	VERT( 0xc25568b4, 0x42895bb4, 0xc2392ade ),
	NORM( 0xbedcb95c, 0x3f259c77, 0x3f21067b ),
	VERT( 0xc24f39b0, 0x4298be1c, 0xc233e697 ),
	NORM( 0x3f2c7e73, 0x3f2bd84a, 0xbe9e20f7 ),
	VERT( 0xc250ff3c, 0x4298e031, 0xc233a3ff ),
	NORM( 0xbf058119, 0x3f5267ce, 0x3e6aadd5 ),
	VERT( 0xc250ff3c, 0x42895bb4, 0xc233a3ff ),
	NORM( 0xbf2fe459, 0x3f27ef94, 0x3e9ff1ce ),
	VERT( 0xc24e20a6, 0x4298be1c, 0xc22ddc15 ),
	NORM( 0x3f399fa3, 0x3f304b22, 0xbb3398d6 ),
	VERT( 0xc24ff170, 0x4298e031, 0xc22dd759 ),
	NORM( 0xbf1987a6, 0x3f4cda06, 0x3b1cc1a2 ),
	VERT( 0xc24ff170, 0x42895bb4, 0xc22dd759 ),
	NORM( 0xbf3e19bf, 0x3f2b74cc, 0x3b3a1e5b ),
	VERT( 0xc24f39b0, 0x4298be1c, 0xc2278b60 ),
	NORM( 0x3f2d0675, 0x3f2b8d44, 0x3e9d138c ),
	VERT( 0xc250ff3c, 0x4298e031, 0xc227c74f ),
	NORM( 0xbf0553d6, 0x3f52bf00, 0xbe675fb7 ),
	VERT( 0xc250ff3c, 0x42895bb4, 0xc227c74f ),
	NORM( 0xbf305794, 0x3f27c083, 0xbe9ebaa2 ),
	VERT( 0xc253d238, 0x4298be1c, 0xc221c98d ),
	NORM( 0x3edd9e7b, 0x3f221e44, 0x3f243d8f ),
	VERT( 0xc25568b4, 0x4298e031, 0xc2224070 ),
	NORM( 0xbea15477, 0x3f5c6ac5, 0xbecc6801 ),
	VERT( 0xc25568b4, 0x42895bb4, 0xc2224070 ),
	NORM( 0xbedbc603, 0x3f25742f, 0xbf2182ea ),
	VERT( 0xc25b72ac, 0x4298be1c, 0xc21f7265 ),
	NORM( 0x3e581b90, 0x3f20fb22, 0x3f3f9406 ),
	VERT( 0xc25cbb0e, 0x4298e031, 0xc2200140 ),
	NORM( 0xbe256c4a, 0x3f4f60d2, 0xbf104a93 ),
	VERT( 0xc25cbb0e, 0x42895bb4, 0xc2200140 ),
	NORM( 0xbe44f0d8, 0x3f339f2e, 0xbf2fa2bf ),
	VERT( 0xc264e1a0, 0x4298be1c, 0xc21d0ca8 ),
	NORM( 0x3e2aab2f, 0x3f1e114a, 0x3f44ccc1 ),
	VERT( 0xc265c96a, 0x4298e031, 0xc21db410 ),
	NORM( 0xbdffe80b, 0x3f5193c5, 0xbf0f7e1d ),
	VERT( 0xc265c96a, 0x42895bb4, 0xc21db410 ),
	NORM( 0xbe198a0b, 0x3f32df29, 0xbf3312f5 ),
	VERT( 0xc26fdde8, 0x4298be1c, 0xc21b1ff1 ),
	NORM( 0x3dbe94e7, 0x3f1aa27a, 0x3f4a9fd0 ),
	VERT( 0xc2705534, 0x4298e031, 0xc21bdb0e ),
	NORM( 0xbd8ce67d, 0x3f542502, 0xbf0e32e1 ),
	VERT( 0xc2705534, 0x42895bb4, 0xc21bdb0e ),
	NORM( 0xbda87e3e, 0x3f31b013, 0xbf37154c ),
	VERT( 0xc27ba7da, 0x4298be1c, 0xc21a77e2 ),
	NORM( 0xb8a7653b, 0x3f196ad8, 0x3f4cefd6 ),
	VERT( 0xc27ba66e, 0x4298e031, 0xc21b39b8 ),
	NORM( 0x389d9d73, 0x3f546993, 0xbf0ee352 ),
	VERT( 0xc27ba66e, 0x42895bb4, 0xc21b39b8 ),
	NORM( 0x00000000, 0x3f31deac, 0xbf381d70 ),
	VERT( 0xc283b8e6, 0x4298be1c, 0xc21b1ff1 ),
	NORM( 0xbdbed893, 0x3f1aa8a1, 0x3f4a9a1f ),
	VERT( 0xc2837bd4, 0x4298e031, 0xc21bdb0e ),
	NORM( 0x3d8d299c, 0x3f541e02, 0xbf0e3c48 ),
	VERT( 0xc2837bd4, 0x42895bb4, 0xc21bdb0e ),
	NORM( 0x3da87e3e, 0x3f31b013, 0xbf37154c ),
	VERT( 0xc289370a, 0x4298be1c, 0xc21d0ca8 ),
	NORM( 0xbe2ab782, 0x3f1e16ca, 0x3f44c7ab ),
	VERT( 0xc288c1b9, 0x4298e031, 0xc21db410 ),
	NORM( 0x3e000b70, 0x3f5185b1, 0xbf0f915d ),
	VERT( 0xc288c1b9, 0x42895bb4, 0xc21db410 ),
	NORM( 0x3e198a0b, 0x3f32df29, 0xbf3312f5 ),
	VERT( 0xc28dee84, 0x4298be1c, 0xc21f7265 ),
	NORM( 0xbe57f256, 0x3f20fcee, 0x3f3f956c ),
	VERT( 0xc28d48e7, 0x4298e031, 0xc2200140 ),
	NORM( 0x3e25613b, 0x3f4f4c4e, 0xbf1068d6 ),
	VERT( 0xc28d48e7, 0x42895bb4, 0xc2200140 ),
	NORM( 0x3e44c40c, 0x3f33a283, 0xbf2fa27a ),
	VERT( 0xc291c057, 0x4298be1c, 0xc221c98d ),
	NORM( 0xbeddc16a, 0x3f22075a, 0x3f244861 ),
	VERT( 0xc290f39d, 0x4298e031, 0xc2224070 ),
	NORM( 0x3ea161aa, 0x3f5c5ec4, 0xbecc9154 ),
	VERT( 0xc290f39d, 0x42895bb4, 0xc2224070 ),
	NORM( 0x3edbb59e, 0x3f25717c, 0xbf218b42 ),
	VERT( 0xc2940c9b, 0x4298be1c, 0xc2278b60 ),
	NORM( 0xbf2cf703, 0x3f2b6f12, 0x3e9ddaf5 ),
	VERT( 0xc2932859, 0x4298e031, 0xc227c74f ),
	NORM( 0x3f057a4f, 0x3f528826, 0xbe691a1c ),
	VERT( 0xc2932859, 0x42895bb4, 0xc227c74f ),
	NORM( 0x3f3015c3, 0x3f27db6a, 0xbe9f6cc3 ),
	VERT( 0xc28f928e, 0x423b4c4a, 0xc22dcf7b ),
	NORM( 0xbe9c953c, 0xbf73bbf7, 0xba807be6 ),
	VERT( 0xc28f228f, 0x423b4c4a, 0xc23280e0 ),
	NORM( 0xbe9784dd, 0xbf716c96, 0xbe1b7acd ),
	VERT( 0xc28d5992, 0x423b4c4a, 0xc236f9cd ),
	NORM( 0xbe4cf863, 0xbf666293, 0xbec6527e ),
	VERT( 0xc28a61f5, 0x423b4c4a, 0xc238d69a ),
	NORM( 0xbdeb8eb3, 0xbf658c84, 0xbedadf6b ),
	VERT( 0xc286b7f0, 0x423b4c4a, 0xc23aacae ),
	NORM( 0xbdb895c6, 0xbf63a4c8, 0xbee5a02c ),
	VERT( 0xc2827397, 0x423b4c4a, 0xc23c2b72 ),
	NORM( 0xbd4a89a8, 0xbf6176b8, 0xbef12de6 ),
	VERT( 0xc27bbeb6, 0x423b4c4a, 0xc23cae00 ),
	NORM( 0xb953b928, 0xbf60ef67, 0xbef475c2 ),
	VERT( 0xc272963e, 0x423b4c4a, 0xc23c2b72 ),
	NORM( 0x3d48a4aa, 0xbf6192b5, 0xbef0cb78 ),
	VERT( 0xc26a0d8c, 0x423b4c4a, 0xc23aacae ),
	NORM( 0x3db79f0a, 0xbf63d864, 0xbee4df7b ),
	VERT( 0xc262b982, 0x423b4c4a, 0xc238d69a ),
	NORM( 0x3dea6f96, 0xbf65cbde, 0xbed9e839 ),
	VERT( 0xc25cccc2, 0x423b4c4a, 0xc236f9cd ),
	NORM( 0x3e4b1481, 0xbf66ba04, 0xbec53787 ),
	VERT( 0xc2593ac8, 0x423b4c4a, 0xc23280e0 ),
	NORM( 0x3e95e788, 0xbf71c393, 0xbe1946c5 ),
	VERT( 0xc2586074, 0x423b4c4a, 0xc22dcf7b ),
	NORM( 0x3e9a3b8d, 0xbf741bce, 0xba77bdd2 ),
	VERT( 0xc2593ac8, 0x423b4c4a, 0xc228e78e ),
	NORM( 0x3e9700e2, 0xbf71916f, 0x3e19e6a7 ),
	VERT( 0xc25cccc2, 0x423b4c4a, 0xc2246ea0 ),
	NORM( 0x3e4b9787, 0xbf65c30e, 0x3ec98ae3 ),
	VERT( 0xc262b982, 0x423b4c4a, 0xc2229d2d ),
	NORM( 0x3ded9bb7, 0xbf65186f, 0x3edca0a6 ),
	VERT( 0xc26a0d8c, 0x423b4c4a, 0xc220c066 ),
	NORM( 0x3dbb53f8, 0xbf62ec44, 0x3ee8531c ),
	VERT( 0xc272963e, 0x423b4c4a, 0xc21f41a3 ),
	NORM( 0x3d4b5003, 0xbf6094e9, 0x3ef4705f ),
	VERT( 0xc27bbeb6, 0x423b4c4a, 0xc21ebf15 ),
	NORM( 0xb95929b7, 0xbf5fea8a, 0x3ef82c77 ),
	VERT( 0xc2827397, 0x423b4c4a, 0xc21f41a3 ),
	NORM( 0xbd4d3f2f, 0xbf6077fb, 0x3ef4d41e ),
	VERT( 0xc286b7f0, 0x423b4c4a, 0xc220c066 ),
	NORM( 0xbdbc548f, 0xbf62b694, 0x3ee91778 ),
	VERT( 0xc28a61f5, 0x423b4c4a, 0xc2229d2d ),
	NORM( 0xbdeeb9d0, 0xbf64d67f, 0x3edd9e80 ),
	VERT( 0xc28d5992, 0x423b4c4a, 0xc2246ea0 ),
	NORM( 0xbe4d7c10, 0xbf656991, 0x3ecaa6f2 ),
	VERT( 0xc28f228f, 0x423b4c4a, 0xc228e78e ),
	NORM( 0xbe98a654, 0xbf713891, 0x3e1c19c4 ),
	VERT( 0xc2936c7a, 0x42402439, 0xc22de3a7 ),
	NORM( 0xbf63187b, 0xbeec53ed, 0xbb6deb26 ),
	VERT( 0xc292e3e5, 0x42402439, 0xc2339cc4 ),
	NORM( 0xbf514c8a, 0xbee46fd6, 0xbeba607d ),
	VERT( 0xc290b697, 0x42402439, 0xc2391106 ),
	NORM( 0xbf0a6182, 0xbecc33b7, 0xbf3da305 ),
	VERT( 0xc28d183c, 0x42402439, 0xc23b567c ),
	NORM( 0xbe85617c, 0xbeaa2729, 0xbf680e8e ),
	VERT( 0xc288a04e, 0x42402439, 0xc23d93c0 ),
	NORM( 0xbe4e817d, 0xbea1dc38, 0xbf6d520d ),
	VERT( 0xc2836c2d, 0x42402439, 0xc23f668a ),
	NORM( 0xbde73c7c, 0xbe9a21e7, 0xbf726849 ),
	VERT( 0xc27bad3e, 0x42402439, 0xc24005c0 ),
	NORM( 0x39326374, 0xbe96cc38, 0xbf74a508 ),
	VERT( 0xc2708222, 0x42402439, 0xc23f668a ),
	NORM( 0x3de7c9fd, 0xbe9ab9a8, 0xbf724dff ),
	VERT( 0xc26619de, 0x42402439, 0xc23d93c0 ),
	NORM( 0x3e4e82b9, 0xbea2d4c2, 0xbf6d2777 ),
	VERT( 0xc25d2a06, 0x42402439, 0xc23b567c ),
	NORM( 0x3e856d53, 0xbeab5bf5, 0xbf67d405 ),
	VERT( 0xc255f054, 0x42402439, 0xc2391106 ),
	NORM( 0x3f0a42ac, 0xbecdbeba, 0xbf3d4eb3 ),
	VERT( 0xc25195b8, 0x42402439, 0xc2339cc4 ),
	NORM( 0x3f512c50, 0xbee5ed91, 0xbeb91ab2 ),
	VERT( 0xc2508b78, 0x42402439, 0xc22de3a7 ),
	NORM( 0x3f629f4d, 0xbeee238b, 0xbb67a99b ),
	VERT( 0xc25195b8, 0x42402439, 0xc227e809 ),
	NORM( 0x3f51b5bb, 0xbee5548f, 0x3eb76890 ),
	VERT( 0xc255f054, 0x42402439, 0xc22273c8 ),
	NORM( 0x3f0a0d15, 0xbecc1f05, 0x3f3de614 ),
	VERT( 0xc25d2a06, 0x42402439, 0xc2203c29 ),
	NORM( 0x3e84a154, 0xbea79135, 0x3f68a253 ),
	VERT( 0xc26619de, 0x42402439, 0xc21df6ba ),
	NORM( 0x3e50e27e, 0xbe9f7b3f, 0x3f6d97c5 ),
	VERT( 0xc2708222, 0x42402439, 0xc21c23f1 ),
	NORM( 0x3de89068, 0xbe96f8bc, 0x3f72e263 ),
	VERT( 0xc27bad3e, 0x42402439, 0xc21b84bb ),
	NORM( 0x393612f0, 0xbe92e5cc, 0x3f753cb7 ),
	VERT( 0xc2836c2d, 0x42402439, 0xc21c23f1 ),
	NORM( 0xbde7fff6, 0xbe965cc0, 0x3f72fcbb ),
	VERT( 0xc288a04e, 0x42402439, 0xc21df6ba ),
	NORM( 0xbe50dff2, 0xbe9e79f0, 0x3f6dc2f0 ),
	VERT( 0xc28d183c, 0x42402439, 0xc2203c29 ),
	NORM( 0xbe8496dd, 0xbea65747, 0x3f68dc1d ),
	VERT( 0xc290b697, 0x42402439, 0xc22273c8 ),
	NORM( 0xbf0a2cbb, 0xbeca8c9c, 0x3f3e3ab5 ),
	VERT( 0xc292e3e5, 0x42402439, 0xc227e809 ),
	NORM( 0xbf51d9bc, 0xbee3d278, 0x3eb8a3f4 ),
	VERT( 0xc2936c7a, 0x4260a459, 0xc22de3a7 ),
	NORM( 0xbf7fe2f4, 0xbcf1b3fc, 0xbb8221dc ),
	VERT( 0xc292e3e5, 0x4260a459, 0xc2339cc4 ),
	NORM( 0xbf689109, 0xbce29297, 0xbed58774 ),
	VERT( 0xc290b697, 0x4260a459, 0xc2391106 ),
	NORM( 0xbf0ff728, 0xbca83134, 0xbf539e4c ),
	VERT( 0xc28d183c, 0x4260a459, 0xc23b567c ),
	NORM( 0xbe8ac381, 0xbc682518, 0xbf766458 ),
	VERT( 0xc288a04e, 0x4260a459, 0xc23d93c0 ),
	NORM( 0xbe54a4e9, 0xbc58b87f, 0xbf7a6585 ),
	VERT( 0xc2836c2d, 0x4260a459, 0xc23f668a ),
	NORM( 0xbde993e4, 0xbc4c11cc, 0xbf7e4f40 ),
	VERT( 0xc27bad3e, 0x4260a459, 0xc24005c0 ),
	NORM( 0xb71b0d2c, 0xbc467893, 0xbf7ffb31 ),
	VERT( 0xc2708222, 0x4260a459, 0xc23f668a ),
	NORM( 0x3de98995, 0xbc4d09c1, 0xbf7e4f59 ),
	VERT( 0xc26619de, 0x4260a459, 0xc23d93c0 ),
	NORM( 0x3e54a1f9, 0xbc5a7cec, 0xbf7a6594 ),
	VERT( 0xc25d2a06, 0x4260a459, 0xc23b567c ),
	NORM( 0x3e8adf66, 0xbc6a853f, 0xbf766046 ),
	VERT( 0xc255f054, 0x4260a459, 0xc2391106 ),
	NORM( 0x3f0fff62, 0xbcaa9254, 0xbf539839 ),
	VERT( 0xc25195b8, 0x4260a459, 0xc2339cc4 ),
	NORM( 0x3f68cd73, 0xbce6956f, 0xbed47b2d ),
	VERT( 0xc2508b78, 0x4260a459, 0xc22de3a7 ),
	NORM( 0x3f7fe203, 0xbcf5bf4d, 0xbb7e129a ),
	VERT( 0xc25195b8, 0x4260a459, 0xc227e809 ),
	NORM( 0x3f6937c6, 0xbce9feb8, 0x3ed2a2ff ),
	VERT( 0xc255f054, 0x4260a459, 0xc22273c8 ),
	NORM( 0x3f0f4839, 0xbcb05542, 0x3f54133d ),
	VERT( 0xc25d2a06, 0x4260a459, 0xc2203c29 ),
	NORM( 0x3e8a0c05, 0xbc77d228, 0x3f767d27 ),
	VERT( 0xc26619de, 0x4260a459, 0xc21df6ba ),
	NORM( 0x3e564d2d, 0xbc6930cb, 0x3f7a4dfc ),
	VERT( 0xc2708222, 0x4260a459, 0xc21c23f1 ),
	NORM( 0x3de98a83, 0xbc5ba181, 0x3f7e4e93 ),
	VERT( 0xc27bad3e, 0x4260a459, 0xc21b84bb ),
	NORM( 0xb71b120d, 0xbc5528a3, 0x3f7ffa74 ),
	VERT( 0xc2836c2d, 0x4260a459, 0xc21c23f1 ),
	NORM( 0xbde994d2, 0xbc5aa983, 0x3f7e4e7a ),
	VERT( 0xc288a04e, 0x4260a459, 0xc21df6ba ),
	NORM( 0xbe565041, 0xbc6768dd, 0x3f7a4dec ),
	VERT( 0xc28d183c, 0x4260a459, 0xc2203c29 ),
	NORM( 0xbe89f07b, 0xbc7575c5, 0x3f768127 ),
	VERT( 0xc290b697, 0x4260a459, 0xc22273c8 ),
	NORM( 0xbf0f404b, 0xbcadf751, 0x3f541915 ),
	VERT( 0xc292e3e5, 0x4260a459, 0xc227e809 ),
	NORM( 0xbf68fe61, 0xbce5ffcb, 0x3ed3a4d9 ),
	VERT( 0xc2949cc6, 0x42848151, 0xc22ddc15 ),
	NORM( 0xbf7f515a, 0xbd9535fe, 0xbb7a6fb8 ),
	VERT( 0xc2940c9b, 0x42848151, 0xc233e697 ),
	NORM( 0xbf68304f, 0xbd8cbd91, 0xbed4be3e ),
	VERT( 0xc291c057, 0x42848151, 0xc239a86a ),
	NORM( 0xbf1025c9, 0xbd53b8c5, 0xbf532537 ),
	VERT( 0xc28dee84, 0x42848151, 0xc23c0e2e ),
	NORM( 0xbe8ac627, 0xbd13a754, 0xbf763e8e ),
	VERT( 0xc289370a, 0x42848151, 0xc23e6b4c ),
	NORM( 0xbe54b0ef, 0xbd0a25ab, 0xbf7a44a0 ),
	VERT( 0xc283b8e6, 0x42848151, 0xc2405804 ),
	NORM( 0xbde9b936, 0xbd025a10, 0xbf7e326b ),
	VERT( 0xc27ba7da, 0x42848151, 0xc2410012 ),
	NORM( 0xb695939b, 0xbcfdcdeb, 0xbf7fe08a ),
	VERT( 0xc26fdde8, 0x42848151, 0xc2405804 ),
	NORM( 0x3de9b3f7, 0xbd02f420, 0xbf7e322f ),
	VERT( 0xc264e1a0, 0x42848151, 0xc23e6b4c ),
	NORM( 0x3e54af12, 0xbd0b3e45, 0xbf7a441e ),
	VERT( 0xc25b72ac, 0x42848151, 0xc23c0e2e ),
	NORM( 0x3e8ae26f, 0xbd152050, 0xbf7639ae ),
	VERT( 0xc253d238, 0x42848151, 0xc239a86a ),
	NORM( 0x3f102eb6, 0xbd56adda, 0xbf531c22 ),
	VERT( 0xc24f39b0, 0x42848151, 0xc233e697 ),
	NORM( 0x3f6868c8, 0xbd8f3327, 0xbed3aca2 ),
	VERT( 0xc24e20a6, 0x42848151, 0xc22ddc15 ),
	NORM( 0x3f7f4b81, 0xbd97b3b6, 0xbb747874 ),
	VERT( 0xc24f39b0, 0x42848151, 0xc2278b60 ),
	NORM( 0x3f68c938, 0xbd8f93a6, 0x3ed1fef6 ),
	VERT( 0xc253d238, 0x42848151, 0xc221c98d ),
	NORM( 0x3f0f6ba1, 0xbd56eff3, 0x3f53a098 ),
	VERT( 0xc25b72ac, 0x42848151, 0xc21f7265 ),
	NORM( 0x3e8a0a40, 0xbd159325, 0x3f7657cb ),
	VERT( 0xc264e1a0, 0x42848151, 0xc21d0ca8 ),
	NORM( 0x3e5658c8, 0xbd0c70ec, 0x3f7a2cbe ),
	VERT( 0xc26fdde8, 0x42848151, 0xc21b1ff1 ),
	NORM( 0x3de9afd4, 0xbd03f444, 0x3f7e31ba ),
	VERT( 0xc27ba7da, 0x42848151, 0xc21a77e2 ),
	NORM( 0xb695b788, 0xbcffd29d, 0x3f7fe009 ),
	VERT( 0xc283b8e6, 0x42848151, 0xc21b1ff1 ),
	NORM( 0xbde9b513, 0xbd035a3b, 0x3f7e31f6 ),
	VERT( 0xc289370a, 0x42848151, 0xc21d0ca8 ),
	NORM( 0xbe565ab8, 0xbd0b5627, 0x3f7a2d42 ),
	VERT( 0xc28dee84, 0x42848151, 0xc21f7265 ),
	NORM( 0xbe89ee6f, 0xbd141c89, 0x3f765c92 ),
	VERT( 0xc291c057, 0x42848151, 0xc221c98d ),
	NORM( 0xbf0f62f3, 0xbd53ff66, 0x3f53a970 ),
	VERT( 0xc2940c9b, 0x42848151, 0xc2278b60 ),
	NORM( 0xbf6893d1, 0xbd8d1ecb, 0x3ed305a7 ),
	VERT( 0xc295cd12, 0x42922aba, 0xc22de24e ),
	NORM( 0xbf7fbc1d, 0x3d39a9cf, 0xbb83430d ),
	VERT( 0xc2953550, 0x42922aba, 0xc2343e36 ),
	NORM( 0xbf69288e, 0x3d2fe256, 0xbed2428d ),
	VERT( 0xc292ca16, 0x42922aba, 0xc23a4d9b ),
	NORM( 0xbf13719f, 0x3d08d286, 0xbf5119d5 ),
	VERT( 0xc28ec4cd, 0x42922aba, 0xc23cd3ad ),
	NORM( 0xbe8b9eaa, 0x3cc0d12c, 0xbf76395a ),
	VERT( 0xc289cdc5, 0x42922aba, 0xc23f50a4 ),
	NORM( 0xbe56210f, 0x3cb47925, 0xbf7a46de ),
	VERT( 0xc28405a0, 0x42922aba, 0xc241574a ),
	NORM( 0xbdec0eab, 0x3caa3a2d, 0xbf7e3cf6 ),
	VERT( 0xc27ba276, 0x42922aba, 0xc2420831 ),
	NORM( 0x382ee8f6, 0x3ca5bb39, 0xbf7ff296 ),
	VERT( 0xc26f39ac, 0x42922aba, 0xc241574a ),
	NORM( 0x3dec3c27, 0x3cab0542, 0xbf7e3c2b ),
	VERT( 0xc263a962, 0x42922aba, 0xc23f50a4 ),
	NORM( 0x3e562e62, 0x3cb5e616, 0xbf7a45e5 ),
	VERT( 0xc259bb54, 0x42922aba, 0xc23cd3ad ),
	NORM( 0x3e8bc2a3, 0x3cc2b9ca, 0xbf7633e0 ),
	VERT( 0xc251b41c, 0x42922aba, 0xc23a4d9b ),
	NORM( 0x3f138e98, 0x3d0ac102, 0xbf51041e ),
	VERT( 0xc24cdda8, 0x42922aba, 0xc2343e36 ),
	NORM( 0x3f6967d5, 0x3d32c582, 0xbed11f31 ),
	VERT( 0xc24bb5d4, 0x42922aba, 0xc22de24e ),
	NORM( 0x3f7fb9ec, 0x3d3cb065, 0xbb8026b2 ),
	VERT( 0xc24cdda8, 0x42922aba, 0xc2273c83 ),
	NORM( 0x3f69d58c, 0x3d31eadf, 0x3ecf3599 ),
	VERT( 0xc251b41c, 0x42922aba, 0xc2212d1e ),
	NORM( 0x3f12eed9, 0x3d085f6d, 0x3f517619 ),
	VERT( 0xc259bb54, 0x42922aba, 0xc21eb66d ),
	NORM( 0x3e8ac91e, 0x3cbc90eb, 0x3f765859 ),
	VERT( 0xc263a962, 0x42922aba, 0xc21c3064 ),
	NORM( 0x3e57ee5c, 0x3cb0aa77, 0x3f7a2ec5 ),
	VERT( 0xc26f39ac, 0x42922aba, 0xc21a29bd ),
	NORM( 0x3dec41be, 0x3ca56c49, 0x3f7e3d04 ),
	VERT( 0xc27ba276, 0x42922aba, 0xc21978d6 ),
	NORM( 0x382ef631, 0x3ca0169a, 0x3f7ff37c ),
	VERT( 0xc28405a0, 0x42922aba, 0xc21a29bd ),
	NORM( 0xbdec1443, 0x3ca4a0f7, 0x3f7e3dce ),
	VERT( 0xc289cdc5, 0x42922aba, 0xc21c3064 ),
	NORM( 0xbe57e06a, 0x3caf3a08, 0x3f7a2fc6 ),
	VERT( 0xc28ec4cd, 0x42922aba, 0xc21eb66d ),
	NORM( 0xbe8aa69c, 0x3cbaac31, 0x3f765d91 ),
	VERT( 0xc292ca16, 0x42922aba, 0xc2212d1e ),
	NORM( 0xbf12d1cd, 0x3d067175, 0x3f518bb6 ),
	VERT( 0xc2953550, 0x42922aba, 0xc2273c83 ),
	NORM( 0xbf69994e, 0x3d2f05e7, 0x3ed04e83 ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_Fish_handle_R[]
START
VList      vertex_FishCon1_Fish_handle_R,
PList      strip_FishCon1_Fish_handle_R,
Center      -62.914047F, 61.631187F, -43.438004F,
Radius      15.650650F,
END

CNKOBJECT  object_FishCon1_Fish_handle_R[]
START
EvalFlags ( 0x00000036 ),
CNKModel   model_FishCon1_Fish_handle_R,
OPosition  ( 29.000000F, -50.000000F, 42.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_FishCon1_Fish_handle_Bone,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_Fish_handle_L[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 444, _NB( UFO_0, 21 ),
	StripR(15),  145, 169, 168, 121, 120, 97, 96, 73, 72, 49, 
                   48, 25, 24, 1, 0, 
	StripL(16),  149, 148, 172, 171, 124, 123, 100, 99, 76, 75, 
                   52, 51, 28, 27, 4, 3, 
	StripL(16),  150, 149, 173, 172, 125, 124, 101, 100, 77, 76, 
                   53, 52, 29, 28, 5, 4, 
	StripL(16),  151, 150, 174, 173, 126, 125, 102, 101, 78, 77, 
                   54, 53, 30, 29, 6, 5, 
	StripL(16),  153, 152, 176, 175, 128, 127, 104, 103, 80, 79, 
                   56, 55, 32, 31, 8, 7, 
	StripL(16),  154, 153, 177, 176, 129, 128, 105, 104, 81, 80, 
                   57, 56, 33, 32, 9, 8, 
	StripR(18),  182, 159, 183, 160, 184, 161, 185, 162, 186, 163, 
                   187, 164, 188, 165, 189, 166, 190, 167, 
	StripR(18),  190, 142, 189, 141, 188, 140, 187, 139, 186, 138, 
                   185, 137, 184, 136, 183, 135, 182, 134, 
	StripL(16),  2, 3, 26, 27, 50, 51, 74, 75, 98, 99, 
                   122, 123, 170, 171, 147, 148, 
	StripL(16),  6, 7, 30, 31, 54, 55, 78, 79, 102, 103, 
                   126, 127, 174, 175, 151, 152, 
	StripL(16),  9, 10, 33, 34, 57, 58, 81, 82, 105, 106, 
                   129, 130, 177, 178, 154, 155, 
	StripL(16),  11, 12, 35, 36, 59, 60, 83, 84, 107, 108, 
                   131, 132, 179, 180, 156, 157, 
	StripL(17),  12, 13, 36, 37, 60, 61, 84, 85, 108, 109, 
                   132, 133, 180, 181, 157, 158, 156, 
	StripL(84),  13, 14, 37, 38, 61, 62, 85, 86, 109, 110, 
                   133, 134, 181, 182, 158, 159, 156, 155, 179, 178, 
                   131, 130, 107, 106, 83, 82, 59, 58, 35, 34, 
                   11, 10, 12, 9, 13, 8, 14, 7, 15, 6, 
                   16, 5, 17, 4, 18, 3, 19, 2, 20, 1, 
                   21, 0, 22, 23, 46, 47, 70, 71, 94, 95, 
                   118, 119, 142, 143, 190, 191, 167, 144, 147, 146, 
                   170, 169, 122, 121, 98, 97, 74, 73, 50, 49, 
                   26, 25, 2, 1, 
	StripR(18),  46, 22, 45, 21, 44, 20, 43, 19, 42, 18, 
                   41, 17, 40, 16, 39, 15, 38, 14, 
	StripL(18),  23, 0, 47, 24, 71, 48, 95, 72, 119, 96, 
                   143, 120, 191, 168, 144, 145, 146, 169, 
	StripR(18),  70, 46, 69, 45, 68, 44, 67, 43, 66, 42, 
                   65, 41, 64, 40, 63, 39, 62, 38, 
	StripR(18),  62, 86, 63, 87, 64, 88, 65, 89, 66, 90, 
                   67, 91, 68, 92, 69, 93, 70, 94, 
	StripR(18),  86, 110, 87, 111, 88, 112, 89, 113, 90, 114, 
                   91, 115, 92, 116, 93, 117, 94, 118, 
	StripR(18),  142, 118, 141, 117, 140, 116, 139, 115, 138, 114, 
                   137, 113, 136, 112, 135, 111, 134, 110, 
	StripR(18),  159, 155, 160, 154, 161, 153, 162, 152, 163, 151, 
                   164, 150, 165, 149, 166, 148, 167, 147, 
	CnkEnd()
END

VLIST      vertex_FishCon1_Fish_handle_L[]
START
	CnkV_VN(0x0, 1153),
	OffnbIdx(0, 192),
	VERT( 0x410a3036, 0xc1f5676b, 0x3d4214f5 ),
	NORM( 0x3e9c9533, 0xbf73bbf9, 0xba807aaf ),
	VERT( 0x4106b03e, 0xc1f5676b, 0xbf901bf2 ),
	NORM( 0x3e9784cb, 0xbf716c9a, 0xbe1b7ab1 ),
	VERT( 0x40f0d0a8, 0xc1f5676b, 0xc00f9cd5 ),
	NORM( 0x3e4cf845, 0xbf666293, 0xbec65284 ),
	VERT( 0x40c156dc, 0xc1f5676b, 0xc02d699f ),
	NORM( 0x3deb8ea3, 0xbf658c88, 0xbedadf5d ),
	VERT( 0x4086b684, 0xc1f5676b, 0xc04acae5 ),
	NORM( 0x3db8959e, 0xbf63a4cb, 0xbee5a022 ),
	VERT( 0x4004e1e8, 0xc1f5676b, 0xc062b71d ),
	NORM( 0x3d4a895d, 0xbf6176bb, 0xbef12dd9 ),
	VERT( 0xbe5a5900, 0xc1f5676b, 0xc06adffb ),
	NORM( 0x3953b4b1, 0xbf60ef69, 0xbef475b9 ),
	VERT( 0xc0202d10, 0xc1f5676b, 0xc062b71d ),
	NORM( 0xbd48a46d, 0xbf6192b7, 0xbef0cb72 ),
	VERT( 0xc0945c18, 0xc1f5676b, 0xc04acae5 ),
	NORM( 0xbdb79efc, 0xbf63d864, 0xbee4df7a ),
	VERT( 0xc0cefc60, 0xc1f5676b, 0xc02d699f ),
	NORM( 0xbdea6f9b, 0xbf65cbe5, 0xbed9e81e ),
	VERT( 0xc0fe6260, 0xc1f5676b, 0xc00f9cd5 ),
	NORM( 0xbe4b1462, 0xbf66ba05, 0xbec5378b ),
	VERT( 0xc10d791c, 0xc1f5676b, 0xbf901bf3 ),
	NORM( 0xbe95e78e, 0xbf71c393, 0xbe1946a6 ),
	VERT( 0xc110e268, 0xc1f5676b, 0x3d4214f5 ),
	NORM( 0xbe9a3b7a, 0xbf741bd1, 0xba77bb61 ),
	VERT( 0xc10d791c, 0xc1f5676b, 0x3fa30e47 ),
	NORM( 0xbe9700e5, 0xbf71916e, 0x3e19e6a4 ),
	VERT( 0xc0fe6260, 0xc1f5676b, 0x401915ff ),
	NORM( 0xbe4b9764, 0xbf65c314, 0x3ec98ad3 ),
	VERT( 0xc0cefc60, 0xc1f5676b, 0x40362d30 ),
	NORM( 0xbded9b96, 0xbf651872, 0x3edca09a ),
	VERT( 0xc0945c18, 0xc1f5676b, 0x4053f998 ),
	NORM( 0xbdbb540b, 0xbf62ec4a, 0x3ee85304 ),
	VERT( 0xc0202d10, 0xc1f5676b, 0x406be5d3 ),
	NORM( 0xbd4b502a, 0xbf6094eb, 0x3ef47057 ),
	VERT( 0xbe5a5900, 0xc1f5676b, 0x40740eb1 ),
	NORM( 0x3959246b, 0xbf5fea8f, 0x3ef82c67 ),
	VERT( 0x4004e1e8, 0xc1f5676b, 0x406be5d3 ),
	NORM( 0x3d4d3f48, 0xbf607800, 0x3ef4d40c ),
	VERT( 0x4086b684, 0xc1f5676b, 0x4053f998 ),
	NORM( 0x3dbc548a, 0xbf62b69c, 0x3ee9175a ),
	VERT( 0x40c156dc, 0xc1f5676b, 0x40362d30 ),
	NORM( 0x3deeb996, 0xbf64d680, 0x3edd9e7e ),
	VERT( 0x40f0d0a8, 0xc1f5676b, 0x401915ff ),
	NORM( 0x3e4d7bf3, 0xbf656995, 0x3ecaa6e7 ),
	VERT( 0x4106b03e, 0xc1f5676b, 0x3fa30e47 ),
	NORM( 0x3e98a645, 0xbf713893, 0x3e1c19ce ),
	VERT( 0x4128ff93, 0xc1ebb78e, 0x3ce2c6ea ),
	NORM( 0x3f631876, 0xbeec53ff, 0xbb6de9ca ),
	VERT( 0x4124baf0, 0xc1ebb78e, 0xbfb3988d ),
	NORM( 0x3f514c8c, 0xbee46fdf, 0xbeba6069 ),
	VERT( 0x41135080, 0xc1ebb78e, 0xc0311059 ),
	NORM( 0x3f0a617c, 0xbecc33c7, 0xbf3da305 ),
	VERT( 0x40ecbb48, 0xc1ebb78e, 0xc05567c0 ),
	NORM( 0x3e856183, 0xbeaa272f, 0xbf680e8c ),
	VERT( 0x40a53c70, 0xc1ebb78e, 0xc0793c08 ),
	NORM( 0x3e4e8172, 0xbea1dc48, 0xbf6d520b ),
	VERT( 0x4023f4b0, 0xc1ebb78e, 0xc08b344c ),
	NORM( 0x3de73c37, 0xbe9a21f4, 0xbf726847 ),
	VERT( 0xbe6bd080, 0xc1ebb78e, 0xc0902dff ),
	NORM( 0xb9325cae, 0xbe96cc40, 0xbf74a507 ),
	VERT( 0xc0416ec0, 0xc1ebb78e, 0xc08b344c ),
	NORM( 0xbde7c9b8, 0xbe9ab9ae, 0xbf724dff ),
	VERT( 0xc0b3f980, 0xc1ebb78e, 0xc0793c08 ),
	NORM( 0xbe4e82af, 0xbea2d4d1, 0xbf6d2775 ),
	VERT( 0xc0fb7848, 0xc1ebb78e, 0xc05567c0 ),
	NORM( 0xbe856d58, 0xbeab5bfd, 0xbf67d402 ),
	VERT( 0xc11aa2ec, 0xc1ebb78e, 0xc0311059 ),
	NORM( 0xbf0a42b0, 0xbecdbec1, 0xbf3d4eae ),
	VERT( 0xc12c0d58, 0xc1ebb78e, 0xbfb3988e ),
	NORM( 0xbf512c51, 0xbee5ed9a, 0xbeb91aa1 ),
	VERT( 0xc1303658, 0xc1ebb78e, 0x3ce2c6ea ),
	NORM( 0xbf629f4d, 0xbeee238e, 0xbb67a8cb ),
	VERT( 0xc12c0d58, 0xc1ebb78e, 0x3fc2fed8 ),
	NORM( 0xbf51b5be, 0xbee5549a, 0x3eb76876 ),
	VERT( 0xc11aa2ec, 0xc1ebb78e, 0x4038c37d ),
	NORM( 0xbf0a0d19, 0xbecc1f0f, 0x3f3de60e ),
	VERT( 0xc0fb7848, 0xc1ebb78e, 0x405c3d6f ),
	NORM( 0xbe84a150, 0xbea79148, 0x3f68a250 ),
	VERT( 0xc0b3f980, 0xc1ebb78e, 0x40804a2f ),
	NORM( 0xbe50e27a, 0xbe9f7b4e, 0x3f6d97c3 ),
	VERT( 0xc0416ec0, 0xc1ebb78e, 0x408ee079 ),
	NORM( 0xbde8909a, 0xbe96f8ca, 0x3f72e261 ),
	VERT( 0xbe6bd080, 0xc1ebb78e, 0x4093da2b ),
	NORM( 0xb9360c91, 0xbe92e5dc, 0x3f753cb5 ),
	VERT( 0x4023f4b0, 0xc1ebb78e, 0x408ee079 ),
	NORM( 0x3de8002b, 0xbe965cd9, 0x3f72fcb7 ),
	VERT( 0x40a53c70, 0xc1ebb78e, 0x40804a2f ),
	NORM( 0x3e50dfed, 0xbe9e7a00, 0x3f6dc2ee ),
	VERT( 0x40ecbb48, 0xc1ebb78e, 0x405c3d6f ),
	NORM( 0x3e8496db, 0xbea65757, 0x3f68dc1a ),
	VERT( 0x41135080, 0xc1ebb78e, 0x4038c37d ),
	NORM( 0x3f0a2cb6, 0xbeca8caa, 0x3f3e3ab5 ),
	VERT( 0x4124baf0, 0xc1ebb78e, 0x3fc2fed8 ),
	NORM( 0x3f51d9c1, 0xbee3d27c, 0x3eb8a3da ),
	VERT( 0x4128ff93, 0xc1aab74e, 0x3ce2c6ea ),
	NORM( 0x3f7fe2f4, 0xbcf1b3b8, 0xbb8220b2 ),
	VERT( 0x4124baf0, 0xc1aab74e, 0xbfb3988d ),
	NORM( 0x3f689111, 0xbce2924e, 0xbed58753 ),
	VERT( 0x41135080, 0xc1aab74e, 0xc0311059 ),
	NORM( 0x3f0ff722, 0xbca83117, 0xbf539e4f ),
	VERT( 0x40ecbb48, 0xc1aab74e, 0xc05567c0 ),
	NORM( 0x3e8ac398, 0xbc68250e, 0xbf766455 ),
	VERT( 0x40a53c70, 0xc1aab74e, 0xc0793c08 ),
	NORM( 0x3e54a4d8, 0xbc58b82a, 0xbf7a6586 ),
	VERT( 0x4023f4b0, 0xc1aab74e, 0xc08b344c ),
	NORM( 0x3de99394, 0xbc4c119c, 0xbf7e4f41 ),
	VERT( 0xbe6bd080, 0xc1aab74e, 0xc0902dff ),
	NORM( 0x371b23f5, 0xbc4678b5, 0xbf7ffb31 ),
	VERT( 0xc0416ec0, 0xc1aab74e, 0xc08b344c ),
	NORM( 0xbde9895b, 0xbc4d09aa, 0xbf7e4f5a ),
	VERT( 0xc0b3f980, 0xc1aab74e, 0xc0793c08 ),
	NORM( 0xbe54a1d7, 0xbc5a7c9b, 0xbf7a6596 ),
	VERT( 0xc0fb7848, 0xc1aab74e, 0xc05567c0 ),
	NORM( 0xbe8adf7b, 0xbc6a8514, 0xbf766043 ),
	VERT( 0xc11aa2ec, 0xc1aab74e, 0xc0311059 ),
	NORM( 0xbf0fff6a, 0xbcaa924c, 0xbf539833 ),
	VERT( 0xc12c0d58, 0xc1aab74e, 0xbfb3988e ),
	NORM( 0xbf68cd75, 0xbce69556, 0xbed47b22 ),
	VERT( 0xc1303658, 0xc1aab74e, 0x3ce2c6ea ),
	NORM( 0xbf7fe203, 0xbcf5bf4d, 0xbb7e10fa ),
	VERT( 0xc12c0d58, 0xc1aab74e, 0x3fc2fed8 ),
	NORM( 0xbf6937cd, 0xbce9febd, 0x3ed2a2e1 ),
	VERT( 0xc11aa2ec, 0xc1aab74e, 0x4038c37d ),
	NORM( 0xbf0f4846, 0xbcb05542, 0x3f541334 ),
	VERT( 0xc0fb7848, 0xc1aab74e, 0x405c3d6f ),
	NORM( 0xbe8a0c02, 0xbc77d21d, 0x3f767d27 ),
	VERT( 0xc0b3f980, 0xc1aab74e, 0x40804a2f ),
	NORM( 0xbe564d27, 0xbc6930b6, 0x3f7a4dfc ),
	VERT( 0xc0416ec0, 0xc1aab74e, 0x408ee079 ),
	NORM( 0xbde98ab5, 0xbc5ba184, 0x3f7e4e92 ),
	VERT( 0xbe6bd080, 0xc1aab74e, 0x4093da2b ),
	NORM( 0x371b28d6, 0xbc55289a, 0x3f7ffa74 ),
	VERT( 0x4023f4b0, 0xc1aab74e, 0x408ee079 ),
	NORM( 0x3de994ee, 0xbc5aa977, 0x3f7e4e7a ),
	VERT( 0x40a53c70, 0xc1aab74e, 0x40804a2f ),
	NORM( 0x3e56504e, 0xbc6768cb, 0x3f7a4deb ),
	VERT( 0x40ecbb48, 0xc1aab74e, 0x405c3d6f ),
	NORM( 0x3e89f07a, 0xbc7575e0, 0x3f768128 ),
	VERT( 0x41135080, 0xc1aab74e, 0x4038c37d ),
	NORM( 0x3f0f404d, 0xbcadf745, 0x3f541914 ),
	VERT( 0x4124baf0, 0xc1aab74e, 0x3fc2fed8 ),
	NORM( 0x3f68fe6d, 0xbce5ff9b, 0x3ed3a4a6 ),
	VERT( 0x413281f3, 0xc133f578, 0x3d0fadf6 ),
	NORM( 0x3f7f515a, 0xbd9535f9, 0xbb7a6c76 ),
	VERT( 0x412e009b, 0xc133f578, 0xbfbcd2df ),
	NORM( 0x3f683053, 0xbd8cbd90, 0xbed4be28 ),
	VERT( 0x411b9e7c, 0xc133f578, 0xc03a86a0 ),
	NORM( 0x3f1025ca, 0xbd53b8bd, 0xbf532536 ),
	VERT( 0x40fa1fd0, 0xc133f578, 0xc060e2e1 ),
	NORM( 0x3e8ac630, 0xbd13a73b, 0xbf763e8c ),
	VERT( 0x40aea824, 0xc133f578, 0xc0835a5e ),
	NORM( 0x3e54b0d6, 0xbd0a2587, 0xbf7a44a1 ),
	VERT( 0x402d8bd8, 0xc133f578, 0xc092c01c ),
	NORM( 0x3de9b928, 0xbd025a0c, 0xbf7e326b ),
	VERT( 0xbe713480, 0xc133f578, 0xc0980091 ),
	NORM( 0x369610ef, 0xbcfdce10, 0xbf7fe08a ),
	VERT( 0xc04bb270, 0xc133f578, 0xc092c01c ),
	NORM( 0xbde9b3f6, 0xbd02f422, 0xbf7e322f ),
	VERT( 0xc0bdbb70, 0xc133f578, 0xc0835a5e ),
	NORM( 0xbe54aef8, 0xbd0b3e31, 0xbf7a441f ),
	VERT( 0xc1049988, 0xc133f578, 0xc060e2e1 ),
	NORM( 0xbe8ae277, 0xbd15203f, 0xbf7639ad ),
	VERT( 0xc1231b58, 0xc133f578, 0xc03a86a0 ),
	NORM( 0xbf102eb9, 0xbd56adcf, 0xbf531c20 ),
	VERT( 0xc1357d78, 0xc133f578, 0xbfbcd2e0 ),
	NORM( 0xbf6868c9, 0xbd8f332c, 0xbed3ac9c ),
	VERT( 0xc139e1a0, 0xc133f578, 0x3d0fadf6 ),
	NORM( 0xbf7f4b81, 0xbd97b3c6, 0xbb7475ca ),
	VERT( 0xc1357d78, 0xc133f578, 0x3fce940c ),
	NORM( 0xbf68c93b, 0xbd8f93a8, 0x3ed1feeb ),
	VERT( 0xc1231b58, 0xc133f578, 0x40436735 ),
	NORM( 0xbf0f6ba5, 0xbd56efec, 0x3f53a095 ),
	VERT( 0xc1049988, 0xc133f578, 0x4068d9b3 ),
	NORM( 0xbe8a0a34, 0xbd159332, 0x3f7657cd ),
	VERT( 0xc0bdbb70, 0xc133f578, 0x40879abc ),
	NORM( 0xbe5658cb, 0xbd0c7108, 0x3f7a2cbe ),
	VERT( 0xc04bb270, 0xc133f578, 0x4097007b ),
	NORM( 0xbde9b011, 0xbd03f450, 0x3f7e31b9 ),
	VERT( 0xbe713480, 0xc133f578, 0x409c40f0 ),
	NORM( 0x36962977, 0xbcffd283, 0x3f7fe009 ),
	VERT( 0x402d8bd8, 0xc133f578, 0x4097007b ),
	NORM( 0x3de9b543, 0xbd035a3e, 0x3f7e31f5 ),
	VERT( 0x40aea824, 0xc133f578, 0x40879abc ),
	NORM( 0x3e565abc, 0xbd0b5635, 0x3f7a2d42 ),
	VERT( 0x40fa1fd0, 0xc133f578, 0x4068d9b3 ),
	NORM( 0x3e89ee64, 0xbd141c8c, 0x3f765c94 ),
	VERT( 0x411b9e7c, 0xc133f578, 0x40436735 ),
	NORM( 0x3f0f62f4, 0xbd53ff6a, 0x3f53a970 ),
	VERT( 0x412e009b, 0xc133f578, 0x3fce940c ),
	NORM( 0x3f6893d6, 0xbd8d1ece, 0x3ed3058f ),
	VERT( 0x413c0452, 0xc08d5458, 0x3ced8c62 ),
	NORM( 0x3f7fbc1d, 0x3d39aa30, 0xbb834407 ),
	VERT( 0x41374647, 0xc08d5458, 0xbfc7c6c3 ),
	NORM( 0x3f692893, 0x3d2fe2bb, 0xbed24275 ),
	VERT( 0x4123ec76, 0xc08d5458, 0xc044d9af ),
	NORM( 0x3f1371a0, 0x3d08d2b6, 0xbf5119d4 ),
	VERT( 0x4103c22c, 0xc08d5458, 0xc06d3acc ),
	NORM( 0x3e8b9ea0, 0x3cc0d133, 0xbf76395b ),
	VERT( 0x40b813d8, 0xc08d5458, 0xc08a851c ),
	NORM( 0x3e5620fd, 0x3cb4794e, 0xbf7a46df ),
	VERT( 0x40372308, 0xc08d5458, 0xc09aba50 ),
	NORM( 0x3dec0ed1, 0x3caa3a7b, 0xbf7e3cf6 ),
	VERT( 0xbe769880, 0xc08d5458, 0xc0a04188 ),
	NORM( 0xb82ed384, 0x3ca5bb85, 0xbf7ff296 ),
	VERT( 0xc055f620, 0xc08d5458, 0xc09aba50 ),
	NORM( 0xbdec3c47, 0x3cab0591, 0xbf7e3c2b ),
	VERT( 0xc0c77d68, 0xc08d5458, 0xc08a851c ),
	NORM( 0xbe562e58, 0x3cb5e65a, 0xbf7a45e6 ),
	VERT( 0xc10b76ec, 0xc08d5458, 0xc06d3acc ),
	NORM( 0xbe8bc2a2, 0x3cc2ba06, 0xbf7633e0 ),
	VERT( 0xc12b93c8, 0xc08d5458, 0xc044d9af ),
	NORM( 0xbf138e99, 0x3d0ac12c, 0xbf51041e ),
	VERT( 0xc13eed98, 0xc08d5458, 0xbfc7c6c4 ),
	NORM( 0xbf6967d0, 0x3d32c5d5, 0xbed11f47 ),
	VERT( 0xc1438cec, 0xc08d5458, 0x3ced8c62 ),
	NORM( 0xbf7fb9ec, 0x3d3cb0c1, 0xbb8027f6 ),
	VERT( 0xc13eed98, 0xc08d5458, 0x3fd86fae ),
	NORM( 0xbf69d588, 0x3d31eb1c, 0x3ecf35aa ),
	VERT( 0xc12b93c8, 0xc08d5458, 0x404d2e23 ),
	NORM( 0xbf12eed8, 0x3d085f98, 0x3f51761a ),
	VERT( 0xc10b76ec, 0xc08d5458, 0x4074992f ),
	NORM( 0xbe8ac91b, 0x3cbc9167, 0x3f76585a ),
	VERT( 0xc0c77d68, 0xc08d5458, 0x408e7ce4 ),
	NORM( 0xbe57ee65, 0x3cb0ab09, 0x3f7a2ec5 ),
	VERT( 0xc055f620, 0xc08d5458, 0x409eb219 ),
	NORM( 0xbdec41c3, 0x3ca56c8c, 0x3f7e3d03 ),
	VERT( 0xbe769880, 0xc08d5458, 0x40a43951 ),
	NORM( 0xb82ee0c0, 0x3ca016c3, 0x3f7ff37c ),
	VERT( 0x40372308, 0xc08d5458, 0x409eb219 ),
	NORM( 0x3dec144e, 0x3ca4a135, 0x3f7e3dcd ),
	VERT( 0x40b813d8, 0xc08d5458, 0x408e7ce4 ),
	NORM( 0x3e57e06a, 0x3caf3a7c, 0x3f7a2fc6 ),
	VERT( 0x4103c22c, 0xc08d5458, 0x4074992f ),
	NORM( 0x3e8aa692, 0x3cbaac6e, 0x3f765d93 ),
	VERT( 0x4123ec76, 0xc08d5458, 0x404d2e23 ),
	NORM( 0x3f12d1ca, 0x3d0671aa, 0x3f518bb8 ),
	VERT( 0x41374647, 0xc08d5458, 0x3fd86fae ),
	NORM( 0x3f699952, 0x3d2f0642, 0x3ed04e6e ),
	VERT( 0x413281f3, 0xbf907920, 0x3d0fadf6 ),
	NORM( 0x3f39fd4c, 0x3f2fe84b, 0xbb3836c8 ),
	VERT( 0x412e009b, 0xbf907920, 0xbfbcd2df ),
	NORM( 0x3f2c6c2d, 0x3f2bbafd, 0xbe9eef7c ),
	VERT( 0x411b9e7c, 0xbf907920, 0xc03a86a0 ),
	NORM( 0x3ede4624, 0x3f22a00d, 0xbf238433 ),
	VERT( 0x40fa1fd0, 0xbf907920, 0xc060e2e1 ),
	NORM( 0x3e5889ff, 0x3f21f241, 0xbf3ebb7a ),
	VERT( 0x40aea824, 0xbf907920, 0xc0835a5e ),
	NORM( 0x3e287624, 0x3f1f3302, 0xbf44013d ),
	VERT( 0x402d8bd8, 0xbf907920, 0xc092c01c ),
	NORM( 0x3dbda0c9, 0x3f1be772, 0xbf49a9ca ),
	VERT( 0xbe713480, 0xbf907920, 0xc0980091 ),
	NORM( 0x38a20bea, 0x3f1ac1db, 0xbf4bed4c ),
	VERT( 0xc04bb270, 0xbf907920, 0xc092c01c ),
	NORM( 0xbdbd5dab, 0x3f1be249, 0xbf49aec3 ),
	VERT( 0xc0bdbb70, 0xbf907920, 0xc0835a5e ),
	NORM( 0xbe2869a3, 0x3f1f2ec4, 0xbf44055b ),
	VERT( 0xc1049988, 0xbf907920, 0xc060e2e1 ),
	NORM( 0xbe58b115, 0x3f21f16e, 0xbf3eb967 ),
	VERT( 0xc1231b58, 0xbf907920, 0xc03a86a0 ),
	NORM( 0xbede22be, 0x3f22b7c8, 0xbf23789d ),
	VERT( 0xc1357d78, 0xbf907920, 0xbfbcd2e0 ),
	NORM( 0xbf2c7e97, 0x3f2bd81a, 0xbe9e212b ),
	VERT( 0xc139e1a0, 0xbf907920, 0x3d0fadf6 ),
	NORM( 0xbf399fcd, 0x3f304af6, 0xbb339a2b ),
	VERT( 0xc1357d78, 0xbf907920, 0x3fce940c ),
	NORM( 0xbf2d0698, 0x3f2b8d15, 0x3e9d13c0 ),
	VERT( 0xc1231b58, 0xbf907920, 0x40436735 ),
	NORM( 0xbedd9ebb, 0x3f221e0a, 0x3f243db2 ),
	VERT( 0xc1049988, 0xbf907920, 0x4068d9b3 ),
	NORM( 0xbe581bfb, 0x3f20fac9, 0x3f3f9449 ),
	VERT( 0xc0bdbb70, 0xbf907920, 0x40879abc ),
	NORM( 0xbe2aab7f, 0x3f1e10de, 0x3f44cd13 ),
	VERT( 0xc04bb270, 0xbf907920, 0x4097007b ),
	NORM( 0xbdbe9537, 0x3f1aa202, 0x3f4aa02b ),
	VERT( 0xbe713480, 0xbf907920, 0x409c40f0 ),
	NORM( 0x38a77032, 0x3f196a67, 0x3f4cf02a ),
	VERT( 0x402d8bd8, 0xbf907920, 0x4097007b ),
	NORM( 0x3dbed8e8, 0x3f1aa82e, 0x3f4a9a76 ),
	VERT( 0x40aea824, 0xbf907920, 0x40879abc ),
	NORM( 0x3e2ab7cf, 0x3f1e1663, 0x3f44c7fa ),
	VERT( 0x40fa1fd0, 0xbf907920, 0x4068d9b3 ),
	NORM( 0x3e57f2b5, 0x3f20fc97, 0x3f3f95ae ),
	VERT( 0x411b9e7c, 0xbf907920, 0x40436735 ),
	NORM( 0x3eddc193, 0x3f22072a, 0x3f244883 ),
	VERT( 0x412e009b, 0xbf907920, 0x3fce940c ),
	NORM( 0x3f2cf727, 0x3f2b6eed, 0x3e9ddaf9 ),
	VERT( 0x412b31bf, 0xc10d2264, 0x3d229b8c ),
	NORM( 0xbf3e4e30, 0x3f2b3a90, 0x3b3ed850 ),
	VERT( 0x4126de8a, 0xc10d2264, 0xbfb47fea ),
	NORM( 0xbf2f9f41, 0x3f280bba, 0x3ea0aad0 ),
	VERT( 0x411538aa, 0xc10d2264, 0xc032ade6 ),
	NORM( 0xbedca8ae, 0x3f2599b2, 0x3f210f0c ),
	VERT( 0x40efc5f8, 0xc10d2264, 0xc0578158 ),
	NORM( 0xbe4649e8, 0x3f3358bd, 0x3f2fd270 ),
	VERT( 0x40a75318, 0xc10d2264, 0xc07bcfed ),
	NORM( 0xbe1842ab, 0x3f32f758, 0x3f330c43 ),
	VERT( 0x4025e998, 0xc10d2264, 0xc08cb009 ),
	NORM( 0xbda87e49, 0x3f31b012, 0x3f37154d ),
	VERT( 0xbe72a080, 0xc10d2264, 0xc091bab7 ),
	NORM( 0xb2f5ddf1, 0x3f31dead, 0x3f381d6f ),
	VERT( 0xc0443db8, 0xc10d2264, 0xc08cb009 ),
	NORM( 0x3da87e45, 0x3f31b012, 0x3f37154d ),
	VERT( 0xc0b67d28, 0xc10d2264, 0xc07bcfed ),
	NORM( 0x3e1842b6, 0x3f32f759, 0x3f330c42 ),
	VERT( 0xc0fef000, 0xc10d2264, 0xc0578158 ),
	NORM( 0x3e4677a4, 0x3f33555c, 0x3f2fd2a8 ),
	VERT( 0xc11cc168, 0xc10d2264, 0xc032ade6 ),
	NORM( 0x3edcb93a, 0x3f259c77, 0x3f210688 ),
	VERT( 0xc12e674c, 0xc10d2264, 0xbfb47feb ),
	NORM( 0x3f2fe457, 0x3f27ef91, 0x3e9ff1e1 ),
	VERT( 0xc1329e7c, 0xc10d2264, 0x3d229b8c ),
	NORM( 0x3f3e19bf, 0x3f2b74cd, 0x3b3a1d48 ),
	VERT( 0xc12e674c, 0xc10d2264, 0x3fc71616 ),
	NORM( 0x3f305791, 0x3f27c081, 0xbe9ebab9 ),
	VERT( 0xc11cc168, 0xc10d2264, 0x403bf8fb ),
	NORM( 0x3edbc5f7, 0x3f257433, 0xbf2182ea ),
	VERT( 0xc0fef000, 0xc10d2264, 0x405fec03 ),
	NORM( 0x3e44f0ee, 0x3f339f2c, 0xbf2fa2bf ),
	VERT( 0xc0b67d28, 0xc10d2264, 0x40825f7f ),
	NORM( 0x3e198a17, 0x3f32df2a, 0xbf3312f3 ),
	VERT( 0xc0443db8, 0xc10d2264, 0x40912792 ),
	NORM( 0x3da87e4a, 0x3f31b012, 0xbf37154d ),
	VERT( 0xbe72a080, 0xc10d2264, 0x40963240 ),
	NORM( 0xb2f5ddf1, 0x3f31dead, 0xbf381d6f ),
	VERT( 0x4025e998, 0xc10d2264, 0x40912792 ),
	NORM( 0xbda87e4e, 0x3f31b012, 0xbf37154d ),
	VERT( 0x40a75318, 0xc10d2264, 0x40825f7f ),
	NORM( 0xbe198a0c, 0x3f32df2c, 0xbf3312f2 ),
	VERT( 0x40efc5f8, 0xc10d2264, 0x405fec03 ),
	NORM( 0xbe44c421, 0x3f33a280, 0xbf2fa27b ),
	VERT( 0x411538aa, 0xc10d2264, 0x403bf8fb ),
	NORM( 0xbedbb5a9, 0x3f25717e, 0xbf218b3c ),
	VERT( 0x4126de8a, 0xc10d2264, 0x3fc71616 ),
	NORM( 0xbf3015b7, 0x3f27db6e, 0xbe9f6ce4 ),
	VERT( 0x412b31bf, 0xbf87f3c0, 0x3d229b8c ),
	NORM( 0xbf1940ee, 0x3f4d0ef1, 0x3b201d0f ),
	VERT( 0x4126de8a, 0xbf87f3c0, 0xbfb47fea ),
	NORM( 0xbf05a6d8, 0x3f522fd2, 0x3e6c7701 ),
	VERT( 0x411538aa, 0xbf87f3c0, 0xc032ade6 ),
	NORM( 0xbea27716, 0x3f5b9d50, 0x3ecef25c ),
	VERT( 0x40efc5f8, 0xbf87f3c0, 0xc0578158 ),
	NORM( 0xbe2758f0, 0x3f4efd42, 0x3f10b5e0 ),
	VERT( 0x40a75318, 0xbf87f3c0, 0xc07bcfed ),
	NORM( 0xbdff1704, 0x3f50baec, 0x3f10be9b ),
	VERT( 0x4025e998, 0xbf87f3c0, 0xc08cb009 ),
	NORM( 0xbd8d8272, 0x3f535796, 0x3f0f6117 ),
	VERT( 0xbe72a080, 0xbf87f3c0, 0xc091bab7 ),
	NORM( 0xb89312db, 0x3f539d01, 0x3f10119b ),
	VERT( 0xc0443db8, 0xbf87f3c0, 0xc08cb009 ),
	NORM( 0x3d8d4298, 0x3f535e4c, 0x3f0f582e ),
	VERT( 0xc0b67d28, 0xbf87f3c0, 0xc07bcfed ),
	NORM( 0x3dfeeb03, 0x3f50c852, 0x3f10ac7d ),
	VERT( 0xc0fef000, 0xbf87f3c0, 0xc0578158 ),
	NORM( 0x3e27655d, 0x3f4f10e8, 0x3f1098da ),
	VERT( 0xc11cc168, 0xbf87f3c0, 0xc032ade6 ),
	NORM( 0x3ea26a7a, 0x3f5ba8e1, 0x3ececb26 ),
	VERT( 0xc12e674c, 0xbf87f3c0, 0xbfb47feb ),
	NORM( 0x3f0580cc, 0x3f526808, 0x3e6aad4c ),
	VERT( 0xc1329e7c, 0xbf87f3c0, 0x3d229b8c ),
	NORM( 0x3f19875f, 0x3f4cda3c, 0x3b1cbf23 ),
	VERT( 0xc12e674c, 0xbf87f3c0, 0x3fc71616 ),
	NORM( 0x3f055389, 0x3f52bf39, 0xbe675f3d ),
	VERT( 0xc11cc168, 0xbf87f3c0, 0x403bf8fb ),
	NORM( 0x3ea1542f, 0x3f5c6afb, 0xbecc6751 ),
	VERT( 0xc0fef000, 0xbf87f3c0, 0x405fec03 ),
	NORM( 0x3e256bf0, 0x3f4f6128, 0xbf104a1d ),
	VERT( 0xc0b67d28, 0xbf87f3c0, 0x40825f7f ),
	NORM( 0x3dffe768, 0x3f51941f, 0xbf0f7d9f ),
	VERT( 0xc0443db8, 0xbf87f3c0, 0x40912792 ),
	NORM( 0x3d8ce626, 0x3f54255c, 0xbf0e325d ),
	VERT( 0xbe72a080, 0xbf87f3c0, 0x40963240 ),
	NORM( 0xb89dac7e, 0x3f5469e7, 0xbf0ee2d5 ),
	VERT( 0x4025e998, 0xbf87f3c0, 0x40912792 ),
	NORM( 0xbd8d295a, 0x3f541e59, 0xbf0e3bc7 ),
	VERT( 0x40a75318, 0xbf87f3c0, 0x40825f7f ),
	NORM( 0xbe000b1c, 0x3f518604, 0xbf0f90e8 ),
	VERT( 0x40efc5f8, 0xbf87f3c0, 0x405fec03 ),
	NORM( 0xbe2560e4, 0x3f4f4ca2, 0xbf106863 ),
	VERT( 0x411538aa, 0xbf87f3c0, 0x403bf8fb ),
	NORM( 0xbea16178, 0x3f5c5ef7, 0xbecc90a3 ),
	VERT( 0x4126de8a, 0xbf87f3c0, 0x3fc71616 ),
	NORM( 0xbf057a15, 0x3f52884e, 0xbe6919e6 ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_Fish_handle_L[]
START
VList      vertex_FishCon1_Fish_handle_L,
PList      strip_FishCon1_Fish_handle_L,
Center      -0.235425F, -15.868812F,  0.061999F,
Radius      15.650649F,
END

CNKOBJECT  object_FishCon1_Fish_handle_L[]
START
EvalFlags ( 0x00000036 ),
CNKModel   model_FishCon1_Fish_handle_L,
OPosition  ( 33.500000F, 27.500000F, -1.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_FishCon1_Fish_handle_R,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_Fish_handle[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 41, 41, 41 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 470, _NB( UFO_0, 47 ),
	StripL(3),  157, 158, 156, 
	StripR(10),  167, 163, 168, 162, 169, 161, 170, 160, 171, 159, 
	StripL(3),  164, 165, 166, 
	StripR(6),  158, 173, 157, 172, 156, 187, 
	StripR(10),  174, 159, 175, 160, 176, 161, 177, 162, 178, 163, 
	StripR(6),  179, 164, 180, 165, 181, 166, 
	StripL(28),  181, 182, 166, 167, 164, 163, 179, 178, 180, 177, 
                   181, 176, 182, 175, 183, 174, 184, 173, 185, 172, 
                   186, 187, 171, 156, 159, 158, 174, 173, 
	StripR(10),  182, 167, 183, 168, 184, 169, 185, 170, 186, 171, 
	StripL(3),  132, 131, 130, 
	StripL(8),  143, 142, 127, 126, 135, 136, 151, 152, 
	StripL(28),  145, 144, 129, 128, 133, 134, 149, 150, 148, 151, 
                   147, 152, 146, 153, 145, 154, 144, 155, 143, 140, 
                   142, 141, 126, 125, 136, 137, 152, 153, 
	StripL(8),  146, 145, 130, 129, 132, 133, 148, 149, 
	StripR(6),  130, 146, 131, 147, 132, 148, 
	StripL(8),  151, 150, 135, 134, 127, 128, 143, 144, 
	StripL(8),  154, 153, 138, 137, 124, 125, 140, 141, 
	StripL(6),  154, 138, 139, 124, 155, 140, 
	StripL(3),  139, 155, 154, 
	StripL(12),  98, 100, 120, 103, 121, 104, 122, 106, 123, 76, 
                   108, 109, 
	StripR(6),  94, 118, 97, 119, 98, 120, 
	StripL(20),  92, 94, 117, 118, 116, 119, 115, 120, 114, 121, 
                   113, 122, 112, 123, 111, 108, 110, 109, 79, 76, 
                   
	StripR(6),  112, 82, 111, 80, 110, 79, 
	StripL(12),  82, 84, 112, 86, 113, 89, 114, 90, 115, 92, 
                   116, 117, 
	StripR(9),  83, 85, 13, 87, 9, 88, 10, 91, 93, 
	StripL(3),  17, 83, 81, 
	StripL(7),  102, 101, 14, 99, 10, 96, 95, 
	StripL(11),  105, 102, 18, 14, 16, 12, 19, 15, 17, 13, 
                   83, 
	StripR(5),  105, 107, 18, 77, 78, 
	StripL(3),  10, 95, 93, 
	StripL(3),  51, 50, 28, 
	StripR(14),  36, 42, 35, 43, 34, 44, 33, 45, 32, 46, 
                   31, 47, 30, 48, 
	StripL(3),  40, 39, 38, 
	StripR(14),  60, 36, 59, 35, 58, 34, 57, 33, 56, 32, 
                   55, 31, 54, 30, 
	StripL(36),  61, 60, 37, 36, 41, 42, 65, 66, 64, 67, 
                   63, 68, 62, 69, 61, 70, 60, 71, 59, 72, 
                   58, 73, 57, 74, 56, 75, 55, 52, 54, 53, 
                   30, 29, 48, 49, 72, 73, 
	StripL(8),  62, 61, 38, 37, 40, 41, 64, 65, 
	StripR(6),  64, 40, 63, 39, 62, 38, 
	StripR(14),  72, 48, 71, 47, 70, 46, 69, 45, 68, 44, 
                   67, 43, 66, 42, 
	StripL(8),  74, 73, 50, 49, 28, 29, 52, 53, 
	StripR(6),  50, 74, 51, 75, 28, 52, 
	StripL(3),  1, 2, 6, 
	StripL(7),  3, 5, 7, 9, 11, 13, 15, 
	StripL(6),  8, 6, 4, 2, 0, 1, 
	StripL(3),  9, 5, 10, 
	StripL(3),  14, 10, 12, 
	StripR(14),  12, 15, 8, 11, 4, 7, 0, 3, 1, 5, 
                   6, 10, 8, 12, 
	StripR(6),  17, 19, 21, 23, 25, 27, 
	StripR(14),  19, 16, 23, 20, 27, 24, 25, 26, 21, 22, 
                   17, 18, 81, 78, 
	StripR(6),  26, 24, 22, 20, 18, 16, 
	CnkEnd()
END

VLIST      vertex_FishCon1_Fish_handle[]
START
	CnkV_VN(0x0, 1129),
	OffnbIdx(0, 188),
	VERT( 0xc22003fa, 0xc126346e, 0x40045fbd ),
	NORM( 0xbf36c1f8, 0xbf02f591, 0x3ef4d435 ),
	VERT( 0xc21b32dc, 0xc0b44808, 0xc05a68ff ),
	NORM( 0xbf1944b3, 0x3f235a48, 0xbef7e073 ),
	VERT( 0xc21b32dc, 0xc0b44808, 0x3ffe5942 ),
	NORM( 0xbf1a58c7, 0x3f23bee4, 0x3ef42276 ),
	VERT( 0xc22003fa, 0xc126346e, 0xc05fe611 ),
	NORM( 0xbf35cdf5, 0xbf02c418, 0xbef80f37 ),
	VERT( 0xc1da4de8, 0xc126346e, 0x40bdbb4c ),
	NORM( 0xbe576d71, 0xbf2d2a62, 0x3f34b0d1 ),
	VERT( 0xc1d4ece8, 0xc08dbf18, 0xc0dc9124 ),
	NORM( 0xbe81c53a, 0x3f3473d3, 0xbf299898 ),
	VERT( 0xc1d4ece8, 0xc08dbf18, 0x40b72a7d ),
	NORM( 0xbe8de341, 0x3f354775, 0x3f26415f ),
	VERT( 0xc1da4de8, 0xc126346e, 0xc0e37f56 ),
	NORM( 0xbe3f016c, 0xbf2c7fb1, 0xbf3707ac ),
	VERT( 0xc1842f10, 0xc126346e, 0x410f36f9 ),
	NORM( 0xbe112161, 0xbf2b1184, 0x3f3af688 ),
	VERT( 0xc1802f5c, 0xc03509f8, 0xc1141d4d ),
	NORM( 0xbe2357ff, 0x3f3734dd, 0xbf2e1473 ),
	VERT( 0xc1802f5c, 0xc03509f8, 0x410ae579 ),
	NORM( 0xbe389620, 0x3f361cf9, 0x3f2de674 ),
	VERT( 0xc1842f10, 0xc126346e, 0xc118ac39 ),
	NORM( 0xbdeda26e, 0xbf2c39b3, 0xbf3b0fca ),
	VERT( 0xbea82f80, 0xc126346e, 0x4128ce13 ),
	NORM( 0xb8ed8ed7, 0xbf2bbbbd, 0x3f3dda07 ),
	VERT( 0xbea1ca00, 0xc01465f0, 0xc129230b ),
	NORM( 0x38981e72, 0x3f35fcf4, 0xbf340b9d ),
	VERT( 0xbea1ca00, 0xc01465f0, 0x4123cbb2 ),
	NORM( 0x37c7d0c1, 0x3f350344, 0x3f3506a2 ),
	VERT( 0xbea82f80, 0xc126346e, 0xc12e6cac ),
	NORM( 0xb8c43fe6, 0xbf2c64f2, 0xbf3d406e ),
	VERT( 0x417e01d4, 0xc126346e, 0x410f36f9 ),
	NORM( 0x3e0fe8a0, 0xbf2c0229, 0x3f3a2868 ),
	VERT( 0x41767424, 0xc03509f8, 0xc1141d4d ),
	NORM( 0x3e2438a9, 0x3f369dd9, 0xbf2ea5ae ),
	VERT( 0x41767424, 0xc03509f8, 0x410ae579 ),
	NORM( 0x3e39a236, 0x3f3551a8, 0x3f2ea8a6 ),
	VERT( 0x417e01d4, 0xc126346e, 0xc118ac39 ),
	NORM( 0x3debe238, 0xbf2cf138, 0xbf3a6f11 ),
	VERT( 0x41d66388, 0xc126346e, 0x40bdbb4c ),
	NORM( 0x3e54ac8c, 0xbf2e2c74, 0x3f33ec8d ),
	VERT( 0x41cec972, 0xc08dbf18, 0xc0dc9124 ),
	NORM( 0x3e817de6, 0x3f33ac2d, 0xbf2a799c ),
	VERT( 0x41cec972, 0xc08dbf18, 0x40b72a7d ),
	NORM( 0x3e8def3a, 0x3f344c62, 0x3f274efd ),
	VERT( 0x41d66388, 0xc126346e, 0xc0e37f56 ),
	NORM( 0x3e3d1991, 0xbf2d4a96, 0xbf366766 ),
	VERT( 0x421e1404, 0xc126346e, 0x40045fbd ),
	NORM( 0x3f35ad14, 0xbf046791, 0x3ef4f080 ),
	VERT( 0x42195a2b, 0xc0b44808, 0xc05a68ff ),
	NORM( 0x3f199cab, 0x3f2276a9, 0xbef95be0 ),
	VERT( 0x42195a2b, 0xc0b44808, 0x3ffe5942 ),
	NORM( 0x3f1acd98, 0x3f22a3fd, 0x3ef5ed5c ),
	VERT( 0x421e1404, 0xc126346e, 0xc05fe611 ),
	NORM( 0x3f34ded9, 0xbf03f7f9, 0xbef83e30 ),
	VERT( 0x40b420b8, 0xc16b9100, 0xbcce7ba0 ),
	NORM( 0x3f3bf818, 0xbf2dcab7, 0x00000000 ),
	VERT( 0x40ad95e8, 0xc16b9100, 0xbfc9ffd4 ),
	NORM( 0x3f359072, 0xbf2dcab6, 0xbe4299a1 ),
	VERT( 0x409a6798, 0xc16b9100, 0xc0419cf7 ),
	NORM( 0x3f22c939, 0xbf2dcab9, 0xbebbf814 ),
	VERT( 0x4077c8e0, 0xc16b9100, 0xc0889232 ),
	NORM( 0x3f04ea0f, 0xbf2dcab5, 0xbf04ea0b ),
	VERT( 0x40284170, 0xc16b9100, 0xc0a7155d ),
	NORM( 0x3ebbf813, 0xbf2dcab6, 0xbf22c93c ),
	VERT( 0x3f9748c0, 0xc16b9100, 0xc0ba43ab ),
	NORM( 0x3e429991, 0xbf2dcab7, 0xbf359072 ),
	VERT( 0xbebdf480, 0xc16b9100, 0xc0c0ce7b ),
	NORM( 0x00000000, 0xbf2dcab7, 0xbf3bf819 ),
	VERT( 0xbff64300, 0xc16b9100, 0xc0ba43ab ),
	NORM( 0xbe429991, 0xbf2dcab7, 0xbf359072 ),
	VERT( 0xc057be90, 0xc16b9100, 0xc0a7155d ),
	NORM( 0xbebbf813, 0xbf2dcab6, 0xbf22c93c ),
	VERT( 0xc093a300, 0xc16b9100, 0xc0889232 ),
	NORM( 0xbf04ea1a, 0xbf2dcab2, 0xbf04ea05 ),
	VERT( 0xc0b22620, 0xc16b9100, 0xc0419cf7 ),
	NORM( 0xbf22c93c, 0xbf2dcabc, 0xbebbf7fd ),
	VERT( 0xc0c55470, 0xc16b9100, 0xbfc9ffd4 ),
	NORM( 0xbf359072, 0xbf2dcab6, 0xbe4299a1 ),
	VERT( 0xc0cbdf40, 0xc16b9100, 0xbcce7ba0 ),
	NORM( 0xbf3bf818, 0xbf2dcab7, 0x00000000 ),
	VERT( 0xc0c55470, 0xc16b9100, 0x3fc38bf8 ),
	NORM( 0xbf359073, 0xbf2dcab5, 0x3e4299a1 ),
	VERT( 0xc0b22620, 0xc16b9100, 0x403e630a ),
	NORM( 0xbf22c93d, 0xbf2dcabc, 0x3ebbf7fd ),
	VERT( 0xc093a300, 0xc16b9100, 0x4086f53b ),
	NORM( 0xbf04ea1a, 0xbf2dcab2, 0x3f04ea05 ),
	VERT( 0xc057be90, 0xc16b9100, 0x40a57866 ),
	NORM( 0xbebbf813, 0xbf2dcab6, 0x3f22c93c ),
	VERT( 0xbff64300, 0xc16b9100, 0x40b8a6b4 ),
	NORM( 0xbe429997, 0xbf2dcab7, 0x3f359071 ),
	VERT( 0xbebdf480, 0xc16b9100, 0x40bf3185 ),
	NORM( 0x00000000, 0xbf2dcab6, 0x3f3bf81a ),
	VERT( 0x3f9748c0, 0xc16b9100, 0x40b8a6b4 ),
	NORM( 0x3e429997, 0xbf2dcab7, 0x3f359071 ),
	VERT( 0x40284170, 0xc16b9100, 0x40a57866 ),
	NORM( 0x3ebbf813, 0xbf2dcab6, 0x3f22c93c ),
	VERT( 0x4077c8e0, 0xc16b9100, 0x4086f53b ),
	NORM( 0x3f04ea0f, 0xbf2dcab5, 0x3f04ea0b ),
	VERT( 0x409a6798, 0xc16b9100, 0x403e630a ),
	NORM( 0x3f22c939, 0xbf2dcab8, 0x3ebbf815 ),
	VERT( 0x40ad95e8, 0xc16b9100, 0x3fc38bf8 ),
	NORM( 0x3f359073, 0xbf2dcab5, 0x3e4299a1 ),
	VERT( 0x40b420b8, 0xc115e282, 0xbcce7ba0 ),
	NORM( 0x3f3bf818, 0x3f2dcab7, 0x00000000 ),
	VERT( 0x40ad95e8, 0xc115e282, 0xbfc9ffd4 ),
	NORM( 0x3f359072, 0x3f2dcab6, 0xbe4299a1 ),
	VERT( 0x409a6798, 0xc115e282, 0xc0419cf7 ),
	NORM( 0x3f22c939, 0x3f2dcab9, 0xbebbf814 ),
	VERT( 0x4077c8e0, 0xc115e282, 0xc0889232 ),
	NORM( 0x3f04ea0f, 0x3f2dcab5, 0xbf04ea0b ),
	VERT( 0x40284170, 0xc115e282, 0xc0a7155d ),
	NORM( 0x3ebbf813, 0x3f2dcab6, 0xbf22c93c ),
	VERT( 0x3f9748c0, 0xc115e282, 0xc0ba43ab ),
	NORM( 0x3e429991, 0x3f2dcab7, 0xbf359072 ),
	VERT( 0xbebdf480, 0xc115e282, 0xc0c0ce7b ),
	NORM( 0x00000000, 0x3f2dcab7, 0xbf3bf819 ),
	VERT( 0xbff64300, 0xc115e282, 0xc0ba43ab ),
	NORM( 0xbe429991, 0x3f2dcab7, 0xbf359072 ),
	VERT( 0xc057be90, 0xc115e282, 0xc0a7155d ),
	NORM( 0xbebbf813, 0x3f2dcab6, 0xbf22c93c ),
	VERT( 0xc093a300, 0xc115e282, 0xc0889232 ),
	NORM( 0xbf04ea1a, 0x3f2dcab2, 0xbf04ea05 ),
	VERT( 0xc0b22620, 0xc115e282, 0xc0419cf7 ),
	NORM( 0xbf22c93c, 0x3f2dcabc, 0xbebbf7fd ),
	VERT( 0xc0c55470, 0xc115e282, 0xbfc9ffd4 ),
	NORM( 0xbf359072, 0x3f2dcab6, 0xbe4299a1 ),
	VERT( 0xc0cbdf40, 0xc115e282, 0xbcce7ba0 ),
	NORM( 0xbf3bf818, 0x3f2dcab7, 0x00000000 ),
	VERT( 0xc0c55470, 0xc115e282, 0x3fc38bf8 ),
	NORM( 0xbf359073, 0x3f2dcab5, 0x3e4299a1 ),
	VERT( 0xc0b22620, 0xc115e282, 0x403e630a ),
	NORM( 0xbf22c93d, 0x3f2dcabc, 0x3ebbf7fd ),
	VERT( 0xc093a300, 0xc115e282, 0x4086f53b ),
	NORM( 0xbf04ea1a, 0x3f2dcab2, 0x3f04ea05 ),
	VERT( 0xc057be90, 0xc115e282, 0x40a57866 ),
	NORM( 0xbebbf813, 0x3f2dcab6, 0x3f22c93c ),
	VERT( 0xbff64300, 0xc115e282, 0x40b8a6b4 ),
	NORM( 0xbe429997, 0x3f2dcab7, 0x3f359071 ),
	VERT( 0xbebdf480, 0xc115e282, 0x40bf3185 ),
	NORM( 0x00000000, 0x3f2dcab6, 0x3f3bf81a ),
	VERT( 0x3f9748c0, 0xc115e282, 0x40b8a6b4 ),
	NORM( 0x3e429997, 0x3f2dcab7, 0x3f359071 ),
	VERT( 0x40284170, 0xc115e282, 0x40a57866 ),
	NORM( 0x3ebbf813, 0x3f2dcab6, 0x3f22c93c ),
	VERT( 0x4077c8e0, 0xc115e282, 0x4086f53b ),
	NORM( 0x3f04ea0f, 0x3f2dcab5, 0x3f04ea0b ),
	VERT( 0x409a6798, 0xc115e282, 0x403e630a ),
	NORM( 0x3f22c939, 0x3f2dcab8, 0x3ebbf815 ),
	VERT( 0x40ad95e8, 0xc115e282, 0x3fc38bf8 ),
	NORM( 0x3f359073, 0x3f2dcab5, 0x3e4299a1 ),
	VERT( 0x40f420b8, 0xc024e550, 0x3e6b50b0 ),
	NORM( 0xbf7e9567, 0x3dd72276, 0x3a17d4f3 ),
	VERT( 0x40f420b8, 0xc024e550, 0x3e6b50b0 ),
	NORM( 0x3d04d2c3, 0x3f7fdd89, 0x340d3d37 ),
	VERT( 0x40e0a418, 0xc023a198, 0xc0353a0a ),
	NORM( 0x3d04d4d3, 0x3f7fdd88, 0xb5abf757 ),
	VERT( 0x40e0a418, 0xc023a198, 0xc0353a0a ),
	NORM( 0xbf6ad825, 0x3dd97fcb, 0x3ec46afa ),
	VERT( 0x40a925b0, 0xc02007c0, 0xc0adaa6e ),
	NORM( 0xbf32ec45, 0x3ddb48d1, 0x3f35073f ),
	VERT( 0x40a925b0, 0xc02007c0, 0xc0adaa6e ),
	NORM( 0x3d04d308, 0x3f7fdd89, 0x34246285 ),
	VERT( 0x402c3090, 0xc01aa418, 0xc0e528d9 ),
	NORM( 0xbebf5e1e, 0x3ddc139b, 0x3f6bd8d8 ),
	VERT( 0x402c3090, 0xc01aa418, 0xc0e528d9 ),
	NORM( 0x3d03c1d4, 0x3f7fde15, 0x397116d9 ),
	VERT( 0xbebdf480, 0xc0148338, 0xc0f8a57a ),
	NORM( 0x3a89209d, 0x3dde5702, 0x3f7e7c9c ),
	VERT( 0xbebdf480, 0xc0148338, 0xc0f8a57a ),
	NORM( 0xba8c7e7a, 0x3f7ffff3, 0x3a21c055 ),
	VERT( 0xc05bada0, 0xc01adfe0, 0xc0e528d9 ),
	NORM( 0x3ec04520, 0x3de2f83d, 0x3f6b8fb3 ),
	VERT( 0xc05bada0, 0xc01adfe0, 0xc0e528d9 ),
	NORM( 0xbd04ed56, 0x3f7fdd7b, 0x33c87998 ),
	VERT( 0xc0c0e440, 0xc0204498, 0xc0adaa6e ),
	NORM( 0xbd04ed65, 0x3f7fdd7b, 0xb2f7f3a6 ),
	VERT( 0xc0c0e440, 0xc0204498, 0xc0adaa6e ),
	NORM( 0x3f331dbb, 0x3de66dd0, 0x3f349ed8 ),
	VERT( 0xc0f862a0, 0xc023df28, 0xc0353a0a ),
	NORM( 0x3f6ac213, 0x3de732b7, 0x3ec3d9f1 ),
	VERT( 0xc0f862a0, 0xc023df28, 0xc0353a0a ),
	NORM( 0xbd04ee16, 0x3f7fdd7a, 0xb4faa923 ),
	VERT( 0xc105efa0, 0xc0252320, 0x3e6b50b0 ),
	NORM( 0x3f7e6404, 0x3de546ee, 0x3984ca91 ),
	VERT( 0xc105efa0, 0xc0252320, 0x3e6b50b0 ),
	NORM( 0xbd04ed3c, 0x3f7fdd7b, 0x33e0cada ),
	VERT( 0xc0f862a0, 0xc023df28, 0x4052a420 ),
	NORM( 0x3f6ada2e, 0x3de126a3, 0xbec3d710 ),
	VERT( 0xc0f862a0, 0xc023df28, 0x4052a420 ),
	NORM( 0xbd04ed72, 0x3f7fdd7b, 0xb364bf8f ),
	VERT( 0xc0c0e440, 0xc0204498, 0x40bc5f79 ),
	NORM( 0xbd04ed63, 0x3f7fdd7b, 0x3322a3be ),
	VERT( 0xc0c0e440, 0xc0204498, 0x40bc5f79 ),
	NORM( 0x3f3322cb, 0x3ddb5980, 0xbf34d0fa ),
	VERT( 0xc05bada0, 0xc01adfe0, 0x40f3dde4 ),
	NORM( 0x3ebe59df, 0x3dd30051, 0xbf6c2e9c ),
	VERT( 0xc05bada0, 0xc01adfe0, 0x40f3dde4 ),
	NORM( 0xbd04ed68, 0x3f7fdd7b, 0xb35cba35 ),
	VERT( 0xbea1ca00, 0xc01465f0, 0x41038071 ),
	NORM( 0xbb9c2824, 0x3dcebeb3, 0xbf7eb077 ),
	VERT( 0xbea1ca00, 0xc01465f0, 0x41038071 ),
	NORM( 0x384fb18b, 0x3f800000, 0x00000000 ),
	VERT( 0x402c3090, 0xc01aa418, 0x40f3dde4 ),
	NORM( 0x3d04d2fc, 0x3f7fdd89, 0x331aa94d ),
	VERT( 0x402c3090, 0xc01aa418, 0x40f3dde4 ),
	NORM( 0xbec0503c, 0x3dd0ea90, 0xbf6bd035 ),
	VERT( 0x40a925b0, 0xc02007c0, 0x40bc5f79 ),
	NORM( 0xbf335388, 0x3dd2a380, 0xbf34ca19 ),
	VERT( 0x40a925b0, 0xc02007c0, 0x40bc5f79 ),
	NORM( 0x3d04d2ff, 0x3f7fdd89, 0xb42e863d ),
	VERT( 0x40e0a418, 0xc023a198, 0x4052a420 ),
	NORM( 0xbf6b0a57, 0x3dd4c52c, 0xbec3cd72 ),
	VERT( 0x40e0a418, 0xc023a198, 0x4052a420 ),
	NORM( 0x3d04d303, 0x3f7fdd89, 0xb33e2261 ),
	VERT( 0x40e04d00, 0xc10700da, 0x3e8019e0 ),
	NORM( 0xbf35d44b, 0x3f3434ac, 0xb94f080d ),
	VERT( 0x40ce5f70, 0xc10700da, 0xc0243f1f ),
	NORM( 0xbf27d74b, 0x3f344ffd, 0x3e8b530a ),
	VERT( 0x409b5190, 0xc10700da, 0xc09e880f ),
	NORM( 0xbf0036f7, 0x3f3463f6, 0x3f00abd2 ),
	VERT( 0x401dd220, 0xc10700da, 0xc0d195f6 ),
	NORM( 0xbe8a283d, 0x3f346c30, 0x3f27f6ba ),
	VERT( 0xbeb38200, 0xc10700da, 0xc0e38380 ),
	NORM( 0x3963329b, 0x3f347e36, 0x3f358b4c ),
	VERT( 0xc04ab2a0, 0xc10700da, 0xc0d195f6 ),
	NORM( 0x3e8a1db0, 0x3f34bd2b, 0x3f27a1c0 ),
	VERT( 0xc0b1c1d0, 0xc10700da, 0xc09e880f ),
	NORM( 0x3effd7e3, 0x3f34e461, 0x3f004208 ),
	VERT( 0xc0e4cfb0, 0xc10700da, 0xc0243f1f ),
	NORM( 0x3f274b9f, 0x3f34ec7d, 0x3e8ac731 ),
	VERT( 0xc0f6bd40, 0xc10700da, 0x3e8019e0 ),
	NORM( 0x3f353347, 0x3f34d691, 0xb9e0bdf5 ),
	VERT( 0xc0e4cfb0, 0xc10700da, 0x40444596 ),
	NORM( 0x3f2771a7, 0x3f34a7bf, 0xbe8b7581 ),
	VERT( 0xc0b1c1d0, 0xc10700da, 0x40ae8b4b ),
	NORM( 0x3f000dfb, 0x3f3464fa, 0xbf00d32f ),
	VERT( 0xc04ab2a0, 0xc10700da, 0x40e19932 ),
	NORM( 0x3e88ed01, 0x3f3410e1, 0xbf2898f1 ),
	VERT( 0xbeb38200, 0xc10700da, 0x40f386be ),
	NORM( 0xbb21483e, 0x3f33c03b, 0xbf364722 ),
	VERT( 0x401dd220, 0xc10700da, 0x40e19932 ),
	NORM( 0xbe8aeea9, 0x3f33ee13, 0xbf2854fe ),
	VERT( 0x409b5190, 0xc10700da, 0x40ae8b4b ),
	NORM( 0xbf008ed7, 0x3f3401b5, 0xbf00ddb3 ),
	VERT( 0x40ce5f70, 0xc10700da, 0x40444596 ),
	NORM( 0xbf2805f2, 0x3f341999, 0xbe8b8b79 ),
	VERT( 0x4213b3ca, 0xc0fb8de4, 0xbf5a9d02 ),
	NORM( 0x3f3f072b, 0xbf2a6c84, 0x00000000 ),
	VERT( 0x421291d2, 0xc0fb8de4, 0xc011c33a ),
	NORM( 0x3f307c90, 0xbf2a6c95, 0xbe9234ea ),
	VERT( 0x420f5813, 0xc0fb8de4, 0xc05f0055 ),
	NORM( 0x3f0713c1, 0xbf2a6c8b, 0xbf0713bc ),
	VERT( 0x420a8441, 0xc0fb8de4, 0xc0894e26 ),
	NORM( 0x3e9234d8, 0xbf2a6c90, 0xbf307c99 ),
	VERT( 0x4204d282, 0xc0fb8de4, 0xc0925dde ),
	NORM( 0x34977cf1, 0xbf2a6c8d, 0xbf3f0723 ),
	VERT( 0x41fe4183, 0xc0fb8de4, 0xc0894e26 ),
	NORM( 0xbe9234d9, 0xbf2a6c8d, 0xbf307c9b ),
	VERT( 0x41f499e0, 0xc0fb8de4, 0xc05f0055 ),
	NORM( 0xbf0713bd, 0xbf2a6c8f, 0xbf0713bc ),
	VERT( 0x41ee2661, 0xc0fb8de4, 0xc011c33a ),
	NORM( 0xbf307c9e, 0xbf2a6c8c, 0xbe9234cf ),
	VERT( 0x41ebe274, 0xc0fb8de4, 0xbf5a9d02 ),
	NORM( 0xbf3f0720, 0xbf2a6c90, 0x00000000 ),
	VERT( 0x41ee2661, 0xc0fb8de4, 0x3f11d2e4 ),
	NORM( 0xbf307c9f, 0xbf2a6c8c, 0x3e9234cd ),
	VERT( 0x41f499e0, 0xc0fb8de4, 0x3fe363aa ),
	NORM( 0xbf0713be, 0xbf2a6c8f, 0x3f0713ba ),
	VERT( 0x41fe4183, 0xc0fb8de4, 0x40254dcd ),
	NORM( 0xbe9234d8, 0xbf2a6c8d, 0x3f307c9c ),
	VERT( 0x4204d282, 0xc0fb8de4, 0x40376d3b ),
	NORM( 0x34977cf0, 0xbf2a6c8e, 0x3f3f0723 ),
	VERT( 0x420a8441, 0xc0fb8de4, 0x40254dcd ),
	NORM( 0x3e9234d6, 0xbf2a6c8f, 0x3f307c9a ),
	VERT( 0x420f5813, 0xc0fb8de4, 0x3fe363aa ),
	NORM( 0x3f0713c2, 0xbf2a6c8c, 0x3f0713bb ),
	VERT( 0x421291d2, 0xc0fb8de4, 0x3f11d2e4 ),
	NORM( 0x3f307c90, 0xbf2a6c95, 0x3e9234e8 ),
	VERT( 0x4213b3ca, 0x419fa178, 0xbf5a9d02 ),
	NORM( 0x3f3f072b, 0x3f2a6c84, 0x00000000 ),
	VERT( 0x421291d2, 0x419fa178, 0xc011c33a ),
	NORM( 0x3f307c90, 0x3f2a6c95, 0xbe9234ea ),
	VERT( 0x420f5813, 0x419fa178, 0xc05f0055 ),
	NORM( 0x3f0713c1, 0x3f2a6c8b, 0xbf0713bc ),
	VERT( 0x420a8441, 0x419fa178, 0xc0894e26 ),
	NORM( 0x3e9234d8, 0x3f2a6c90, 0xbf307c99 ),
	VERT( 0x4204d282, 0x419fa178, 0xc0925dde ),
	NORM( 0x34977cf1, 0x3f2a6c8d, 0xbf3f0723 ),
	VERT( 0x41fe4183, 0x419fa178, 0xc0894e26 ),
	NORM( 0xbe9234d9, 0x3f2a6c8d, 0xbf307c9b ),
	VERT( 0x41f499e0, 0x419fa178, 0xc05f0055 ),
	NORM( 0xbf0713bd, 0x3f2a6c8f, 0xbf0713bc ),
	VERT( 0x41ee2661, 0x419fa178, 0xc011c33a ),
	NORM( 0xbf307c9e, 0x3f2a6c8c, 0xbe9234cf ),
	VERT( 0x41ebe274, 0x419fa178, 0xbf5a9d02 ),
	NORM( 0xbf3f0720, 0x3f2a6c90, 0x00000000 ),
	VERT( 0x41ee2661, 0x419fa178, 0x3f11d2e4 ),
	NORM( 0xbf307c9f, 0x3f2a6c8c, 0x3e9234cd ),
	VERT( 0x41f499e0, 0x419fa178, 0x3fe363aa ),
	NORM( 0xbf0713be, 0x3f2a6c8f, 0x3f0713ba ),
	VERT( 0x41fe4183, 0x419fa178, 0x40254dcd ),
	NORM( 0xbe9234d8, 0x3f2a6c8d, 0x3f307c9c ),
	VERT( 0x4204d282, 0x419fa178, 0x40376d3b ),
	NORM( 0x34977cf0, 0x3f2a6c8e, 0x3f3f0723 ),
	VERT( 0x420a8441, 0x419fa178, 0x40254dcd ),
	NORM( 0x3e9234d6, 0x3f2a6c8f, 0x3f307c9a ),
	VERT( 0x420f5813, 0x419fa178, 0x3fe363aa ),
	NORM( 0x3f0713c2, 0x3f2a6c8c, 0x3f0713bb ),
	VERT( 0x421291d2, 0x419fa178, 0x3f11d2e4 ),
	NORM( 0x3f307c90, 0x3f2a6c95, 0x3e9234e8 ),
	VERT( 0xc216d808, 0xc0fb8de4, 0xbf5a9d02 ),
	NORM( 0xbf3f072b, 0xbf2a6c84, 0x00000000 ),
	VERT( 0xc215b610, 0xc0fb8de4, 0xc011c33a ),
	NORM( 0xbf307c8f, 0xbf2a6c91, 0xbe923505 ),
	VERT( 0xc2127c50, 0xc0fb8de4, 0xc05f0055 ),
	NORM( 0xbf0713b5, 0xbf2a6c8f, 0xbf0713c3 ),
	VERT( 0xc20da87e, 0xc0fb8de4, 0xc0894e26 ),
	NORM( 0xbe9234de, 0xbf2a6c90, 0xbf307c97 ),
	VERT( 0xc207f6c0, 0xc0fb8de4, 0xc0925dde ),
	NORM( 0xb4cb6d46, 0xbf2a6c8c, 0xbf3f0724 ),
	VERT( 0xc2024500, 0xc0fb8de4, 0xc0894e26 ),
	NORM( 0x3e9234d3, 0xbf2a6c8f, 0xbf307c9b ),
	VERT( 0xc1fae25c, 0xc0fb8de4, 0xc05f0055 ),
	NORM( 0x3f0713b5, 0xbf2a6c8f, 0xbf0713c3 ),
	VERT( 0xc1f46edc, 0xc0fb8de4, 0xc011c33a ),
	NORM( 0x3f307ca2, 0xbf2a6c88, 0xbe9234cf ),
	VERT( 0xc1f22af0, 0xc0fb8de4, 0xbf5a9d02 ),
	NORM( 0x3f3f071c, 0xbf2a6c95, 0x00000000 ),
	VERT( 0xc1f46edc, 0xc0fb8de4, 0x3f11d2e4 ),
	NORM( 0x3f307ca2, 0xbf2a6c89, 0x3e9234ce ),
	VERT( 0xc1fae25c, 0xc0fb8de4, 0x3fe363aa ),
	NORM( 0x3f0713b5, 0xbf2a6c8f, 0x3f0713c3 ),
	VERT( 0xc2024500, 0xc0fb8de4, 0x40254dcd ),
	NORM( 0x3e9234d0, 0xbf2a6c8e, 0x3f307c9c ),
	VERT( 0xc207f6c0, 0xc0fb8de4, 0x40376d3b ),
	NORM( 0xb4cb6d45, 0xbf2a6c8d, 0x3f3f0723 ),
	VERT( 0xc20da87e, 0xc0fb8de4, 0x40254dcd ),
	NORM( 0xbe9234dc, 0xbf2a6c90, 0x3f307c98 ),
	VERT( 0xc2127c50, 0xc0fb8de4, 0x3fe363aa ),
	NORM( 0xbf0713b5, 0xbf2a6c8f, 0x3f0713c3 ),
	VERT( 0xc215b610, 0xc0fb8de4, 0x3f11d2e4 ),
	NORM( 0xbf307c8f, 0xbf2a6c91, 0x3e923505 ),
	VERT( 0xc216d808, 0x419fa178, 0xbf5a9d02 ),
	NORM( 0xbf3f072b, 0x3f2a6c84, 0x00000000 ),
	VERT( 0xc215b610, 0x419fa178, 0xc011c33a ),
	NORM( 0xbf307c8f, 0x3f2a6c91, 0xbe923505 ),
	VERT( 0xc2127c50, 0x419fa178, 0xc05f0055 ),
	NORM( 0xbf0713b5, 0x3f2a6c8f, 0xbf0713c3 ),
	VERT( 0xc20da87e, 0x419fa178, 0xc0894e26 ),
	NORM( 0xbe9234de, 0x3f2a6c90, 0xbf307c97 ),
	VERT( 0xc207f6c0, 0x419fa178, 0xc0925dde ),
	NORM( 0xb4cb6d46, 0x3f2a6c8c, 0xbf3f0724 ),
	VERT( 0xc2024500, 0x419fa178, 0xc0894e26 ),
	NORM( 0x3e9234d3, 0x3f2a6c8f, 0xbf307c9b ),
	VERT( 0xc1fae25c, 0x419fa178, 0xc05f0055 ),
	NORM( 0x3f0713b5, 0x3f2a6c8f, 0xbf0713c3 ),
	VERT( 0xc1f46edc, 0x419fa178, 0xc011c33a ),
	NORM( 0x3f307ca2, 0x3f2a6c88, 0xbe9234cf ),
	VERT( 0xc1f22af0, 0x419fa178, 0xbf5a9d02 ),
	NORM( 0x3f3f071c, 0x3f2a6c95, 0x00000000 ),
	VERT( 0xc1f46edc, 0x419fa178, 0x3f11d2e4 ),
	NORM( 0x3f307ca2, 0x3f2a6c89, 0x3e9234ce ),
	VERT( 0xc1fae25c, 0x419fa178, 0x3fe363aa ),
	NORM( 0x3f0713b5, 0x3f2a6c8f, 0x3f0713c3 ),
	VERT( 0xc2024500, 0x419fa178, 0x40254dcd ),
	NORM( 0x3e9234d0, 0x3f2a6c8e, 0x3f307c9c ),
	VERT( 0xc207f6c0, 0x419fa178, 0x40376d3b ),
	NORM( 0xb4cb6d45, 0x3f2a6c8d, 0x3f3f0723 ),
	VERT( 0xc20da87e, 0x419fa178, 0x40254dcd ),
	NORM( 0xbe9234dc, 0x3f2a6c90, 0x3f307c98 ),
	VERT( 0xc2127c50, 0x419fa178, 0x3fe363aa ),
	NORM( 0xbf0713b5, 0x3f2a6c8f, 0x3f0713c3 ),
	VERT( 0xc215b610, 0x419fa178, 0x3f11d2e4 ),
	NORM( 0xbf307c8f, 0x3f2a6c91, 0x3e923505 ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_Fish_handle[]
START
VList      vertex_FishCon1_Fish_handle,
PList      strip_FishCon1_Fish_handle,
Center      -0.242168F,  2.615471F, -0.175610F,
Radius       0.000000F,
END

CNKOBJECT  object_FishCon1_Fish_handle[]
START
EvalFlags ( 0x00000026 ),
CNKModel   model_FishCon1_Fish_handle,
OPosition  ( -149.500000F, 50.000000F,  1.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_FishCon1_Fish_handle_L,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_S_B[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 178, _NB( UFO_0, 12 ),
	StripL(7),  1, 2, 25, 26, 49, 50, 48, 
	StripL(12),  2, 3, 26, 27, 50, 51, 48, 71, 24, 47, 
                   0, 23, 
	StripL(44),  3, 4, 27, 28, 51, 52, 71, 70, 47, 46, 
                   23, 22, 0, 21, 1, 20, 2, 19, 3, 18, 
                   4, 17, 5, 16, 6, 15, 7, 14, 8, 13, 
                   9, 12, 10, 11, 34, 35, 58, 59, 64, 63, 
                   40, 39, 16, 15, 
	StripR(14),  34, 10, 33, 9, 32, 8, 31, 7, 30, 6, 
                   29, 5, 28, 4, 
	StripL(12),  14, 15, 38, 39, 62, 63, 60, 59, 36, 35, 
                   12, 11, 
	StripR(14),  16, 40, 17, 41, 18, 42, 19, 43, 20, 44, 
                   21, 45, 22, 46, 
	StripL(6),  49, 48, 25, 24, 1, 0, 
	StripR(14),  28, 52, 29, 53, 30, 54, 31, 55, 32, 56, 
                   33, 57, 34, 58, 
	StripR(5),  61, 38, 37, 14, 13, 
	StripL(8),  38, 62, 61, 60, 37, 36, 13, 12, 
	StripR(14),  40, 64, 41, 65, 42, 66, 43, 67, 44, 68, 
                   45, 69, 46, 70, 
	StripR(14),  64, 58, 65, 57, 66, 56, 67, 55, 68, 54, 
                   69, 53, 70, 52, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_FishCon1_S_B[]
START
	CnkV_VN(0x0, 433),
	OffnbIdx(0, 72),
	VERT( 0xc29382b7, 0xc17a2dab, 0x421296ae ),
	NORM( 0xbe97557f, 0x3e9a4a1a, 0x3f68136b ),
	VERT( 0xc2912e65, 0xc17cc9a6, 0x421425f4 ),
	NORM( 0xbe62944c, 0x3e9b1058, 0x3f6d4f6e ),
	VERT( 0xc28f02b7, 0xc182101c, 0x42159a03 ),
	NORM( 0xbe15bf9d, 0x3e90e43c, 0x3f72aa1e ),
	VERT( 0xc28d258a, 0xc187d8ad, 0x4216d983 ),
	NORM( 0xbd9c291c, 0x3e762ac6, 0x3f77b98d ),
	VERT( 0xc28bb764, 0xc18f59a2, 0x4217ceab ),
	NORM( 0xbc956859, 0x3e340bef, 0x3f7bf7f3 ),
	VERT( 0xc28ad138, 0xc1981010, 0x421868c8 ),
	NORM( 0x3ca895e4, 0x3dbed3b3, 0x3f7ed4f3 ),
	VERT( 0xc28a82b7, 0xc1a163f7, 0x42189d58 ),
	NORM( 0x3d0cdc7d, 0xb8968202, 0x3f7fd93c ),
	VERT( 0xc28ad138, 0xc1aab29d, 0x421868c8 ),
	NORM( 0x3ca9ef77, 0xbdc01cec, 0x3f7ed0dc ),
	VERT( 0xc28bb764, 0xc1b359a2, 0x4217ceab ),
	NORM( 0xbc96e219, 0xbe35e19f, 0x3f7be2a5 ),
	VERT( 0xc28d258a, 0xc1bac212, 0x4216d983 ),
	NORM( 0xbd9e854b, 0xbe793bf0, 0x3f778276 ),
	VERT( 0xc28f02b7, 0xc1c06ab1, 0x42159a03 ),
	NORM( 0xbe184493, 0xbe92ca02, 0x3f7247f8 ),
	VERT( 0xc2912e65, 0xc1c3f0c5, 0x421425f4 ),
	NORM( 0xbe6652cc, 0xbe9cfacf, 0x3f6cc4fd ),
	VERT( 0xc29382b7, 0xc1c516d6, 0x421296ae ),
	NORM( 0xbe9995b8, 0xbe9bf1b4, 0x3f676dc4 ),
	VERT( 0xc295d708, 0xc1c3c8d8, 0x42110769 ),
	NORM( 0xbebd0fa5, 0xbe911424, 0x3f629436 ),
	VERT( 0xc29802b7, 0xc1c01d8f, 0x420f9359 ),
	NORM( 0xbedbee23, 0xbe7c0278, 0x3f5e6da8 ),
	VERT( 0xc299dfe3, 0xc1ba54fd, 0x420e53da ),
	NORM( 0xbef505c2, 0xbe48b982, 0x3f5b1bf5 ),
	VERT( 0xc29b4e09, 0xc1b2d409, 0x420d5eb1 ),
	NORM( 0xbf03bf9b, 0xbe0b8495, 0x3f58b4e6 ),
	VERT( 0xc29c3435, 0xc1aa1d9b, 0x420cc494 ),
	NORM( 0xbf095e7f, 0xbd8f2f8c, 0x3f57479f ),
	VERT( 0xc29c82b7, 0xc1a0c9b3, 0x420c9003 ),
	NORM( 0xbf0b2bed, 0xb9857c9a, 0x3f56dd9e ),
	VERT( 0xc29c3435, 0xc1977b0e, 0x420cc494 ),
	NORM( 0xbf0914eb, 0x3d8e0e9c, 0x3f57797d ),
	VERT( 0xc29b4e09, 0xc18ed409, 0x420d5eb1 ),
	NORM( 0xbf032caf, 0x3e0ac99c, 0x3f591572 ),
	VERT( 0xc299dfe3, 0xc1876b98, 0x420e53da ),
	NORM( 0xbef356c3, 0x3e47a035, 0x3f5ba3ef ),
	VERT( 0xc29802b7, 0xc181c2fa, 0x420f9359 ),
	NORM( 0xbed9d2a1, 0x3e7a4b25, 0x3f5f1126 ),
	VERT( 0xc295d708, 0xc17c79cb, 0x42110769 ),
	NORM( 0xbebabd18, 0x3e8fd25a, 0x3f634280 ),
	VERT( 0xc293860f, 0xc1721b98, 0x4211394a ),
	NORM( 0xbe075d58, 0x3f62b582, 0x3ee3fb0f ),
	VERT( 0xc290ef7c, 0xc17501cc, 0x4212f4ec ),
	NORM( 0x3dc1c63d, 0x3f6075ee, 0x3ef162a4 ),
	VERT( 0xc28e860f, 0xc17d2919, 0x42149253 ),
	NORM( 0x3ea23188, 0x3f4e8ab5, 0x3eff575e ),
	VERT( 0xc28c73de, 0xc18501a0, 0x4215f552 ),
	NORM( 0x3f0492df, 0x3f2cecdd, 0x3f066068 ),
	VERT( 0xc28add09, 0xc18d5805, 0x421705b8 ),
	NORM( 0x3f2e1b91, 0x3ef9d8fc, 0x3f0c0f23 ),
	VERT( 0xc289dd4a, 0xc1970646, 0x4217b0f5 ),
	NORM( 0x3f4955e4, 0x3e8333f9, 0x3f0fdcd5 ),
	VERT( 0xc289860f, 0xc1a16380, 0x4217eb5d ),
	NORM( 0x3f52ef4c, 0xba0d5eec, 0x3f110f75 ),
	VERT( 0xc289dd4a, 0xc1abbae4, 0x4217b0f5 ),
	NORM( 0x3f498afe, 0xbe84312c, 0x3f0f584b ),
	VERT( 0xc28add09, 0xc1b55805, 0x421705b8 ),
	NORM( 0x3f2e3daa, 0xbefbdcd4, 0x3f0afcb5 ),
	VERT( 0xc28c73de, 0xc1bd932c, 0x4215f552 ),
	NORM( 0x3f0443eb, 0xbf2e6add, 0x3f04bdf7 ),
	VERT( 0xc28e860f, 0xc1c3dcc0, 0x42149253 ),
	NORM( 0x3ea04060, 0xbf5034e2, 0x3efb1fe4 ),
	VERT( 0xc290ef7c, 0xc1c7c710, 0x4212f4ec ),
	NORM( 0x3db50f3b, 0xbf61e3b4, 0x3eec9fbb ),
	VERT( 0xc293860f, 0xc1c90dcc, 0x4211394a ),
	NORM( 0xbe0f155e, 0xbf6398dd, 0x3edf367f ),
	VERT( 0xc2961ca3, 0xc1c79ab3, 0x420f7da7 ),
	NORM( 0xbeb69c40, 0xbf567e1a, 0x3ed3965b ),
	VERT( 0xc298860f, 0xc1c3870c, 0x420de040 ),
	NORM( 0xbf0ce542, 0xbf3c5bec, 0x3eca0aea ),
	VERT( 0xc29a9841, 0xc1bd19f8, 0x420c7d41 ),
	NORM( 0xbf361903, 0xbf17580d, 0x3ec2a480 ),
	VERT( 0xc29c2f16, 0xc1b4c393, 0x420b6cdb ),
	NORM( 0xbf550038, 0xbed3aa92, 0x3ebd60b3 ),
	VERT( 0xc29d2ed4, 0xc1ab1553, 0x420ac19f ),
	NORM( 0xbf6829d0, 0xbe59b053, 0x3eba45e9 ),
	VERT( 0xc29d860f, 0xc1a0b818, 0x420a8737 ),
	NORM( 0xbf6e9fe4, 0x39987feb, 0x3eb96938 ),
	VERT( 0xc29d2ed4, 0xc19660b5, 0x420ac19f ),
	NORM( 0xbf67fc4c, 0x3e5a9819, 0x3ebae49d ),
	VERT( 0xc29c2f16, 0xc18cc393, 0x420b6cdb ),
	NORM( 0xbf548093, 0x3ed46c7a, 0x3ebec3e3 ),
	VERT( 0xc29a9841, 0xc184886c, 0x420c7d41 ),
	NORM( 0xbf351c93, 0x3f17c516, 0x3ec4fb6d ),
	VERT( 0xc298860f, 0xc17c7db1, 0x420de040 ),
	NORM( 0xbf0b6114, 0x3f3c93a0, 0x3ecd68dd ),
	VERT( 0xc2961ca3, 0xc174a912, 0x420f7da7 ),
	NORM( 0xbeb2d5c2, 0x3f563a6b, 0x3ed7d733 ),
	VERT( 0xc293860f, 0xc1717030, 0x41e46363 ),
	NORM( 0x3b1789e2, 0x3f3c7bc2, 0xbf2d3ba1 ),
	VERT( 0xc290ef7c, 0xc1742a07, 0x41e46363 ),
	NORM( 0x3e4520b2, 0x3f35fdc7, 0xbf2d2a7d ),
	VERT( 0xc28e860f, 0xc17c27fd, 0x41e46363 ),
	NORM( 0x3ebd265f, 0x3f231be9, 0xbf2d2aea ),
	VERT( 0xc28c73de, 0xc1846f52, 0x41e46363 ),
	NORM( 0x3f05659e, 0x3f052585, 0xbf2d3e4b ),
	VERT( 0xc28add09, 0xc18cb818, 0x41e46363 ),
	NORM( 0x3f231ed0, 0x3ebc4fb1, 0xbf2d62a3 ),
	VERT( 0xc289dd4a, 0xc1965dc9, 0x41e46363 ),
	NORM( 0x3f35bbb5, 0x3e432844, 0xbf2d9377 ),
	VERT( 0xc289860f, 0xc1a0b818, 0x41e46363 ),
	NORM( 0x3f3bf863, 0x3a05107c, 0xbf2dca63 ),
	VERT( 0xc289dd4a, 0xc1ab1267, 0x41e46363 ),
	NORM( 0x3f3566ad, 0xbe420d90, 0xbf2e0016 ),
	VERT( 0xc28add09, 0xc1b4b818, 0x41e46363 ),
	NORM( 0x3f227732, 0xbebba6b0, 0xbf2e2d5c ),
	VERT( 0xc28c73de, 0xc1bd00de, 0x41e46363 ),
	NORM( 0x3f047388, 0xbf04b6bc, 0xbf2e4c38 ),
	VERT( 0xc28e860f, 0xc1c35c32, 0x41e46363 ),
	NORM( 0x3ebad183, 0xbf2285e6, 0xbf2e58e9 ),
	VERT( 0xc290ef7c, 0xc1c75b2d, 0x41e46363 ),
	NORM( 0x3e400eb0, 0xbf353916, 0xbf2e52f1 ),
	VERT( 0xc293860f, 0xc1c8b818, 0x41e46363 ),
	NORM( 0xbb1f75c1, 0xbf3b8dd7, 0xbf2e3d14 ),
	VERT( 0xc2961ca3, 0xc1c75b2d, 0x41e46363 ),
	NORM( 0xbe44baea, 0xbf351c4b, 0xbf2e1d75 ),
	VERT( 0xc298860f, 0xc1c35c32, 0x41e46363 ),
	NORM( 0xbebcbc64, 0xbf225b74, 0xbf2dfc2f ),
	VERT( 0xc29a9841, 0xc1bd00de, 0x41e46363 ),
	NORM( 0xbf0521dd, 0xbf0494f9, 0xbf2de0f8 ),
	VERT( 0xc29c2f16, 0xc1b4b818, 0x41e46363 ),
	NORM( 0xbf22df4a, 0xbebb95b1, 0xbf2dd0a0 ),
	VERT( 0xc29d2ed4, 0xc1ab1267, 0x41e46363 ),
	NORM( 0xbf3594b5, 0xbe4256aa, 0xbf2dcaf1 ),
	VERT( 0xc29d860f, 0xc1a0b818, 0x41e46363 ),
	NORM( 0xbf3bf879, 0x385aac61, 0xbf2dca4f ),
	VERT( 0xc29d2ed4, 0xc1965dc9, 0x41e46363 ),
	NORM( 0xbf358f91, 0x3e42de14, 0xbf2dc6d6 ),
	VERT( 0xc29c2f16, 0xc18cb818, 0x41e46363 ),
	NORM( 0xbf22bd00, 0x3ebc61bb, 0xbf2db991 ),
	VERT( 0xc29a9841, 0xc1846f52, 0x41e46363 ),
	NORM( 0xbf04c1df, 0x3f054963, 0xbf2da062 ),
	VERT( 0xc298860f, 0xc17c27fd, 0x41e46363 ),
	NORM( 0xbebb5737, 0x3f2348fc, 0xbf2d7e3a ),
	VERT( 0xc2961ca3, 0xc1742a07, 0x41e46363 ),
	NORM( 0xbe40b2d8, 0x3f361c88, 0xbf2d59e6 ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_S_B[]
START
VList      vertex_FishCon1_S_B,
PList      strip_FishCon1_S_B,
Center      -73.761833F, -20.110813F, 33.351093F,
Radius       6.947970F,
END

CNKOBJECT  object_FishCon1_S_B[]
START
EvalFlags ( 0x00000036 ),
CNKModel   model_FishCon1_S_B,
OPosition  ( -89.500000F, 20.000000F,  0.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_FishCon1_Fish_handle,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_Y_B[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 178, _NB( UFO_0, 12 ),
	StripL(12),  2, 3, 26, 27, 50, 51, 48, 71, 24, 47, 
                   0, 23, 
	StripL(44),  3, 4, 27, 28, 51, 52, 71, 70, 47, 46, 
                   23, 22, 0, 21, 1, 20, 2, 19, 3, 18, 
                   4, 17, 5, 16, 6, 15, 7, 14, 8, 13, 
                   9, 12, 10, 11, 34, 35, 58, 59, 64, 63, 
                   40, 39, 16, 15, 
	StripR(14),  4, 28, 5, 29, 6, 30, 7, 31, 8, 32, 
                   9, 33, 10, 34, 
	StripL(7),  13, 14, 37, 38, 61, 62, 60, 
	StripL(12),  14, 15, 38, 39, 62, 63, 60, 59, 36, 35, 
                   12, 11, 
	StripR(14),  46, 22, 45, 21, 44, 20, 43, 19, 42, 18, 
                   41, 17, 40, 16, 
	StripR(5),  49, 26, 25, 2, 1, 
	StripL(8),  26, 50, 49, 48, 25, 24, 1, 0, 
	StripR(14),  28, 52, 29, 53, 30, 54, 31, 55, 32, 56, 
                   33, 57, 34, 58, 
	StripL(6),  61, 60, 37, 36, 13, 12, 
	StripR(14),  40, 64, 41, 65, 42, 66, 43, 67, 44, 68, 
                   45, 69, 46, 70, 
	StripR(14),  64, 58, 65, 57, 66, 56, 67, 55, 68, 54, 
                   69, 53, 70, 52, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_FishCon1_Y_B[]
START
	CnkV_VN(0x0, 433),
	OffnbIdx(0, 72),
	VERT( 0xc1b4c9e6, 0x410e1e20, 0x41f77bd4 ),
	NORM( 0x39a383b4, 0x3ea08574, 0x3f7317d1 ),
	VERT( 0xc1ab789f, 0x410baa12, 0x41f77bd4 ),
	NORM( 0x3da75854, 0x3e9b6dd0, 0x3f730536 ),
	VERT( 0xc1a2c9e6, 0x410478b4, 0x41f77bd4 ),
	NORM( 0x3e21c75c, 0x3e8bb79e, 0x3f72f0b9 ),
	VERT( 0xc19b5534, 0x40f20f08, 0x41f77bd4 ),
	NORM( 0x3e65487f, 0x3e64bdfc, 0x3f72dbb8 ),
	VERT( 0xc1959c9c, 0x40d43c3f, 0x41f77bd4 ),
	NORM( 0x3e8cbc5a, 0x3e221a08, 0x3f72c7a4 ),
	VERT( 0xc19203ed, 0x40b1815b, 0x41f77bd4 ),
	NORM( 0x3e9d4f90, 0x3da7fdfd, 0x3f72b5e1 ),
	VERT( 0xc190c9e6, 0x408c3c40, 0x41f77bd4 ),
	NORM( 0x3ea32653, 0xb960b7b7, 0x3f72a7ba ),
	VERT( 0xc19203ed, 0x404dee4a, 0x41f77bd4 ),
	NORM( 0x3e9dc9a3, 0xbda9611e, 0x3f729e35 ),
	VERT( 0xc1959c9c, 0x4008787e, 0x41f77bd4 ),
	NORM( 0x3e8d8fab, 0xbe237d8d, 0x3f729a02 ),
	VERT( 0xc19b5534, 0x3f99a5db, 0x41f77bd4 ),
	NORM( 0x3e672fdf, 0xbe6713b2, 0x3f729b71 ),
	VERT( 0xc1a2c9e6, 0x3ef8716d, 0x41f77bd4 ),
	NORM( 0x3e236ce8, 0xbe8d5ad7, 0x3f72a269 ),
	VERT( 0xc1ab789f, 0x3d122d66, 0x41f77bd4 ),
	NORM( 0x3da93f95, 0xbe9d6832, 0x3f72ae65 ),
	VERT( 0xc1b4c9e6, 0xbdf0f04d, 0x41f77bd4 ),
	NORM( 0x39a786fd, 0xbea29e72, 0x3f72be86 ),
	VERT( 0xc1be1b2d, 0x3d122d66, 0x41f77bd4 ),
	NORM( 0xbda72d78, 0xbe9cb1d5, 0x3f72d1a1 ),
	VERT( 0xc1c6c9e6, 0x3ef8716d, 0x41f77bd4 ),
	NORM( 0xbe2159b1, 0xbe8c1f2b, 0x3f72e65f ),
	VERT( 0xc1ce3e98, 0x3f99a5db, 0x41f77bd4 ),
	NORM( 0xbe63b212, 0xbe643b60, 0x3f72fb4a ),
	VERT( 0xc1d3f730, 0x4008787e, 0x41f77bd4 ),
	NORM( 0xbe8b1c3d, 0xbe210768, 0x3f730efa ),
	VERT( 0xc1d78fdf, 0x404dee4a, 0x41f77bd4 ),
	NORM( 0xbe9ad2ef, 0xbda6891c, 0x3f732025 ),
	VERT( 0xc1d8c9e6, 0x408c3c40, 0x41f77bd4 ),
	NORM( 0xbea000d5, 0xb958a8e1, 0x3f732dac ),
	VERT( 0xc1d78fdf, 0x40b1815b, 0x41f77bd4 ),
	NORM( 0xbe9a5c27, 0x3da530b5, 0x3f7336b1 ),
	VERT( 0xc1d3f730, 0x40d43c3f, 0x41f77bd4 ),
	NORM( 0xbe8a4e3c, 0x3e1fac5c, 0x3f733aa9 ),
	VERT( 0xc1ce3e98, 0x40f20f08, 0x41f77bd4 ),
	NORM( 0xbe61d5be, 0x3e61f0ba, 0x3f73394f ),
	VERT( 0xc1c6c9e6, 0x410478b4, 0x41f77bd4 ),
	NORM( 0xbe1fbcb5, 0x3e8a815a, 0x3f7332b8 ),
	VERT( 0xc1be1b2d, 0x410baa12, 0x41f77bd4 ),
	NORM( 0xbda5510f, 0x3e9abace, 0x3f732750 ),
	VERT( 0xc1b4d749, 0x41162ff9, 0x41f4c586 ),
	NORM( 0xb9821eb2, 0x3f640232, 0x3ee8cadf ),
	VERT( 0xc1aa7cfa, 0x41137622, 0x41f4c586 ),
	NORM( 0x3e6bddd8, 0x3f5c58d9, 0x3ee86e7a ),
	VERT( 0xc1a0d749, 0x410b782c, 0x41f4c586 ),
	NORM( 0x3ee41189, 0x3f45aab8, 0x3ee808d3 ),
	VERT( 0xc1988e83, 0x40fd8309, 0x41f4c586 ),
	NORM( 0x3f2161d6, 0x3f217d5c, 0x3ee7a0c1 ),
	VERT( 0xc192332f, 0x40dc5ff1, 0x41f4c586 ),
	NORM( 0x3f45c4a1, 0x3ee48635, 0x3ee73d60 ),
	VERT( 0xc18e3434, 0x40b5c92c, 0x41f4c586 ),
	NORM( 0x3f5cb06c, 0x3e6cc6f1, 0x3ee6e599 ),
	VERT( 0xc18cd749, 0x408c5ff2, 0x41f4c586 ),
	NORM( 0x3f648f12, 0x3932697d, 0x3ee69fb6 ),
	VERT( 0xc18e3434, 0x4045ed6e, 0x41f4c586 ),
	NORM( 0x3f5cd27a, 0xbe6c9263, 0x3ee670b6 ),
	VERT( 0xc192332f, 0x3ff17fc3, 0x41f4c586 ),
	NORM( 0x3f45ff80, 0xbee49de9, 0x3ee65bfd ),
	VERT( 0xc1988e83, 0x3f59e6c6, 0x41f4c586 ),
	NORM( 0x3f21a594, 0xbf21ab31, 0x3ee66312 ),
	VERT( 0xc1a0d749, 0x3d67c566, 0x41f4c586 ),
	NORM( 0x3ee48640, 0xbf45fa44, 0x3ee68573 ),
	VERT( 0xc1aa7cfa, 0xbee2c613, 0x41f4c586 ),
	NORM( 0x3e6c6363, 0xbf5cc0c1, 0x3ee6c0a1 ),
	VERT( 0xc1b4d749, 0xbf1d007a, 0x41f4c586 ),
	NORM( 0xb98513e1, 0xbf6472a2, 0x3ee7104e ),
	VERT( 0xc1bf3197, 0xbee2c613, 0x41f4c586 ),
	NORM( 0xbe6cb1b1, 0xbf5c8de6, 0x3ee76ed4 ),
	VERT( 0xc1c8d749, 0x3d67c566, 0x41f4c586 ),
	NORM( 0xbee462d9, 0xbf45a24d, 0x3ee7d582 ),
	VERT( 0xc1d1200f, 0x3f59e6c6, 0x41f4c586 ),
	NORM( 0xbf216125, 0xbf2145d5, 0x3ee83d38 ),
	VERT( 0xc1d77b62, 0x3ff17fc3, 0x41f4c586 ),
	NORM( 0xbf45888f, 0xbee3eef6, 0x3ee89ef8 ),
	VERT( 0xc1db7a5d, 0x4045ed6e, 0x41f4c586 ),
	NORM( 0xbf5c36d9, 0xbe6bc9d1, 0x3ee8f44c ),
	VERT( 0xc1dcd749, 0x408c5ff2, 0x41f4c586 ),
	NORM( 0xbf63e66c, 0x392c8862, 0x3ee93791 ),
	VERT( 0xc1db7a5d, 0x40b5c92c, 0x41f4c586 ),
	NORM( 0xbf5c15ba, 0x3e6bfcb9, 0x3ee96481 ),
	VERT( 0xc1d77b62, 0x40dc5ff1, 0x41f4c586 ),
	NORM( 0xbf454f10, 0x3ee3d800, 0x3ee97840 ),
	VERT( 0xc1d1200f, 0x40fd8309, 0x41f4c586 ),
	NORM( 0xbf211e8a, 0x3f211922, 0x3ee97181 ),
	VERT( 0xc1c8d749, 0x410b782c, 0x41f4c586 ),
	NORM( 0xbee3eee4, 0x3f455427, 0x3ee950b1 ),
	VERT( 0xc1bf3197, 0x41137622, 0x41f4c586 ),
	NORM( 0xbe6c2a8a, 0x3f5c26f0, 0x3ee917f2 ),
	VERT( 0xc1b4d749, 0x41162ff9, 0x41c41a7d ),
	NORM( 0xb38f3f23, 0x3f3bf81a, 0xbf2dcab6 ),
	VERT( 0xc1aa7cfa, 0x41137622, 0x41c41a7d ),
	NORM( 0x3e4299a0, 0x3f359072, 0xbf2dcab6 ),
	VERT( 0xc1a0d749, 0x410b782c, 0x41c41a7d ),
	NORM( 0x3ebbf81d, 0x3f22c938, 0xbf2dcab7 ),
	VERT( 0xc1988e83, 0x40fd8309, 0x41c41a7d ),
	NORM( 0x3f04ea0a, 0x3f04ea0c, 0xbf2dcab8 ),
	VERT( 0xc192332f, 0x40dc5ff1, 0x41c41a7d ),
	NORM( 0x3f22c939, 0x3ebbf81f, 0xbf2dcab6 ),
	VERT( 0xc18e3434, 0x40b5c92c, 0x41c41a7d ),
	NORM( 0x3f359073, 0x3e42998e, 0xbf2dcab6 ),
	VERT( 0xc18cd749, 0x408c5ff2, 0x41c41a7d ),
	NORM( 0x3f3bf816, 0x3286d200, 0xbf2dcab9 ),
	VERT( 0xc18e3434, 0x4045ed6e, 0x41c41a7d ),
	NORM( 0x3f359074, 0xbe429988, 0xbf2dcab5 ),
	VERT( 0xc192332f, 0x3ff17fc3, 0x41c41a7d ),
	NORM( 0x3f22c939, 0xbebbf81d, 0xbf2dcab6 ),
	VERT( 0xc1988e83, 0x3f59e6c6, 0x41c41a7d ),
	NORM( 0x3f04ea09, 0xbf04ea0e, 0xbf2dcab8 ),
	VERT( 0xc1a0d749, 0x3d67c566, 0x41c41a7d ),
	NORM( 0x3ebbf819, 0xbf22c939, 0xbf2dcab7 ),
	VERT( 0xc1aa7cfa, 0xbee2c613, 0x41c41a7d ),
	NORM( 0x3e4299a0, 0xbf359072, 0xbf2dcab6 ),
	VERT( 0xc1b4d749, 0xbf1d007a, 0x41c41a7d ),
	NORM( 0xb38f3f23, 0xbf3bf81a, 0xbf2dcab6 ),
	VERT( 0xc1bf3197, 0xbee2c613, 0x41c41a7d ),
	NORM( 0xbe429996, 0xbf359071, 0xbf2dcab7 ),
	VERT( 0xc1c8d749, 0x3d67c566, 0x41c41a7d ),
	NORM( 0xbebbf815, 0xbf22c93c, 0xbf2dcab6 ),
	VERT( 0xc1d1200f, 0x3f59e6c6, 0x41c41a7d ),
	NORM( 0xbf04ea0f, 0xbf04ea0b, 0xbf2dcab5 ),
	VERT( 0xc1d77b62, 0x3ff17fc3, 0x41c41a7d ),
	NORM( 0xbf22c93b, 0xbebbf80f, 0xbf2dcab8 ),
	VERT( 0xc1db7a5d, 0x4045ed6e, 0x41c41a7d ),
	NORM( 0xbf35906f, 0xbe4299a9, 0xbf2dcab9 ),
	VERT( 0xc1dcd749, 0x408c5ff2, 0x41c41a7d ),
	NORM( 0xbf3bf81b, 0x3286d205, 0xbf2dcab4 ),
	VERT( 0xc1db7a5d, 0x40b5c92c, 0x41c41a7d ),
	NORM( 0xbf35906f, 0x3e4299ae, 0xbf2dcab8 ),
	VERT( 0xc1d77b62, 0x40dc5ff1, 0x41c41a7d ),
	NORM( 0xbf22c93b, 0x3ebbf811, 0xbf2dcab8 ),
	VERT( 0xc1d1200f, 0x40fd8309, 0x41c41a7d ),
	NORM( 0xbf04ea10, 0x3f04ea09, 0xbf2dcab5 ),
	VERT( 0xc1c8d749, 0x410b782c, 0x41c41a7d ),
	NORM( 0xbebbf818, 0x3f22c93b, 0xbf2dcab5 ),
	VERT( 0xc1bf3197, 0x41137622, 0x41c41a7d ),
	NORM( 0xbe429995, 0x3f359071, 0xbf2dcab7 ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_Y_B[]
START
VList      vertex_FishCon1_Y_B,
PList      strip_FishCon1_Y_B,
Center      -22.605120F,  4.386712F, 27.724197F,
Radius       5.942409F,
END

CNKOBJECT  object_FishCon1_Y_B[]
START
EvalFlags ( 0x00000036 ),
CNKModel   model_FishCon1_Y_B,
OPosition  ( -89.500000F, 20.000000F,  0.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_FishCon1_S_B,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_X_B[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 172, _NB( UFO_0, 10 ),
	StripR(5),  1, 24, 0, 47, 23, 
	StripR(19),  25, 2, 26, 3, 27, 4, 28, 5, 29, 6, 
                   30, 7, 31, 8, 32, 9, 33, 10, 34, 
	StripR(5),  13, 36, 12, 35, 11, 
	StripR(19),  37, 14, 38, 15, 39, 16, 40, 17, 41, 18, 
                   42, 19, 43, 20, 44, 21, 45, 22, 46, 
	StripR(42),  22, 23, 46, 47, 70, 71, 48, 24, 25, 1, 
                   2, 0, 3, 23, 4, 22, 5, 21, 6, 20, 
                   7, 19, 8, 18, 9, 17, 10, 16, 11, 15, 
                   12, 14, 13, 37, 36, 60, 59, 58, 35, 34, 
                   11, 10, 
	StripL(21),  58, 34, 57, 33, 56, 32, 55, 31, 54, 30, 
                   53, 29, 52, 28, 51, 27, 50, 26, 49, 25, 
                   48, 
	StripL(3),  36, 35, 59, 
	StripR(21),  60, 37, 61, 38, 62, 39, 63, 40, 64, 41, 
                   65, 42, 66, 43, 67, 44, 68, 45, 69, 46, 
                   70, 
	StripL(3),  24, 47, 71, 
	StripR(22),  58, 60, 57, 61, 56, 62, 55, 63, 54, 64, 
                   53, 65, 52, 66, 51, 67, 50, 68, 49, 69, 
                   48, 70, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_FishCon1_X_B[]
START
	CnkV_VN(0x0, 433),
	OffnbIdx(0, 72),
	VERT( 0xc1b4c9e6, 0xc245e60f, 0x41f77bd4 ),
	NORM( 0x39a383b1, 0xbea08559, 0x3f7317d5 ),
	VERT( 0xc1ab789f, 0xc245490c, 0x41f77bd4 ),
	NORM( 0x3da75858, 0xbe9b6dcd, 0x3f730536 ),
	VERT( 0xc1a2c9e6, 0xc2437cb4, 0x41f77bd4 ),
	NORM( 0x3e21c76d, 0xbe8bb799, 0x3f72f0b9 ),
	VERT( 0xc19b5534, 0xc240a068, 0x41f77bd4 ),
	NORM( 0x3e654887, 0xbe64be05, 0x3f72dbb7 ),
	VERT( 0xc1959c9c, 0xc23ce60f, 0x41f77bd4 ),
	NORM( 0x3e8cbc5d, 0xbe221a1b, 0x3f72c7a3 ),
	VERT( 0xc19203ed, 0xc2388eb3, 0x41f77bd4 ),
	NORM( 0x3e9d4f8d, 0xbda7fe13, 0x3f72b5e1 ),
	VERT( 0xc190c9e6, 0xc233e60f, 0x41f77bd4 ),
	NORM( 0x3ea32652, 0x3960f3cc, 0x3f72a7bb ),
	VERT( 0xc19203ed, 0xc22f3d6c, 0x41f77bd4 ),
	NORM( 0x3e9dc9a6, 0x3da96121, 0x3f729e35 ),
	VERT( 0xc1959c9c, 0xc22ae60f, 0x41f77bd4 ),
	NORM( 0x3e8d8fa9, 0x3e237d83, 0x3f729a03 ),
	VERT( 0xc19b5534, 0xc2272bb6, 0x41f77bd4 ),
	NORM( 0x3e672fdc, 0x3e6713ab, 0x3f729b72 ),
	VERT( 0xc1a2c9e6, 0xc2244f6a, 0x41f77bd4 ),
	NORM( 0x3e236cdf, 0x3e8d5adf, 0x3f72a268 ),
	VERT( 0xc1ab789f, 0xc2228313, 0x41f77bd4 ),
	NORM( 0x3da93f8b, 0x3e9d681e, 0x3f72ae68 ),
	VERT( 0xc1b4c9e6, 0xc221e60f, 0x41f77bd4 ),
	NORM( 0x39a78b1c, 0x3ea29e63, 0x3f72be89 ),
	VERT( 0xc1be1b2d, 0xc2228313, 0x41f77bd4 ),
	NORM( 0xbda72d7c, 0x3e9cb1c5, 0x3f72d1a4 ),
	VERT( 0xc1c6c9e6, 0xc2244f6a, 0x41f77bd4 ),
	NORM( 0xbe2159b2, 0x3e8c1f38, 0x3f72e65d ),
	VERT( 0xc1ce3e98, 0xc2272bb6, 0x41f77bd4 ),
	NORM( 0xbe63b20c, 0x3e643b62, 0x3f72fb4a ),
	VERT( 0xc1d3f730, 0xc22ae60f, 0x41f77bd4 ),
	NORM( 0xbe8b1c33, 0x3e21075d, 0x3f730efc ),
	VERT( 0xc1d78fdf, 0xc22f3d6c, 0x41f77bd4 ),
	NORM( 0xbe9ad2ef, 0x3da68909, 0x3f732025 ),
	VERT( 0xc1d8c9e6, 0xc233e60f, 0x41f77bd4 ),
	NORM( 0xbea000d5, 0x3958e714, 0x3f732dac ),
	VERT( 0xc1d78fdf, 0xc2388eb3, 0x41f77bd4 ),
	NORM( 0xbe9a5c27, 0xbda530c0, 0x3f7336b1 ),
	VERT( 0xc1d3f730, 0xc23ce60f, 0x41f77bd4 ),
	NORM( 0xbe8a4e40, 0xbe1fac76, 0x3f733aa8 ),
	VERT( 0xc1ce3e98, 0xc240a068, 0x41f77bd4 ),
	NORM( 0xbe61d5c4, 0xbe61f0c8, 0x3f73394e ),
	VERT( 0xc1c6c9e6, 0xc2437cb4, 0x41f77bd4 ),
	NORM( 0xbe1fbcc3, 0xbe8a814e, 0x3f7332b9 ),
	VERT( 0xc1be1b2d, 0xc245490c, 0x41f77bd4 ),
	NORM( 0xbda5510d, 0xbe9abac7, 0x3f732751 ),
	VERT( 0xc1b4d749, 0xc247ea86, 0x41f4c586 ),
	NORM( 0xb9821de0, 0xbf64022f, 0x3ee8caec ),
	VERT( 0xc1aa7cfa, 0xc2473c10, 0x41f4c586 ),
	NORM( 0x3e6bddfc, 0xbf5c58d5, 0x3ee86e81 ),
	VERT( 0xc1a0d749, 0xc2453c92, 0x41f4c586 ),
	NORM( 0x3ee4119e, 0xbf45aab2, 0x3ee808d2 ),
	VERT( 0xc1988e83, 0xc2420ee8, 0x41f4c586 ),
	NORM( 0x3f2161d9, 0xbf217d5b, 0x3ee7a0bc ),
	VERT( 0xc192332f, 0xc23dea85, 0x41f4c586 ),
	NORM( 0x3f45c49f, 0xbee4863f, 0x3ee73d5c ),
	VERT( 0xc18e3434, 0xc23917ad, 0x41f4c586 ),
	NORM( 0x3f5cb069, 0xbe6cc706, 0x3ee6e59c ),
	VERT( 0xc18cd749, 0xc233ea86, 0x41f4c586 ),
	NORM( 0x3f648f12, 0xb9328ca1, 0x3ee69fb4 ),
	VERT( 0xc18e3434, 0xc22ebd5e, 0x41f4c586 ),
	NORM( 0x3f5cd27b, 0x3e6c925f, 0x3ee670b2 ),
	VERT( 0xc192332f, 0xc229ea85, 0x41f4c586 ),
	NORM( 0x3f45ff80, 0x3ee49de6, 0x3ee65c02 ),
	VERT( 0xc1988e83, 0xc225c622, 0x41f4c586 ),
	NORM( 0x3f21a58e, 0x3f21ab37, 0x3ee66312 ),
	VERT( 0xc1a0d749, 0xc2229879, 0x41f4c586 ),
	NORM( 0x3ee48638, 0x3f45fa45, 0x3ee68578 ),
	VERT( 0xc1aa7cfa, 0xc22098fb, 0x41f4c586 ),
	NORM( 0x3e6c6387, 0x3f5cc0bd, 0x3ee6c0a9 ),
	VERT( 0xc1b4d749, 0xc21fea85, 0x41f4c586 ),
	NORM( 0xb98510f8, 0x3f64729d, 0x3ee71060 ),
	VERT( 0xc1bf3197, 0xc22098fb, 0x41f4c586 ),
	NORM( 0xbe6cb1dd, 0x3f5c8de2, 0x3ee76ed7 ),
	VERT( 0xc1c8d749, 0xc2229879, 0x41f4c586 ),
	NORM( 0xbee462d4, 0x3f45a24f, 0x3ee7d580 ),
	VERT( 0xc1d1200f, 0xc225c622, 0x41f4c586 ),
	NORM( 0xbf21611e, 0x3f2145dc, 0x3ee83d38 ),
	VERT( 0xc1d77b62, 0xc229ea85, 0x41f4c586 ),
	NORM( 0xbf45888d, 0x3ee3eef3, 0x3ee89f02 ),
	VERT( 0xc1db7a5d, 0xc22ebd5e, 0x41f4c586 ),
	NORM( 0xbf5c36da, 0x3e6bc9c6, 0x3ee8f44c ),
	VERT( 0xc1dcd749, 0xc233ea86, 0x41f4c586 ),
	NORM( 0xbf63e66c, 0xb92ca4ef, 0x3ee93793 ),
	VERT( 0xc1db7a5d, 0xc23917ad, 0x41f4c586 ),
	NORM( 0xbf5c15ba, 0xbe6bfcc9, 0x3ee96480 ),
	VERT( 0xc1d77b62, 0xc23dea85, 0x41f4c586 ),
	NORM( 0xbf454f0e, 0xbee3d80d, 0x3ee97839 ),
	VERT( 0xc1d1200f, 0xc2420ee8, 0x41f4c586 ),
	NORM( 0xbf211e8b, 0xbf211922, 0x3ee9717d ),
	VERT( 0xc1c8d749, 0xc2453c92, 0x41f4c586 ),
	NORM( 0xbee3eef9, 0xbf45541f, 0x3ee950b5 ),
	VERT( 0xc1bf3197, 0xc2473c10, 0x41f4c586 ),
	NORM( 0xbe6c2ab0, 0xbf5c26eb, 0x3ee917fd ),
	VERT( 0xc1b4d749, 0xc247ea86, 0x41c41a7d ),
	NORM( 0xb397ac46, 0xbf3bf81c, 0xbf2dcab3 ),
	VERT( 0xc1aa7cfa, 0xc2473c10, 0x41c41a7d ),
	NORM( 0x3e4299d2, 0xbf35906f, 0xbf2dcab6 ),
	VERT( 0xc1a0d749, 0xc2453c92, 0x41c41a7d ),
	NORM( 0x3ebbf82d, 0xbf22c932, 0xbf2dcab9 ),
	VERT( 0xc1988e83, 0xc2420ee8, 0x41c41a7d ),
	NORM( 0x3f04ea0b, 0xbf04ea0b, 0xbf2dcab8 ),
	VERT( 0xc192332f, 0xc23dea85, 0x41c41a7d ),
	NORM( 0x3f22c935, 0xbebbf825, 0xbf2dcab8 ),
	VERT( 0xc18e3434, 0xc23917ad, 0x41c41a7d ),
	NORM( 0x3f359073, 0xbe4299a1, 0xbf2dcab5 ),
	VERT( 0xc18cd749, 0xc233ea86, 0x41c41a7d ),
	NORM( 0x3f3bf816, 0xb41375b0, 0xbf2dcab9 ),
	VERT( 0xc18e3434, 0xc22ebd5e, 0x41c41a7d ),
	NORM( 0x3f359075, 0x3e42997e, 0xbf2dcab5 ),
	VERT( 0xc192332f, 0xc229ea85, 0x41c41a7d ),
	NORM( 0x3f22c93b, 0x3ebbf81b, 0xbf2dcab5 ),
	VERT( 0xc1988e83, 0xc225c622, 0x41c41a7d ),
	NORM( 0x3f04ea03, 0x3f04ea18, 0xbf2dcab4 ),
	VERT( 0xc1a0d749, 0xc2229879, 0x41c41a7d ),
	NORM( 0x3ebbf810, 0x3f22c936, 0xbf2dcabd ),
	VERT( 0xc1aa7cfa, 0xc22098fb, 0x41c41a7d ),
	NORM( 0x3e4299d2, 0x3f35906f, 0xbf2dcab6 ),
	VERT( 0xc1b4d749, 0xc21fea85, 0x41c41a7d ),
	NORM( 0xb397ac46, 0x3f3bf81c, 0xbf2dcab3 ),
	VERT( 0xc1bf3197, 0xc22098fb, 0x41c41a7d ),
	NORM( 0xbe4299c7, 0x3f35906f, 0xbf2dcab7 ),
	VERT( 0xc1c8d749, 0xc2229879, 0x41c41a7d ),
	NORM( 0xbebbf80b, 0x3f22c938, 0xbf2dcabc ),
	VERT( 0xc1d1200f, 0xc225c622, 0x41c41a7d ),
	NORM( 0xbf04ea0a, 0x3f04ea14, 0xbf2dcab2 ),
	VERT( 0xc1d77b62, 0xc229ea85, 0x41c41a7d ),
	NORM( 0xbf22c93c, 0x3ebbf80d, 0xbf2dcab7 ),
	VERT( 0xc1db7a5d, 0xc22ebd5e, 0x41c41a7d ),
	NORM( 0xbf359070, 0x3e42999d, 0xbf2dcab8 ),
	VERT( 0xc1dcd749, 0xc233ea86, 0x41c41a7d ),
	NORM( 0xbf3bf81b, 0xb41375b5, 0xbf2dcab4 ),
	VERT( 0xc1db7a5d, 0xc23917ad, 0x41c41a7d ),
	NORM( 0xbf35906f, 0xbe4299c2, 0xbf2dcab7 ),
	VERT( 0xc1d77b62, 0xc23dea85, 0x41c41a7d ),
	NORM( 0xbf22c937, 0xbebbf818, 0xbf2dcab9 ),
	VERT( 0xc1d1200f, 0xc2420ee8, 0x41c41a7d ),
	NORM( 0xbf04ea11, 0xbf04ea08, 0xbf2dcab6 ),
	VERT( 0xc1c8d749, 0xc2453c92, 0x41c41a7d ),
	NORM( 0xbebbf827, 0xbf22c934, 0xbf2dcab8 ),
	VERT( 0xc1bf3197, 0xc2473c10, 0x41c41a7d ),
	NORM( 0xbe4299c7, 0xbf35906f, 0xbf2dcab7 ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_X_B[]
START
VList      vertex_FishCon1_X_B,
PList      strip_FishCon1_X_B,
Center      -22.605120F, -44.979027F, 27.724197F,
Radius       5.942410F,
END

CNKOBJECT  object_FishCon1_X_B[]
START
EvalFlags ( 0x00000036 ),
CNKModel   model_FishCon1_X_B,
OPosition  ( -89.500000F, 20.000000F,  0.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_FishCon1_Y_B,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_B_B[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 180, _NB( UFO_0, 13 ),
	StripR(6),  0, 24, 1, 25, 2, 26, 
	StripL(12),  2, 3, 26, 27, 50, 51, 48, 71, 24, 47, 
                   0, 23, 
	StripL(44),  3, 4, 27, 28, 51, 52, 71, 70, 47, 46, 
                   23, 22, 0, 21, 1, 20, 2, 19, 3, 18, 
                   4, 17, 5, 16, 6, 15, 7, 14, 8, 13, 
                   9, 12, 10, 11, 34, 35, 58, 59, 64, 63, 
                   40, 39, 16, 15, 
	StripR(14),  4, 28, 5, 29, 6, 30, 7, 31, 8, 32, 
                   9, 33, 10, 34, 
	StripL(12),  14, 15, 38, 39, 62, 63, 60, 59, 36, 35, 
                   12, 11, 
	StripR(14),  16, 40, 17, 41, 18, 42, 19, 43, 20, 44, 
                   21, 45, 22, 46, 
	StripR(6),  50, 26, 49, 25, 48, 24, 
	StripR(14),  28, 52, 29, 53, 30, 54, 31, 55, 32, 56, 
                   33, 57, 34, 58, 
	StripR(5),  61, 38, 37, 14, 13, 
	StripL(8),  38, 62, 61, 60, 37, 36, 13, 12, 
	StripR(14),  40, 64, 41, 65, 42, 66, 43, 67, 44, 68, 
                   45, 69, 46, 70, 
	StripL(3),  49, 50, 48, 
	StripR(14),  64, 58, 65, 57, 66, 56, 67, 55, 68, 54, 
                   69, 53, 70, 52, 
	CnkEnd()
END

VLIST      vertex_FishCon1_B_B[]
START
	CnkV_VN(0x0, 433),
	OffnbIdx(0, 72),
	VERT( 0xc131f933, 0xbf880bb5, 0x41f77bd4 ),
	NORM( 0x39a37e16, 0x3ea08576, 0x3f7317d1 ),
	VERT( 0xc11f56a5, 0xbf9bac26, 0x41f77bd4 ),
	NORM( 0x3da7584a, 0x3e9b6dcd, 0x3f730536 ),
	VERT( 0xc10df933, 0xbfd53711, 0x41f77bd4 ),
	NORM( 0x3e21c752, 0x3e8bb79e, 0x3f72f0b9 ),
	VERT( 0xc0fe1f9c, 0xc0186049, 0x41f77bd4 ),
	NORM( 0x3e654882, 0x3e64be01, 0x3f72dbb7 ),
	VERT( 0xc0e73d3c, 0xc05405db, 0x41f77bd4 ),
	NORM( 0x3e8cbc60, 0x3e221a06, 0x3f72c7a3 ),
	VERT( 0xc0d8da82, 0xc08cbdd2, 0x41f77bd4 ),
	NORM( 0x3e9d4f88, 0x3da7fdf6, 0x3f72b5e2 ),
	VERT( 0xc0d3f265, 0xc0b202ed, 0x41f77bd4 ),
	NORM( 0x3ea3264f, 0xb960bbd7, 0x3f72a7bb ),
	VERT( 0xc0d8da82, 0xc0d74808, 0x41f77bd4 ),
	NORM( 0x3e9dc9a5, 0xbda96122, 0x3f729e35 ),
	VERT( 0xc0e73d3c, 0xc0fa02ee, 0x41f77bd4 ),
	NORM( 0x3e8d8fb5, 0xbe237d8e, 0x3f729a01 ),
	VERT( 0xc0fe1f9c, 0xc10beadb, 0x41f77bd4 ),
	NORM( 0x3e672fd9, 0xbe6713ae, 0x3f729b72 ),
	VERT( 0xc10df933, 0xc1175c0b, 0x41f77bd4 ),
	NORM( 0x3e236cdc, 0xbe8d5ad5, 0x3f72a26a ),
	VERT( 0xc11f56a5, 0xc11e8d69, 0x41f77bd4 ),
	NORM( 0x3da93f92, 0xbe9d6831, 0x3f72ae65 ),
	VERT( 0xc131f933, 0xc1210177, 0x41f77bd4 ),
	NORM( 0x39a7824b, 0xbea29e71, 0x3f72be86 ),
	VERT( 0xc1449bc0, 0xc11e8d69, 0x41f77bd4 ),
	NORM( 0xbda72d76, 0xbe9cb1d7, 0x3f72d1a1 ),
	VERT( 0xc155f933, 0xc1175c0b, 0x41f77bd4 ),
	NORM( 0xbe2159be, 0xbe8c1f32, 0x3f72e65d ),
	VERT( 0xc164e297, 0xc10beadb, 0x41f77bd4 ),
	NORM( 0xbe63b21b, 0xbe643b6c, 0x3f72fb49 ),
	VERT( 0xc17053c7, 0xc0fa02ee, 0x41f77bd4 ),
	NORM( 0xbe8b1c39, 0xbe210766, 0x3f730efb ),
	VERT( 0xc1778524, 0xc0d74808, 0x41f77bd4 ),
	NORM( 0xbe9ad2eb, 0xbda6890c, 0x3f732026 ),
	VERT( 0xc179f933, 0xc0b202ed, 0x41f77bd4 ),
	NORM( 0xbea000d8, 0xb958b7df, 0x3f732dab ),
	VERT( 0xc1778524, 0xc08cbdd2, 0x41f77bd4 ),
	NORM( 0xbe9a5c1d, 0x3da530a5, 0x3f7336b3 ),
	VERT( 0xc17053c7, 0xc05405db, 0x41f77bd4 ),
	NORM( 0xbe8a4e42, 0x3e1fac63, 0x3f733aa8 ),
	VERT( 0xc164e297, 0xc0186049, 0x41f77bd4 ),
	NORM( 0xbe61d5ce, 0x3e61f0ca, 0x3f73394d ),
	VERT( 0xc155f933, 0xbfd53711, 0x41f77bd4 ),
	NORM( 0xbe1fbcb9, 0x3e8a815c, 0x3f7332b7 ),
	VERT( 0xc1449bc0, 0xbf9bac26, 0x41f77bd4 ),
	NORM( 0xbda550fb, 0x3e9abac9, 0x3f732751 ),
	VERT( 0xc13213f8, 0xbf0ef9db, 0x41f4c586 ),
	NORM( 0xb9821286, 0x3f640232, 0x3ee8cae0 ),
	VERT( 0xc11d5f5b, 0xbf3a9748, 0x41f4c586 ),
	NORM( 0x3e6bddca, 0x3f5c58da, 0x3ee86e7c ),
	VERT( 0xc10a13f8, 0xbf9d3b53, 0x41f4c586 ),
	NORM( 0x3ee41183, 0x3f45aaba, 0x3ee808d2 ),
	VERT( 0xc0f304d8, 0xc0017847, 0x41f4c586 ),
	NORM( 0x3f2161d7, 0x3f217d5b, 0x3ee7a0c0 ),
	VERT( 0xc0d99789, 0xc043be77, 0x41f4c586 ),
	NORM( 0x3f45c4a3, 0x3ee4862e, 0x3ee73d5f ),
	VERT( 0xc0c99b9e, 0xc0887601, 0x41f4c586 ),
	NORM( 0x3f5cb06a, 0x3e6cc6f4, 0x3ee6e59e ),
	VERT( 0xc0c427f0, 0xc0b1df3b, 0x41f4c586 ),
	NORM( 0x3f648f12, 0x39326628, 0x3ee69fb6 ),
	VERT( 0xc0c99b9e, 0xc0db4876, 0x41f4c586 ),
	NORM( 0x3f5cd27a, 0xbe6c926d, 0x3ee670b4 ),
	VERT( 0xc0d99789, 0xc100ef9e, 0x41f4c586 ),
	NORM( 0x3f45ff83, 0xbee49de3, 0x3ee65bfa ),
	VERT( 0xc0f304d8, 0xc111812a, 0x41f4c586 ),
	NORM( 0x3f21a594, 0xbf21ab30, 0x3ee66315 ),
	VERT( 0xc10a13f8, 0xc11e37d1, 0x41f4c586 ),
	NORM( 0x3ee4863c, 0xbf45fa44, 0x3ee68577 ),
	VERT( 0xc11d5f5b, 0xc12635c7, 0x41f4c586 ),
	NORM( 0x3e6c635e, 0xbf5cc0c1, 0x3ee6c0a1 ),
	VERT( 0xc13213f8, 0xc128ef9e, 0x41f4c586 ),
	NORM( 0xb985067b, 0xbf6472a1, 0x3ee71051 ),
	VERT( 0xc146c895, 0xc12635c7, 0x41f4c586 ),
	NORM( 0xbe6cb1ba, 0xbf5c8de6, 0x3ee76ed2 ),
	VERT( 0xc15a13f8, 0xc11e37d1, 0x41f4c586 ),
	NORM( 0xbee462dc, 0xbf45a24d, 0x3ee7d57d ),
	VERT( 0xc16aa584, 0xc111812a, 0x41f4c586 ),
	NORM( 0xbf216123, 0xbf2145d8, 0x3ee83d35 ),
	VERT( 0xc1775c2b, 0xc100ef9e, 0x41f4c586 ),
	NORM( 0xbf45888d, 0xbee3eefb, 0x3ee89efb ),
	VERT( 0xc17f5a21, 0xc0db4876, 0x41f4c586 ),
	NORM( 0xbf5c36db, 0xbe6bc9be, 0x3ee8f44b ),
	VERT( 0xc18109fc, 0xc0b1df3b, 0x41f4c586 ),
	NORM( 0xbf63e66b, 0x392c7942, 0x3ee93794 ),
	VERT( 0xc17f5a21, 0xc0887601, 0x41f4c586 ),
	NORM( 0xbf5c15ba, 0x3e6bfca6, 0x3ee96486 ),
	VERT( 0xc1775c2b, 0xc043be77, 0x41f4c586 ),
	NORM( 0xbf454f10, 0x3ee3d806, 0x3ee9783b ),
	VERT( 0xc16aa584, 0xc0017847, 0x41f4c586 ),
	NORM( 0xbf211e88, 0x3f211926, 0x3ee9717c ),
	VERT( 0xc15a13f8, 0xbf9d3b53, 0x41f4c586 ),
	NORM( 0xbee3eee4, 0x3f455427, 0x3ee950b1 ),
	VERT( 0xc146c895, 0xbf3a9748, 0x41f4c586 ),
	NORM( 0xbe6c2a86, 0x3f5c26f0, 0x3ee917f3 ),
	VERT( 0xc13213f8, 0xbf0ef9db, 0x41c41a7d ),
	NORM( 0x00000000, 0x3f3bf819, 0xbf2dcab7 ),
	VERT( 0xc11d5f5b, 0xbf3a9748, 0x41c41a7d ),
	NORM( 0x3e429995, 0x3f359072, 0xbf2dcab7 ),
	VERT( 0xc10a13f8, 0xbf9d3b53, 0x41c41a7d ),
	NORM( 0x3ebbf818, 0x3f22c93a, 0xbf2dcab6 ),
	VERT( 0xc0f304d8, 0xc0017847, 0x41c41a7d ),
	NORM( 0x3f04ea0b, 0x3f04ea0c, 0xbf2dcab8 ),
	VERT( 0xc0d99789, 0xc043be77, 0x41c41a7d ),
	NORM( 0x3f22c93b, 0x3ebbf818, 0xbf2dcab5 ),
	VERT( 0xc0c99b9e, 0xc0887601, 0x41c41a7d ),
	NORM( 0x3f359071, 0x3e429992, 0xbf2dcab7 ),
	VERT( 0xc0c427f0, 0xc0b1df3b, 0x41c41a7d ),
	NORM( 0x3f3bf81a, 0x3286d203, 0xbf2dcab6 ),
	VERT( 0xc0c99b9e, 0xc0db4876, 0x41c41a7d ),
	NORM( 0x3f359072, 0xbe429990, 0xbf2dcab7 ),
	VERT( 0xc0d99789, 0xc100ef9e, 0x41c41a7d ),
	NORM( 0x3f22c93b, 0xbebbf817, 0xbf2dcab6 ),
	VERT( 0xc0f304d8, 0xc111812a, 0x41c41a7d ),
	NORM( 0x3f04ea0a, 0xbf04ea0e, 0xbf2dcab7 ),
	VERT( 0xc10a13f8, 0xc11e37d1, 0x41c41a7d ),
	NORM( 0x3ebbf817, 0xbf22c93a, 0xbf2dcab7 ),
	VERT( 0xc11d5f5b, 0xc12635c7, 0x41c41a7d ),
	NORM( 0x3e42999b, 0xbf359071, 0xbf2dcab7 ),
	VERT( 0xc13213f8, 0xc128ef9e, 0x41c41a7d ),
	NORM( 0x00000000, 0xbf3bf81a, 0xbf2dcab6 ),
	VERT( 0xc146c895, 0xc12635c7, 0x41c41a7d ),
	NORM( 0xbe42999b, 0xbf359071, 0xbf2dcab7 ),
	VERT( 0xc15a13f8, 0xc11e37d1, 0x41c41a7d ),
	NORM( 0xbebbf817, 0xbf22c93a, 0xbf2dcab7 ),
	VERT( 0xc16aa584, 0xc111812a, 0x41c41a7d ),
	NORM( 0xbf04ea0c, 0xbf04ea0c, 0xbf2dcab6 ),
	VERT( 0xc1775c2b, 0xc100ef9e, 0x41c41a7d ),
	NORM( 0xbf22c93a, 0xbebbf817, 0xbf2dcab7 ),
	VERT( 0xc17f5a21, 0xc0db4876, 0x41c41a7d ),
	NORM( 0xbf359071, 0xbe42999a, 0xbf2dcab8 ),
	VERT( 0xc18109fc, 0xc0b1df3b, 0x41c41a7d ),
	NORM( 0xbf3bf81a, 0x3286d203, 0xbf2dcab6 ),
	VERT( 0xc17f5a21, 0xc0887601, 0x41c41a7d ),
	NORM( 0xbf359071, 0x3e42999e, 0xbf2dcab7 ),
	VERT( 0xc1775c2b, 0xc043be77, 0x41c41a7d ),
	NORM( 0xbf22c93a, 0x3ebbf818, 0xbf2dcab7 ),
	VERT( 0xc16aa584, 0xc0017847, 0x41c41a7d ),
	NORM( 0xbf04ea0d, 0x3f04ea0b, 0xbf2dcab7 ),
	VERT( 0xc15a13f8, 0xbf9d3b53, 0x41c41a7d ),
	NORM( 0xbebbf818, 0x3f22c93a, 0xbf2dcab6 ),
	VERT( 0xc146c895, 0xbf3a9748, 0x41c41a7d ),
	NORM( 0xbe429995, 0x3f359072, 0xbf2dcab7 ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_B_B[]
START
VList      vertex_FishCon1_B_B,
PList      strip_FishCon1_B_B,
Center      -11.129875F, -5.558500F, 27.724197F,
Radius       5.942409F,
END

CNKOBJECT  object_FishCon1_B_B[]
START
EvalFlags ( 0x00000036 ),
CNKModel   model_FishCon1_B_B,
OPosition  ( -89.500000F, 20.000000F,  0.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_FishCon1_X_B,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_A_B[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 172, _NB( UFO_0, 10 ),
	StripL(3),  1, 0, 24, 
	StripR(19),  25, 2, 26, 3, 27, 4, 28, 5, 29, 6, 
                   30, 7, 31, 8, 32, 9, 33, 10, 34, 
	StripR(5),  13, 36, 12, 35, 11, 
	StripR(19),  37, 14, 38, 15, 39, 16, 40, 17, 41, 18, 
                   42, 19, 43, 20, 44, 21, 45, 22, 46, 
	StripR(42),  22, 23, 46, 47, 70, 71, 48, 24, 25, 1, 
                   2, 0, 3, 23, 4, 22, 5, 21, 6, 20, 
                   7, 19, 8, 18, 9, 17, 10, 16, 11, 15, 
                   12, 14, 13, 37, 36, 60, 59, 58, 35, 34, 
                   11, 10, 
	StripR(21),  48, 25, 49, 26, 50, 27, 51, 28, 52, 29, 
                   53, 30, 54, 31, 55, 32, 56, 33, 57, 34, 
                   58, 
	StripL(3),  36, 35, 59, 
	StripR(21),  60, 37, 61, 38, 62, 39, 63, 40, 64, 41, 
                   65, 42, 66, 43, 67, 44, 68, 45, 69, 46, 
                   70, 
	StripL(5),  71, 24, 47, 0, 23, 
	StripR(22),  58, 60, 57, 61, 56, 62, 55, 63, 54, 64, 
                   53, 65, 52, 66, 51, 67, 50, 68, 49, 69, 
                   48, 70, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_FishCon1_A_B[]
START
	CnkV_VN(0x0, 433),
	OffnbIdx(0, 72),
	VERT( 0xc131f933, 0xc21e1e2a, 0x41f77bd4 ),
	NORM( 0x39a37d57, 0xbea08584, 0x3f7317ce ),
	VERT( 0xc11f56a5, 0xc21d8126, 0x41f77bd4 ),
	NORM( 0x3da75854, 0xbe9b6dcc, 0x3f730536 ),
	VERT( 0xc10df933, 0xc21bb4cf, 0x41f77bd4 ),
	NORM( 0x3e21c74b, 0xbe8bb7a5, 0x3f72f0b9 ),
	VERT( 0xc0fe1f9c, 0xc218d883, 0x41f77bd4 ),
	NORM( 0x3e654887, 0xbe64be0b, 0x3f72dbb6 ),
	VERT( 0xc0e73d3c, 0xc2151e2a, 0x41f77bd4 ),
	NORM( 0x3e8cbc6a, 0xbe221a0f, 0x3f72c7a1 ),
	VERT( 0xc0d8da82, 0xc210c6cd, 0x41f77bd4 ),
	NORM( 0x3e9d4f89, 0xbda7fdf5, 0x3f72b5e2 ),
	VERT( 0xc0d3f265, 0xc20c1e2a, 0x41f77bd4 ),
	NORM( 0x3ea32652, 0x3960a12e, 0x3f72a7bb ),
	VERT( 0xc0d8da82, 0xc2077586, 0x41f77bd4 ),
	NORM( 0x3e9dc9aa, 0x3da9614b, 0x3f729e34 ),
	VERT( 0xc0e73d3c, 0xc2031e2a, 0x41f77bd4 ),
	NORM( 0x3e8d8fb2, 0x3e237d93, 0x3f729a01 ),
	VERT( 0xc0fe1f9c, 0xc1fec7a2, 0x41f77bd4 ),
	NORM( 0x3e672fdd, 0x3e6713b6, 0x3f729b71 ),
	VERT( 0xc10df933, 0xc1f90f0a, 0x41f77bd4 ),
	NORM( 0x3e236ce1, 0x3e8d5ad5, 0x3f72a26a ),
	VERT( 0xc11f56a5, 0xc1f5765b, 0x41f77bd4 ),
	NORM( 0x3da93f94, 0x3e9d6834, 0x3f72ae65 ),
	VERT( 0xc131f933, 0xc1f43c54, 0x41f77bd4 ),
	NORM( 0x39a782dd, 0x3ea29e79, 0x3f72be85 ),
	VERT( 0xc1449bc0, 0xc1f5765b, 0x41f77bd4 ),
	NORM( 0xbda72d7b, 0x3e9cb1da, 0x3f72d1a1 ),
	VERT( 0xc155f933, 0xc1f90f0a, 0x41f77bd4 ),
	NORM( 0xbe2159c5, 0x3e8c1f35, 0x3f72e65c ),
	VERT( 0xc164e297, 0xc1fec7a2, 0x41f77bd4 ),
	NORM( 0xbe63b21f, 0x3e643b73, 0x3f72fb48 ),
	VERT( 0xc17053c7, 0xc2031e2a, 0x41f77bd4 ),
	NORM( 0xbe8b1c39, 0x3e21076c, 0x3f730efa ),
	VERT( 0xc1778524, 0xc2077586, 0x41f77bd4 ),
	NORM( 0xbe9ad2ef, 0x3da68935, 0x3f732025 ),
	VERT( 0xc179f933, 0xc20c1e2a, 0x41f77bd4 ),
	NORM( 0xbea000da, 0x39589686, 0x3f732dab ),
	VERT( 0xc1778524, 0xc210c6cd, 0x41f77bd4 ),
	NORM( 0xbe9a5c20, 0xbda530a5, 0x3f7336b3 ),
	VERT( 0xc17053c7, 0xc2151e2a, 0x41f77bd4 ),
	NORM( 0xbe8a4e4a, 0xbe1fac68, 0x3f733aa7 ),
	VERT( 0xc164e297, 0xc218d883, 0x41f77bd4 ),
	NORM( 0xbe61d5d0, 0xbe61f0d1, 0x3f73394d ),
	VERT( 0xc155f933, 0xc21bb4cf, 0x41f77bd4 ),
	NORM( 0xbe1fbcb2, 0xbe8a8161, 0x3f7332b7 ),
	VERT( 0xc1449bc0, 0xc21d8126, 0x41f77bd4 ),
	NORM( 0xbda55103, 0xbe9abac7, 0x3f732751 ),
	VERT( 0xc13213f8, 0xc22022a0, 0x41f4c586 ),
	NORM( 0xb98213ca, 0xbf640234, 0x3ee8cada ),
	VERT( 0xc11d5f5b, 0xc21f742a, 0x41f4c586 ),
	NORM( 0x3e6bddca, 0xbf5c58da, 0x3ee86e7a ),
	VERT( 0xc10a13f8, 0xc21d74ad, 0x41f4c586 ),
	NORM( 0x3ee41177, 0xbf45aabe, 0x3ee808d0 ),
	VERT( 0xc0f304d8, 0xc21a4703, 0x41f4c586 ),
	NORM( 0x3f2161d8, 0xbf217d5c, 0x3ee7a0bc ),
	VERT( 0xc0d99789, 0xc21622a0, 0x41f4c586 ),
	NORM( 0x3f45c4a6, 0xbee4862a, 0x3ee73d58 ),
	VERT( 0xc0c99b9e, 0xc2114fc7, 0x41f4c586 ),
	NORM( 0x3f5cb06b, 0xbe6cc6ed, 0x3ee6e59b ),
	VERT( 0xc0c427f0, 0xc20c22a0, 0x41f4c586 ),
	NORM( 0x3f648f13, 0xb9326627, 0x3ee69fb3 ),
	VERT( 0xc0c99b9e, 0xc206f579, 0x41f4c586 ),
	NORM( 0x3f5cd27a, 0x3e6c926c, 0x3ee670b1 ),
	VERT( 0xc0d99789, 0xc20222a0, 0x41f4c586 ),
	NORM( 0x3f45ff82, 0x3ee49dee, 0x3ee65bf4 ),
	VERT( 0xc0f304d8, 0xc1fbfc7b, 0x41f4c586 ),
	NORM( 0x3f21a593, 0x3f21ab31, 0x3ee66315 ),
	VERT( 0xc10a13f8, 0xc1f5a127, 0x41f4c586 ),
	NORM( 0x3ee48644, 0x3f45fa43, 0x3ee68574 ),
	VERT( 0xc11d5f5b, 0xc1f1a22c, 0x41f4c586 ),
	NORM( 0x3e6c6351, 0x3f5cc0c3, 0x3ee6c09e ),
	VERT( 0xc13213f8, 0xc1f04541, 0x41f4c586 ),
	NORM( 0xb9850678, 0x3f6472a2, 0x3ee7104c ),
	VERT( 0xc146c895, 0xc1f1a22c, 0x41f4c586 ),
	NORM( 0xbe6cb1ad, 0x3f5c8de9, 0x3ee76ecb ),
	VERT( 0xc15a13f8, 0xc1f5a127, 0x41f4c586 ),
	NORM( 0xbee462e5, 0x3f45a24d, 0x3ee7d577 ),
	VERT( 0xc16aa584, 0xc1fbfc7b, 0x41f4c586 ),
	NORM( 0xbf216123, 0x3f2145d8, 0x3ee83d36 ),
	VERT( 0xc1775c2b, 0xc20222a0, 0x41f4c586 ),
	NORM( 0xbf45888c, 0x3ee3ef05, 0x3ee89ef6 ),
	VERT( 0xc17f5a21, 0xc206f579, 0x41f4c586 ),
	NORM( 0xbf5c36db, 0x3e6bc9be, 0x3ee8f449 ),
	VERT( 0xc18109fc, 0xc20c22a0, 0x41f4c586 ),
	NORM( 0xbf63e66c, 0xb92c80d1, 0x3ee93791 ),
	VERT( 0xc17f5a21, 0xc2114fc7, 0x41f4c586 ),
	NORM( 0xbf5c15bc, 0xbe6bfc9c, 0x3ee96482 ),
	VERT( 0xc1775c2b, 0xc21622a0, 0x41f4c586 ),
	NORM( 0xbf454f13, 0xbee3d800, 0x3ee97837 ),
	VERT( 0xc16aa584, 0xc21a4703, 0x41f4c586 ),
	NORM( 0xbf211e8a, 0xbf211926, 0x3ee97177 ),
	VERT( 0xc15a13f8, 0xc21d74ad, 0x41f4c586 ),
	NORM( 0xbee3eed9, 0xbf45542b, 0x3ee950ae ),
	VERT( 0xc146c895, 0xc21f742a, 0x41f4c586 ),
	NORM( 0xbe6c2a83, 0xbf5c26f0, 0x3ee917f3 ),
	VERT( 0xc13213f8, 0xc22022a0, 0x41c41a7d ),
	NORM( 0x00000000, 0xbf3bf81b, 0xbf2dcab4 ),
	VERT( 0xc11d5f5b, 0xc21f742a, 0x41c41a7d ),
	NORM( 0x3e429988, 0xbf35906f, 0xbf2dcabb ),
	VERT( 0xc10a13f8, 0xc21d74ad, 0x41c41a7d ),
	NORM( 0x3ebbf811, 0xbf22c93f, 0xbf2dcab3 ),
	VERT( 0xc0f304d8, 0xc21a4703, 0x41c41a7d ),
	NORM( 0x3f04ea0c, 0xbf04ea0a, 0xbf2dcab8 ),
	VERT( 0xc0d99789, 0xc21622a0, 0x41c41a7d ),
	NORM( 0x3f22c93c, 0xbebbf815, 0xbf2dcab5 ),
	VERT( 0xc0c99b9e, 0xc2114fc7, 0x41c41a7d ),
	NORM( 0x3f359071, 0xbe42998d, 0xbf2dcab8 ),
	VERT( 0xc0c427f0, 0xc20c22a0, 0x41c41a7d ),
	NORM( 0x3f3bf81a, 0x00000000, 0xbf2dcab6 ),
	VERT( 0xc0c99b9e, 0xc206f579, 0x41c41a7d ),
	NORM( 0x3f359071, 0x3e42998d, 0xbf2dcab8 ),
	VERT( 0xc0d99789, 0xc20222a0, 0x41c41a7d ),
	NORM( 0x3f22c93b, 0x3ebbf81f, 0xbf2dcab4 ),
	VERT( 0xc0f304d8, 0xc1fbfc7b, 0x41c41a7d ),
	NORM( 0x3f04ea08, 0x3f04ea0d, 0xbf2dcab9 ),
	VERT( 0xc10a13f8, 0xc1f5a127, 0x41c41a7d ),
	NORM( 0x3ebbf81e, 0x3f22c939, 0xbf2dcab6 ),
	VERT( 0xc11d5f5b, 0xc1f1a22c, 0x41c41a7d ),
	NORM( 0x3e42998b, 0x3f359073, 0xbf2dcab6 ),
	VERT( 0xc13213f8, 0xc1f04541, 0x41c41a7d ),
	NORM( 0x00000000, 0x3f3bf817, 0xbf2dcab9 ),
	VERT( 0xc146c895, 0xc1f1a22c, 0x41c41a7d ),
	NORM( 0xbe42998b, 0x3f359073, 0xbf2dcab6 ),
	VERT( 0xc15a13f8, 0xc1f5a127, 0x41c41a7d ),
	NORM( 0xbebbf81e, 0x3f22c939, 0xbf2dcab6 ),
	VERT( 0xc16aa584, 0xc1fbfc7b, 0x41c41a7d ),
	NORM( 0xbf04ea09, 0x3f04ea0c, 0xbf2dcab9 ),
	VERT( 0xc1775c2b, 0xc20222a0, 0x41c41a7d ),
	NORM( 0xbf22c93a, 0x3ebbf820, 0xbf2dcab4 ),
	VERT( 0xc17f5a21, 0xc206f579, 0x41c41a7d ),
	NORM( 0xbf359071, 0x3e429995, 0xbf2dcab7 ),
	VERT( 0xc18109fc, 0xc20c22a0, 0x41c41a7d ),
	NORM( 0xbf3bf81a, 0x00000000, 0xbf2dcab6 ),
	VERT( 0xc17f5a21, 0xc2114fc7, 0x41c41a7d ),
	NORM( 0xbf359071, 0xbe429995, 0xbf2dcab7 ),
	VERT( 0xc1775c2b, 0xc21622a0, 0x41c41a7d ),
	NORM( 0xbf22c93c, 0xbebbf815, 0xbf2dcab6 ),
	VERT( 0xc16aa584, 0xc21a4703, 0x41c41a7d ),
	NORM( 0xbf04ea0e, 0xbf04ea09, 0xbf2dcab8 ),
	VERT( 0xc15a13f8, 0xc21d74ad, 0x41c41a7d ),
	NORM( 0xbebbf811, 0xbf22c93f, 0xbf2dcab3 ),
	VERT( 0xc146c895, 0xc21f742a, 0x41c41a7d ),
	NORM( 0xbe429988, 0xbf35906f, 0xbf2dcabb ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_A_B[]
START
VList      vertex_FishCon1_A_B,
PList      strip_FishCon1_A_B,
Center      -11.129875F, -35.033813F, 27.724197F,
Radius       5.942409F,
END

CNKOBJECT  object_FishCon1_A_B[]
START
EvalFlags ( 0x00000036 ),
CNKModel   model_FishCon1_A_B,
OPosition  ( -89.500000F, 20.000000F,  0.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_FishCon1_B_B,
END

CNKOBJECT_END



CNKOBJECT_START

CNKOBJECT  object_FishCon1_analogue_L_Bone[]
START
EvalFlags ( 0x0000003e ),
CNKModel   NULL,
OPosition  ( 31.000000F, 20.500000F, -22.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_analogue_L[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 200, 200, 200 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 564, _NB( UFO_0, 13 ),
	StripL(21),  1, 2, 25, 26, 49, 50, 73, 74, 97, 98, 
                   121, 122, 145, 146, 169, 170, 193, 194, 217, 218, 
                   241, 
	StripL(44),  2, 3, 26, 27, 50, 51, 74, 75, 98, 99, 
                   122, 123, 146, 147, 170, 171, 194, 195, 218, 219, 
                   242, 243, 240, 263, 216, 239, 192, 215, 168, 191, 
                   144, 167, 120, 143, 96, 119, 72, 95, 48, 71, 
                   24, 47, 0, 23, 
	StripL(108),  3, 4, 27, 28, 51, 52, 75, 76, 99, 100, 
                   123, 124, 147, 148, 171, 172, 195, 196, 219, 220, 
                   243, 244, 263, 262, 239, 238, 215, 214, 191, 190, 
                   167, 166, 143, 142, 119, 118, 95, 94, 71, 70, 
                   47, 46, 23, 22, 0, 21, 1, 20, 2, 19, 
                   3, 18, 4, 17, 5, 16, 6, 15, 7, 14, 
                   8, 13, 9, 12, 10, 11, 34, 35, 58, 59, 
                   82, 83, 106, 107, 130, 131, 154, 155, 178, 179, 
                   202, 203, 226, 227, 250, 251, 256, 255, 232, 231, 
                   208, 207, 184, 183, 160, 159, 136, 135, 112, 111, 
                   88, 87, 64, 63, 40, 39, 16, 15, 
	StripL(44),  4, 5, 28, 29, 52, 53, 76, 77, 100, 101, 
                   124, 125, 148, 149, 172, 173, 196, 197, 220, 221, 
                   244, 245, 262, 261, 238, 237, 214, 213, 190, 189, 
                   166, 165, 142, 141, 118, 117, 94, 93, 70, 69, 
                   46, 45, 22, 21, 
	StripL(44),  5, 6, 29, 30, 53, 54, 77, 78, 101, 102, 
                   125, 126, 149, 150, 173, 174, 197, 198, 221, 222, 
                   245, 246, 261, 260, 237, 236, 213, 212, 189, 188, 
                   165, 164, 141, 140, 117, 116, 93, 92, 69, 68, 
                   45, 44, 21, 20, 
	StripL(44),  6, 7, 30, 31, 54, 55, 78, 79, 102, 103, 
                   126, 127, 150, 151, 174, 175, 198, 199, 222, 223, 
                   246, 247, 260, 259, 236, 235, 212, 211, 188, 187, 
                   164, 163, 140, 139, 116, 115, 92, 91, 68, 67, 
                   44, 43, 20, 19, 
	StripL(44),  7, 8, 31, 32, 55, 56, 79, 80, 103, 104, 
                   127, 128, 151, 152, 175, 176, 199, 200, 223, 224, 
                   247, 248, 259, 258, 235, 234, 211, 210, 187, 186, 
                   163, 162, 139, 138, 115, 114, 91, 90, 67, 66, 
                   43, 42, 19, 18, 
	StripL(44),  8, 9, 32, 33, 56, 57, 80, 81, 104, 105, 
                   128, 129, 152, 153, 176, 177, 200, 201, 224, 225, 
                   248, 249, 258, 257, 234, 233, 210, 209, 186, 185, 
                   162, 161, 138, 137, 114, 113, 90, 89, 66, 65, 
                   42, 41, 18, 17, 
	StripL(44),  9, 10, 33, 34, 57, 58, 81, 82, 105, 106, 
                   129, 130, 153, 154, 177, 178, 201, 202, 225, 226, 
                   249, 250, 257, 256, 233, 232, 209, 208, 185, 184, 
                   161, 160, 137, 136, 113, 112, 89, 88, 65, 64, 
                   41, 40, 17, 16, 
	StripL(23),  13, 14, 37, 38, 61, 62, 85, 86, 109, 110, 
                   133, 134, 157, 158, 181, 182, 205, 206, 229, 230, 
                   253, 254, 252, 
	StripL(44),  14, 15, 38, 39, 62, 63, 86, 87, 110, 111, 
                   134, 135, 158, 159, 182, 183, 206, 207, 230, 231, 
                   254, 255, 252, 251, 228, 227, 204, 203, 180, 179, 
                   156, 155, 132, 131, 108, 107, 84, 83, 60, 59, 
                   36, 35, 12, 11, 
	StripL(24),  218, 242, 241, 240, 217, 216, 193, 192, 169, 168, 
                   145, 144, 121, 120, 97, 96, 73, 72, 49, 48, 
                   25, 24, 1, 0, 
	StripL(22),  253, 252, 229, 228, 205, 204, 181, 180, 157, 156, 
                   133, 132, 109, 108, 85, 84, 61, 60, 37, 36, 
                   13, 12, 
	CnkEnd()
END

VLIST      vertex_FishCon1_analogue_L[]
START
	CnkV_VN(0x0, 1585),
	OffnbIdx(0, 264),
	VERT( 0xbd875f00, 0x403be130, 0x41705a88 ),
	NORM( 0xb7d48ba7, 0x3ddd123d, 0x3f7e8111 ),
	VERT( 0x3f30d100, 0x403580d0, 0x41705a88 ),
	NORM( 0x3ce4fda7, 0x3dd58251, 0x3f7e8123 ),
	VERT( 0x3fb2acf0, 0x4022cee0, 0x41705a88 ),
	NORM( 0x3d5d7c34, 0x3dbf90a8, 0x3f7e805e ),
	VERT( 0x40001848, 0x40051198, 0x41705a88 ),
	NORM( 0x3d9cec3f, 0x3d9ca328, 0x3f7e7ece ),
	VERT( 0x401dd598, 0x3fbc9f90, 0x41705a88 ),
	NORM( 0x3dc0b62d, 0x3d5de7d6, 0x3f7e7c8a ),
	VERT( 0x40308780, 0x3f44b640, 0x41705a88 ),
	NORM( 0x3dd7a75a, 0x3ce5d308, 0x3f7e79b7 ),
	VERT( 0x4036e7e0, 0x3c3e6000, 0x41705a88 ),
	NORM( 0x3de016ac, 0xb930a055, 0x3f7e7682 ),
	VERT( 0x40308780, 0xbf3ec340, 0x41705a88 ),
	NORM( 0x3dd94985, 0xbcea561d, 0x3f7e7321 ),
	VERT( 0x401dd598, 0xbfb9a610, 0x41705a88 ),
	NORM( 0x3dc38ab4, 0xbd628e7b, 0x3f7e6fce ),
	VERT( 0x40001848, 0xc00394e0, 0x41705a88 ),
	NORM( 0x3da03154, 0xbda099c8, 0x3f7e6cc6 ),
	VERT( 0x3fb2acf0, 0xc0215228, 0x41705a88 ),
	NORM( 0x3d6326c2, 0xbdc52b69, 0x3f7e6a40 ),
	VERT( 0x3f30d100, 0xc0340410, 0x41705a88 ),
	NORM( 0x3ceb8869, 0xbddc5194, 0x3f7e686c ),
	VERT( 0xbd875f00, 0xc03a6470, 0x41705a88 ),
	NORM( 0xb7e2a2ff, 0xbde453dd, 0x3f7e676f ),
	VERT( 0xbf52a880, 0xc0340410, 0x41705a88 ),
	NORM( 0xbcec40ab, 0xbddc943a, 0x3f7e675b ),
	VERT( 0xbfc398c0, 0xc0215228, 0x41705a88 ),
	NORM( 0xbd63e3a6, 0xbdc59ea7, 0x3f7e6831 ),
	VERT( 0xc0088e30, 0xc00394e0, 0x41705a88 ),
	NORM( 0xbda0d16e, 0xbda11e6a, 0x3f7e69e2 ),
	VERT( 0xc0264b70, 0xbfb9a610, 0x41705a88 ),
	NORM( 0xbdc46b75, 0xbd637343, 0x3f7e6c4d ),
	VERT( 0xc038fd60, 0xbf3ec340, 0x41705a88 ),
	NORM( 0xbdda58c3, 0xbceb5ec1, 0x3f7e6f43 ),
	VERT( 0xc03f5dc0, 0x3c3e6000, 0x41705a88 ),
	NORM( 0xbde13574, 0xb932622b, 0x3f7e728d ),
	VERT( 0xc038fd60, 0x3f44b640, 0x41705a88 ),
	NORM( 0xbdd8b2ff, 0x3ce6d184, 0x3f7e75f0 ),
	VERT( 0xc0264b70, 0x3fbc9f90, 0x41705a88 ),
	NORM( 0xbdc19132, 0x3d5ec3ff, 0x3f7e7931 ),
	VERT( 0xc0088e30, 0x40051198, 0x41705a88 ),
	NORM( 0xbd9d868a, 0x3d9d21f9, 0x3f7e7c18 ),
	VERT( 0xbfc398c0, 0x4022cee0, 0x41705a88 ),
	NORM( 0xbd5e3073, 0x3dbffe2c, 0x3f7e7e77 ),
	VERT( 0xbf52a880, 0x403580d0, 0x41705a88 ),
	NORM( 0xbce5abc8, 0x3dd5c15f, 0x3f7e8028 ),
	VERT( 0xbd65d600, 0x40dc0aa6, 0x4163960c ),
	NORM( 0x3a1d64af, 0x3eba2b60, 0x3f6e7a13 ),
	VERT( 0x3fda1810, 0x40d4a088, 0x4163960c ),
	NORM( 0x3dc2a03c, 0x3eb47c7d, 0x3f6e5402 ),
	VERT( 0x40560248, 0x40bee384, 0x4163960c ),
	NORM( 0x3e3c1cc7, 0x3ea26c86, 0x3f6e2daf ),
	VERT( 0x40981224, 0x409c4edc, 0x4163960c ),
	NORM( 0x3e85596e, 0x3e851726, 0x3f6e09cd ),
	VERT( 0x40baa6d0, 0x405e7bb0, 0x4163960c ),
	NORM( 0x3ea3bdd1, 0x3e3cd1f2, 0x3f6deaf3 ),
	VERT( 0x40d063d4, 0x3feb0ae0, 0x4163960c ),
	NORM( 0x3eb705cc, 0x3dc40d52, 0x3f6dd367 ),
	VERT( 0x40d7cdf0, 0x3d9c4300, 0x4163960c ),
	NORM( 0x3ebdc191, 0x38ef10a9, 0x3f6dc4e5 ),
	VERT( 0x40d063d4, 0xbfd78270, 0x4163960c ),
	NORM( 0x3eb76902, 0xbdc40005, 0x3f6dc077 ),
	VERT( 0x40baa6d0, 0xc054b780, 0x4163960c ),
	NORM( 0x3ea469ce, 0xbe3d5cab, 0x3f6dc665 ),
	VERT( 0x40981224, 0xc0976cc0, 0x4163960c ),
	NORM( 0x3e862050, 0xbe85c006, 0x3f6dd62e ),
	VERT( 0x40560248, 0xc0ba016c, 0x4163960c ),
	NORM( 0x3e3d75e6, 0xbea3794a, 0x3f6dee96 ),
	VERT( 0x3fda1810, 0xc0cfbe6c, 0x4163960c ),
	NORM( 0x3dc42fa2, 0xbeb5d2c8, 0x3f6e0dcf ),
	VERT( 0xbd65d600, 0xc0d7288c, 0x4163960c ),
	NORM( 0x3a1d99fe, 0xbebb9d2a, 0x3f6e3195 ),
	VERT( 0xbfe87560, 0xc0cfbe6c, 0x4163960c ),
	NORM( 0xbdc06058, 0xbeb49106, 0x3f6e576d ),
	VERT( 0xc05d30f0, 0xc0ba016c, 0x4163960c ),
	NORM( 0xbe39b6f8, 0xbea14bd2, 0x3f6e7cca ),
	VERT( 0xc09ba978, 0xc0976cc0, 0x4163960c ),
	NORM( 0xbe82fec4, 0xbe833c04, 0x3f6e9f3a ),
	VERT( 0xc0be3e20, 0xc054b780, 0x4163960c ),
	NORM( 0xbea005c4, 0xbe390093, 0x3f6ebc87 ),
	VERT( 0xc0d3fb20, 0xbfd78270, 0x4163960c ),
	NORM( 0xbeb21864, 0xbdbef667, 0x3f6ed2d9 ),
	VERT( 0xc0db6540, 0x3d9c4300, 0x4163960c ),
	NORM( 0xbeb819d2, 0x38f0da56, 0x3f6ee0c7 ),
	VERT( 0xc0d3fb20, 0x3feb0ae0, 0x4163960c ),
	NORM( 0xbeb1b3c7, 0x3dbf0304, 0x3f6ee56d ),
	VERT( 0xc0be3e20, 0x405e7bb0, 0x4163960c ),
	NORM( 0xbe9f579d, 0x3e38739e, 0x3f6ee074 ),
	VERT( 0xc09ba978, 0x409c4edc, 0x4163960c ),
	NORM( 0xbe8235e3, 0x3e829129, 0x3f6ed21f ),
	VERT( 0xc05d30f0, 0x40bee384, 0x4163960c ),
	NORM( 0xbe385b99, 0x3ea03ce6, 0x3f6ebb42 ),
	VERT( 0xbfe87560, 0x40d4a088, 0x4163960c ),
	NORM( 0xbdbed02a, 0x3eb33950, 0x3f6e9d45 ),
	VERT( 0xbdcfe000, 0x41093886, 0x41540518 ),
	NORM( 0x39108b0f, 0x3f352f2b, 0x3f34dab1 ),
	VERT( 0x40064d30, 0x41049633, 0x41540518 ),
	NORM( 0x3e3c7085, 0x3f2f8b2d, 0x3f3447d3 ),
	VERT( 0x4084c080, 0x40ee0022, 0x41540518 ),
	NORM( 0x3eb68a0f, 0x3f1de15e, 0x3f33aa57 ),
	VERT( 0x40bd15c4, 0x40c2c650, 0x41540518 ),
	NORM( 0x3f01775f, 0x3f0149a0, 0x3f330d02 ),
	VERT( 0x40e84f98, 0x408a710c, 0x41540518 ),
	NORM( 0x3f1f01ee, 0x3eb746a9, 0x3f327adb ),
	VERT( 0x4101bdee, 0x4011ae48, 0x41540518 ),
	NORM( 0x3f31c3c9, 0x3e3de7f3, 0x3f31fe52 ),
	VERT( 0x41066040, 0x3d9c4300, 0x41540518 ),
	NORM( 0x3f385977, 0xba1665a7, 0x3f31a070 ),
	VERT( 0x4101bdee, 0xc007ea10, 0x41540518 ),
	NORM( 0x3f323d01, 0xbe3f9642, 0x3f316806 ),
	VERT( 0x40e84f98, 0xc0858ef4, 0x41540518 ),
	NORM( 0x3f1fd40f, 0xbeb8cef0, 0x3f315920 ),
	VERT( 0x40bd15c4, 0xc0bde434, 0x41540518 ),
	NORM( 0x3f026a56, 0xbf0286e4, 0x3f3174ae ),
	VERT( 0x4084c080, 0xc0e91e08, 0x41540518 ),
	NORM( 0x3eb82fd1, 0xbf1f97ff, 0x3f31b880 ),
	VERT( 0x40064d30, 0xc1022526, 0x41540518 ),
	NORM( 0x3e3e59cd, 0xbf319af1, 0x3f321f7b ),
	VERT( 0xbdcfe000, 0xc106c77a, 0x41540518 ),
	NORM( 0x391f0f6c, 0xbf375fda, 0x3f32a219 ),
	VERT( 0xc0134b30, 0xc1022526, 0x41540518 ),
	NORM( 0xbe3cf5e8, 0xbf3098b3, 0x3f333710 ),
	VERT( 0xc08b3f80, 0xc0e91e08, 0x41540518 ),
	NORM( 0xbeb60436, 0xbf1dd88c, 0x3f33d405 ),
	VERT( 0xc0c394c0, 0xc0bde434, 0x41540518 ),
	NORM( 0xbf00526b, 0xbf0081e0, 0x3f346e56 ),
	VERT( 0xc0eece90, 0xc0858ef4, 0x41540518 ),
	NORM( 0xbf1cb9c2, 0xbeb54e8c, 0x3f34fbc9 ),
	VERT( 0xc104fd6c, 0xc007ea10, 0x41540518 ),
	NORM( 0xbf2e6540, 0xbe3b8918, 0x3f357335 ),
	VERT( 0xc1099fc0, 0x3d9c4300, 0x41540518 ),
	NORM( 0xbf343c15, 0xba12d5d7, 0x3f35ccf0 ),
	VERT( 0xc104fd6c, 0x4011ae48, 0x41540518 ),
	NORM( 0xbf2deb64, 0x3e39e07b, 0x3f360340 ),
	VERT( 0xc0eece90, 0x408a710c, 0x41540518 ),
	NORM( 0xbf1be6cf, 0x3eb3c75b, 0x3f3612b3 ),
	VERT( 0xc0c394c0, 0x40c2c650, 0x41540518 ),
	NORM( 0xbefebe3a, 0x3efe8880, 0x3f35fa2a ),
	VERT( 0xc08b3f80, 0x40ee0022, 0x41540518 ),
	NORM( 0xbeb45f9d, 0x3f1c2116, 0x3f35bb09 ),
	VERT( 0xc0134b30, 0x41049633, 0x41540518 ),
	NORM( 0xbe3b1271, 0x3f2e884a, 0x3f355929 ),
	VERT( 0xbdf06900, 0x4112feb7, 0x4143f90c ),
	NORM( 0xba6ce23d, 0x3f7f2eec, 0x3da3730b ),
	VERT( 0x400f2400, 0x410e0959, 0x4143f90c ),
	NORM( 0x3e838c38, 0x3f769183, 0x3da2bdac ),
	VERT( 0x408dc37c, 0x40feff7e, 0x4143f90c ),
	NORM( 0x3efea61c, 0x3f5d2acb, 0x3da1e77e ),
	VERT( 0x40ca0a3c, 0x40d0bf10, 0x4143f90c ),
	NORM( 0x3f3439df, 0x3f34b125, 0x3da0fe07 ),
	VERT( 0x40f84aac, 0x40947850, 0x4143f90c ),
	NORM( 0x3f5cdd5a, 0x3effc4ee, 0x3da010cc ),
	VERT( 0x410aaef0, 0x401c8da8, 0x4143f90c ),
	NORM( 0x3f76745e, 0x3e84aaff, 0x3d9f304a ),
	VERT( 0x410fa44c, 0x3dbccc00, 0x4143f90c ),
	NORM( 0x3f7f3b98, 0x3a702980, 0x3d9e6ce2 ),
	VERT( 0x410aaef0, 0xc010c0e0, 0x4143f90c ),
	NORM( 0x3f7695a6, 0xbe83ccd1, 0x3d9dd548 ),
	VERT( 0x40f84aac, 0xc08e91f0, 0x4143f90c ),
	NORM( 0x3f5d16da, 0xbeff17e1, 0x3d9d753b ),
	VERT( 0x40ca0a3c, 0xc0cad8ac, 0x4143f90c ),
	NORM( 0x3f347c00, 0xbf347c04, 0x3d9d5458 ),
	VERT( 0x408dc37c, 0xc0f9191c, 0x4143f90c ),
	NORM( 0x3eff17de, 0xbf5d16db, 0x3d9d753b ),
	VERT( 0x400f2400, 0xc10b1628, 0x4143f90c ),
	NORM( 0x3e83cce1, 0xbf7695a4, 0x3d9dd541 ),
	VERT( 0xbdf06900, 0xc1100b86, 0x4143f90c ),
	NORM( 0xba702a8d, 0xbf7f3b98, 0x3d9e6ce0 ),
	VERT( 0xc01e2a90, 0xc10b1628, 0x4143f90c ),
	NORM( 0xbe84ab0f, 0xbf76745c, 0x3d9f304d ),
	VERT( 0xc09546c0, 0xc0f9191c, 0x4143f90c ),
	NORM( 0xbeffc4f2, 0xbf5cdd59, 0x3da010c9 ),
	VERT( 0xc0d18d80, 0xc0cad8ac, 0x4143f90c ),
	NORM( 0xbf34b127, 0xbf3439de, 0x3da0fe00 ),
	VERT( 0xc0ffcde8, 0xc08e91f0, 0x4143f90c ),
	NORM( 0xbf5d2aca, 0xbefea621, 0x3da1e76d ),
	VERT( 0xc10e7090, 0xc010c0e0, 0x4143f90c ),
	NORM( 0xbf769180, 0xbe838c4b, 0x3da2bd9d ),
	VERT( 0xc11365f0, 0x3dbccc00, 0x4143f90c ),
	NORM( 0xbf7f2eed, 0x3a6ce090, 0x3da372fb ),
	VERT( 0xc10e7090, 0x401c8da8, 0x4143f90c ),
	NORM( 0xbf7670d0, 0x3e8467d8, 0x3da3fc8c ),
	VERT( 0xc0ffcde8, 0x40947850, 0x4143f90c ),
	NORM( 0xbf5cf20b, 0x3eff5229, 0x3da4525d ),
	VERT( 0xc0d18d80, 0x40d0bf10, 0x4143f90c ),
	NORM( 0xbf346f5b, 0x3f346f51, 0x3da46f7b ),
	VERT( 0xc09546c0, 0x40feff7e, 0x4143f90c ),
	NORM( 0xbeff522a, 0x3f5cf20a, 0x3da4525c ),
	VERT( 0xc01e2a90, 0x410e0959, 0x4143f90c ),
	NORM( 0xbe8467c5, 0x3f7670d2, 0x3da3fc97 ),
	VERT( 0xbdcfe000, 0x41093886, 0x412b9acc ),
	NORM( 0x3a022fd7, 0x3f166213, 0xbf4f2c72 ),
	VERT( 0x40064d30, 0x41049633, 0x412b9acc ),
	NORM( 0x3e1c958f, 0x3f117d75, 0xbf4ef81a ),
	VERT( 0x4084c080, 0x40ee0022, 0x412b9acc ),
	NORM( 0x3e974b8c, 0x3f02ac9d, 0xbf4ebb1f ),
	VERT( 0x40bd15c4, 0x40c2c650, 0x412b9acc ),
	NORM( 0x3ed64966, 0x3ed5c51c, 0xbf4e7996 ),
	VERT( 0x40e84f98, 0x408a710c, 0x412b9acc ),
	NORM( 0x3f0374ca, 0x3e976202, 0xbf4e37f0 ),
	VERT( 0x4101bdee, 0x4011ae48, 0x412b9acc ),
	NORM( 0x3f12e06b, 0x3e1cc267, 0xbf4dfaaa ),
	VERT( 0x41066040, 0x3d9c4300, 0x412b9acc ),
	NORM( 0x3f184b08, 0xba06782a, 0xbf4dc60e ),
	VERT( 0x4101bdee, 0xc007ea10, 0x412b9acc ),
	NORM( 0x3f1348ef, 0xbe1e3f1b, 0xbf4d9dc2 ),
	VERT( 0x40e84f98, 0xc0858ef4, 0x412b9acc ),
	NORM( 0x3f0429e4, 0xbe98b91f, 0xbf4d84a2 ),
	VERT( 0x40bd15c4, 0xc0bde434, 0x412b9acc ),
	NORM( 0x3ed7ebd4, 0xbed7ece0, 0xbf4d7c77 ),
	VERT( 0x4084c080, 0xc0e91e08, 0x412b9acc ),
	NORM( 0x3e98b650, 0xbf0428d9, 0xbf4d85d3 ),
	VERT( 0x40064d30, 0xc1022526, 0x412b9acc ),
	NORM( 0x3e1e399c, 0xbf13461c, 0xbf4da00b ),
	VERT( 0xbdcfe000, 0xc106c77a, 0x412b9acc ),
	NORM( 0x3a04787c, 0xbf1846ad, 0xbf4dc948 ),
	VERT( 0xc0134b30, 0xc1022526, 0x412b9acc ),
	NORM( 0xbe1cbe49, 0xbf12db25, 0xbf4dfe9e ),
	VERT( 0xc08b3f80, 0xc0e91e08, 0x412b9acc ),
	NORM( 0xbe975c63, 0xbf036f8c, 0xbf4e3c50 ),
	VERT( 0xc0c394c0, 0xc0bde434, 0x412b9acc ),
	NORM( 0xbed5bc66, 0xbed640b4, 0xbf4e7e18 ),
	VERT( 0xc0eece90, 0xc0858ef4, 0x412b9acc ),
	NORM( 0xbf02a762, 0xbe9745f8, 0xbf4ebf73 ),
	VERT( 0xc104fd6c, 0xc007ea10, 0x412b9acc ),
	NORM( 0xbf11783d, 0xbe1c918a, 0xbf4efbf5 ),
	VERT( 0xc1099fc0, 0x3d9c4300, 0x412b9acc ),
	NORM( 0xbf165dc4, 0xba0430fb, 0xbf4f2f93 ),
	VERT( 0xc104fd6c, 0x4011ae48, 0x412b9acc ),
	NORM( 0xbf110fd4, 0x3e1b190a, 0xbf4f56e0 ),
	VERT( 0xc0eece90, 0x408a710c, 0x412b9acc ),
	NORM( 0xbf01f28e, 0x3e95f07e, 0xbf4f6f4f ),
	VERT( 0xc0c394c0, 0x40c2c650, 0x412b9acc ),
	NORM( 0xbed41b0b, 0x3ed41a01, 0xbf4f773a ),
	VERT( 0xc08b3f80, 0x40ee0022, 0x412b9acc ),
	NORM( 0xbe95f345, 0x3f01f398, 0xbf4f6e28 ),
	VERT( 0xc0134b30, 0x41049633, 0x412b9acc ),
	NORM( 0xbe1b1e73, 0x3f11129d, 0xbf4f54ac ),
	VERT( 0xbe109b80, 0x403e9008, 0x412c602c ),
	NORM( 0x368fb573, 0x3f2bf251, 0xbf3da89a ),
	VERT( 0x3f20f700, 0x40381330, 0x412c602c ),
	NORM( 0x3e320400, 0x3f2616a6, 0xbf3da85c ),
	VERT( 0x3fac52f0, 0x40250dc8, 0x412c602c ),
	NORM( 0x3eabf2b7, 0x3f14e95b, 0xbf3da838 ),
	VERT( 0x3ffb30c0, 0x4006cbb8, 0x412c602c ),
	NORM( 0x3ef32b54, 0x3ef32be8, 0xbf3da866 ),
	VERT( 0x401bda70, 0x3fbeb9b0, 0x412c602c ),
	NORM( 0x3f14e8bc, 0x3eabf2ab, 0xbf3da8b7 ),
	VERT( 0x402edfd0, 0x3f45c460, 0x412c602c ),
	NORM( 0x3f2615ad, 0x3e32041d, 0xbf3da934 ),
	VERT( 0x40355cb0, 0x3b268000, 0x412c602c ),
	NORM( 0x3f2bf0e1, 0x3705512a, 0xbf3da9e8 ),
	VERT( 0x402edfd0, 0xbf447740, 0x412c602c ),
	NORM( 0x3f26146c, 0xbe31fe92, 0xbf3daaa0 ),
	VERT( 0x401bda70, 0xbfbe1320, 0x412c602c ),
	NORM( 0x3f14e68f, 0xbeabee08, 0xbf3dab79 ),
	VERT( 0x3ffb30c0, 0xc0067870, 0x412c602c ),
	NORM( 0x3ef32663, 0xbef324b3, 0xbf3dac4b ),
	VERT( 0x3fac52f0, 0xc024ba88, 0x412c602c ),
	NORM( 0x3eabee4f, 0xbf14e478, 0xbf3dad0d ),
	VERT( 0x3f20f700, 0xc037bfe8, 0x412c602c ),
	NORM( 0x3e31ff0b, 0xbf2610e5, 0xbf3dadb0 ),
	VERT( 0xbe109b80, 0xc03e3cc8, 0x412c602c ),
	NORM( 0x3697a113, 0xbf2bec1f, 0xbf3dae38 ),
	VERT( 0xbf6944c0, 0xc037bfe8, 0x412c602c ),
	NORM( 0xbe31fbdc, 0xbf261034, 0xbf3dae7a ),
	VERT( 0xbfd079e0, 0xc024ba88, 0x412c602c ),
	NORM( 0xbeabebbc, 0xbf14e33b, 0xbf3dae9b ),
	VERT( 0xc00fabd0, 0xc0067870, 0x412c602c ),
	NORM( 0xbef32282, 0xbef321e0, 0xbf3dae71 ),
	VERT( 0xc02dede0, 0xbfbe1320, 0x412c602c ),
	NORM( 0xbf14e3e7, 0xbeabeb9d, 0xbf3dae1b ),
	VERT( 0xc040f340, 0xbf447740, 0x412c602c ),
	NORM( 0xbf261146, 0xbe31fbc4, 0xbf3dad8c ),
	VERT( 0xc0477020, 0x3b268000, 0x412c602c ),
	NORM( 0xbf2bed90, 0x370946f6, 0xbf3dace9 ),
	VERT( 0xc040f340, 0x3f45c460, 0x412c602c ),
	NORM( 0xbf261290, 0x3e320173, 0xbf3dac15 ),
	VERT( 0xc02dede0, 0x3fbeb9b0, 0x412c602c ),
	NORM( 0xbf14e621, 0x3eabf057, 0xbf3dab4a ),
	VERT( 0xc00fabd0, 0x4006cbb8, 0x412c602c ),
	NORM( 0xbef32790, 0x3ef32932, 0xbf3daa79 ),
	VERT( 0xbfd079e0, 0x40250dc8, 0x412c602c ),
	NORM( 0xbeabf03d, 0x3f14e82c, 0xbf3da9b5 ),
	VERT( 0xbf6944c0, 0x40381330, 0x412c602c ),
	NORM( 0xbe3200f6, 0x3f2615fe, 0xbf3da91c ),
	VERT( 0xbe109b80, 0x403e9008, 0x40a3d7d8 ),
	NORM( 0xb9a22be6, 0x3f4cd888, 0x3f1989f3 ),
	VERT( 0x3f20f700, 0x40381330, 0x40a3d7d8 ),
	NORM( 0x3e53c9bb, 0x3f45ca1d, 0x3f19a967 ),
	VERT( 0x3fac52f0, 0x40250dc8, 0x40a3d7d8 ),
	NORM( 0x3eccae19, 0x3f314a26, 0x3f19b934 ),
	VERT( 0x3ffb30c0, 0x4006cbb8, 0x40a3d7d8 ),
	NORM( 0x3f10c396, 0x3f10bd03, 0x3f19b89f ),
	VERT( 0x401bda70, 0x3fbeb9b0, 0x40a3d7d8 ),
	NORM( 0x3f315a3b, 0x3eccab81, 0x3f19a784 ),
	VERT( 0x402edfd0, 0x3f45c460, 0x40a3d7d8 ),
	NORM( 0x3f45e53b, 0x3e53c450, 0x3f1986f0 ),
	VERT( 0x40355cb0, 0x3b268000, 0x40a3d7d8 ),
	NORM( 0x3f4cfd3b, 0xb9d9cd2c, 0x3f1958ef ),
	VERT( 0x402edfd0, 0xbf447740, 0x40a3d7d8 ),
	NORM( 0x3f4621cd, 0xbe54df9d, 0x3f192033 ),
	VERT( 0x401bda70, 0xbfbe1320, 0x40a3d7d8 ),
	NORM( 0x3f31c33a, 0xbecd92df, 0x3f18e076 ),
	VERT( 0x3ffb30c0, 0xc0067870, 0x40a3d7d8 ),
	NORM( 0x3f113cfa, 0xbf116e41, 0x3f189dd1 ),
	VERT( 0x3fac52f0, 0xc024ba88, 0x40a3d7d8 ),
	NORM( 0x3ecd8022, 0xbf323980, 0x3f185cd6 ),
	VERT( 0x3f20f700, 0xc037bfe8, 0x40a3d7d8 ),
	NORM( 0x3e54ba64, 0xbf46e7ab, 0x3f182216 ),
	VERT( 0xbe109b80, 0xc03e3cc8, 0x40a3d7d8 ),
	NORM( 0xb9ae5f5d, 0xbf4e07eb, 0x3f17f1e4 ),
	VERT( 0xbf6944c0, 0xc037bfe8, 0x40a3d7d8 ),
	NORM( 0xbe559b3c, 0xbf47177c, 0x3f17cfc2 ),
	VERT( 0xbfd079e0, 0xc024ba88, 0x40a3d7d8 ),
	NORM( 0xbece357e, 0xbf328c34, 0x3f17be6d ),
	VERT( 0xc00fabd0, 0xc0067870, 0x40a3d7d8 ),
	NORM( 0xbf11c673, 0xbf11cda4, 0x3f17bf1a ),
	VERT( 0xc02dede0, 0xbfbe1320, 0x40a3d7d8 ),
	NORM( 0xbf327aea, 0xbece383e, 0x3f17d1d4 ),
	VERT( 0xc040f340, 0xbf447740, 0x40a3d7d8 ),
	NORM( 0xbf46faa2, 0xbe55a090, 0x3f17f51a ),
	VERT( 0xc0477020, 0x3b268000, 0x40a3d7d8 ),
	NORM( 0xbf4de136, 0xb9e5fdd1, 0x3f182651 ),
	VERT( 0xc040f340, 0x3f45c460, 0x40a3d7d8 ),
	NORM( 0xbf46bb74, 0x3e547788, 0x3f1861a7 ),
	VERT( 0xc02dede0, 0x3fbeb9b0, 0x40a3d7d8 ),
	NORM( 0xbf320d91, 0x3ecd4852, 0x3f18a2f3 ),
	VERT( 0xc00fabd0, 0x4006cbb8, 0x40a3d7d8 ),
	NORM( 0xbf11483d, 0x3f111794, 0x3f18e588 ),
	VERT( 0xbfd079e0, 0x40250dc8, 0x40a3d7d8 ),
	NORM( 0xbecd5aeb, 0x3f31987e, 0x3f1924de ),
	VERT( 0xbf6944c0, 0x40381330, 0x40a3d7d8 ),
	NORM( 0xbe549cd5, 0x3f45f752, 0x3f195ce4 ),
	VERT( 0xbde85200, 0x4095b81c, 0x40906824 ),
	NORM( 0x3a06c75b, 0x3ec15956, 0x3f6d0b5b ),
	VERT( 0x3f8b2c00, 0x4090a926, 0x40906824 ),
	NORM( 0x3dca37db, 0x3ebb16ef, 0x3f6cf3cf ),
	VERT( 0x400d31d8, 0x4081d478, 0x40906824 ),
	NORM( 0x3e43bfbf, 0x3ea873a8, 0x3f6cbe27 ),
	VERT( 0x404aafd8, 0x405479c0, 0x40906824 ),
	NORM( 0x3e8b4c76, 0x3e8a6676, 0x3f6c6c8c ),
	VERT( 0x4079df18, 0x4016fbd0, 0x40906824 ),
	NORM( 0x3eac1e7e, 0x3e45207e, 0x3f6c02bf ),
	VERT( 0x408bc430, 0x3f9ebfd0, 0x40906824 ),
	NORM( 0x3ec1fd77, 0x3dcceaf4, 0x3f6b864d ),
	VERT( 0x4090d32c, 0x3d21d600, 0x40906824 ),
	NORM( 0x3ecb1c1b, 0xbab3221b, 0x3f6afea1 ),
	VERT( 0x408bc430, 0xbf94a260, 0x40906824 ),
	NORM( 0x3ec66aca, 0xbdd73dd9, 0x3f6a74d2 ),
	VERT( 0x4079df18, 0xc011ed18, 0x40906824 ),
	NORM( 0x3eb3c805, 0xbe50bbee, 0x3f69f32c ),
	VERT( 0x404aafd8, 0xc04f6b10, 0x40906824 ),
	NORM( 0x3e942353, 0xbe94972f, 0x3f69843f ),
	VERT( 0x400d31d8, 0xc07e9a50, 0x40906824 ),
	NORM( 0x3e530d42, 0xbeb700da, 0x3f6931b5 ),
	VERT( 0x3f8b2c00, 0xc08e21d0, 0x40906824 ),
	NORM( 0x3ddbf219, 0xbecccc60, 0x3f69030a ),
	VERT( 0xbde85200, 0xc09330cc, 0x40906824 ),
	NORM( 0x3a23c8ee, 0xbed42a04, 0x3f68fc78 ),
	VERT( 0xbfa83640, 0xc08e21d0, 0x40906824 ),
	NORM( 0xbdd918e5, 0xbecc80c9, 0x3f691e51 ),
	VERT( 0xc01bb710, 0xc07e9a50, 0x40906824 ),
	NORM( 0xbe513ea1, 0xbeb67f87, 0x3f696514 ),
	VERT( 0xc0593500, 0xc04f6b10, 0x40906824 ),
	NORM( 0xbe92fd34, 0xbe94044c, 0x3f69c9fe ),
	VERT( 0xc0843218, 0xc011ed18, 0x40906824 ),
	NORM( 0xbeb269ed, 0xbe4fc006, 0x3f6a4422 ),
	VERT( 0xc09306c0, 0xbf94a260, 0x40906824 ),
	NORM( 0xbec4ed05, 0xbdd60d57, 0x3f6ac996 ),
	VERT( 0xc09815c0, 0x3d21d600, 0x40906824 ),
	NORM( 0xbec99f69, 0xbaa4b831, 0x3f6b508b ),
	VERT( 0xc09306c0, 0x3f9ebfd0, 0x40906824 ),
	NORM( 0xbec0a09c, 0x3dcc4540, 0x3f6bd016 ),
	VERT( 0xc0843218, 0x4016fbd0, 0x40906824 ),
	NORM( 0xbeaaf64f, 0x3e448464, 0x3f6c40ac ),
	VERT( 0xc0593500, 0x405479c0, 0x40906824 ),
	NORM( 0xbe8a5fee, 0x3e8a0d57, 0x3f6c9c47 ),
	VERT( 0xc01bb710, 0x4081d478, 0x40906824 ),
	NORM( 0xbe4250b6, 0x3ea82856, 0x3f6cde6e ),
	VERT( 0xbfa83640, 0x4090a926, 0x40906824 ),
	NORM( 0xbdc7e9c9, 0x3ebaec44, 0x3f6d040d ),
	VERT( 0xbe191380, 0x40d6bec2, 0x4065ec10 ),
	NORM( 0xba8e9384, 0x3eed6ebd, 0x3f62cf21 ),
	VERT( 0x3fc4f8a0, 0x40cfa1ea, 0x4065ec10 ),
	NORM( 0x3df396ad, 0x3ee52b26, 0x3f62e3fc ),
	VERT( 0x40472cc8, 0x40bac768, 0x4065ec10 ),
	NORM( 0x3e6cfa10, 0x3ece082b, 0x3f62bf07 ),
	VERT( 0x408ed1c8, 0x40999b1e, 0x4065ec10 ),
	NORM( 0x3ea8d5cd, 0x3ea94018, 0x3f62617a ),
	VERT( 0x40affe14, 0x405cbf80, 0x4065ec10 ),
	NORM( 0x3ed0d0cf, 0x3e7181db, 0x3f61cf12 ),
	VERT( 0x40c4d888, 0x3ff01df0, 0x4065ec10 ),
	NORM( 0x3eebb0f8, 0x3dfcbc59, 0x3f610e6c ),
	VERT( 0x40cbf56c, 0x3e401700, 0x4065ec10 ),
	NORM( 0x3ef74907, 0xb97132c2, 0x3f602969 ),
	VERT( 0x40c4d888, 0xbfc01850, 0x4065ec10 ),
	NORM( 0x3ef234bb, 0xbe025a45, 0x3f5f2d5f ),
	VERT( 0x40affe14, 0xc044bca0, 0x4065ec10 ),
	NORM( 0x3edc1847, 0xbe7f1838, 0x3f5e2aef ),
	VERT( 0x408ed1c8, 0xc08d99b4, 0x4065ec10 ),
	NORM( 0x3eb5d87c, 0xbeb69b6b, 0x3f5d3517 ),
	VERT( 0x40472cc8, 0xc0aec604, 0x4065ec10 ),
	NORM( 0x3e81b9ba, 0xbee1f519, 0x3f5c5fb5 ),
	VERT( 0x3fc4f8a0, 0xc0c3a07c, 0x4065ec10 ),
	NORM( 0x3e06a802, 0xbefde8a8, 0x3f5bbd3b ),
	VERT( 0xbe191380, 0xc0cabd5c, 0x4065ec10 ),
	NORM( 0xbaad2ad0, 0xbf03f919, 0x3f5b5c46 ),
	VERT( 0xbfeb3da0, 0xc0c3a07c, 0x4065ec10 ),
	NORM( 0xbe09f611, 0xbeff145d, 0x3f5b4586 ),
	VERT( 0xc05a4f50, 0xc0aec604, 0x4065ec10 ),
	NORM( 0xbe843318, 0xbee3ff92, 0x3f5b7a9c ),
	VERT( 0xc0986310, 0xc08d99b4, 0x4065ec10 ),
	NORM( 0xbeb97318, 0xbeb8fd85, 0x3f5bf5f8 ),
	VERT( 0xc0b98f58, 0xc044bca0, 0x4065ec10 ),
	NORM( 0xbee0d60a, 0xbe81a6f6, 0x3f5cabd1 ),
	VERT( 0xc0ce69d0, 0xbfc01850, 0x4065ec10 ),
	NORM( 0xbef7c7cc, 0xbe04e7c4, 0x3f5d8c1e ),
	VERT( 0xc0d586b0, 0x3e401700, 0x4065ec10 ),
	NORM( 0xbefd2778, 0xb9f2a0ff, 0x3f5e8497 ),
	VERT( 0xc0ce69d0, 0x3ff01df0, 0x4065ec10 ),
	NORM( 0xbef13a0c, 0x3e0078c4, 0x3f5f82a3 ),
	VERT( 0xc0b98f58, 0x405cbf80, 0x4065ec10 ),
	NORM( 0xbed57950, 0x3e755837, 0x3f607515 ),
	VERT( 0xc0986310, 0x40999b1e, 0x4065ec10 ),
	NORM( 0xbeac4e4f, 0x3eab7fd7, 0x3f614d20 ),
	VERT( 0xc05a4f50, 0x40bac768, 0x4065ec10 ),
	NORM( 0xbe718e5c, 0x3ecffdb6, 0x3f61feec ),
	VERT( 0xbfeb3da0, 0x40cfa1ea, 0x4065ec10 ),
	NORM( 0xbdf94d70, 0x3ee64d5b, 0x3f62819d ),
	VERT( 0xbd930200, 0x410b07a4, 0x401b8008 ),
	NORM( 0x3a9683f4, 0x3f1fac82, 0x3f4819b4 ),
	VERT( 0x40064690, 0x41067590, 0x401b8008 ),
	NORM( 0x3e26b211, 0x3f1a3f22, 0x3f4804a7 ),
	VERT( 0x4083d73c, 0x40f21e18, 0x401b8008 ),
	NORM( 0x3ea0e51d, 0x3f0aa2d5, 0x3f479c38 ),
	VERT( 0x40bb670c, 0x40c77bca, 0x401b8008 ),
	NORM( 0x3ee46b96, 0x3ee36e04, 0x3f46e640 ),
	VERT( 0x40e6095c, 0x408fec08, 0x401b8008 ),
	NORM( 0x3f0cc634, 0x3ea1cc36, 0x3f45ec99 ),
	VERT( 0x41006b2a, 0x401e7010, 0x401b8008 ),
	NORM( 0x3f1e49fa, 0x3e287f48, 0x3f44bd21 ),
	VERT( 0x4104fd46, 0x3e9c8b80, 0x401b8008 ),
	NORM( 0x3f2560d9, 0xba56573e, 0x3f43698d ),
	VERT( 0x41006b2a, 0xbfee9a60, 0x401b8008 ),
	NORM( 0x3f2147ad, 0xbe2d5b71, 0x3f4206e9 ),
	VERT( 0x40e6095c, 0xc078b538, 0x401b8008 ),
	NORM( 0x3f11f7fb, 0xbea89756, 0x3f40aca2 ),
	VERT( 0x40bb670c, 0xc0b3ea64, 0x401b8008 ),
	NORM( 0x3ef0788b, 0xbef037eb, 0x3f3f7347 ),
	VERT( 0x4083d73c, 0xc0de8cb0, 0x401b8008 ),
	NORM( 0x3eab6786, 0xbf140e89, 0x3f3e729c ),
	VERT( 0x40064690, 0xc0f959b8, 0x401b8008 ),
	NORM( 0x3e32fdcf, 0xbf25eb6e, 0x3f3dbf7c ),
	VERT( 0xbd930200, 0xc1013ef4, 0x401b8008 ),
	NORM( 0x3ab0577d, 0xbf2c37b7, 0x3f3d6983 ),
	VERT( 0xc00f76d0, 0xc0f959b8, 0x401b8008 ),
	NORM( 0xbe30c1af, 0xbf266218, 0x3f3d790c ),
	VERT( 0xc0886f50, 0xc0de8cb0, 0x401b8008 ),
	NORM( 0xbeaafb37, 0xbf14d7c9, 0x3f3dede6 ),
	VERT( 0xc0bfff30, 0xc0b3ea64, 0x401b8008 ),
	NORM( 0xbef0f436, 0xbef1f841, 0x3f3ebeec ),
	VERT( 0xc0eaa178, 0xc078b538, 0x401b8008 ),
	NORM( 0xbf12a143, 0xbeaa06a8, 0x3f3fdaf5 ),
	VERT( 0xc102b738, 0xbfee9a60, 0x401b8008 ),
	NORM( 0xbf223560, 0xbe2ed8da, 0x3f412ae2 ),
	VERT( 0xc1074954, 0x3e9c8b80, 0x401b8008 ),
	NORM( 0xbf265b96, 0xba2286bb, 0x3f429447 ),
	VERT( 0xc102b738, 0x401e7010, 0x401b8008 ),
	NORM( 0xbf1f1af9, 0x3e2a3af3, 0x3f43fc4e ),
	VERT( 0xc0eaa178, 0x408fec08, 0x401b8008 ),
	NORM( 0xbf0d4573, 0x3ea3290f, 0x3f454a14 ),
	VERT( 0xc0bfff30, 0x40c77bca, 0x401b8008 ),
	NORM( 0xbee4a41a, 0x3ee4eb79, 0x3f466875 ),
	VERT( 0xc0886f50, 0x40f21e18, 0x401b8008 ),
	NORM( 0xbea065ff, 0x3f0b4215, 0x3f4746df ),
	VERT( 0xc00f76d0, 0x41067590, 0x401b8008 ),
	NORM( 0xbe24b3ad, 0x3f1a9914, 0x3f47d99e ),
	VERT( 0xbddf8e00, 0x41260fbe, 0x3f321540 ),
	NORM( 0xba9059e7, 0x3f6e77ef, 0xbeba3634 ),
	VERT( 0x401dfdc0, 0x4120a1af, 0x3f321540 ),
	NORM( 0x3e74c8ee, 0x3f664cf0, 0xbebb1c8e ),
	VERT( 0x409bdcd8, 0x4110b637, 0x3f321540 ),
	NORM( 0x3eecd95f, 0x3f4e78d3, 0xbebc7a42 ),
	VERT( 0x40dddebc, 0x40eec642, 0x3f321540 ),
	NORM( 0x3f277ba2, 0x3f28a328, 0xbebe3b02 ),
	VERT( 0x41084276, 0x40acc470, 0x3f321540 ),
	NORM( 0x3f4d066a, 0x3eeed2dc, 0xbec04411 ),
	VERT( 0x41182de4, 0x403fccd0, 0x3f321540 ),
	NORM( 0x3f6481d5, 0x3e78bf94, 0xbec274a4 ),
	VERT( 0x411d9bf4, 0x3ed69540, 0x3f321540 ),
	NORM( 0x3f6c5cc8, 0x3b63527b, 0xbec4a6f3 ),
	VERT( 0x41182de4, 0xc00a2780, 0x3f321540 ),
	NORM( 0x3f641936, 0xbe7136af, 0xbec6b39f ),
	VERT( 0x41084276, 0xc091f1c8, 0x3f321540 ),
	NORM( 0x3f4c51e7, 0xbeea787d, 0xbec873b0 ),
	VERT( 0x40dddebc, 0xc0d3f3ac, 0x3f321540 ),
	NORM( 0x3f26ac56, 0xbf26114e, 0xbec9c4a8 ),
	VERT( 0x409bdcd8, 0xc1034cec, 0x3f321540 ),
	NORM( 0x3eeb73f2, 0xbf4b8507, 0xbeca8bd1 ),
	VERT( 0x401dfdc0, 0xc113385e, 0x3f321540 ),
	NORM( 0x3e7329cd, 0xbf63151e, 0xbecab8be ),
	VERT( 0xbddf8e00, 0xc118a672, 0x3f321540 ),
	NORM( 0xba98d5a7, 0xbf6b2c6b, 0xbeca47c4 ),
	VERT( 0xc02bf6b0, 0xc113385e, 0x3f321540 ),
	NORM( 0xbe75b595, 0xbf633c84, 0xbec94253 ),
	VERT( 0xc0a2d948, 0xc1034cec, 0x3f321540 ),
	NORM( 0xbeecef8e, 0xbf4bc85b, 0xbec7bd64 ),
	VERT( 0xc0e4db38, 0xc0d3f3ac, 0x3f321540 ),
	NORM( 0xbf278cf8, 0xbf265d8b, 0xbec5d775 ),
	VERT( 0xc10bc0b4, 0xc091f1c8, 0x3f321540 ),
	NORM( 0xbf4d524c, 0xbeeafa23, 0xbec3b595 ),
	VERT( 0xc11bac24, 0xc00a2780, 0x3f321540 ),
	NORM( 0xbf652cde, 0xbe71ce7a, 0xbec17f4d ),
	VERT( 0xc1211a38, 0x3ed69540, 0x3f321540 ),
	NORM( 0xbf6d7251, 0x3b5f1415, 0xbebf5b64 ),
	VERT( 0xc11bac24, 0x403fccd0, 0x3f321540 ),
	NORM( 0xbf658822, 0x3e792ac2, 0xbebd6e03 ),
	VERT( 0xc10bc0b4, 0x40acc470, 0x3f321540 ),
	NORM( 0xbf4df138, 0x3eef31c3, 0xbebbd539 ),
	VERT( 0xc0e4db38, 0x40eec642, 0x3f321540 ),
	NORM( 0xbf2845e8, 0x3f28d90a, 0xbebaa940 ),
	VERT( 0xc0a2d948, 0x4110b637, 0x3f321540 ),
	NORM( 0xbeee3240, 0x3f4ea688, 0xbeb9fb09 ),
	VERT( 0xc02bf6b0, 0x4120a1af, 0x3f321540 ),
	NORM( 0xbe7727fd, 0x3f6666f4, 0xbeb9d3d2 ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_analogue_L[]
START
VList      vertex_FishCon1_analogue_L,
PList      strip_FishCon1_analogue_L,
Center      -0.109163F,  0.419104F,  7.858870F,
Radius       0.000000F,
END

CNKOBJECT  object_FishCon1_analogue_L[]
START
EvalFlags ( 0x00000026 ),
CNKModel   model_FishCon1_analogue_L,
OPosition  ( -120.500000F, -0.500000F, 22.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_FishCon1_analogue_L_Bone,
Sibling     object_FishCon1_A_B,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_FishCon1_Fish_stick[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 241, 241, 241 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 2902, _NB( UFO_0, 290 ),
	StripR(5),  1398, 1397, 1396, 1395, 1394, 
	StripR(6),  1402, 1452, 1403, 1398, 1410, 1412, 
	StripR(10),  1408, 1406, 1456, 1397, 1399, 1398, 1400, 1452, 1399, 1456, 
	StripR(5),  1406, 1416, 1397, 1413, 1395, 
	StripR(5),  1318, 1319, 1317, 1297, 1262, 
	StripL(10),  1303, 1320, 1275, 1321, 1319, 1320, 1318, 1303, 1301, 1270, 
	StripL(6),  1297, 1266, 1319, 1268, 1275, 1272, 
	StripL(3),  1301, 1298, 1318, 
	StripL(8),  1298, 1264, 1318, 1316, 1317, 1315, 1262, 1294, 
	StripR(6),  1368, 1367, 1365, 1366, 1322, 1323, 
	StripR(7),  1375, 1374, 1371, 1373, 1372, 1386, 1328, 
	StripR(6),  1379, 1376, 1381, 1370, 1471, 1477, 
	StripR(14),  1383, 1382, 1367, 1384, 1366, 1389, 1323, 1305, 1322, 1304, 
                   1276, 1339, 1346, 1247, 
	StripL(3),  1385, 1479, 1368, 
	StripL(3),  1387, 1373, 1386, 
	StripL(6),  1328, 1372, 1377, 1371, 1481, 1484, 
	StripL(7),  1370, 1369, 1376, 1390, 1391, 1435, 1434, 
	StripR(12),  1432, 1420, 1392, 1391, 1375, 1376, 1374, 1379, 1373, 1380, 
                   1387, 1442, 
	StripR(8),  1421, 1486, 1375, 1394, 1392, 1395, 1432, 1413, 
	StripL(4),  1421, 1484, 1375, 1371, 
	StripL(4),  1420, 1391, 1423, 1434, 
	StripR(10),  1435, 1439, 1390, 1383, 1369, 1367, 1370, 1368, 1477, 1385, 
	StripL(7),  1305, 1304, 1340, 1339, 1306, 1247, 1250, 
	StripL(6),  1312, 1342, 1341, 1311, 1310, 1324, 
	StripR(7),  1256, 1344, 1341, 1286, 1310, 1328, 1324, 
	StripL(4),  1341, 1256, 1312, 1258, 
	StripL(3),  1282, 1336, 1308, 
	StripL(4),  1280, 1340, 1307, 1306, 
	StripL(6),  1280, 1332, 1340, 1279, 1305, 1389, 
	StripL(3),  1311, 1325, 1324, 
	StripR(6),  1276, 1326, 1322, 1479, 1365, 1368, 
	StripR(5),  1308, 1309, 1313, 1254, 1289, 
	StripL(10),  1314, 1313, 1312, 1308, 1342, 1336, 1311, 1284, 1325, 1442, 
	StripL(8),  1258, 1294, 1312, 1315, 1314, 1316, 1259, 1265, 
	StripR(6),  1289, 1291, 1313, 1292, 1314, 1259, 
	StripL(3),  1254, 1252, 1309, 
	StripL(8),  1250, 1282, 1306, 1308, 1307, 1309, 1280, 1252, 
	StripL(6),  1486, 1393, 1418, 1396, 1412, 1398, 
	StripL(4),  2, 439, 590, 5, 
	StripL(6),  518, 436, 591, 2, 587, 590, 
	StripL(4),  515, 468, 440, 539, 
	StripL(36),  440, 520, 515, 443, 470, 408, 445, 410, 446, 413, 
                   449, 415, 451, 417, 452, 419, 454, 421, 456, 423, 
                   565, 425, 622, 427, 620, 429, 618, 430, 615, 433, 
                   616, 434, 600, 518, 599, 591, 
	StripR(6),  463, 466, 0, 539, 534, 440, 
	StripR(50),  1178, 1152, 1180, 1082, 1181, 1084, 1183, 1154, 1186, 1156, 
                   1212, 1159, 1187, 1160, 1190, 1086, 1192, 1162, 1214, 1088, 
                   1215, 1164, 1194, 1165, 1196, 1168, 1197, 1169, 1199, 1172, 
                   1202, 1114, 1204, 1117, 1206, 1118, 1218, 1173, 1219, 1120, 
                   1208, 1123, 1221, 1109, 1210, 1150, 1175, 1080, 1178, 1152, 
                   
	StripR(50),  1223, 1177, 1224, 1179, 1225, 1182, 1226, 1184, 1227, 1185, 
                   1228, 1211, 1229, 1188, 1230, 1189, 1231, 1191, 1232, 1213, 
                   1233, 1216, 1234, 1193, 1235, 1195, 1236, 1198, 1237, 1200, 
                   1238, 1201, 1239, 1203, 1240, 1205, 1241, 1217, 1242, 1220, 
                   1243, 1207, 1244, 1222, 1245, 1209, 1246, 1176, 1223, 1177, 
                   
	StripL(3),  1131, 1126, 1133, 
	StripL(4),  1119, 1128, 1116, 1125, 
	StripL(3),  1093, 1103, 1101, 
	StripR(14),  1124, 1116, 1134, 1115, 1136, 1171, 1137, 1170, 1111, 1167, 
                   1110, 1166, 1098, 1096, 
	StripL(6),  1129, 1119, 1139, 1174, 1106, 1121, 
	StripL(4),  1166, 1096, 1163, 1113, 
	StripL(3),  1151, 1112, 1092, 
	StripL(11),  1092, 1095, 1151, 1107, 1108, 1105, 1122, 1102, 1121, 1140, 
                   1106, 
	StripL(11),  1155, 1062, 1083, 1058, 1081, 1054, 1153, 1057, 1079, 1053, 
                   1051, 
	StripR(17),  1062, 1060, 1155, 1065, 1157, 1066, 1158, 1069, 1161, 1071, 
                   1085, 1072, 1087, 1074, 1089, 1077, 1078, 
	StripL(4),  1127, 519, 1132, 1135, 
	StripR(6),  1138, 1130, 442, 1127, 521, 519, 
	StripR(5),  1138, 442, 1135, 435, 519, 
	StripL(4),  1097, 1099, 435, 1091, 
	StripL(6),  1104, 1094, 442, 1090, 409, 411, 
	StripR(5),  1104, 1100, 442, 1141, 1091, 
	StripL(6),  1061, 414, 1063, 412, 1059, 1055, 
	StripL(6),  1055, 412, 1056, 411, 1052, 1049, 
	StripR(5),  1050, 431, 1097, 432, 435, 
	StripR(6),  1073, 428, 1075, 431, 1076, 1050, 
	StripR(9),  1073, 1070, 428, 1068, 426, 1067, 414, 1064, 1061, 
	StripL(3),  411, 1090, 1049, 
	StripL(4),  416, 422, 418, 420, 
	StripL(5),  414, 426, 416, 424, 422, 
	StripR(5),  820, 821, 741, 753, 809, 
	StripL(10),  741, 808, 820, 809, 821, 753, 830, 777, 823, 801, 
	StripL(6),  741, 820, 765, 827, 789, 826, 
	StripL(6),  753, 809, 777, 814, 801, 818, 
	StripL(7),  789, 815, 765, 812, 741, 808, 809, 
	StripL(6),  1467, 458, 707, 708, 653, 680, 
	StripL(12),  592, 588, 711, 709, 658, 710, 655, 720, 676, 707, 
                   652, 653, 
	StripL(3),  660, 711, 658, 
	StripL(5),  660, 662, 711, 712, 598, 
	StripL(3),  592, 711, 598, 
	StripL(8),  1467, 707, 4, 720, 589, 710, 588, 709, 
	StripL(12),  458, 460, 708, 722, 680, 734, 704, 724, 683, 723, 
                   684, 686, 
	StripL(7),  540, 467, 723, 725, 686, 727, 690, 
	StripL(4),  725, 467, 727, 516, 
	StripL(8),  722, 460, 734, 464, 724, 465, 723, 540, 
	StripL(3),  1462, 1489, 1464, 
	StripR(5),  1464, 459, 1489, 1350, 1351, 
	StripR(6),  1429, 1428, 1426, 1427, 1414, 1431, 
	StripR(13),  1419, 1431, 1430, 1427, 1469, 1428, 1494, 1429, 1460, 1426, 
                   1425, 1405, 1407, 
	StripL(5),  1419, 1424, 1430, 1433, 1436, 
	StripL(7),  1436, 1438, 1437, 1451, 1450, 1449, 1448, 
	StripR(5),  1440, 1445, 1444, 1470, 1472, 
	StripL(3),  1440, 1443, 1444, 
	StripL(5),  1446, 1388, 1447, 1278, 1331, 
	StripL(4),  1414, 1426, 1415, 1405, 
	StripL(5),  1407, 1425, 1455, 1457, 1453, 
	StripL(8),  1459, 1437, 1458, 1450, 1461, 1448, 1463, 1490, 
	StripL(8),  1425, 519, 1457, 1454, 1453, 1364, 1401, 1404, 
	StripL(8),  1425, 1460, 519, 1494, 437, 1493, 3, 438, 
	StripL(4),  1465, 1461, 1464, 1463, 
	StripL(13),  1465, 1466, 1461, 1468, 1458, 1495, 1491, 1492, 1459, 1469, 
                   1437, 1430, 1436, 
	StripL(7),  1327, 1478, 1443, 1475, 1444, 1476, 1472, 
	StripL(4),  1482, 1483, 1480, 1422, 
	StripL(3),  1329, 1378, 1485, 
	StripL(7),  1378, 1482, 1485, 1480, 1363, 1422, 1487, 
	StripR(6),  1487, 1363, 1417, 1362, 1411, 1409, 
	StripL(3),  1491, 1459, 1458, 
	StripR(9),  1466, 1468, 6, 1495, 438, 1492, 1493, 1469, 1494, 
	StripL(4),  1273, 1269, 1338, 1267, 
	StripL(13),  1293, 1260, 1359, 1360, 533, 526, 527, 522, 528, 1361, 
                   1356, 1300, 1271, 
	StripR(5),  1293, 1290, 1359, 1288, 1253, 
	StripL(3),  1281, 1251, 1354, 
	StripL(11),  1333, 1281, 1353, 1354, 523, 525, 524, 531, 530, 1, 
                   462, 
	StripL(4),  1263, 1299, 1361, 1300, 
	StripL(6),  1260, 1263, 1360, 1361, 526, 522, 
	StripL(12),  1271, 1302, 1356, 1355, 521, 1337, 519, 1473, 1454, 1474, 
                   1364, 1488, 
	StripL(4),  1337, 1355, 1274, 1302, 
	StripL(10),  1357, 1350, 1358, 1352, 1331, 1490, 1447, 1448, 1446, 1449, 
	StripR(7),  1357, 461, 1358, 529, 523, 530, 524, 
	StripL(6),  523, 1358, 1353, 1331, 1333, 1278, 
	StripL(3),  525, 1354, 533, 
	StripR(5),  533, 1359, 1354, 1253, 1251, 
	StripL(3),  1249, 1334, 1283, 
	StripR(7),  1283, 1335, 1334, 1285, 1443, 1441, 1440, 
	StripR(6),  1473, 1474, 1337, 1338, 1274, 1273, 
	StripL(7),  1249, 1248, 1334, 1345, 1443, 1277, 1327, 
	StripR(12),  1255, 1257, 1347, 1348, 1485, 1330, 1363, 1488, 1362, 1364, 
                   1409, 1404, 
	StripR(6),  1329, 1287, 1485, 1343, 1347, 1255, 
	StripR(7),  1257, 1295, 1348, 1261, 1349, 1296, 1267, 
	StripL(4),  1349, 1348, 1488, 1330, 
	StripR(5),  1474, 1488, 1338, 1349, 1267, 
	StripL(5),  441, 535, 532, 1, 531, 
	StripL(7),  521, 441, 527, 532, 533, 531, 525, 
	StripL(4),  527, 528, 521, 1356, 
	StripL(4),  530, 462, 529, 461, 
	StripL(3),  199, 250, 200, 
	StripL(3),  261, 211, 210, 
	StripL(4),  190, 214, 191, 215, 
	StripR(13),  214, 213, 190, 189, 166, 165, 914, 164, 911, 163, 
                   887, 407, 876, 
	StripL(17),  238, 239, 263, 240, 264, 241, 265, 242, 266, 243, 
                   267, 244, 268, 245, 269, 246, 270, 
	StripR(8),  248, 247, 272, 271, 294, 293, 305, 304, 
	StripR(16),  220, 229, 221, 230, 222, 231, 223, 232, 224, 233, 
                   225, 234, 226, 235, 227, 236, 
	StripL(15),  227, 228, 236, 237, 246, 247, 270, 271, 292, 293, 
                   303, 304, 282, 305, 283, 
	StripR(16),  229, 239, 230, 240, 231, 241, 232, 242, 233, 243, 
                   234, 244, 235, 245, 236, 246, 
	StripL(5),  937, 936, 831, 833, 867, 
	StripR(6),  839, 950, 834, 943, 835, 942, 
	StripL(6),  867, 865, 831, 838, 937, 947, 
	StripL(3),  865, 877, 838, 
	StripL(6),  839, 883, 834, 872, 835, 874, 
	StripL(3),  869, 405, 866, 
	StripR(7),  866, 326, 405, 308, 368, 306, 371, 
	StripL(7),  875, 327, 406, 311, 373, 310, 376, 
	StripL(8),  875, 871, 327, 366, 311, 337, 310, 334, 
	StripR(7),  866, 880, 326, 365, 308, 332, 329, 
	StripL(3),  882, 366, 871, 
	StripL(3),  306, 329, 308, 
	StripL(3),  934, 938, 399, 
	StripR(5),  399, 323, 938, 359, 948, 
	StripL(3),  952, 944, 362, 
	StripR(5),  362, 325, 944, 402, 940, 
	StripL(9),  832, 935, 841, 953, 864, 1000, 863, 998, 995, 
	StripR(26),  837, 945, 843, 957, 845, 962, 846, 964, 847, 966, 
                   848, 967, 849, 969, 850, 971, 851, 973, 852, 975, 
                   853, 977, 844, 959, 840, 951, 
	StripL(16),  863, 995, 862, 993, 861, 992, 860, 989, 859, 988, 
                   858, 986, 857, 984, 856, 981, 
	StripR(8),  873, 836, 888, 842, 912, 854, 913, 855, 
	StripL(26),  837, 878, 843, 889, 845, 893, 846, 896, 847, 898, 
                   848, 900, 849, 901, 850, 904, 851, 906, 852, 907, 
                   853, 910, 844, 891, 840, 884, 
	StripR(11),  916, 913, 856, 855, 981, 854, 979, 842, 956, 836, 
                   941, 
	StripL(7),  863, 932, 864, 886, 841, 868, 832, 
	StripR(17),  932, 930, 863, 927, 862, 926, 861, 923, 860, 922, 
                   859, 920, 858, 918, 857, 916, 856, 
	StripL(30),  933, 400, 127, 103, 150, 126, 149, 125, 148, 124, 
                   147, 123, 146, 122, 145, 121, 144, 120, 143, 119, 
                   142, 118, 141, 117, 140, 116, 139, 115, 396, 393, 
                   
	StripL(6),  933, 127, 954, 150, 999, 149, 
	StripR(9),  946, 360, 128, 355, 104, 351, 80, 346, 56, 
	StripR(23),  946, 128, 958, 129, 961, 130, 963, 131, 965, 132, 
                   968, 133, 970, 134, 972, 135, 974, 136, 976, 137, 
                   978, 138, 960, 
	StripR(20),  140, 141, 982, 142, 983, 143, 985, 144, 987, 145, 
                   990, 146, 991, 147, 994, 148, 996, 149, 997, 999, 
                   
	StripL(7),  982, 140, 980, 139, 955, 403, 939, 
	StripL(9),  404, 870, 151, 885, 174, 931, 173, 929, 928, 
	StripL(8),  890, 879, 152, 364, 176, 331, 200, 330, 
	StripR(16),  152, 890, 153, 894, 154, 895, 155, 897, 156, 899, 
                   157, 902, 158, 903, 159, 905, 
	StripL(23),  908, 905, 160, 159, 183, 182, 206, 205, 256, 255, 
                   278, 254, 277, 253, 276, 252, 275, 251, 274, 273, 
                   296, 295, 284, 
	StripL(12),  909, 908, 161, 160, 184, 183, 207, 206, 257, 256, 
                   279, 278, 
	StripL(16),  914, 166, 915, 167, 917, 168, 919, 169, 921, 170, 
                   924, 171, 925, 172, 928, 173, 
	StripL(3),  335, 375, 309, 
	StripL(3),  328, 307, 370, 
	StripR(5),  380, 313, 378, 312, 387, 
	StripR(12),  315, 384, 314, 382, 317, 389, 319, 392, 321, 397, 
                   324, 401, 
	StripR(9),  312, 316, 387, 318, 391, 320, 395, 322, 398, 
	StripL(12),  341, 313, 339, 312, 347, 316, 350, 318, 354, 320, 
                   358, 322, 
	StripL(12),  315, 345, 314, 342, 317, 349, 319, 352, 321, 357, 
                   324, 361, 
	StripL(3),  377, 211, 374, 
	StripR(29),  385, 19, 43, 20, 44, 21, 45, 22, 46, 23, 
                   47, 24, 48, 25, 49, 26, 50, 27, 51, 28, 
                   52, 29, 53, 30, 54, 7, 31, 381, 379, 
	StripL(3),  386, 379, 31, 
	StripL(30),  390, 386, 55, 31, 78, 54, 77, 53, 76, 52, 
                   75, 51, 74, 50, 73, 49, 72, 48, 71, 47, 
                   70, 46, 69, 45, 68, 44, 67, 43, 383, 385, 
                   
	StripL(30),  394, 390, 79, 55, 102, 78, 101, 77, 100, 76, 
                   99, 75, 98, 74, 97, 73, 96, 72, 95, 71, 
                   94, 70, 93, 69, 92, 68, 91, 67, 388, 383, 
                   
	StripL(30),  400, 394, 103, 79, 126, 102, 125, 101, 124, 100, 
                   123, 99, 122, 98, 121, 97, 120, 96, 119, 95, 
                   118, 94, 117, 93, 116, 92, 115, 91, 393, 388, 
                   
	StripL(3),  396, 403, 139, 
	StripR(7),  404, 369, 151, 175, 198, 219, 218, 
	StripL(8),  210, 333, 186, 336, 162, 367, 892, 881, 
	StripL(3),  344, 18, 343, 
	StripL(26),  348, 343, 42, 18, 41, 17, 40, 16, 39, 15, 
                   38, 14, 37, 13, 36, 12, 35, 11, 34, 10, 
                   33, 9, 32, 8, 338, 340, 
	StripL(26),  353, 348, 66, 42, 65, 41, 64, 40, 63, 39, 
                   62, 38, 61, 37, 60, 36, 59, 35, 58, 34, 
                   57, 33, 56, 32, 346, 338, 
	StripL(24),  356, 353, 90, 66, 89, 65, 88, 64, 87, 63, 
                   86, 62, 85, 61, 84, 60, 83, 59, 82, 58, 
                   81, 57, 80, 56, 
	StripL(24),  363, 356, 114, 90, 113, 89, 112, 88, 111, 87, 
                   110, 86, 109, 85, 108, 84, 107, 83, 106, 82, 
                   105, 81, 104, 80, 
	StripL(17),  274, 296, 275, 297, 276, 298, 277, 299, 278, 300, 
                   279, 301, 280, 302, 281, 303, 282, 
	StripR(18),  303, 292, 302, 291, 301, 290, 300, 289, 299, 288, 
                   298, 287, 297, 286, 296, 285, 284, 262, 
	StripR(18),  292, 270, 291, 269, 290, 268, 289, 267, 288, 266, 
                   287, 265, 286, 264, 285, 263, 262, 238, 
	StripL(12),  279, 280, 257, 258, 207, 208, 184, 185, 161, 162, 
                   909, 892, 
	StripL(4),  283, 259, 282, 281, 
	StripL(4),  200, 249, 251, 273, 
	StripR(13),  176, 177, 200, 201, 251, 202, 252, 203, 253, 204, 
                   254, 205, 255, 
	StripR(11),  182, 205, 181, 204, 180, 203, 179, 202, 178, 201, 
                   177, 
	StripL(6),  186, 209, 210, 259, 260, 283, 
	StripL(8),  213, 189, 212, 188, 211, 187, 374, 407, 
	StripR(7),  198, 218, 197, 217, 196, 216, 195, 
	StripL(5),  219, 199, 175, 372, 369, 
	StripL(25),  104, 128, 105, 129, 106, 130, 107, 131, 108, 132, 
                   109, 133, 110, 134, 111, 135, 112, 136, 113, 137, 
                   114, 138, 363, 960, 949, 
	StripL(15),  152, 176, 153, 177, 154, 178, 155, 179, 156, 180, 
                   157, 181, 158, 182, 159, 
	StripR(9),  162, 186, 185, 209, 208, 259, 258, 281, 280, 
	StripL(7),  189, 165, 188, 164, 187, 163, 407, 
	StripL(19),  166, 190, 167, 191, 168, 192, 169, 193, 170, 194, 
                   171, 195, 172, 196, 173, 197, 174, 198, 151, 
	StripL(6),  475, 476, 480, 562, 479, 478, 
	StripL(3),  562, 477, 478, 
	StripR(24),  1026, 1002, 1025, 1001, 1048, 1024, 1047, 1023, 1046, 1022, 
                   1045, 1021, 1044, 1020, 1043, 1019, 1042, 1018, 1041, 1017, 
                   1040, 1016, 1039, 1015, 
	StripR(24),  1003, 1027, 1004, 1028, 1005, 1029, 1006, 1030, 1007, 1031, 
                   1008, 1032, 1009, 1033, 1010, 1034, 1011, 1035, 1012, 1036, 
                   1013, 1037, 1014, 1038, 
	StripL(28),  1014, 1015, 1038, 1039, 1037, 1040, 1036, 1041, 1035, 1042, 
                   1034, 1043, 1033, 1044, 1032, 1045, 1031, 1046, 1030, 1047, 
                   1029, 1048, 1028, 1025, 1027, 1026, 1003, 1002, 
	StripR(9),  819, 828, 742, 766, 743, 767, 744, 768, 745, 
	StripL(6),  752, 822, 776, 829, 800, 824, 
	StripR(7),  828, 825, 766, 790, 767, 791, 768, 
	StripL(6),  740, 807, 764, 811, 788, 816, 
	StripR(13),  763, 739, 762, 738, 761, 737, 760, 736, 759, 735, 
                   782, 758, 781, 
	StripL(13),  769, 746, 770, 747, 771, 748, 772, 749, 773, 750, 
                   774, 751, 775, 
	StripL(9),  757, 780, 756, 779, 755, 778, 754, 813, 810, 
	StripL(21),  788, 787, 764, 763, 740, 739, 807, 738, 810, 737, 
                   754, 736, 755, 735, 756, 758, 757, 781, 780, 804, 
                   803, 
	StripR(21),  791, 792, 768, 769, 745, 746, 744, 747, 743, 748, 
                   742, 749, 819, 750, 822, 751, 752, 775, 776, 799, 
                   800, 
	StripR(15),  799, 775, 798, 774, 797, 773, 796, 772, 795, 771, 
                   794, 770, 793, 769, 792, 
	StripL(7),  780, 803, 779, 802, 778, 817, 813, 
	StripL(15),  804, 781, 805, 782, 806, 759, 783, 760, 784, 761, 
                   785, 762, 786, 763, 787, 
	StripR(11),  705, 648, 706, 649, 719, 674, 718, 673, 717, 671, 
                   666, 
	StripL(3),  597, 713, 601, 
	StripL(3),  666, 715, 716, 
	StripL(8),  614, 617, 716, 601, 714, 713, 665, 663, 
	StripR(5),  716, 614, 715, 717, 666, 
	StripL(5),  714, 665, 716, 668, 666, 
	StripR(14),  678, 648, 721, 705, 457, 706, 566, 719, 623, 718, 
                   621, 717, 619, 614, 
	StripR(5),  689, 691, 728, 696, 729, 
	StripL(4),  689, 726, 728, 517, 
	StripL(8),  517, 469, 728, 444, 729, 730, 696, 693, 
	StripL(8),  444, 447, 730, 448, 731, 732, 697, 700, 
	StripL(4),  731, 697, 730, 693, 
	StripR(8),  448, 732, 450, 733, 453, 721, 455, 457, 
	StripR(6),  732, 700, 733, 702, 721, 678, 
	StripL(4),  657, 656, 586, 613, 
	StripR(12),  657, 582, 583, 581, 584, 571, 585, 570, 612, 574, 
                   563, 557, 
	StripL(6),  659, 595, 661, 594, 664, 669, 
	StripL(11),  605, 607, 670, 609, 672, 611, 675, 558, 650, 561, 
                   647, 
	StripL(6),  670, 667, 605, 669, 602, 594, 
	StripL(4),  681, 494, 654, 651, 
	StripR(7),  537, 685, 497, 682, 496, 703, 495, 
	StripR(13),  687, 685, 498, 537, 510, 538, 536, 509, 486, 508, 
                   485, 507, 484, 
	StripL(8),  687, 688, 512, 692, 499, 695, 488, 489, 
	StripL(4),  698, 489, 694, 695, 
	StripL(5),  699, 491, 698, 490, 489, 
	StripL(27),  699, 701, 492, 493, 505, 560, 562, 559, 477, 610, 
                   478, 608, 479, 606, 480, 604, 481, 603, 482, 593, 
                   579, 596, 581, 595, 582, 659, 657, 
	StripL(15),  699, 492, 491, 504, 503, 475, 474, 480, 473, 481, 
                   472, 482, 471, 579, 514, 
	StripL(3),  679, 493, 701, 
	StripR(7),  645, 634, 641, 633, 643, 638, 575, 
	StripL(3),  641, 645, 640, 
	StripL(4),  646, 554, 644, 553, 
	StripL(4),  639, 576, 642, 577, 
	StripR(6),  646, 634, 644, 645, 553, 640, 
	StripR(18),  514, 639, 579, 576, 578, 577, 571, 568, 570, 569, 
                   574, 572, 557, 556, 552, 555, 545, 630, 
	StripL(9),  629, 544, 628, 543, 627, 542, 626, 541, 625, 
	StripR(8),  630, 555, 631, 573, 632, 567, 624, 580, 
	StripL(4),  635, 636, 546, 547, 
	StripR(9),  577, 580, 568, 567, 569, 573, 572, 555, 556, 
	StripL(3),  584, 583, 585, 
	StripR(21),  596, 595, 593, 594, 603, 602, 604, 605, 606, 607, 
                   608, 609, 610, 611, 559, 558, 560, 561, 493, 647, 
                   679, 
	StripL(4),  579, 581, 578, 571, 
	StripR(8),  563, 564, 612, 613, 585, 586, 583, 657, 
	StripL(12),  484, 552, 483, 557, 506, 563, 494, 564, 651, 613, 
                   677, 656, 
	StripL(4),  630, 624, 631, 632, 
	StripL(5),  625, 629, 626, 628, 627, 
	StripR(5),  562, 505, 476, 504, 475, 
	StripR(8),  483, 484, 506, 507, 494, 495, 681, 703, 
	StripR(8),  551, 544, 550, 543, 549, 542, 548, 541, 
	StripR(38),  548, 547, 554, 546, 646, 635, 634, 636, 633, 637, 
                   638, 580, 575, 577, 643, 642, 641, 639, 640, 514, 
                   553, 487, 554, 536, 548, 486, 549, 485, 550, 484, 
                   551, 552, 544, 545, 629, 630, 625, 624, 
	StripR(7),  537, 497, 509, 496, 508, 495, 507, 
	StripL(3),  537, 538, 509, 
	StripL(3),  487, 536, 510, 
	StripL(4),  510, 498, 512, 687, 
	StripR(15),  487, 514, 510, 513, 512, 511, 499, 501, 488, 500, 
                   489, 502, 490, 503, 491, 
	StripR(11),  513, 514, 511, 471, 501, 472, 500, 473, 502, 474, 
                   503, 
	StripL(3),  505, 504, 492, 
	CnkM_D( FBS_SA|FBD_ISA ), 2,
	MDiff( 255, 128, 128, 192 ),
	CnkS( 0x0 ), 22, _NB( UFO_0, 3 ),
	StripL(3),  1148, 1144, 1146, 
	StripR(12),  1146, 1142, 1144, 1143, 1148, 1147, 1146, 1149, 1142, 1145, 
                   1143, 1147, 
	StripL(3),  1149, 1145, 1147, 
	CnkEnd()
END

VLIST      vertex_FishCon1_Fish_stick[]
START
	CnkV_VN(0x0, 8977),
	OffnbIdx(0, 1496),
	VERT( 0xc33e0101, 0x41cce95a, 0x412d98da ),
	NORM( 0xbe7abd54, 0x3f78315c, 0xbc2882f8 ),
	VERT( 0xc33e0101, 0x41cce95a, 0x412d98da ),
	NORM( 0xbedf752c, 0x3f2e7e73, 0x3f165918 ),
	VERT( 0xc33569b8, 0xc1e49452, 0x41698bc5 ),
	NORM( 0xbe6068dc, 0xbf79b4d1, 0x3cbe11cf ),
	VERT( 0xc33569b8, 0xc1e49452, 0x41698bc5 ),
	NORM( 0xbec4364b, 0xbf2e0df1, 0x3f200cff ),
	VERT( 0xc3483282, 0xc1be9d00, 0x40a8e290 ),
	NORM( 0xbea0314e, 0xbeb86b14, 0xbf60fc0d ),
	VERT( 0xc3483282, 0xc1be9d00, 0x40a8e290 ),
	NORM( 0xbe868a2a, 0xbf76f1f2, 0x3cabfa02 ),
	VERT( 0xc3483282, 0xc1be9d00, 0x40a8e290 ),
	NORM( 0xbf1f1f57, 0xbf19bbfc, 0x3f00c539 ),
	VERT( 0x4222ee60, 0xc0a0c61c, 0x40b34e06 ),
	NORM( 0x3f6d1563, 0xbeb62367, 0x3e009c90 ),
	VERT( 0x4222ee60, 0xc09e99d0, 0x4016d7d0 ),
	NORM( 0x3f6cb3c5, 0xbebf1955, 0xbd9b9c6a ),
	VERT( 0x4222ee60, 0xc0901f10, 0x3fa1dc3a ),
	NORM( 0x3f6c8359, 0xbea9af0d, 0xbe43ef7b ),
	VERT( 0x4222ee60, 0xc0722ce0, 0x3ea72812 ),
	NORM( 0x3f6c8359, 0xbe8a8bdd, 0xbe8a8bef ),
	VERT( 0x4222ee60, 0xc03623e0, 0xbec960ec ),
	NORM( 0x3f6c835c, 0xbe43ef3c, 0xbea9af0f ),
	VERT( 0x4222ee60, 0xbfe07440, 0xbf58865a ),
	NORM( 0x3f6c835a, 0xbdcad88c, 0xbebd4208 ),
	VERT( 0x4222ee60, 0xbf14ce80, 0xbf80045e ),
	NORM( 0x3f6c835a, 0xb4b67913, 0xbec3ef2a ),
	VERT( 0x4222ee60, 0x3f174c80, 0xbf58865a ),
	NORM( 0x3f6c835b, 0x3dcad8ef, 0xbebd41ff ),
	VERT( 0x4222ee60, 0x3fd77940, 0xbec960ec ),
	NORM( 0x3f6c8359, 0x3e43ef24, 0xbea9af24 ),
	VERT( 0x4222ee60, 0x4027c5e0, 0x3ea72812 ),
	NORM( 0x3f6c835e, 0x3e8a8bd8, 0xbe8a8bd5 ),
	VERT( 0x4222ee60, 0x4055d6e0, 0x3fa1dc3a ),
	NORM( 0x3f6c835d, 0x3ea9af1f, 0xbe43eef3 ),
	VERT( 0x4222ee60, 0x4072cc60, 0x4016d7d0 ),
	NORM( 0x3f6c7935, 0x3ebfa75a, 0xbda69175 ),
	VERT( 0x4222ee60, 0x4070cf10, 0x40b34e06 ),
	NORM( 0x3f6d6ab8, 0x3ebd46db, 0x3d696789 ),
	VERT( 0x4222ee60, 0x406d4478, 0x40ba65de ),
	NORM( 0x3f6ca4e1, 0x3eb501c0, 0x3e12ae80 ),
	VERT( 0x4222ee60, 0x4055d6e0, 0x40cf86f6 ),
	NORM( 0x3f68f8c7, 0x3e8cb087, 0x3e9ee4a5 ),
	VERT( 0x4222ee60, 0x4027c5e0, 0x40dcf3d0 ),
	NORM( 0x3f68c3ae, 0x3e56b022, 0x3eb8218c ),
	VERT( 0x4222ee60, 0x3fd77940, 0x40ee7478 ),
	NORM( 0x3f6bd870, 0x3e304f93, 0x3eb28cef ),
	VERT( 0x4222ee60, 0x3f174c80, 0x40fcef35 ),
	NORM( 0x3f6c835b, 0x3dcad8e8, 0x3ebd4201 ),
	VERT( 0x4222ee60, 0xbf14ce80, 0x4100efc0 ),
	NORM( 0x3f6c835a, 0xb4b67916, 0x3ec3ef2a ),
	VERT( 0x4222ee60, 0xbfe07440, 0x40fcef35 ),
	NORM( 0x3f6c835b, 0xbdcad882, 0x3ebd4208 ),
	VERT( 0x4222ee60, 0xc03623e0, 0x40ee7478 ),
	NORM( 0x3f6bd873, 0xbe304f9d, 0x3eb28cdc ),
	VERT( 0x4222ee60, 0xc0722ce0, 0x40dcf3d0 ),
	NORM( 0x3f68c3a9, 0xbe56b033, 0x3eb821a0 ),
	VERT( 0x4222ee60, 0xc0901f10, 0x40cf86f6 ),
	NORM( 0x3f68f8bd, 0xbe8cb061, 0x3e9ee500 ),
	VERT( 0x4222ee60, 0xc09bd5dc, 0x40ba65de ),
	NORM( 0x3f6abd37, 0xbeae2fb2, 0x3e557aa2 ),
	VERT( 0x421bf028, 0xc1154ce8, 0x40be5dd3 ),
	NORM( 0x3f5cfe8e, 0xbefebd1a, 0x3dae45e8 ),
	VERT( 0x421bf028, 0xc11087a8, 0x3fa1dc3a ),
	NORM( 0x3f5c6217, 0xbefe3a93, 0xbde39209 ),
	VERT( 0x421bf028, 0xc1028b38, 0xbf58865a ),
	NORM( 0x3f5c7f61, 0xbee1474e, 0xbe82109c ),
	VERT( 0x421bf028, 0xc0d89730, 0xc02a1c6a ),
	NORM( 0x3f5c7f61, 0xbeb7f077, 0xbeb7f06a ),
	VERT( 0x421bf028, 0xc09e99d0, 0xc0818d7e ),
	NORM( 0x3f5c7f62, 0xbe821097, 0xbee1474b ),
	VERT( 0x421bf028, 0xc03623e0, 0xc09d865b ),
	NORM( 0x3f5c7f61, 0xbe06a721, 0xbefb4402 ),
	VERT( 0x421bf028, 0xbf14ce80, 0xc0a710cb ),
	NORM( 0x3f5c7f61, 0xb4263f55, 0xbf02108e ),
	VERT( 0x421bf028, 0x3fd77940, 0xc09d865b ),
	NORM( 0x3f5c7f63, 0x3e06a727, 0xbefb43f9 ),
	VERT( 0x421bf028, 0x4072cc60, 0xc0818d7e ),
	NORM( 0x3f5c7f63, 0x3e821079, 0xbee14759 ),
	VERT( 0x421bf028, 0x40b363b0, 0xc02a1c6a ),
	NORM( 0x3f5c7f62, 0x3eb7f06d, 0xbeb7f073 ),
	VERT( 0x421bf028, 0x40dfe2f0, 0xbf58865a ),
	NORM( 0x3f5c7f62, 0x3ee1475b, 0xbe82107f ),
	VERT( 0x421bf028, 0x40fbdbd0, 0x3fa1dc3a ),
	NORM( 0x3f5c266e, 0x3efea24a, 0xbdeaa641 ),
	VERT( 0x421bf028, 0x4102b318, 0x40be5dd3 ),
	NORM( 0x3f5cddc5, 0x3f009542, 0x3d6d94bf ),
	VERT( 0x421bf028, 0x40fbdbd0, 0x40e2e29e ),
	NORM( 0x3f5ac1e9, 0x3ee803c4, 0x3e81f9fa ),
	VERT( 0x421bf028, 0x40dfe2f0, 0x40fcef35 ),
	NORM( 0x3f5b7583, 0x3ec3f9a8, 0x3eb051dc ),
	VERT( 0x421bf028, 0x40b363b0, 0x411b764f ),
	NORM( 0x3f5a63e3, 0x3ea9d05f, 0x3ece3a74 ),
	VERT( 0x421bf028, 0x4072cc60, 0x4131b5f4 ),
	NORM( 0x3f5c1ca1, 0x3e7b4264, 0x3ee544e4 ),
	VERT( 0x421bf028, 0x3fd77940, 0x413fb262 ),
	NORM( 0x3f5c7f64, 0x3e06a721, 0x3efb43f8 ),
	VERT( 0x421bf028, 0xbf14ce80, 0x4144779a ),
	NORM( 0x3f5c7f61, 0xb424cd40, 0x3f02108e ),
	VERT( 0x421bf028, 0xc03623e0, 0x413fb262 ),
	NORM( 0x3f5c7f62, 0xbe06a71c, 0x3efb4400 ),
	VERT( 0x421bf028, 0xc09e99d0, 0x4131b5f4 ),
	NORM( 0x3f5c1ca0, 0xbe7b429f, 0x3ee544d6 ),
	VERT( 0x421bf028, 0xc0d89730, 0x411b764f ),
	NORM( 0x3f5a63e3, 0xbea9d062, 0x3ece3a74 ),
	VERT( 0x421bf028, 0xc1028b38, 0x40fcef35 ),
	NORM( 0x3f5b757f, 0xbec3f99a, 0x3eb051fb ),
	VERT( 0x421bf028, 0xc11087a8, 0x40e2e29e ),
	NORM( 0x3f59197d, 0xbee38ab5, 0x3e93c875 ),
	VERT( 0x4210d056, 0xc14f4a48, 0x40be5dd3 ),
	NORM( 0x3f33c48e, 0xbf35c365, 0x3d57a627 ),
	VERT( 0x4210d056, 0xc1488b38, 0x3ea72812 ),
	NORM( 0x3f33a570, 0xbf31794f, 0xbe281b88 ),
	VERT( 0x4210d056, 0xc134c3b8, 0xc02a1c6a ),
	NORM( 0x3f33a3b9, 0xbf1df40c, 0xbeb66372 ),
	VERT( 0x4210d056, 0xc1154ce8, 0xc0a710cb ),
	NORM( 0x3f33a3b2, 0xbf00f7f1, 0xbf00f7dc ),
	VERT( 0x4210d056, 0xc0d89730, 0xc0e5fe82 ),
	NORM( 0x3f33a3b1, 0xbeb66385, 0xbf1df40f ),
	VERT( 0x4210d056, 0xc0722ce0, 0xc106c6c0 ),
	NORM( 0x3f33a3b4, 0xbe3cd293, 0xbf302c8e ),
	VERT( 0x4210d056, 0xbf14ce80, 0xc10d85cf ),
	NORM( 0x3f33a3b5, 0xb40e4a01, 0xbf366385 ),
	VERT( 0x4210d056, 0x4027c5e0, 0xc106c6c0 ),
	NORM( 0x3f33a3b5, 0x3e3cd296, 0xbf302c8d ),
	VERT( 0x4210d056, 0x40b363b0, 0xc0e5fe82 ),
	NORM( 0x3f33a3b3, 0x3eb66386, 0xbf1df40d ),
	VERT( 0x4210d056, 0x4102b318, 0xc0a710cb ),
	NORM( 0x3f33a3b3, 0x3f00f7e5, 0xbf00f7e5 ),
	VERT( 0x4210d056, 0x412229f8, 0xc02a1c6a ),
	NORM( 0x3f33a3b0, 0x3f1df40e, 0xbeb66390 ),
	VERT( 0x4210d056, 0x4135f178, 0x3ea72812 ),
	NORM( 0x3f334f1a, 0x3f31c0ea, 0xbe292314 ),
	VERT( 0x4210d056, 0x413cb088, 0x40be5dd3 ),
	NORM( 0x3f33c484, 0x3f35c371, 0x3d57a3f4 ),
	VERT( 0x4210d056, 0x4135f178, 0x41007396 ),
	NORM( 0x3f3211ed, 0x3f246b13, 0x3ea4d90a ),
	VERT( 0x4210d056, 0x412229f8, 0x411b764f ),
	NORM( 0x3f318dfb, 0x3f0e7369, 0x3eea3fb0 ),
	VERT( 0x4210d056, 0x4102b318, 0x4144779a ),
	NORM( 0x3f33a3b3, 0x3f00f7e5, 0x3f00f7e5 ),
	VERT( 0x4210d056, 0x40b363b0, 0x4163ee76 ),
	NORM( 0x3f33a3b4, 0x3eb66386, 0x3f1df40c ),
	VERT( 0x4210d056, 0x4027c5e0, 0x4177b5f5 ),
	NORM( 0x3f33a3b5, 0x3e3cd294, 0x3f302c8d ),
	VERT( 0x4210d056, 0xbf14ce80, 0x417e7504 ),
	NORM( 0x3f33a3b5, 0xb40e4a01, 0x3f366385 ),
	VERT( 0x4210d056, 0xc0722ce0, 0x4177b5f5 ),
	NORM( 0x3f33a3b4, 0xbe3cd291, 0x3f302c8d ),
	VERT( 0x4210d056, 0xc0d89730, 0x4163ee76 ),
	NORM( 0x3f33a3b2, 0xbeb66385, 0x3f1df40e ),
	VERT( 0x4210d056, 0xc1154ce8, 0x4144779a ),
	NORM( 0x3f33a3b2, 0xbf00f7f1, 0x3f00f7dc ),
	VERT( 0x4210d056, 0xc134c3b8, 0x411b764f ),
	NORM( 0x3f318e06, 0xbf0e7369, 0x3eea3f8f ),
	VERT( 0x4210d056, 0xc1488b38, 0x41007396 ),
	NORM( 0x3f3211f4, 0xbf246aff, 0x3ea4d93e ),
	VERT( 0x420250fc, 0xc17bc998, 0x40be5dd3 ),
	NORM( 0x3efde900, 0xbf5df91e, 0x3d418e92 ),
	VERT( 0x420250fc, 0xc1738668, 0xbec960ec ),
	NORM( 0x3efdf70a, 0xbf581222, 0xbe50ccd7 ),
	VERT( 0x420250fc, 0xc15b4ce8, 0xc0818d7e ),
	NORM( 0x3efd9f80, 0xbf40972d, 0xbede6272 ),
	VERT( 0x420250fc, 0xc134c3b8, 0xc0e5fe82 ),
	NORM( 0x3efd9f6d, 0xbf1d3fe4, 0xbf1d3fe8 ),
	VERT( 0x420250fc, 0xc1028b38, 0xc1198866 ),
	NORM( 0x3efd9f6b, 0xbede626f, 0xbf409735 ),
	VERT( 0x420250fc, 0xc0901f10, 0xc131c1e3 ),
	NORM( 0x3efd9f70, 0xbe663ac1, 0xbf56ce93 ),
	VERT( 0x420250fc, 0xbf14ce80, 0xc13a0519 ),
	NORM( 0x3efd9f70, 0xb3f4d972, 0xbf5e626f ),
	VERT( 0x420250fc, 0x4055d6e0, 0xc131c1e3 ),
	NORM( 0x3efd9f6c, 0x3e663a9d, 0xbf56ce97 ),
	VERT( 0x420250fc, 0x40dfe2f0, 0xc1198866 ),
	NORM( 0x3efd9f6f, 0x3ede6274, 0xbf409732 ),
	VERT( 0x420250fc, 0x412229f8, 0xc0e5fe82 ),
	NORM( 0x3efd9f71, 0x3f1d3feb, 0xbf1d3fdf ),
	VERT( 0x420250fc, 0x4148b318, 0xc0818d7e ),
	NORM( 0x3efd9f71, 0x3f409731, 0xbede6276 ),
	VERT( 0x420250fc, 0x4160ec98, 0xbec960ec ),
	NORM( 0x3efd1dcd, 0x3f5850a9, 0xbe50e01b ),
	VERT( 0x420250fc, 0x41692fc8, 0x40be5dd3 ),
	NORM( 0x3efde8e1, 0x3f5df927, 0x3d418eae ),
	VERT( 0x420250fc, 0x4160ec98, 0x410bf7de ),
	NORM( 0x3efc916f, 0x3f4dbdc4, 0x3eaa65e0 ),
	VERT( 0x420250fc, 0x4148b318, 0x4131b5f4 ),
	NORM( 0x3efb8f97, 0x3f3493b8, 0x3f02cb68 ),
	VERT( 0x420250fc, 0x412229f8, 0x4163ee76 ),
	NORM( 0x3efd9f72, 0x3f1d3feb, 0x3f1d3fdf ),
	VERT( 0x420250fc, 0x40dfe2f0, 0x41853bcd ),
	NORM( 0x3efd9f6f, 0x3ede6274, 0x3f409732 ),
	VERT( 0x420250fc, 0x4055d6e0, 0x4191588c ),
	NORM( 0x3efd9f69, 0x3e663aa1, 0x3f56ce97 ),
	VERT( 0x420250fc, 0xbf14ce80, 0x41957a27 ),
	NORM( 0x3efd9f6b, 0xb3f4d974, 0x3f5e6270 ),
	VERT( 0x420250fc, 0xc0901f10, 0x4191588c ),
	NORM( 0x3efd9f6f, 0xbe663ac4, 0x3f56ce93 ),
	VERT( 0x420250fc, 0xc1028b38, 0x41853bcd ),
	NORM( 0x3efd9f6c, 0xbede6270, 0x3f409735 ),
	VERT( 0x420250fc, 0xc134c3b8, 0x4163ee76 ),
	NORM( 0x3efd9f6f, 0xbf1d3fe3, 0x3f1d3fe8 ),
	VERT( 0x420250fc, 0xc15b4ce8, 0x4131b5f4 ),
	NORM( 0x3efb8fa6, 0xbf3493b5, 0x3f02cb66 ),
	VERT( 0x420250fc, 0xc1738668, 0x410bf7de ),
	NORM( 0x3efc9190, 0xbf4dbdbc, 0x3eaa65d7 ),
	VERT( 0x41e2de08, 0xc18be13c, 0x40be5dd3 ),
	NORM( 0x3e8351c9, 0xbf772a23, 0x3d3987a5 ),
	VERT( 0x41e2de08, 0xc18745a4, 0xbf58865a ),
	NORM( 0x3e836609, 0xbf70695f, 0xbe69fc9d ),
	VERT( 0x41e2de08, 0xc1738668, 0xc09d865b ),
	NORM( 0x3e8325a9, 0xbf564e4f, 0xbef775ba ),
	VERT( 0x41e2de08, 0xc1488b38, 0xc106c6c0 ),
	NORM( 0x3e8325b4, 0xbf2efae0, 0xbf2efaf5 ),
	VERT( 0x41e2de08, 0xc11087a8, 0xc131c1e3 ),
	NORM( 0x3e8325b7, 0xbef7759f, 0xbf564e54 ),
	VERT( 0x41e2de08, 0xc09e99d0, 0xc14cc6c0 ),
	NORM( 0x3e8325b2, 0xbe801835, 0xbf6f06fd ),
	VERT( 0x41e2de08, 0xbf14ce80, 0xc155fdf6 ),
	NORM( 0x3e8325b2, 0x00000000, 0xbf777594 ),
	VERT( 0x41e2de08, 0x4072cc60, 0xc14cc6c0 ),
	NORM( 0x3e8325b3, 0x3e80181a, 0xbf6f0700 ),
	VERT( 0x41e2de08, 0x40fbdbd0, 0xc131c1e3 ),
	NORM( 0x3e8325af, 0x3ef77590, 0xbf564e5a ),
	VERT( 0x41e2de08, 0x4135f178, 0xc106c6c0 ),
	NORM( 0x3e8325ac, 0x3f2efaf1, 0xbf2efae5 ),
	VERT( 0x41e2de08, 0x4160ec98, 0xc09d865b ),
	NORM( 0x3e8325a9, 0x3f564e5a, 0xbef77593 ),
	VERT( 0x41e2de08, 0x417bf178, 0xbf58865a ),
	NORM( 0x3e82dfed, 0x3f707b6e, 0xbe6a0054 ),
	VERT( 0x41e2de08, 0x41829454, 0x40be5dd3 ),
	NORM( 0x3e8351cb, 0x3f772a22, 0x3d3988ab ),
	VERT( 0x41e2de08, 0x417bf178, 0x4113353b ),
	NORM( 0x3e82cc41, 0x3f670e46, 0x3eb17376 ),
	VERT( 0x41e2de08, 0x4160ec98, 0x413fb262 ),
	NORM( 0x3e822ed3, 0x3f4b84fc, 0x3f0cfe1f ),
	VERT( 0x41e2de08, 0x4135f178, 0x4177b5f5 ),
	NORM( 0x3e8325ac, 0x3f2efaf1, 0x3f2efae6 ),
	VERT( 0x41e2de08, 0x40fbdbd0, 0x4191588c ),
	NORM( 0x3e8325af, 0x3ef7758f, 0x3f564e5a ),
	VERT( 0x41e2de08, 0x4072cc60, 0x419edafa ),
	NORM( 0x3e8325b1, 0x3e80181a, 0x3f6f0700 ),
	VERT( 0x41e2de08, 0xbf14ce80, 0x41a37695 ),
	NORM( 0x3e8325af, 0x00000000, 0x3f777594 ),
	VERT( 0x41e2de08, 0xc09e99d0, 0x419edafa ),
	NORM( 0x3e8325af, 0xbe801834, 0x3f6f06fd ),
	VERT( 0x41e2de08, 0xc11087a8, 0x4191588c ),
	NORM( 0x3e8325b7, 0xbef7759d, 0x3f564e55 ),
	VERT( 0x41e2de08, 0xc1488b38, 0x4177b5f5 ),
	NORM( 0x3e8325b3, 0xbf2efadf, 0x3f2efaf5 ),
	VERT( 0x41e2de08, 0xc1738668, 0x413fb262 ),
	NORM( 0x3e822ed3, 0xbf4b84ee, 0x3f0cfe32 ),
	VERT( 0x41e2de08, 0xc18745a4, 0x4113353b ),
	NORM( 0x3e82cc41, 0xbf670e46, 0x3eb17376 ),
	VERT( 0x41bea1f8, 0xc190a674, 0x40be5dd3 ),
	NORM( 0x3d3f7f7b, 0xbf7f932b, 0x3d09db5f ),
	VERT( 0x41bea1f8, 0xc18be13c, 0xbf80045e ),
	NORM( 0x3d299093, 0xbf76b043, 0xbe872e45 ),
	VERT( 0x41bea1f8, 0xc17bc998, 0xc0a710cb ),
	NORM( 0x3d1228bd, 0xbf5a9a60, 0xbf04e927 ),
	VERT( 0x41bea1f8, 0xc14f4a48, 0xc10d85cf ),
	NORM( 0x3d030499, 0xbf34b62c, 0xbf35243c ),
	VERT( 0x41bea1f8, 0xc1154ce8, 0xc13a0519 ),
	NORM( 0x3cebe673, 0xbeff8496, 0xbf5db80f ),
	VERT( 0x41bea1f8, 0xc0a38a10, 0xc155fdf6 ),
	NORM( 0x3cdb32cb, 0xbe843e74, 0xbf7737ec ),
	VERT( 0x41bea1f8, 0xbf14ce80, 0xc15f8866 ),
	NORM( 0x3cd506dd, 0x37eab63d, 0xbf7fe9d6 ),
	VERT( 0x41bea1f8, 0x407cad20, 0xc155fdf6 ),
	NORM( 0x3cd9c960, 0x3e844565, 0xbf77374f ),
	VERT( 0x41bea1f8, 0x4102b318, 0xc13a0519 ),
	NORM( 0x3ce92a86, 0x3eff8aa8, 0xbf5db708 ),
	VERT( 0x41bea1f8, 0x413cb088, 0xc10d85cf ),
	NORM( 0x3d0114a1, 0x3f34b8c7, 0xbf352307 ),
	VERT( 0x41bea1f8, 0x41692fc8, 0xc0a710cb ),
	NORM( 0x3d0fd5c1, 0x3f5a9c41, 0xbf04e899 ),
	VERT( 0x41bea1f8, 0x41829454, 0xbf80045e ),
	NORM( 0x3d25c824, 0x3f76b326, 0xbe872bf6 ),
	VERT( 0x41bea1f8, 0x4187598c, 0x40be5dd3 ),
	NORM( 0x3d3afc6b, 0x3f7f9682, 0x3d09db1e ),
	VERT( 0x41bea1f8, 0x41829454, 0x4115ad61 ),
	NORM( 0x3d48eaa8, 0x3f71acc8, 0x3ea6fdd9 ),
	VERT( 0x41bea1f8, 0x41692fc8, 0x4144779a ),
	NORM( 0x3d5e395c, 0x3f55f2df, 0x3f0be3b0 ),
	VERT( 0x41bea1f8, 0x413cb088, 0x417e7504 ),
	NORM( 0x3d73fe83, 0x3f34ea3d, 0x3f347b03 ),
	VERT( 0x41bea1f8, 0x4102b318, 0x41957a27 ),
	NORM( 0x3d80a7a8, 0x3effe014, 0x3f5d2790 ),
	VERT( 0x41bea1f8, 0x407cad20, 0x41a37695 ),
	NORM( 0x3d84ec41, 0x3e847699, 0x3f76b9a4 ),
	VERT( 0x41bea1f8, 0xbf14ce80, 0x41a83bcd ),
	NORM( 0x3d8680a9, 0x37ee6e4f, 0x3f7f7283 ),
	VERT( 0x41bea1f8, 0xc0a38a10, 0x41a37695 ),
	NORM( 0x3d8548bb, 0xbe846f52, 0x3f76b9d6 ),
	VERT( 0x41bea1f8, 0xc1154ce8, 0x41957a27 ),
	NORM( 0x3d815a50, 0xbeffd92d, 0x3f5d27ee ),
	VERT( 0x41bea1f8, 0xc14f4a48, 0x417e7504 ),
	NORM( 0x3d75f705, 0xbf34e6fe, 0x3f347b97 ),
	VERT( 0x41bea1f8, 0xc17bc998, 0x4144779a ),
	NORM( 0x3d65c042, 0xbf55ec97, 0x3f0be122 ),
	VERT( 0x41bea1f8, 0xc18be13c, 0x4115ad61 ),
	NORM( 0x3d5224b6, 0xbf71a54b, 0x3ea6fbc4 ),
	VERT( 0xc29dbbe5, 0xc162c8e0, 0x40f4505a ),
	NORM( 0xbcb11565, 0xbf7fec09, 0x3c43271f ),
	VERT( 0xc29dbbe5, 0xc15b6988, 0x405c9846 ),
	NORM( 0xbcd8bac3, 0xbf74df21, 0xbe94b390 ),
	VERT( 0xc29dbbe5, 0xc145cc08, 0x3f5f9268 ),
	NORM( 0x3b7128a9, 0xbf58089f, 0xbf09592d ),
	VERT( 0xc29dbbe5, 0xc123697c, 0xbff6b40c ),
	NORM( 0x3d94b762, 0xbf37005f, 0xbf320c26 ),
	VERT( 0xc29dbbe5, 0xc0ed33a8, 0xc0827208 ),
	NORM( 0x3e0992f7, 0xbf00ded1, 0xbf5a81e9 ),
	VERT( 0xc29dbbe5, 0xc084d5a8, 0xc0adad03 ),
	NORM( 0x3e1c90c7, 0xbe855b07, 0xbf740b8d ),
	VERT( 0xc29dbbe5, 0xbf26ad40, 0xc0bc6bc0 ),
	NORM( 0x3e235f50, 0xb985b283, 0xbf7cb88b ),
	VERT( 0xc29dbbe5, 0x403654b0, 0xc0adad03 ),
	NORM( 0x3e1ddd2d, 0x3e851579, 0xbf7407a9 ),
	VERT( 0xc29dbbe5, 0x40c38870, 0xc0827208 ),
	NORM( 0x3e0c24e6, 0x3f00b9e8, 0xbf5a7d89 ),
	VERT( 0xc29dbbe5, 0x410e93de, 0xbff6b40c ),
	NORM( 0x3d9cb530, 0x3f36e313, 0xbf320ed6 ),
	VERT( 0xc29dbbe5, 0x4130f65f, 0x3f5f9268 ),
	NORM( 0x3c14c378, 0x3f580117, 0xbf0960ce ),
	VERT( 0xc29dbbe5, 0x414693de, 0x405c9846 ),
	NORM( 0xbca61424, 0x3f74e416, 0xbe94d417 ),
	VERT( 0xc29dbbe5, 0x414df338, 0x40f4505a ),
	NORM( 0xbc966f46, 0x3f7ff036, 0x3c4504a5 ),
	VERT( 0xc29dbbe5, 0x414693de, 0x4132282d ),
	NORM( 0xbbec13c7, 0x3f774d78, 0x3e8445d2 ),
	VERT( 0xc29dbbe5, 0x4130f65f, 0x41665734 ),
	NORM( 0x3c6f2e60, 0x3f5dd34a, 0x3eff76f4 ),
	VERT( 0xc29dbbe5, 0x410e93de, 0x4189936e ),
	NORM( 0x3d315951, 0x3f3575b2, 0x3f343cc2 ),
	VERT( 0xc29dbbe5, 0x40c38870, 0x419ac4af ),
	NORM( 0x3d910335, 0x3f0042e5, 0x3f5ccf04 ),
	VERT( 0xc29dbbe5, 0x403654b0, 0x41a5936e ),
	NORM( 0x3dbc23e3, 0x3e84d07c, 0x3f761da8 ),
	VERT( 0xc29dbbe5, 0xbf26ad40, 0x41a9431d ),
	NORM( 0x3dcd48f1, 0xb94320da, 0x3f7eb5ef ),
	VERT( 0xc29dbbe5, 0xc084d5a8, 0x41a5936e ),
	NORM( 0x3dba547d, 0xbe8500bb, 0x3f761ca7 ),
	VERT( 0xc29dbbe5, 0xc0ed33a8, 0x419ac4af ),
	NORM( 0x3d8d6906, 0xbf0059d1, 0x3f5ccb0b ),
	VERT( 0xc29dbbe5, 0xc123697c, 0x4189936e ),
	NORM( 0x3d269d6b, 0xbf3587a4, 0x3f3434ee ),
	VERT( 0xc29dbbe5, 0xc145cc08, 0x41665734 ),
	NORM( 0x3c37efc6, 0xbf5ddc52, 0x3eff6304 ),
	VERT( 0xc29dbbe5, 0xc15b6988, 0x4132282d ),
	NORM( 0xbc380ebd, 0xbf774cfb, 0x3e84369f ),
	VERT( 0xc2a9b604, 0xc1619878, 0x40f98e7b ),
	NORM( 0x3e49e755, 0xbf7acc09, 0x3d16fa0c ),
	VERT( 0xc2a8f5a5, 0xc15a3f20, 0x405c9fa3 ),
	NORM( 0x3e5cca68, 0xbf7031aa, 0xbe8a81d8 ),
	VERT( 0xc2a85bbf, 0xc144b340, 0x3f1b9b58 ),
	NORM( 0x3e92762c, 0xbf57954e, 0xbeea11c6 ),
	VERT( 0xc2a85bbf, 0xc1226cc4, 0xc0837130 ),
	NORM( 0x3edcbc31, 0xbf2b6ac0, 0xbf1ad38f ),
	VERT( 0xc2a85bbf, 0xc0eb8360, 0xc0c7fe18 ),
	NORM( 0x3ef22446, 0xbedef70f, 0xbf4415df ),
	VERT( 0xc2a85bbf, 0xc0837a88, 0xc0f315cc ),
	NORM( 0x3efbd1f1, 0xbe648742, 0xbf577321 ),
	VERT( 0xc2a85bbf, 0xbf1eaf80, 0xc100e440 ),
	NORM( 0x3f004311, 0xbaab40fe, 0xbf5d8d01 ),
	VERT( 0xc2a85bbf, 0x40379d50, 0xc0f315cc ),
	NORM( 0x3f001a93, 0x3e60bc5e, 0xbf56673f ),
	VERT( 0xc2a85bbf, 0x40c3d79c, 0xc0c7fe18 ),
	NORM( 0x3efabd3e, 0x3edb9a7a, 0xbf425318 ),
	VERT( 0xc2a85bbf, 0x410e96e5, 0xc0837130 ),
	NORM( 0x3eeaef7f, 0x3f28012c, 0xbf1955e5 ),
	VERT( 0xc2a85bbf, 0x4130dd54, 0x3f1b9b58 ),
	NORM( 0x3ea2b8ad, 0x3f55585f, 0xbee784dd ),
	VERT( 0xc2a8f5a5, 0x41466932, 0x405c9fa3 ),
	NORM( 0x3e7d603d, 0x3f6e7136, 0xbe88a868 ),
	VERT( 0xc2a9b604, 0x414dc286, 0x40f98e7b ),
	NORM( 0x3e7348d7, 0x3f7871f1, 0x3d29326e ),
	VERT( 0xc2aae9d0, 0x41466932, 0x413834ef ),
	NORM( 0x3e827fe2, 0x3f6ce822, 0x3e8f93ef ),
	VERT( 0xc2abd0a9, 0x4130dd54, 0x416fd4c7 ),
	NORM( 0x3e8c8f10, 0x3f5457ba, 0x3ef90ead ),
	VERT( 0xc2ac9109, 0x410e96e5, 0x41927539 ),
	NORM( 0x3e99d73a, 0x3f2c57aa, 0x3f2cf760 ),
	VERT( 0xc2ad5168, 0x40c3d79c, 0x41a4cc3f ),
	NORM( 0x3e8a27bd, 0x3f00ce72, 0x3f522c98 ),
	VERT( 0xc2adeb4e, 0x40379d50, 0x41b293aa ),
	NORM( 0x3e3b95f9, 0x3e7c9ca8, 0x3f739d85 ),
	VERT( 0xc2adeb4e, 0xbf1eaf80, 0x41b64057 ),
	NORM( 0x3e496f7e, 0x399dc236, 0x3f7aff7a ),
	VERT( 0xc2adeb4e, 0xc0837a88, 0x41b293aa ),
	NORM( 0x3e39bffb, 0xbe7c1b83, 0x3f73bc62 ),
	VERT( 0xc2ad5168, 0xc0eb8360, 0x41a4cc3f ),
	NORM( 0x3e848d9f, 0xbf01abaa, 0x3f528b60 ),
	VERT( 0xc2ac9109, 0xc1226cc4, 0x41927539 ),
	NORM( 0x3e8ee2ba, 0xbf2e4270, 0x3f2d64e9 ),
	VERT( 0xc2abd0a9, 0xc144b340, 0x416fd4c7 ),
	NORM( 0x3e7deb72, 0xbf566b2c, 0x3ef93f15 ),
	VERT( 0xc2aae9d0, 0xc15a3f20, 0x413834ef ),
	NORM( 0x3e6660e0, 0xbf6f0eb4, 0x3e8e69e1 ),
	VERT( 0xc2b163c7, 0xc17cc27c, 0x40f9152c ),
	NORM( 0x3ea129d3, 0xbf72f5af, 0x3c6855d1 ),
	VERT( 0xc2b160ca, 0xc1746b44, 0x40589e01 ),
	NORM( 0x3f0a0e9b, 0xbf54e3f1, 0xbe07e0c2 ),
	VERT( 0xc2ad2b80, 0xc15bf728, 0xbea1fdd0 ),
	NORM( 0x3f2d7887, 0xbf2c3fa6, 0xbe97fa3c ),
	VERT( 0xc2ad2b80, 0xc13510d2, 0xc0ad1258 ),
	NORM( 0x3f25629f, 0xbf056523, 0xbf0ecaaf ),
	VERT( 0xc2ad2b80, 0xc1025ec8, 0xc0fadf22 ),
	NORM( 0x3f1519a5, 0xbeb670bf, 0xbf3b0a46 ),
	VERT( 0xc2ad2b80, 0xc08eab08, 0xc115e3ac ),
	NORM( 0x3f0c99a9, 0xbe3be50f, 0xbf50b67c ),
	VERT( 0xc2ad2b80, 0xbeff6200, 0xc11e3ae1 ),
	NORM( 0x3f0ae372, 0x3b810f9a, 0xbf570be5 ),
	VERT( 0xc2ad2b80, 0x405d7de0, 0xc115e3ac ),
	NORM( 0x3f1161d6, 0x3e45fede, 0xbf4cd113 ),
	VERT( 0xc2ad2b80, 0x40e4d178, 0xc0fadf22 ),
	NORM( 0x3f1d513c, 0x3ebb113b, 0xbf32fe5e ),
	VERT( 0xc2ad2b80, 0x41251ab6, 0xc0ad1258 ),
	NORM( 0x3f30c7fa, 0x3f06e794, 0xbefda799 ),
	VERT( 0xc2ad2b80, 0x414c0122, 0xbea1fdd0 ),
	NORM( 0x3f2aafb8, 0x3f35f0f3, 0xbe65c457 ),
	VERT( 0xc2b160ca, 0x4164753e, 0x40589e01 ),
	NORM( 0x3efdd6b5, 0x3f5d4ac1, 0xbdab150c ),
	VERT( 0xc2b163c7, 0x416ccc73, 0x40f9152c ),
	NORM( 0x3ebb0999, 0x3f6e411e, 0x3ca055c4 ),
	VERT( 0xc2b22129, 0x4164753e, 0x413f807b ),
	NORM( 0x3eee8832, 0x3f5694fa, 0x3e912328 ),
	VERT( 0xc2b32e7c, 0x414c0122, 0x4180465a ),
	NORM( 0x3ef2442d, 0x3f41c157, 0x3ee6d6cc ),
	VERT( 0xc2b3eedb, 0x41251ab6, 0x419dd4a7 ),
	NORM( 0x3ef4f0fc, 0x3f1dc40b, 0x3f20257e ),
	VERT( 0xc2b4af3b, 0x40e4d178, 0x41b27ba6 ),
	NORM( 0x3ef2c598, 0x3f050e31, 0x3f35ed81 ),
	VERT( 0xc2b4af3b, 0xc1025ec8, 0x41b27ba6 ),
	NORM( 0x3ee4d2f4, 0xbf07f0e2, 0x3f384c6d ),
	VERT( 0xc2b3eedb, 0xc13510d2, 0x419dd4a7 ),
	NORM( 0x3ee477ab, 0xbf20e4f6, 0x3f231811 ),
	VERT( 0xc2b32e7c, 0xc15bf728, 0x4180465a ),
	NORM( 0x3eddaacd, 0xbf46c3d2, 0x3eea7923 ),
	VERT( 0xc2b22129, 0xc1746b44, 0x413f807b ),
	NORM( 0x3ed7b38d, 0xbf5c7c4c, 0x3e91783d ),
	VERT( 0xc3184233, 0xc1554944, 0xc123971a ),
	NORM( 0xbc8c7f94, 0xbf4d73c5, 0xbf18a9d4 ),
	VERT( 0xc3184233, 0xc12f9a42, 0xc154b363 ),
	NORM( 0x3c85db09, 0xbf2cbdcb, 0xbf3ce37e ),
	VERT( 0xc3184233, 0xc0fcfbf0, 0xc17a6270 ),
	NORM( 0x3d809278, 0xbedf2390, 0xbf65d902 ),
	VERT( 0xc3184233, 0xc08a9a74, 0xc189096a ),
	NORM( 0x3db20e8e, 0xbe606432, 0xbf78c8cb ),
	VERT( 0xc3184233, 0xbefdb9c0, 0xc18d13a4 ),
	NORM( 0x3dbda268, 0xb8923f29, 0xbf7ee673 ),
	VERT( 0xc3184233, 0x4055c698, 0xc189096a ),
	NORM( 0x3da3494d, 0x3e606047, 0xbf78f188 ),
	VERT( 0xc3184233, 0x40dd44d2, 0xc17a6270 ),
	NORM( 0x3d4baaa8, 0x3edf38a1, 0xbf66097c ),
	VERT( 0xc3184233, 0x411fbec2, 0xc154b363 ),
	NORM( 0x3c06f314, 0x3f2cb664, 0xbf3cf31b ),
	VERT( 0xc3184233, 0x41456dc8, 0xc123971a ),
	NORM( 0xbc851e07, 0x3f4d747f, 0xbf18aa80 ),
	VERT( 0xc2dedfcf, 0xc19026b6, 0xc09c6c50 ),
	NORM( 0xbdbdd8cd, 0xbf45f2ff, 0xbf2096e3 ),
	VERT( 0xc2dedfcf, 0xc16cb3a4, 0xc1154237 ),
	NORM( 0xbdd04ceb, 0xbf2a66b4, 0xbf3d4401 ),
	VERT( 0xc2dedfcf, 0xc129743c, 0xc13bc44e ),
	NORM( 0xbdc2dda6, 0xbeda4214, 0xbf664a43 ),
	VERT( 0xc2dedfcf, 0xc0b648e8, 0xc153f95b ),
	NORM( 0xbdb93fe2, 0xbe5a9ce4, 0xbf790613 ),
	VERT( 0xc2dedfcf, 0xbee353c0, 0xc15c3b0e ),
	NORM( 0xbdb80fea, 0x386abf7e, 0xbf7ef6c9 ),
	VERT( 0xc2dedfcf, 0x4099de9a, 0xc153f95b ),
	NORM( 0xbdc0dad2, 0x3e5aa52b, 0xbf78ee85 ),
	VERT( 0xc2dedfcf, 0x411b3f17, 0xc13bc44e ),
	NORM( 0xbdd0719e, 0x3eda280c, 0xbf6620db ),
	VERT( 0xc2dedfcf, 0x415e7e78, 0xc1154237 ),
	NORM( 0xbe28b960, 0x3f289e42, 0xbf3bf2d5 ),
	VERT( 0xc2dedfcf, 0x41890c28, 0xc09c6c50 ),
	NORM( 0xbe3eef56, 0x3f438e48, 0xbf1e29a4 ),
	VERT( 0xc2d493c4, 0xc1a09f10, 0xc0591fb1 ),
	NORM( 0xbe00cb86, 0xbf72908d, 0xbe967cd3 ),
	VERT( 0xc2d4d7ee, 0xc190606e, 0xc1003356 ),
	NORM( 0xbe868d02, 0xbf51b72c, 0xbf027f30 ),
	VERT( 0xc2d4d7ee, 0xc16d1210, 0xc12b647d ),
	NORM( 0xbef05976, 0xbf1aac69, 0xbf24d56e ),
	VERT( 0xc2d4d7ee, 0xc129b744, 0xc151f644 ),
	NORM( 0xbf22de4d, 0xbec7a494, 0xbf2a6d79 ),
	VERT( 0xc2d4d7ee, 0xc0b68f28, 0xc16a352d ),
	NORM( 0xbf2f8968, 0xbe1a54f8, 0xbf364d72 ),
	VERT( 0xc2d4d7ee, 0xbee37080, 0xc1727a3d ),
	NORM( 0xbf30cb3b, 0xb8c5fc6e, 0xbf3925fd ),
	VERT( 0xc2d4d7ee, 0x409a214a, 0xc16a352d ),
	NORM( 0xbf2ec154, 0x3e1be157, 0xbf36f847 ),
	VERT( 0xc2d4d7ee, 0x411b8055, 0xc151f644 ),
	NORM( 0xbf01968e, 0x3ef7b4be, 0xbf36c40f ),
	VERT( 0xc2d4d7ee, 0x415edb17, 0xc12b647d ),
	NORM( 0xbebe6f10, 0x3f266df7, 0xbf299eb8 ),
	VERT( 0xc2d4d7ee, 0x418944fb, 0xc1003356 ),
	NORM( 0xbe95d76b, 0x3f4fd2ad, 0xbf015aac ),
	VERT( 0xc2d493c4, 0x4199839e, 0xc0591fb1 ),
	NORM( 0xbe00a8eb, 0x3f729194, 0xbe967d9c ),
	VERT( 0xc2b63ca2, 0xc1a1c79e, 0xbf2e8764 ),
	NORM( 0x3f48b606, 0xbf1a995f, 0xbe12faed ),
	VERT( 0xc2b67989, 0xc17c74e0, 0x40c825cb ),
	NORM( 0x3d816eec, 0xbf7db736, 0xbdf0588c ),
	VERT( 0xc2b6872a, 0xc1916a5a, 0xc096ff44 ),
	NORM( 0x3f347e1b, 0xbf1d8b9d, 0xbeb46b9d ),
	VERT( 0xc2b68f96, 0xc16ec4ac, 0xc0fc7cda ),
	NORM( 0x3f48b5df, 0xbed9e0bd, 0xbee76012 ),
	VERT( 0xc2b693aa, 0xc12aeba6, 0xc1251d7d ),
	NORM( 0x3f51624f, 0xbe91838b, 0xbf0010c2 ),
	VERT( 0xc2b6963b, 0xc0b7d248, 0xc13d8cf4 ),
	NORM( 0x3f503101, 0xbdff1435, 0xbf1184c8 ),
	VERT( 0xc2b6971b, 0xbee3f440, 0xc145e292 ),
	NORM( 0x3f4e997e, 0x3b13661a, 0xbf172b72 ),
	VERT( 0xc2b6963b, 0x409b53f6, 0xc13d8cf4 ),
	NORM( 0x3f5202cb, 0x3e0f671a, 0xbf0defe6 ),
	VERT( 0xc2b693aa, 0x411cac7c, 0xc1251d7d ),
	NORM( 0x3f49cc51, 0x3ec43ab8, 0xbef678ab ),
	VERT( 0xc2b68f96, 0x4160856c, 0xc0fc7cda ),
	NORM( 0x3f40362d, 0x3f04edf3, 0xbed10078 ),
	VERT( 0xc2b6872a, 0x418a4ac6, 0xc096ff44 ),
	NORM( 0x3f2da856, 0x3f30b48e, 0xbe80e857 ),
	VERT( 0xc2b63ca2, 0x419aa80b, 0xbf2e8764 ),
	NORM( 0x3f2bacd9, 0x3f3dcb0c, 0xbccfdb2d ),
	VERT( 0xc2b67989, 0x416c7fe3, 0x40c825cb ),
	NORM( 0x3d81a2b4, 0x3f7db6cf, 0xbdf057c3 ),
	VERT( 0xc2cc0b4b, 0xc1a0f9b2, 0xc0848414 ),
	NORM( 0xbdfa7b98, 0xbf735ecd, 0xbe91f768 ),
	VERT( 0xc2cc0b4b, 0xc190b1c4, 0xc12b3a7c ),
	NORM( 0xbe9ab403, 0xbf5867b8, 0xbee19464 ),
	VERT( 0xc2cc0b4b, 0xc16d971c, 0xc173158c ),
	NORM( 0xbf10a366, 0xbf2f82e4, 0xbeeb0b8e ),
	VERT( 0xc2ca8874, 0xc12a15b8, 0xc1d2feae ),
	NORM( 0xbf3793c3, 0xbf092979, 0xbee43a5c ),
	VERT( 0xc2ca8874, 0xc0b6f224, 0xc1e4a9f2 ),
	NORM( 0xbf483c06, 0xbde06a3e, 0xbf1d0518 ),
	VERT( 0xc2ca8874, 0xbee398c0, 0xc1e7621d ),
	NORM( 0xbf46aaa3, 0xba378ec7, 0xbf21745d ),
	VERT( 0xc2ca8874, 0x409a7f3c, 0xc1e4a9f2 ),
	NORM( 0xbf4a1bf3, 0x3de3d9c6, 0xbf1a8557 ),
	VERT( 0xc2ca8874, 0x411bdc43, 0xc1d2feae ),
	NORM( 0xbf1fb87b, 0x3f1b4a04, 0xbefc4648 ),
	VERT( 0xc2cc0b4b, 0x415f5d9a, 0xc173158c ),
	NORM( 0xbeb9ba91, 0x3f47c81d, 0xbf0261cf ),
	VERT( 0xc2cc0b4b, 0x4189950d, 0xc12b3a7c ),
	NORM( 0xbe7a172e, 0x3f5b31d0, 0xbee91277 ),
	VERT( 0xc2cc0b4b, 0x4199dcff, 0xc0848414 ),
	NORM( 0xbdfa3c97, 0x3f735fb5, 0xbe91f81d ),
	VERT( 0xc2bc695b, 0xc1a17a5a, 0xc03dc499 ),
	NORM( 0x3eb98ba7, 0xbf5a11f4, 0xbec1a539 ),
	VERT( 0xc2bc695b, 0xc1912534, 0xc114597d ),
	NORM( 0x3f00295b, 0xbf43ec66, 0xbecf1e9d ),
	VERT( 0xc2bc695b, 0xc16e53f4, 0xc15f7765 ),
	NORM( 0x3f3502b2, 0xbf17167e, 0xbec76f87 ),
	VERT( 0xc2bea1df, 0xc12a9bc4, 0xc1d2e7cd ),
	NORM( 0x3f3bf4dc, 0xbf0c7b75, 0xbeccad20 ),
	VERT( 0xc2bea219, 0xc0b77ea8, 0xc1e5ad93 ),
	NORM( 0x3f52c0c4, 0xbdc23a69, 0xbf0f4830 ),
	VERT( 0xc2bea219, 0xbee3d200, 0xc1e8691b ),
	NORM( 0x3f4fee3c, 0xbaad3d70, 0xbf155598 ),
	VERT( 0xc2bea219, 0x409b0496, 0xc1e5ad93 ),
	NORM( 0x3f52c6c5, 0x3dc86650, 0xbf0f1d57 ),
	VERT( 0xc2bea1df, 0x411c5ebd, 0xc1d2e7cd ),
	NORM( 0x3f381bc1, 0x3f123f5a, 0xbeca8088 ),
	VERT( 0xc2bc695b, 0x416016da, 0xc15f7765 ),
	NORM( 0x3f1d942c, 0x3f301aa7, 0xbec4e60b ),
	VERT( 0xc2bc695b, 0x418a06b3, 0xc114597d ),
	NORM( 0x3ef7ae72, 0x3f48f310, 0xbec62dfc ),
	VERT( 0xc2bc695b, 0x419a5bdb, 0xc03dc499 ),
	NORM( 0x3ed043a2, 0x3f5b8082, 0xbea162e8 ),
	VERT( 0xc2c6b6ff, 0xc1a1258e, 0xc09e072f ),
	NORM( 0xbd2d79d6, 0xbf75cd4f, 0xbe8d6b43 ),
	VERT( 0xc2c6b6ff, 0xc190d91e, 0xc140ea1b ),
	NORM( 0xbd9766da, 0xbf619cf2, 0xbeeef822 ),
	VERT( 0xc2c66602, 0xc16dd780, 0xc183b660 ),
	NORM( 0xbe0d2771, 0xbf62488d, 0xbee4caf8 ),
	VERT( 0xc2c672d7, 0xc12a436a, 0xc1e36f3a ),
	NORM( 0xbe9b0ef9, 0xbf2cbbeb, 0xbf2c4d73 ),
	VERT( 0xc2c68bb8, 0xc0f21b94, 0xc1ef2979 ),
	NORM( 0xbea72698, 0xbe7ca884, 0xbf699574 ),
	VERT( 0xc2c68bb8, 0xbed43f80, 0xc1f12e39 ),
	NORM( 0xbe8fcd62, 0xb9b426bc, 0xbf75b204 ),
	VERT( 0xc2c68bb8, 0x40d793e2, 0xc1ef2979 ),
	NORM( 0xbea936eb, 0x3e8059af, 0xbf68ef9b ),
	VERT( 0xc2c672d7, 0x411c08be, 0xc1e36f3a ),
	NORM( 0xbe82fd47, 0x3f303082, 0xbf2dcacb ),
	VERT( 0xc2c66602, 0x415f9cc2, 0xc183b660 ),
	NORM( 0xbd907005, 0x3f64515b, 0xbee4be96 ),
	VERT( 0xc2c6b6ff, 0x4189bbcc, 0xc140ea1b ),
	NORM( 0xbda500b1, 0x3f618cca, 0xbeeea505 ),
	VERT( 0xc2c6b6ff, 0x419a083f, 0xc09e072f ),
	NORM( 0xbd2d0c27, 0x3f75cd93, 0xbe8d6b7e ),
	VERT( 0xc2c2738f, 0xc1a148a4, 0xc093c3ca ),
	NORM( 0x3dd6e7b9, 0xbf73ee36, 0xbe91c552 ),
	VERT( 0xc2c2738f, 0xc190f898, 0xc13aacbe ),
	NORM( 0x3e47065e, 0xbf5f87a7, 0xbee4dd3c ),
	VERT( 0xc2c22292, 0xc16e0b00, 0xc1810989 ),
	NORM( 0x3e43cf6d, 0xbf6156da, 0xbede5e2b ),
	VERT( 0xc2c22f67, 0xc12a67f8, 0xc1e344f3 ),
	NORM( 0x3ea37c6d, 0xbf2c985f, 0xbf2a7c0a ),
	VERT( 0xc2c21ca0, 0xc0ee0ce4, 0xc1ef0015 ),
	NORM( 0x3eb7c086, 0xbe724be9, 0xbf6723c5 ),
	VERT( 0xc2c21ca0, 0xbed45480, 0xc1f105c0 ),
	NORM( 0x3e950db0, 0xb8c0936b, 0xbf74e968 ),
	VERT( 0xc2c21ca0, 0x40d7c526, 0xc1ef0015 ),
	NORM( 0x3eb74731, 0x3e816564, 0xbf661d2f ),
	VERT( 0xc2c22f67, 0x411c2c54, 0xc1e344f3 ),
	NORM( 0x3ea8a678, 0x3f2de243, 0xbf27e5d9 ),
	VERT( 0xc2c22292, 0x415fcf47, 0xc1810989 ),
	NORM( 0x3e523958, 0x3f60b2ed, 0xbeddab35 ),
	VERT( 0xc2c2738f, 0x4189daca, 0xc13aacbe ),
	NORM( 0x3e554c27, 0x3f5eda66, 0xbee44a0e ),
	VERT( 0xc2c2738f, 0x419a2ad8, 0xc093c3ca ),
	NORM( 0x3e15a42f, 0x3f72a7ab, 0xbe90fbbc ),
	VERT( 0xc2b15efc, 0xc16dd67c, 0x4090c2d5 ),
	NORM( 0x3ebbdce0, 0xbf6e031c, 0x3cfe37d9 ),
	VERT( 0xc2b15efc, 0xc16dd67c, 0x4090c2d5 ),
	NORM( 0x3f7ffeb0, 0xbbcd9cee, 0xba592c76 ),
	VERT( 0xc2a9251d, 0xc1545004, 0x4090c2d5 ),
	NORM( 0x3e39219e, 0xbf7bb17d, 0x3cd52c2c ),
	VERT( 0xc2b15efc, 0x415d6ca4, 0x4090c2d5 ),
	NORM( 0x3f7ffecf, 0x3bc3c279, 0xba4ec47e ),
	VERT( 0xc2b15efc, 0x415d6ca4, 0x4090c2d5 ),
	NORM( 0x3ed1ceb3, 0x3f6944e1, 0x3d2ce2e8 ),
	VERT( 0xc2a9251d, 0x41402df2, 0x4090c2d5 ),
	NORM( 0x3e535332, 0x3f7a5b53, 0x3d0258b4 ),
	VERT( 0x42186b76, 0xc10ea4fa, 0x4090c2d5 ),
	NORM( 0x3f5b2f35, 0xbf024d97, 0x3db59a17 ),
	VERT( 0x421f2214, 0xc0a12f34, 0x4090c2d5 ),
	NORM( 0x3f6a902a, 0xbec40a63, 0x3df115e8 ),
	VERT( 0x42186b76, 0x40f764c8, 0x4090c2d5 ),
	NORM( 0x3f5b55e9, 0x3f028822, 0x3d9ddb52 ),
	VERT( 0x421f2214, 0x40769430, 0x4090c2d5 ),
	NORM( 0x3f6b238f, 0x3ec47b5e, 0x3dc30b76 ),
	VERT( 0x420dbd8c, 0xc1461870, 0x4090c2d5 ),
	NORM( 0x3f30fa37, 0xbf37f63d, 0x3d9a8300 ),
	VERT( 0x420dbd8c, 0x413325e7, 0x4090c2d5 ),
	NORM( 0x3f31358b, 0x3f37bedb, 0x3d99fca8 ),
	VERT( 0x41ffa550, 0xc170b04c, 0x4090c2d5 ),
	NORM( 0x3ef520ef, 0xbf600f4a, 0x3d8d2207 ),
	VERT( 0x41ffa550, 0x415dbdb6, 0x4090c2d5 ),
	NORM( 0x3ef59d47, 0x3f5fea4f, 0x3d8e4a42 ),
	VERT( 0x41df3b20, 0xc185bd1a, 0x4090c2d5 ),
	NORM( 0x3e6f1782, 0xbf78658d, 0x3d818f66 ),
	VERT( 0x41df3b20, 0x4178879c, 0x4090c2d5 ),
	NORM( 0x3e6fe8c3, 0x3f785561, 0x3d834156 ),
	VERT( 0x41bc721c, 0xc18a4ee6, 0x4090c2d5 ),
	NORM( 0x3e054d8f, 0xbf7db0f9, 0x3d021b01 ),
	VERT( 0x41bc721c, 0xc18a4ee6, 0x4090c2d5 ),
	NORM( 0xbd1f510d, 0xbf7fc55d, 0x3c880e12 ),
	VERT( 0x41bc721c, 0x4180d599, 0x4090c2d5 ),
	NORM( 0x3e054387, 0x3f7dae68, 0x3d07a0c8 ),
	VERT( 0x41bc721c, 0x4180d599, 0x4090c2d5 ),
	NORM( 0xbd23c011, 0x3f7ea89a, 0x3dc0b556 ),
	VERT( 0xc29e5828, 0xc15548d8, 0x4090c2d5 ),
	NORM( 0xbcaa0669, 0xbf7fd6e5, 0x3ceb0bd8 ),
	VERT( 0xc29e5828, 0x41403146, 0x4090c2d5 ),
	NORM( 0xbc6ff858, 0x3f7fdbdf, 0x3cf412f3 ),
	VERT( 0xc2b160ca, 0xc175caa0, 0x40811965 ),
	NORM( 0x3f7ffeb0, 0xbbcd9cee, 0xba592c75 ),
	VERT( 0xc2b160ca, 0xc175caa0, 0x40811965 ),
	NORM( 0x3e896286, 0xbf2efb70, 0x3f2dc704 ),
	VERT( 0xc2b160ca, 0xc175caa0, 0x40811965 ),
	NORM( 0x3eb9d5fc, 0xbf6cb148, 0xbded2c11 ),
	VERT( 0xc2a8f5a5, 0xc15b5a4c, 0x40811965 ),
	NORM( 0x3e3922a0, 0xbf7a011d, 0xbdeee1e2 ),
	VERT( 0xc2a8f5a5, 0xc15b5a4c, 0x40811965 ),
	NORM( 0x3e04c873, 0xbf383702, 0x3f2ea3b0 ),
	VERT( 0xc2b160ca, 0x4165d498, 0x40811965 ),
	NORM( 0x3ecffa53, 0x3f681d45, 0xbde895ad ),
	VERT( 0xc2b160ca, 0x4165d498, 0x40811965 ),
	NORM( 0x3e980c1c, 0x3f28e78b, 0x3f30b6ad ),
	VERT( 0xc2b160ca, 0x4165d498, 0x40811965 ),
	NORM( 0x3f7ffecf, 0x3bc3c278, 0xba4ec47d ),
	VERT( 0xc2a8f5a5, 0x41478460, 0x40811965 ),
	NORM( 0x3e5749ea, 0x3f78835c, 0xbded5f52 ),
	VERT( 0xc2a8f5a5, 0x41478460, 0x40811965 ),
	NORM( 0x3e1a285a, 0x3f33b396, 0x3f32353e ),
	VERT( 0x421bf028, 0xc11359c4, 0x40811965 ),
	NORM( 0x3f5c578f, 0xbf022ded, 0xbcc71bb1 ),
	VERT( 0x421bf028, 0xc11359c4, 0x40811965 ),
	NORM( 0x3ed6fc1a, 0xbe7073cf, 0x3f606d7f ),
	VERT( 0x4222ee60, 0xc09fb944, 0x40811965 ),
	NORM( 0x3f6bfd13, 0xbec6678d, 0xbc04cfac ),
	VERT( 0x4222ee60, 0xc09fb944, 0x40811965 ),
	NORM( 0x3ee3707f, 0xbe3c88c2, 0x3f6075bd ),
	VERT( 0x421bf028, 0x4100bff9, 0x40811965 ),
	NORM( 0x3ed4e05c, 0x3e6ee89f, 0x3f61084a ),
	VERT( 0x421bf028, 0x4100bff9, 0x40811965 ),
	NORM( 0x3f5bff63, 0x3f02a8ea, 0xbd010ef0 ),
	VERT( 0x4222ee60, 0x40750b68, 0x40811965 ),
	NORM( 0x3f6bb271, 0x3ec79a87, 0xbc97cc65 ),
	VERT( 0x4222ee60, 0x40750b68, 0x40811965 ),
	NORM( 0x3ee1d2bd, 0x3e3b31d0, 0x3f60effd ),
	VERT( 0x4210d056, 0xc14cfe2c, 0x40811965 ),
	NORM( 0x3f334a34, 0xbf3641d6, 0xbd52bbf8 ),
	VERT( 0x4210d056, 0xc14cfe2c, 0x40811965 ),
	NORM( 0x3eb70b67, 0xbeb182a5, 0x3f5dfef5 ),
	VERT( 0x4210d056, 0x413a646c, 0x40811965 ),
	NORM( 0x3f32a946, 0x3f36d570, 0xbd5b5fa2 ),
	VERT( 0x4210d056, 0x413a646c, 0x40811965 ),
	NORM( 0x3eb4727d, 0x3eaf75dd, 0x3f5eeed8 ),
	VERT( 0x420250fc, 0xc1794b10, 0x40811965 ),
	NORM( 0x3e8c4c25, 0xbee8415c, 0x3f5917e6 ),
	VERT( 0x420250fc, 0xc1794b10, 0x40811965 ),
	NORM( 0x3efd2480, 0xbf5dcb2a, 0xbd8fd877 ),
	VERT( 0x420250fc, 0x4166b140, 0x40811965 ),
	NORM( 0x3e89b5cc, 0x3ee4934d, 0x3f5a7ac2 ),
	VERT( 0x420250fc, 0x4166b140, 0x40811965 ),
	NORM( 0x3efb70d7, 0x3f5e4620, 0xbd902713 ),
	VERT( 0x41e2de08, 0xc18a94da, 0x40811965 ),
	NORM( 0x3e237fa3, 0xbf0b8c90, 0x3f52b146 ),
	VERT( 0x41e2de08, 0xc18a94da, 0x40811965 ),
	NORM( 0x3e82c67f, 0xbf76a24a, 0xbda64e56 ),
	VERT( 0x41e2de08, 0x418147f2, 0x40811965 ),
	NORM( 0x3e81ba73, 0x3f76c56c, 0xbda665b8 ),
	VERT( 0x41e2de08, 0x418147f2, 0x40811965 ),
	NORM( 0x3e1fd73d, 0x3f08e2a0, 0x3f549b51 ),
	VERT( 0x41bea1f8, 0xc18f55fc, 0x40811965 ),
	NORM( 0x3d9edc01, 0xbf175695, 0x3f4d8518 ),
	VERT( 0x41bea1f8, 0xc18f55fc, 0x40811965 ),
	NORM( 0xbcef40d5, 0xbf3dee7d, 0x3f2b7b66 ),
	VERT( 0x41bea1f8, 0xc18f55fc, 0x40811965 ),
	NORM( 0x3d366cbc, 0xbf7e99be, 0xbdc16c0d ),
	VERT( 0x41bea1f8, 0x41860914, 0x40811965 ),
	NORM( 0x3d9b9227, 0x3f143496, 0x3f4fd449 ),
	VERT( 0x41bea1f8, 0x41860914, 0x40811965 ),
	NORM( 0xbcd8e4cf, 0x3f2a6122, 0x3f3ef289 ),
	VERT( 0x41bea1f8, 0x41860914, 0x40811965 ),
	NORM( 0x3d316464, 0x3f7e9d45, 0xbdc16e64 ),
	VERT( 0xc29dbbe5, 0xc15c7250, 0x40811965 ),
	NORM( 0xbcd1c890, 0xbf7e59eb, 0xbde20e8f ),
	VERT( 0xc29dbbe5, 0xc15c7250, 0x40811965 ),
	NORM( 0xbca96df7, 0xbf3e2cc2, 0x3f2b4b2a ),
	VERT( 0xc29dbbe5, 0x41479ca7, 0x40811965 ),
	NORM( 0xbc9460f5, 0x3f3b68c9, 0x3f2e556f ),
	VERT( 0xc29dbbe5, 0x41479ca7, 0x40811965 ),
	NORM( 0xbca23305, 0x3f7e627d, 0xbde217f9 ),
	VERT( 0xc2a8f5a5, 0xc15d9f58, 0x40a7a607 ),
	NORM( 0x3e104a6f, 0xbf413feb, 0xbf23faca ),
	VERT( 0xc2a8f5a5, 0xc15d9f58, 0x40a7a607 ),
	NORM( 0x3e268739, 0xbf7b8f16, 0xbdb69513 ),
	VERT( 0xc2b160ca, 0xc1785618, 0x40a7a607 ),
	NORM( 0x3f7ffeb0, 0xbbcd9cef, 0xba592c75 ),
	VERT( 0xc2b160ca, 0xc1785618, 0x40a7a607 ),
	NORM( 0x3e9170e9, 0xbf3755e6, 0xbf23346d ),
	VERT( 0xc2b160ca, 0xc1785618, 0x40a7a607 ),
	NORM( 0x3ebc57c5, 0xbf6d6a55, 0xbd8af3f0 ),
	VERT( 0xc2a8f5a5, 0x4149c96b, 0x40a7a607 ),
	NORM( 0x3e285171, 0x3f3ef868, 0xbf2536c4 ),
	VERT( 0xc2a8f5a5, 0x4149c96b, 0x40a7a607 ),
	NORM( 0x3e523809, 0x3f7998ca, 0xbdae6f0a ),
	VERT( 0xc2b160ca, 0x41686011, 0x40a7a607 ),
	NORM( 0x3f7ffecf, 0x3bc3c279, 0xba4ec47e ),
	VERT( 0xc2b160ca, 0x41686011, 0x40a7a607 ),
	NORM( 0x3ea25c1d, 0x3f34a9a0, 0xbf2231a1 ),
	VERT( 0xc2b160ca, 0x41686011, 0x40a7a607 ),
	NORM( 0x3ee699f5, 0x3f64153b, 0xbd6d475c ),
	VERT( 0x421bf028, 0xc11493d4, 0x40a7a607 ),
	NORM( 0x3f0a8496, 0xbe9d1d4e, 0xbf487182 ),
	VERT( 0x421bf028, 0xc11493d4, 0x40a7a607 ),
	NORM( 0x3f5e815e, 0xbefce1f9, 0xbcca4545 ),
	VERT( 0x4222ee60, 0xc0a087b0, 0x40a7a607 ),
	NORM( 0x3f16228e, 0xbe7c8f6e, 0xbf4581aa ),
	VERT( 0x4222ee60, 0xc0a087b0, 0x40a7a607 ),
	NORM( 0x3f6d0567, 0xbec16bbd, 0xbc017a0d ),
	VERT( 0x421bf028, 0x4101fa05, 0x40a7a607 ),
	NORM( 0x3f04aab4, 0x3e9831a6, 0xbf4d4abb ),
	VERT( 0x421bf028, 0x4101fa05, 0x40a7a607 ),
	NORM( 0x3f5e798c, 0x3efd3b0a, 0xbc4596a0 ),
	VERT( 0x4222ee60, 0x4076a858, 0x40a7a607 ),
	NORM( 0x3f0cb522, 0x3e6cb3ad, 0xbf4d835d ),
	VERT( 0x4222ee60, 0x4076a858, 0x40a7a607 ),
	NORM( 0x3f6ce06c, 0x3ec1fd7f, 0x3c85803d ),
	VERT( 0x4210d056, 0xc14e7038, 0x40a7a607 ),
	NORM( 0x3f356784, 0xbf342369, 0xbd55da33 ),
	VERT( 0x4210d056, 0xc14e7038, 0x40a7a607 ),
	NORM( 0x3ee1af55, 0xbedd03a5, 0xbf4978b3 ),
	VERT( 0x4210d056, 0x413bd676, 0x40a7a607 ),
	NORM( 0x3f356783, 0x3f342369, 0xbd55daf9 ),
	VERT( 0x4210d056, 0x413bd676, 0x40a7a607 ),
	NORM( 0x3edee0a1, 0x3edae6e0, 0xbf4ad327 ),
	VERT( 0x420250fc, 0xc17adcd4, 0x40a7a607 ),
	NORM( 0x3f004d6c, 0xbf5ccefa, 0xbd8eaea8 ),
	VERT( 0x420250fc, 0xc17adcd4, 0x40a7a607 ),
	NORM( 0x3ea7290b, 0xbf0c15e6, 0xbf454c38 ),
	VERT( 0x420250fc, 0x41684304, 0x40a7a607 ),
	NORM( 0x3ea4e2b4, 0x3f0a880b, 0xbf46de0c ),
	VERT( 0x420250fc, 0x41684304, 0x40a7a607 ),
	NORM( 0x3f004d5d, 0x3f5ccf02, 0xbd8eaea6 ),
	VERT( 0x41e2de08, 0xc18b65fc, 0x40a7a607 ),
	NORM( 0x3e84d432, 0xbf765ce4, 0xbda5fb54 ),
	VERT( 0x41e2de08, 0xc18b65fc, 0x40a7a607 ),
	NORM( 0x3e3b89bf, 0xbf237094, 0xbf3f6099 ),
	VERT( 0x41e2de08, 0x41821915, 0x40a7a607 ),
	NORM( 0x3e84d438, 0x3f765ce6, 0xbda5fa4e ),
	VERT( 0x41e2de08, 0x41821915, 0x40a7a607 ),
	NORM( 0x3e3878b6, 0x3f213785, 0xbf417021 ),
	VERT( 0x41bea1f8, 0xc19029b0, 0x40a7a607 ),
	NORM( 0x3db6db69, 0xbf2dd527, 0xbf3a8948 ),
	VERT( 0x41bea1f8, 0xc19029b0, 0x40a7a607 ),
	NORM( 0xbce99aae, 0xbf3db83b, 0xbf2bb95e ),
	VERT( 0x41bea1f8, 0xc19029b0, 0x40a7a607 ),
	NORM( 0x3d3ac313, 0xbf7e97ef, 0xbdc0fb62 ),
	VERT( 0x41bea1f8, 0x4186dcc9, 0x40a7a607 ),
	NORM( 0x3db4177a, 0x3f2b48b9, 0xbf3cebae ),
	VERT( 0x41bea1f8, 0x4186dcc9, 0x40a7a607 ),
	NORM( 0xbd002167, 0x3f4578f4, 0xbf22b74b ),
	VERT( 0x41bea1f8, 0x4186dcc9, 0x40a7a607 ),
	NORM( 0x3d37772a, 0x3f7e9a51, 0xbdc0fc96 ),
	VERT( 0xc29dbbe5, 0xc15e9134, 0x40a7a607 ),
	NORM( 0xbcc1cbe3, 0xbf7e79db, 0xbdd9d01e ),
	VERT( 0xc29dbbe5, 0xc15e9134, 0x40a7a607 ),
	NORM( 0xbca8d278, 0xbf47c409, 0xbf200172 ),
	VERT( 0xc29dbbe5, 0x4149bb8a, 0x40a7a607 ),
	NORM( 0xbc905b4e, 0x3f455e0f, 0xbf22fa4f ),
	VERT( 0xc29dbbe5, 0x4149bb8a, 0x40a7a607 ),
	NORM( 0xbcafba93, 0x3f7e7e94, 0xbdd9643a ),
	VERT( 0xc2f7b01c, 0x420eb4a5, 0x41da55b4 ),
	NORM( 0xba8d1700, 0x3f7ffff6, 0x00000000 ),
	VERT( 0xc2f7b01c, 0x420eb4a5, 0x41da55b4 ),
	NORM( 0xbdc7b80c, 0x00000000, 0x3f7ec7a2 ),
	VERT( 0xc2e23805, 0x420c97be, 0x41e235c2 ),
	NORM( 0x3e5ee109, 0x3f79dc53, 0x3b7c5720 ),
	VERT( 0xc2e23805, 0x420c97be, 0x41e235c2 ),
	NORM( 0xbd903dcd, 0x3916f90d, 0x3f7f5d41 ),
	VERT( 0xc2d008dc, 0x41fbbeae, 0x41e54415 ),
	NORM( 0xbceb8a08, 0x379ea4f8, 0x3f7fe4e8 ),
	VERT( 0xc2d008dc, 0x41fbbeae, 0x41e54415 ),
	NORM( 0x3efe52d4, 0x3f5e28d9, 0x3c546957 ),
	VERT( 0xc2c14a55, 0x41cce95a, 0x41e54415 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc2c14a55, 0x41cce95a, 0x41e54415 ),
	NORM( 0x3f34ac72, 0x3f352bce, 0x3d05f065 ),
	VERT( 0xc2b61275, 0x418fe08e, 0x41e54415 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc2b61275, 0x418fe08e, 0x41e54415 ),
	NORM( 0x3f5c0f8a, 0x3f020572, 0x3d646363 ),
	VERT( 0xc2aece15, 0x41119a2e, 0x41e54415 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc2aece15, 0x41119a2e, 0x41e54415 ),
	NORM( 0x3f76a070, 0x3e84ec57, 0x3d893323 ),
	VERT( 0xc2ac6db2, 0xbede4300, 0x41e54415 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc2ac6db2, 0xbede4300, 0x41e54415 ),
	NORM( 0x3f7f5f70, 0x3a3acc04, 0x3d8f43e6 ),
	VERT( 0xc2aece15, 0xc11f7e5e, 0x41e54415 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc2aece15, 0xc11f7e5e, 0x41e54415 ),
	NORM( 0x3f76c270, 0xbe84369a, 0x3d84d231 ),
	VERT( 0xc2b61275, 0xc196d2a4, 0x41e54415 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc2b61275, 0xc196d2a4, 0x41e54415 ),
	NORM( 0x3f5c46b1, 0xbf01f300, 0x3d34c095 ),
	VERT( 0xc2c14a55, 0xc1d3db72, 0x41e54415 ),
	NORM( 0xb9c27be4, 0x395c131a, 0x3f7ffffe ),
	VERT( 0xc2c14a55, 0xc1d3db72, 0x41e54415 ),
	NORM( 0x3f34d1b9, 0xbf351be6, 0x3cca3d93 ),
	VERT( 0xc2d008dc, 0xc2015863, 0x41e54415 ),
	NORM( 0xbceb37bc, 0x3906bb3b, 0x3f7fe4fb ),
	VERT( 0xc2d008dc, 0xc2015863, 0x41e54415 ),
	NORM( 0x3efe81d0, 0xbf5e19bd, 0x3c6e7fea ),
	VERT( 0xc2e23805, 0xc21010ca, 0x41e235c2 ),
	NORM( 0x3e5e64a9, 0xbf79e052, 0x3c258101 ),
	VERT( 0xc2e23805, 0xc21010ca, 0x41e235c2 ),
	NORM( 0xbd9033b6, 0xb92221f5, 0x3f7f5d58 ),
	VERT( 0xc2f7b01c, 0xc21219b1, 0x41da55b4 ),
	NORM( 0xbdc79571, 0x00000000, 0x3f7ec80f ),
	VERT( 0xc2f7b01c, 0xc21219b1, 0x41da55b4 ),
	NORM( 0xbc1db099, 0xbf7ff082, 0x3c9fb327 ),
	VERT( 0xc307c714, 0xc20de0d8, 0x41d0604c ),
	NORM( 0xbda0f71d, 0xbf7f1a70, 0x3cea04a8 ),
	VERT( 0xc307c714, 0xc20de0d8, 0x41d0604c ),
	NORM( 0xbe0f36d2, 0xba182d78, 0x3f7d7be1 ),
	VERT( 0xc322d194, 0xc2015863, 0x41a208f0 ),
	NORM( 0xbe291246, 0xbf7c6b61, 0x3cba2e66 ),
	VERT( 0xc322d194, 0xc2015863, 0x41a208f0 ),
	NORM( 0xbe92a98c, 0xbf3108c9, 0x3f29c1c2 ),
	VERT( 0xc33e0101, 0xc1d3db72, 0x412d98da ),
	NORM( 0xbee4e15c, 0xbf2d969f, 0x3f155a8d ),
	VERT( 0xc33e0101, 0xc1d3db72, 0x412d98da ),
	NORM( 0xbe815b14, 0xbf77a14d, 0x3cb55863 ),
	VERT( 0xc322d194, 0x41fbbeae, 0x41a208f0 ),
	NORM( 0xbe2797b5, 0x3f7c8c51, 0x00000000 ),
	VERT( 0xc322d194, 0x41fbbeae, 0x41a208f0 ),
	NORM( 0xbe970906, 0x3f3309c7, 0x3f26ab28 ),
	VERT( 0xc307c714, 0x420beef6, 0x41d0604c ),
	NORM( 0xbe0f5bf8, 0x39b1f1c5, 0x3f7d7a92 ),
	VERT( 0xc307c714, 0x420beef6, 0x41d0604c ),
	NORM( 0xbd906591, 0x3f7f5ce7, 0x00000000 ),
	VERT( 0xc2f7b01c, 0x420eb4a5, 0x40a8e290 ),
	NORM( 0x3ba64c28, 0x3f1e91e0, 0xbf48f8f2 ),
	VERT( 0xc2f7b01c, 0x420eb4a5, 0x40a8e290 ),
	NORM( 0xbb90dcba, 0x3f7fff5c, 0x00000000 ),
	VERT( 0xc2e23805, 0x420c97be, 0x40a8e290 ),
	NORM( 0x3e57ee15, 0x3f7a3deb, 0x3b7222d8 ),
	VERT( 0xc2e23805, 0x420c97be, 0x40a8e290 ),
	NORM( 0x3e0cb8c7, 0x3f0cd690, 0xbf52dcc7 ),
	VERT( 0xc2cf1b06, 0x41fbbeae, 0x40a8e290 ),
	NORM( 0x3e880975, 0x3ee414ff, 0xbf5adec1 ),
	VERT( 0xc2cf1b06, 0x41fbbeae, 0x40a8e290 ),
	NORM( 0x3efeec6a, 0x3f5dfcc5, 0x3c5543df ),
	VERT( 0xc2bfe593, 0x41cce95a, 0x40a8e290 ),
	NORM( 0x3eb06358, 0x3eb07916, 0xbf5f8b63 ),
	VERT( 0xc2bfe593, 0x41cce95a, 0x40a8e290 ),
	NORM( 0x3f354308, 0x3f3493f8, 0x3d0781d9 ),
	VERT( 0xc2b348f1, 0x418fe08e, 0x40a8e290 ),
	NORM( 0x3f5cb59c, 0x3f00e863, 0x3d65b978 ),
	VERT( 0xc2b348f1, 0x418fe08e, 0x40a8e290 ),
	NORM( 0x3ecbe646, 0x3e71f9ab, 0xbf62e5ea ),
	VERT( 0xc2ab8da7, 0x41119a2e, 0x40a8e290 ),
	NORM( 0x3f76d544, 0x3e835fe6, 0x3d895087 ),
	VERT( 0xc2ab8da7, 0x41119a2e, 0x40a8e290 ),
	NORM( 0x3edffda4, 0x3dee5a72, 0xbf644415 ),
	VERT( 0xc2a92d43, 0xbede4300, 0x40a8e290 ),
	NORM( 0x3f7f5f70, 0x3a38cb66, 0x3d8f43eb ),
	VERT( 0xc2a92d43, 0xbede4300, 0x40a8e290 ),
	NORM( 0x3ee71b25, 0x3a324758, 0xbf646fe0 ),
	VERT( 0xc34b543f, 0xbede4300, 0x40a8e290 ),
	NORM( 0xbee78af6, 0xb92a5ad6, 0xbf645394 ),
	VERT( 0xc34b543f, 0xbede4300, 0x40a8e290 ),
	NORM( 0xbf7beed8, 0x3af53519, 0x3e35cafd ),
	VERT( 0xc34987d5, 0x41a4a17d, 0x40a8e290 ),
	NORM( 0xbed0e5ad, 0x3e13d540, 0xbf66c854 ),
	VERT( 0xc34987d5, 0x41a4a17d, 0x40a8e290 ),
	NORM( 0xbf569415, 0x3ec968bc, 0x3ec165d8 ),
	VERT( 0xc3483282, 0x41b5e250, 0x40a8e290 ),
	NORM( 0xbf167a65, 0x3f1e7fea, 0x3f054e0f ),
	VERT( 0xc3483282, 0x41b5e250, 0x40a8e290 ),
	NORM( 0xbe868c6a, 0x3f76f616, 0xbc903512 ),
	VERT( 0xc3483282, 0x41b5e250, 0x40a8e290 ),
	NORM( 0xbe9ca62e, 0x3eb4c15d, 0xbf6258ee ),
	VERT( 0xc33da173, 0x41cce95a, 0x40a8e290 ),
	NORM( 0xbe216f2c, 0x3f16be56, 0xbf4aeff9 ),
	VERT( 0xc33da173, 0x41cce95a, 0x40a8e290 ),
	NORM( 0xbe7dc751, 0x3f77ff07, 0xbc3c5220 ),
	VERT( 0xc322d194, 0x41fbbeae, 0x40a8e290 ),
	NORM( 0xbde27fcd, 0x3f1fd8f6, 0xbf45f28a ),
	VERT( 0xc322d194, 0x41fbbeae, 0x40a8e290 ),
	NORM( 0xbe2ca420, 0x3f7c55e1, 0x00000000 ),
	VERT( 0xc307c714, 0x420beef6, 0x40a8e290 ),
	NORM( 0xbd35f617, 0x3f2207e1, 0xbf45ded2 ),
	VERT( 0xc307c714, 0x420beef6, 0x40a8e290 ),
	NORM( 0xbd9302a8, 0x3f7f56f0, 0x00000000 ),
	VERT( 0xc2fb31ee, 0x41fab434, 0xc1370c04 ),
	NORM( 0x3d170b5a, 0x3e9240ae, 0xbf7526df ),
	VERT( 0xc2e8414b, 0x41f6f9d8, 0xc12d1ed4 ),
	NORM( 0x3df63a8a, 0x3e538d02, 0xbf789440 ),
	VERT( 0xc2d6fad1, 0x41dd00e3, 0xc1194474 ),
	NORM( 0x3e540379, 0x3e0ef0fd, 0xbf77e3ee ),
	VERT( 0xc2c99007, 0x41b3afed, 0xc108b923 ),
	NORM( 0x3e7854bc, 0x3daa4a52, 0xbf7771b6 ),
	VERT( 0xc2bed99d, 0x417baf85, 0xc0e9bd86 ),
	NORM( 0x3e8d68f6, 0x3d0ca4cd, 0xbf75e29d ),
	VERT( 0xc2b733b9, 0x40fc8f0a, 0xc0c8a6e5 ),
	NORM( 0x3e90d5dc, 0x3be3ef1e, 0xbf758985 ),
	VERT( 0xc2b733b9, 0xc10ee028, 0xc0c8a6e5 ),
	NORM( 0x3e930081, 0xbbeebdbb, 0xbf7536e6 ),
	VERT( 0xc2bed99d, 0xc1862412, 0xc0e9bd86 ),
	NORM( 0x3e8a1620, 0xbcdffa18, 0xbf766a15 ),
	VERT( 0xc2c99007, 0xc1bbfc40, 0xc108b923 ),
	NORM( 0x3e5f7373, 0xbd5cca81, 0xbf797302 ),
	VERT( 0xc2d6fad1, 0xc1e54d36, 0xc1194474 ),
	NORM( 0x3e59a4b8, 0xbe0d4b07, 0xbf77a4f4 ),
	VERT( 0xc2e8414b, 0xc1ff4628, 0xc12d1ed4 ),
	NORM( 0x3dfa25b1, 0xbe52ed91, 0xbf788d11 ),
	VERT( 0xc2fb31ee, 0xc2016e9e, 0xc1370c04 ),
	NORM( 0x3d3abd3c, 0xbe98b5ca, 0xbf7411ac ),
	VERT( 0xc34ac4ad, 0xbf0140a0, 0xc11756d4 ),
	NORM( 0xbf7d9bf0, 0xb9911d5d, 0xbe0b9f6d ),
	VERT( 0xc348ee7e, 0x41a5a6b6, 0xc1175a9b ),
	NORM( 0xbf68f6d4, 0x3ec83492, 0xbe0d0882 ),
	VERT( 0xc347317c, 0x41b3d956, 0xc1175a9b ),
	NORM( 0xbf040a1f, 0x3f595591, 0xbdeb9c94 ),
	VERT( 0xc33d87b6, 0x41c7361b, 0xc12de371 ),
	NORM( 0xbe69d002, 0x3f712739, 0xbe7bda46 ),
	VERT( 0xc32938da, 0x41e8b80a, 0xc14bef3a ),
	NORM( 0xbdf7cd21, 0x3f35b7cb, 0xbf31a33c ),
	VERT( 0xc2f78f38, 0x420d47d2, 0xc100af04 ),
	NORM( 0x3c3d75af, 0x3f720547, 0xbea6c5bb ),
	VERT( 0xc2e24e18, 0x420b3054, 0xc0ed83a8 ),
	NORM( 0x3e6ec278, 0x3f6802a7, 0xbeb47ddc ),
	VERT( 0xc2cef825, 0x41f93b38, 0xc0c5cee8 ),
	NORM( 0x3efd5ff3, 0x3f4960dc, 0xbebd079c ),
	VERT( 0xc2bfe9a2, 0x41caddc8, 0xc0a4b847 ),
	NORM( 0x3f2e5487, 0x3f1eb813, 0xbec7882d ),
	VERT( 0xc2b3d72b, 0x418e713b, 0xc07a070c ),
	NORM( 0x3f4d610f, 0x3ee571e9, 0xbec9eead ),
	VERT( 0xc2ab5be7, 0x41102772, 0xc037d9cb ),
	NORM( 0x3f64f026, 0x3e7587d6, 0xbec172ac ),
	VERT( 0xc34b5b76, 0xbedbc9c0, 0xc098912e ),
	NORM( 0xbf7f7fbc, 0x3ad0916e, 0xbd80074d ),
	VERT( 0xc349840e, 0x41a53d84, 0xc098912e ),
	NORM( 0xbf6f877a, 0x3eb2112d, 0xbd752a0a ),
	VERT( 0xc3481c84, 0x41b4d588, 0xc098912e ),
	NORM( 0xbf135b30, 0x3f50cda8, 0xbd6f19af ),
	VERT( 0xc33da5f0, 0x41cc3453, 0xc0c5a2db ),
	NORM( 0xbe83b039, 0x3f770317, 0xbd59f76d ),
	VERT( 0xc322c778, 0x41f93b38, 0xc100dd36 ),
	NORM( 0xbe134641, 0x3f75a872, 0xbe77a14b ),
	VERT( 0xc307cd06, 0x420a893c, 0xc100af04 ),
	NORM( 0xbd89f56e, 0x3f72a65c, 0xbe9f7ebc ),
	VERT( 0xc2e4a7d2, 0x42050eac, 0xc11956a9 ),
	NORM( 0x3e3e8403, 0x3f138c75, 0xbf4bb534 ),
	VERT( 0xc2f90568, 0x42070fc6, 0xc12343d9 ),
	NORM( 0x3c9f00d5, 0x3f2ad935, 0xbf3e9568 ),
	VERT( 0xc2d21c70, 0x41ee2fee, 0xc1057c49 ),
	NORM( 0x3eb408c8, 0x3ee53687, 0xbf5278b6 ),
	VERT( 0xc2c3af1d, 0x41c1c2db, 0xc0e9e1f1 ),
	NORM( 0x3ee348b2, 0x3e9f5401, 0xbf571dd7 ),
	VERT( 0xc2b82250, 0x4187dd2c, 0xc0c22d30 ),
	NORM( 0x3efc6ab5, 0x3e45cdac, 0xbf592b13 ),
	VERT( 0xc2aff8fe, 0x4108e1e9, 0xc0a1168f ),
	NORM( 0x3f04c759, 0x3dbf88fd, 0xbf598f82 ),
	VERT( 0xc34b20dc, 0xbefa6280, 0xc0ddbad8 ),
	NORM( 0xbf7de7a6, 0x3963435a, 0xbe02bd7e ),
	VERT( 0xc3493ed2, 0x41a572bd, 0xc0ddbad8 ),
	NORM( 0xbf6c6b04, 0x3eb8a720, 0xbe05c443 ),
	VERT( 0xc347cece, 0x41b465e6, 0xc0ddbad8 ),
	NORM( 0xbf0f405e, 0x3f51c26a, 0xbdfeffd6 ),
	VERT( 0xc33d7c74, 0x41c9d2c3, 0xc1056642 ),
	NORM( 0xbe859ca8, 0x3f75a6ca, 0xbdd7e527 ),
	VERT( 0xc3256c0d, 0x41f73af6, 0xc123720b ),
	NORM( 0xbdfcb20c, 0x3f6e4b89, 0xbeb01c4a ),
	VERT( 0xc30809a4, 0x42046e91, 0xc12343d9 ),
	NORM( 0xbd4b6d89, 0x3f39f327, 0xbf2f7da4 ),
	VERT( 0xc30cbeb4, 0x4208d667, 0xc100af04 ),
	NORM( 0xbdc9cc45, 0x3f722211, 0xbe9e6207 ),
	VERT( 0xc30cc664, 0x4202cdeb, 0xc12343d9 ),
	NORM( 0xbd81dd93, 0x3f4823fd, 0xbf1ecbd4 ),
	VERT( 0xc30d5b81, 0x41f38780, 0xc147aa9a ),
	NORM( 0x3d1fa2ff, 0x3ee0b90c, 0xbf65cea7 ),
	VERT( 0xc30cc58b, 0x420a37bd, 0x40a8e290 ),
	NORM( 0xbde5ac55, 0x3f7e6297, 0x00000000 ),
	VERT( 0xc30cc58b, 0x420a37bd, 0x40a8e290 ),
	NORM( 0xbdb59947, 0x3f223a37, 0xbf44bb12 ),
	VERT( 0xc30cc58b, 0x420a37bd, 0x40a8e290 ),
	NORM( 0xbd5f049d, 0x3f224955, 0xbf457f13 ),
	VERT( 0xc30cc58b, 0xc20c595a, 0x41c9171a ),
	NORM( 0xbddc617e, 0xbf7e6e0f, 0x3cd0bb9f ),
	VERT( 0xc30cc58b, 0xc20c595a, 0x41c9171a ),
	NORM( 0xbd4f601e, 0xbe7c42c7, 0x3f77c58b ),
	VERT( 0xc30cc58b, 0x420a37bd, 0x41c9171a ),
	NORM( 0xbddebf4f, 0x3f7e7b38, 0x00000000 ),
	VERT( 0xc30cc58b, 0x420a37bd, 0x41c9171a ),
	NORM( 0xbc8186f0, 0x3e40bcc5, 0x3f7b6453 ),
	VERT( 0xc31df824, 0x41882cd5, 0x4215f61f ),
	NORM( 0xbdcea47f, 0x3ec59712, 0x3f6ac06b ),
	VERT( 0xc347cb98, 0x4163202c, 0x4176f25a ),
	NORM( 0xbf464193, 0x3e3cd975, 0x3f1aec94 ),
	VERT( 0xc3469185, 0x4172848d, 0x4182386e ),
	NORM( 0xbf15fafe, 0x3eb747a1, 0x3f3a2105 ),
	VERT( 0xc340aea8, 0x4178d562, 0x41a0f966 ),
	NORM( 0xbf022c00, 0x3eb2460c, 0x3f499bbb ),
	VERT( 0xc329342e, 0x41863491, 0x420255ce ),
	NORM( 0xbecd600a, 0x3ebb573b, 0x3f56fb4f ),
	VERT( 0xc3284116, 0x41986fa5, 0x41f86f00 ),
	NORM( 0xbe9d3aba, 0x3f32249c, 0x3f2631ef ),
	VERT( 0xc31a6be0, 0x419f210b, 0x420e5060 ),
	NORM( 0x3e8fa546, 0x3eca12c8, 0x3f5ffc0b ),
	VERT( 0xc3485aa0, 0x41726b28, 0x415ab5e7 ),
	NORM( 0xbf617890, 0x3e9963d5, 0x3ebbcb80 ),
	VERT( 0xc3470393, 0x4183b228, 0x416477fd ),
	NORM( 0xbf184b4f, 0x3f1ab1db, 0x3f07b0de ),
	VERT( 0xc34073b1, 0x418aa7de, 0x41934b49 ),
	NORM( 0xbeddc6fb, 0x3f2cebb1, 0x3f18c4af ),
	VERT( 0xc3374e6e, 0x4194b297, 0x41bb0b96 ),
	NORM( 0xbec6670f, 0x3f2a88c1, 0x3f2322b0 ),
	VERT( 0xc3380433, 0x41847170, 0x41c7d451 ),
	NORM( 0xbeebca42, 0x3eb38aaf, 0x3f50c0da ),
	VERT( 0xc33569b8, 0x41dda23a, 0x41698bc5 ),
	NORM( 0xbe594428, 0x3f7a2bb2, 0xbb146add ),
	VERT( 0xc33569b8, 0x41dda23a, 0x41698bc5 ),
	NORM( 0xbec433f7, 0x3f2f7798, 0x3f1e80e8 ),
	VERT( 0xc336338a, 0x41d644d4, 0xc13ce956 ),
	NORM( 0xbe33256c, 0x3f50d5f3, 0xbf0d2164 ),
	VERT( 0xc335e46f, 0x41db6bd8, 0xc0e3aea3 ),
	NORM( 0xbe631de4, 0x3f798c54, 0xbcc4da51 ),
	VERT( 0xc3360888, 0x41d99b26, 0xc1146c27 ),
	NORM( 0xbe6aa213, 0x3f782da7, 0xbdb35f42 ),
	VERT( 0xc33569b8, 0x41dda23a, 0x40a8e290 ),
	NORM( 0xbe5d6c17, 0x3f79f140, 0xbb4039de ),
	VERT( 0xc33569b8, 0x41dda23a, 0x40a8e290 ),
	NORM( 0xbe12e54e, 0x3f1a6dc0, 0xbf48d895 ),
	VERT( 0xc336b742, 0x41b3120e, 0xc20e0cda ),
	NORM( 0x3b08e641, 0x3f5e5742, 0xbefdc60a ),
	VERT( 0xc33bb7ba, 0x41b33b00, 0xc20e0cda ),
	NORM( 0xbe175578, 0x3f59a5f3, 0xbf015c07 ),
	VERT( 0xc34118b2, 0x41a01117, 0xc20e0cda ),
	NORM( 0xbec6fb38, 0x3f3b82e8, 0xbf0f1925 ),
	VERT( 0xc342c5ec, 0x41982d70, 0xc20e0cda ),
	NORM( 0xbf38e19e, 0x3edea1d5, 0xbf09b55f ),
	VERT( 0xc344bca0, 0xbf123dc0, 0xc20debd1 ),
	NORM( 0xbf59bb40, 0xbb0197d5, 0xbf06a4a1 ),
	VERT( 0xc32a7943, 0x41b305d6, 0xc20e0cda ),
	NORM( 0xbbf6fc17, 0x3f5ddaf9, 0xbeff70ca ),
	VERT( 0xc336b742, 0x41b3120e, 0xc20e0cda ),
	NORM( 0xba35396e, 0x3f5e2d18, 0xbefe5a1a ),
	VERT( 0xc3364bc8, 0x41c5ea44, 0xc14d9942 ),
	NORM( 0xbd31b44a, 0x3f5a3681, 0xbf05669b ),
	VERT( 0xc33d791e, 0x41c6b1a0, 0xc13e935d ),
	NORM( 0xbe33e8fc, 0x3f703f23, 0xbe983e88 ),
	VERT( 0xc346f928, 0x41b3cea5, 0xc1280a87 ),
	NORM( 0xbef06ba0, 0x3f5f1bef, 0xbe10a7d3 ),
	VERT( 0xc348ccdb, 0x41a5af77, 0xc1280a87 ),
	NORM( 0xbf6065ae, 0x3ee3b44b, 0xbe3c7349 ),
	VERT( 0xc34a967c, 0xbefa8780, 0xc1280a87 ),
	NORM( 0xbf7ba956, 0xbaafa27e, 0xbe3bb7e9 ),
	VERT( 0xc3147216, 0x41c704a6, 0xc160326d ),
	NORM( 0x3e458497, 0x3f12fac5, 0xbf4bb3d1 ),
	VERT( 0xc329edda, 0x41c5cca8, 0xc15c9f26 ),
	NORM( 0xbd051e6a, 0x3f46cab9, 0xbf2115e9 ),
	VERT( 0xc342c5ec, 0xc1a22f7e, 0xc20e0cda ),
	NORM( 0xbf3d8ff0, 0xbed1be8b, 0xbf08657c ),
	VERT( 0xc348ccdb, 0xc1ae6a28, 0xc1280a87 ),
	NORM( 0xbf62c9dc, 0xbed75f30, 0xbe4844ae ),
	VERT( 0xc348ee7e, 0xc1ae6166, 0xc1175a9b ),
	NORM( 0xbf67927b, 0xbece91be, 0xbe0d008c ),
	VERT( 0xc2ab5be7, 0xc1219cd2, 0xc037d9cb ),
	NORM( 0x3f65d8b1, 0xbe727da7, 0xbebe1180 ),
	VERT( 0xc2aff8fe, 0xc11a574a, 0xc0a1168f ),
	NORM( 0x3f04e99c, 0xbdbf804e, 0xbf597ab4 ),
	VERT( 0xc2ad4dfe, 0xbf1a24c0, 0xc093da4f ),
	NORM( 0x3f06b764, 0x39a3c92e, 0xbf59afca ),
	VERT( 0xc2a897b7, 0xbf297120, 0xc01d614a ),
	NORM( 0x3f6e9e9a, 0xbb16358b, 0xbeb96eeb ),
	VERT( 0xc2b4b11e, 0xbf1290e0, 0xc0bb6aa5 ),
	NORM( 0x3e8eabec, 0xbb2a17e5, 0xbf75dbf7 ),
	VERT( 0xc3493ed2, 0xc1ae2d6e, 0xc0ddbad8 ),
	NORM( 0xbf6ba867, 0xbebd839c, 0xbdffcfcd ),
	VERT( 0xc349840e, 0xc1adf834, 0xc098912e ),
	NORM( 0xbf6fd07c, 0xbeafc01f, 0xbd8b4172 ),
	VERT( 0xc2ab8da7, 0xc1230f8e, 0x40a8e290 ),
	NORM( 0x3f76dc00, 0xbe83751a, 0x3d84f398 ),
	VERT( 0xc2ab8da7, 0xc1230f8e, 0x40a8e290 ),
	NORM( 0x3ede62f1, 0xbdedd8cf, 0xbf64aa7f ),
	VERT( 0xc33bb7ba, 0xc1bd3d10, 0xc20e0cda ),
	NORM( 0xbe3b8c4e, 0xbf5b6ac5, 0xbef686a4 ),
	VERT( 0xc3364bc8, 0xc1cea4f4, 0xc14d9942 ),
	NORM( 0xbd9b9b3b, 0xbf4cb34f, 0xbf187f4a ),
	VERT( 0xc33d791e, 0xc1cf6c50, 0xc13e935d ),
	NORM( 0xbe75a2e9, 0xbf66d4d6, 0xbeb8317a ),
	VERT( 0xc33d87b6, 0xc1cff0cc, 0xc12de371 ),
	NORM( 0xbe8482a7, 0xbf6b3ebb, 0xbe9864fc ),
	VERT( 0xc336338a, 0xc1deff84, 0xc13ce956 ),
	NORM( 0xbe4f2637, 0xbf3c4620, 0xbf258cf5 ),
	VERT( 0xc346f928, 0xc1bc8956, 0xc1280a87 ),
	NORM( 0xbf030680, 0xbf58a34a, 0xbe17995c ),
	VERT( 0xc34118b2, 0xc1aa1326, 0xc20e0cda ),
	NORM( 0xbee1f29e, 0xbf384d69, 0xbf092220 ),
	VERT( 0xc347317c, 0xc1bc9406, 0xc1175a9b ),
	NORM( 0xbf01c3fc, 0xbf5afe62, 0xbdd96d70 ),
	VERT( 0xc32a8db7, 0xc1bc6448, 0xc20e0cda ),
	NORM( 0xbbe3d74f, 0xbf5ecac5, 0xbefc29b1 ),
	VERT( 0xc3147216, 0xc1cfbf56, 0xc160326d ),
	NORM( 0x3e4a1f04, 0xbf1546bc, 0xbf49bd99 ),
	VERT( 0xc32a024e, 0xc1cde3ba, 0xc15c9f26 ),
	NORM( 0xbd25eaab, 0xbf45a2b4, 0xbf22625f ),
	VERT( 0xc32938da, 0xc1f172ba, 0xc14bef3a ),
	NORM( 0xbde6b0a2, 0xbf28a01d, 0xbf3e7258 ),
	VERT( 0xc30d5b81, 0xc1fa7ea6, 0xc147aa9a ),
	NORM( 0x3d2c65e3, 0xbecd4449, 0xbf6a473b ),
	VERT( 0xc336b742, 0xc1bd141e, 0xc20e0cda ),
	NORM( 0x3b017f2f, 0xbf5e5bc6, 0xbefdb647 ),
	VERT( 0xc3256c0d, 0xc1fff5a6, 0xc123720b ),
	NORM( 0xbe0a0ba5, 0xbf6690f5, 0xbed382b3 ),
	VERT( 0xc322c778, 0xc200faf4, 0xc100dd36 ),
	NORM( 0xbe226d81, 0xbf7a33df, 0xbe0f6d9e ),
	VERT( 0xc335e46f, 0xc1e42688, 0xc0e3aea3 ),
	NORM( 0xbe6463b9, 0xbf791a6e, 0xbd6f2ddc ),
	VERT( 0xc3360888, 0xc1e255d6, 0xc1146c27 ),
	NORM( 0xbe69b69e, 0xbf76095f, 0xbe1f679f ),
	VERT( 0xc33d7c74, 0xc1d28d72, 0xc1056642 ),
	NORM( 0xbe861e40, 0xbf750c9f, 0xbdfbb414 ),
	VERT( 0xc33da5f0, 0xc1d4ef04, 0xc0c5a2db ),
	NORM( 0xbe84e42f, 0xbf76846e, 0xbd95b535 ),
	VERT( 0xc33569b8, 0xc1e65cea, 0x40a8e290 ),
	NORM( 0xbe6577eb, 0xbf796b50, 0x3cbd898b ),
	VERT( 0xc33569b8, 0xc1e65cea, 0x40a8e290 ),
	NORM( 0xbe0f8a7b, 0xbf17109b, 0xbf4b89b1 ),
	VERT( 0xc33da173, 0xc1d5a40a, 0x40a8e290 ),
	NORM( 0xbe1dd991, 0xbf137289, 0xbf4d84d0 ),
	VERT( 0xc33da173, 0xc1d5a40a, 0x40a8e290 ),
	NORM( 0xbe822a8c, 0xbf778662, 0x3cb3e237 ),
	VERT( 0xc322d194, 0xc2023caf, 0x40a8e290 ),
	NORM( 0xbe2e4e7a, 0xbf7c323b, 0x3cbafdf7 ),
	VERT( 0xc322d194, 0xc2023caf, 0x40a8e290 ),
	NORM( 0xbddd3f30, 0xbf1c529c, 0xbf48d58d ),
	VERT( 0xc30809a4, 0xc208cbe9, 0xc12343d9 ),
	NORM( 0xbd211c6c, 0xbf3c7581, 0xbf2cf7b9 ),
	VERT( 0xc307cd06, 0xc20ee694, 0xc100af04 ),
	NORM( 0xbd8a37bf, 0xbf72a7ae, 0xbe9f731b ),
	VERT( 0xc30cbeb4, 0xc20d33bf, 0xc100af04 ),
	NORM( 0xbdde8330, 0xbf76e920, 0xbe767ee9 ),
	VERT( 0xc30cc664, 0xc2072b43, 0xc12343d9 ),
	NORM( 0xbd9cb535, 0xbf4cd646, 0xbf184bcb ),
	VERT( 0xc30cc58b, 0xc20e9515, 0x40a8e290 ),
	NORM( 0xbd59e2e9, 0xbf1e8dbf, 0xbf48870a ),
	VERT( 0xc30cc58b, 0xc20e9515, 0x40a8e290 ),
	NORM( 0xbdb17053, 0xbf1e82c2, 0xbf47cbbe ),
	VERT( 0xc30cc58b, 0xc20e9515, 0x40a8e290 ),
	NORM( 0xbde35e09, 0xbf7e5610, 0x3ccdcb8d ),
	VERT( 0xc307c714, 0xc2104c4e, 0x40a8e290 ),
	NORM( 0xbda1c874, 0xbf7f1874, 0x3ce9a43a ),
	VERT( 0xc307c714, 0xc2104c4e, 0x40a8e290 ),
	NORM( 0xbd31de94, 0xbf1e5865, 0xbf48d89f ),
	VERT( 0xc2f78f38, 0xc211a52a, 0xc100af04 ),
	NORM( 0x3c34b87d, 0xbf71f299, 0xbea7346d ),
	VERT( 0xc2f90568, 0xc20b6d1e, 0xc12343d9 ),
	NORM( 0x3cc606d2, 0xbf2c1178, 0xbf3d7279 ),
	VERT( 0xc2e4a7d2, 0xc2096c05, 0xc11956a9 ),
	NORM( 0x3e3f6390, 0xbf135923, 0xbf4bcd40 ),
	VERT( 0xc2e24e18, 0xc20f8dac, 0xc0ed83a8 ),
	NORM( 0x3e6e4247, 0xbf67c675, 0xbeb5dc3d ),
	VERT( 0xc2d21c70, 0xc1f6ea9e, 0xc1057c49 ),
	NORM( 0x3eb47395, 0xbee502a7, 0xbf526ff6 ),
	VERT( 0xc2cef825, 0xc200faf4, 0xc0c5cee8 ),
	NORM( 0x3efcf2af, 0xbf49274d, 0xbebe8d83 ),
	VERT( 0xc2c3af1d, 0xc1ca7d8a, 0xc0e9e1f1 ),
	NORM( 0x3ee3e972, 0xbe9f446c, 0xbf56f631 ),
	VERT( 0xc2bfe9a2, 0xc1d39878, 0xc0a4b847 ),
	NORM( 0x3f2d59b4, 0xbf1eec0e, 0xbeca47f7 ),
	VERT( 0xc2b82250, 0xc19097dc, 0xc0c22d30 ),
	NORM( 0x3efd08d1, 0xbe4599b0, 0xbf590004 ),
	VERT( 0xc2b3d72b, 0xc1972bec, 0xc07a070c ),
	NORM( 0x3f4d7bc6, 0xbee50057, 0xbeca02de ),
	VERT( 0xc347cece, 0xc1bd2096, 0xc0ddbad8 ),
	NORM( 0xbf0d78c6, 0xbf531572, 0xbdf89072 ),
	VERT( 0xc3481c84, 0xc1bd9038, 0xc098912e ),
	NORM( 0xbf14f3dd, 0xbf4f5461, 0xbd9889aa ),
	VERT( 0xc2e23805, 0xc210f517, 0x40a8e290 ),
	NORM( 0x3e08eab3, 0xbf09cb08, 0xbf550510 ),
	VERT( 0xc2e23805, 0xc210f517, 0x40a8e290 ),
	NORM( 0x3e56fe08, 0xbf7a47d8, 0x3c263ea8 ),
	VERT( 0xc2f7b01c, 0xc21311fd, 0x40a8e290 ),
	NORM( 0xbc5bfb42, 0xbf7fece9, 0x3ca44b40 ),
	VERT( 0xc2f7b01c, 0xc21311fd, 0x40a8e290 ),
	NORM( 0x3b9d0e56, 0xbf1afc9b, 0xbf4bbfb7 ),
	VERT( 0xc2cf1b06, 0xc2023caf, 0x40a8e290 ),
	NORM( 0x3efeb8ab, 0xbf5e09ff, 0x3c6ecb99 ),
	VERT( 0xc2cf1b06, 0xc2023caf, 0x40a8e290 ),
	NORM( 0x3e8544ee, 0xbee012f3, 0xbf5c5373 ),
	VERT( 0xc2bfe593, 0xc1d5a40a, 0x40a8e290 ),
	NORM( 0x3f353861, 0xbf34b4fb, 0x3ccaf4e2 ),
	VERT( 0xc2bfe593, 0xc1d5a40a, 0x40a8e290 ),
	NORM( 0x3eadb730, 0xbeae39f4, 0xbf608194 ),
	VERT( 0xc2b348f1, 0xc1989b3e, 0x40a8e290 ),
	NORM( 0x3f5cbf4f, 0xbf012359, 0x3d366b84 ),
	VERT( 0xc2b348f1, 0xc1989b3e, 0x40a8e290 ),
	NORM( 0x3ec9bac7, 0xbe70423e, 0xbf637f08 ),
	VERT( 0xc336a4dc, 0xc1a315c0, 0xc21787f9 ),
	NORM( 0xb9be99b1, 0xbe9d787f, 0xbf739762 ),
	VERT( 0xc336a4dc, 0x419985f5, 0xc21787f9 ),
	NORM( 0xb9b876d0, 0x3e9f5aea, 0xbf7348e6 ),
	VERT( 0xc33ba690, 0x4199a92c, 0xc21787f9 ),
	NORM( 0xbdb6a335, 0x3ea6cbb5, 0xbf70f4a2 ),
	VERT( 0xc33e8850, 0x41892e16, 0xc21787f9 ),
	NORM( 0xbe0c9ab5, 0x3e7b69ce, 0xbf75a97f ),
	VERT( 0xc34012b8, 0x4182652f, 0xc21787f9 ),
	NORM( 0xbea24b0b, 0x3e2dfcd8, 0xbf6edeec ),
	VERT( 0xc341c30b, 0xbf0d0b40, 0xc2176b90 ),
	NORM( 0xbeb35792, 0x3969c9e9, 0xbf6fc807 ),
	VERT( 0xc34012b8, 0xc18bf4fa, 0xc21787f9 ),
	NORM( 0xbea18ef6, 0xbe2a385c, 0xbf6f2a2e ),
	VERT( 0xc33e8850, 0xc192bde0, 0xc21787f9 ),
	NORM( 0xbe1a7a93, 0xbe8a9097, 0xbf7366e1 ),
	VERT( 0xc33ba690, 0xc1a338f6, 0xc21787f9 ),
	NORM( 0xbdda5033, 0xbeb743cf, 0xbf6d79d4 ),
	VERT( 0xc31e97f6, 0xc1a3f2be, 0xc21787f9 ),
	NORM( 0x3e845a24, 0xbe975b39, 0xbf6b6f4f ),
	VERT( 0xc31e97f6, 0x419a62f3, 0xc21787f9 ),
	NORM( 0x3e825757, 0x3e9b3c45, 0xbf6b1565 ),
	VERT( 0xc32b2545, 0x4198eebc, 0xc21787f9 ),
	NORM( 0xbab0ac31, 0x3ea01535, 0xbf732a42 ),
	VERT( 0xc336a4dc, 0x419985f5, 0xc21787f9 ),
	NORM( 0x3a8b97ca, 0x3ea23639, 0xbf72cfeb ),
	VERT( 0xc336a4dc, 0xc1a315c0, 0xc21787f9 ),
	NORM( 0x3b0a9e57, 0xbea073fc, 0xbf731a8c ),
	VERT( 0xc32b2545, 0xc1a27e88, 0xc21787f9 ),
	NORM( 0x39b1bae8, 0xbea018a4, 0xbf7329c0 ),
	VERT( 0xc3119ec2, 0xc1be3b38, 0xc16af1cc ),
	NORM( 0x3f14fea0, 0xbe5bada2, 0xbf48ccac ),
	VERT( 0xc3119ec2, 0x41b56324, 0xc16af1cc ),
	NORM( 0x3f14c878, 0x3e5be4cb, 0xbf48f10b ),
	VERT( 0xc31ade28, 0xc1a532e6, 0xc20e0cda ),
	NORM( 0x3f363784, 0xbe94f2fc, 0xbf23aa7e ),
	VERT( 0xc31d0949, 0xc1c0fbf6, 0xc207fae0 ),
	NORM( 0x3eb02405, 0xbf5a84a7, 0xbec84b43 ),
	VERT( 0xc31f5460, 0xc1bce738, 0xc20e0cda ),
	NORM( 0x3dfd9d50, 0xbf55819e, 0xbf09a507 ),
	VERT( 0xc31ce3dd, 0x41b61f5c, 0xc208280c ),
	NORM( 0x3eaf2a5d, 0x3f5a0e13, 0xbecb25ec ),
	VERT( 0xc31ade28, 0x419c7836, 0xc20e0cda ),
	NORM( 0x3f3520e2, 0x3e9d27e2, 0xbf22f438 ),
	VERT( 0xc31f6514, 0x41b4337f, 0xc20e0cda ),
	NORM( 0x3de15489, 0x3f580a03, 0xbf066c80 ),
	VERT( 0xc2a9178b, 0xbeef3280, 0x40829df6 ),
	NORM( 0x3f7fd050, 0x3b11d318, 0x3d1bf59c ),
	VERT( 0xc2a9178b, 0xbeef3280, 0x40829df6 ),
	NORM( 0x3eef0463, 0xb95af75e, 0x3f62648f ),
	VERT( 0xc2ab86cf, 0xc122dc92, 0x40829df6 ),
	NORM( 0x3ee8d0d5, 0xbdfa9808, 0x3f61d735 ),
	VERT( 0xc2ab86cf, 0xc122dc92, 0x40829df6 ),
	NORM( 0x3f758e5b, 0xbe9038f8, 0x3cc5b703 ),
	VERT( 0xc3499516, 0xc1ad6d70, 0x40829df6 ),
	NORM( 0xbf70dd46, 0xbead6544, 0xbbfb72bc ),
	VERT( 0xc3499516, 0xc1ad6d70, 0x40829df6 ),
	NORM( 0xbed880fb, 0xbe1aaa57, 0x3f64bdb1 ),
	VERT( 0xc34b62b7, 0xbeddfd00, 0x40829df6 ),
	NORM( 0xbeec51a5, 0x35c40ebc, 0x3f631990 ),
	VERT( 0xc34b62b7, 0xbeddfd00, 0x40829df6 ),
	NORM( 0xbf7ffed1, 0x3a53d4da, 0xbbc3205b ),
	VERT( 0xc33d9643, 0xc1d5928e, 0x40829df6 ),
	NORM( 0xbe2828af, 0xbf1d1d8d, 0x3f45b1fa ),
	VERT( 0xc33d9643, 0xc1d5928e, 0x40829df6 ),
	NORM( 0xbe825a56, 0xbf778d92, 0xbc1695ed ),
	VERT( 0xc33569ee, 0xc1e62a7c, 0x40829df6 ),
	NORM( 0xbe5dbeef, 0xbf79e890, 0xbc3b5bdd ),
	VERT( 0xc33569ee, 0xc1e62a7c, 0x40829df6 ),
	NORM( 0xbe18d087, 0xbf20e41b, 0x3f436c8e ),
	VERT( 0xc322d0be, 0xc202221c, 0x40829df6 ),
	NORM( 0xbe2a8a2a, 0xbf7c5f86, 0xbca35a29 ),
	VERT( 0xc322d0be, 0xc202221c, 0x40829df6 ),
	NORM( 0xbdebc7cb, 0xbf26acbe, 0x3f400f41 ),
	VERT( 0xc30cc4fa, 0xc20e77e0, 0x40829df6 ),
	NORM( 0xbde4d800, 0xbf7e4f02, 0xbcd64db5 ),
	VERT( 0xc30cc4fa, 0xc20e77e0, 0x40829df6 ),
	NORM( 0xbdbd60ac, 0xbf293491, 0x3f3ea4e5 ),
	VERT( 0xc30cc4fa, 0xc20e77e0, 0x40829df6 ),
	NORM( 0xbd68cb1a, 0xbf29669f, 0x3f3f6230 ),
	VERT( 0xc307c792, 0xc2102ebc, 0x40829df6 ),
	NORM( 0xbd92cf19, 0xbf7f4068, 0xbcd8b863 ),
	VERT( 0xc307c792, 0xc2102ebc, 0x40829df6 ),
	NORM( 0xbd3e2d78, 0xbf2939d2, 0x3f3fb8d6 ),
	VERT( 0xc2e239f0, 0xc210d5e3, 0x40829df6 ),
	NORM( 0x3e1348eb, 0xbf141135, 0x3f4d9039 ),
	VERT( 0xc2e239f0, 0xc210d5e3, 0x40829df6 ),
	NORM( 0x3e53c586, 0xbf7a5e99, 0xbcde0c34 ),
	VERT( 0xc2f7ad64, 0xc212f3d5, 0x40829df6 ),
	NORM( 0x3bac1aab, 0xbf25f317, 0x3f42ec42 ),
	VERT( 0xc2f7ad64, 0xc212f3d5, 0x40829df6 ),
	NORM( 0xbb86658d, 0xbf7fe6da, 0xbce06d65 ),
	VERT( 0xc2cf17a8, 0xc2021da1, 0x40829df6 ),
	NORM( 0x3efa1c8c, 0xbf5f4c62, 0xbcbd0711 ),
	VERT( 0xc2cf17a8, 0xc2021da1, 0x40829df6 ),
	NORM( 0x3e8f5670, 0xbef04e65, 0x3f5663af ),
	VERT( 0xc2bfe602, 0xc1d56c50, 0x40829df6 ),
	NORM( 0x3f32b9bf, 0xbf37245f, 0xbce7169e ),
	VERT( 0xc2bfe602, 0xc1d56c50, 0x40829df6 ),
	NORM( 0x3ebb8de6, 0xbebb6ee8, 0x3f5afedb ),
	VERT( 0xc2b35a35, 0xc1986ea6, 0x40829df6 ),
	NORM( 0x3ed819c0, 0xbe8111bc, 0x3f5eed4b ),
	VERT( 0xc2b35a35, 0xc1986ea6, 0x40829df6 ),
	NORM( 0x3f596d30, 0xbf0714ab, 0xbc771814 ),
	VERT( 0xc34822c4, 0xc1be7f46, 0x40829df6 ),
	NORM( 0xbea3e5d4, 0xbec00b0a, 0x3f5eb60c ),
	VERT( 0xc34822c4, 0xc1be7f46, 0x40829df6 ),
	NORM( 0xbf13f13b, 0xbf50e845, 0xbc270917 ),
	VERT( 0xc2ab86cf, 0x41116733, 0x40829df6 ),
	NORM( 0x3eec3d7f, 0x3dfde6e3, 0x3f60e452 ),
	VERT( 0xc2ab86cf, 0x41116733, 0x40829df6 ),
	NORM( 0x3f75192b, 0x3e93c1d4, 0x3c0bd552 ),
	VERT( 0xc3499516, 0x41a4b2bf, 0x40829df6 ),
	NORM( 0xbed9b93f, 0x3e1a5a53, 0x3f6476ee ),
	VERT( 0xc3499516, 0x41a4b2bf, 0x40829df6 ),
	NORM( 0xbf70cba4, 0x3eadcea2, 0xbb928a14 ),
	VERT( 0xc33d9643, 0x41ccd7df, 0x40829df6 ),
	NORM( 0xbe827465, 0x3f7789c7, 0xbc1fe0c0 ),
	VERT( 0xc33d9643, 0x41ccd7df, 0x40829df6 ),
	NORM( 0xbe2c2a23, 0x3f20ca83, 0x3f427fa2 ),
	VERT( 0xc33569ee, 0x41dd6fcc, 0x40829df6 ),
	NORM( 0xbe1c1076, 0x3f242961, 0x3f40859f ),
	VERT( 0xc33569ee, 0x41dd6fcc, 0x40829df6 ),
	NORM( 0xbe6111ca, 0x3f79b7f8, 0xbc504027 ),
	VERT( 0xc322d0be, 0x41fb8989, 0x40829df6 ),
	NORM( 0xbdf12b22, 0x3f2a441d, 0x3f3cc6dd ),
	VERT( 0xc322d0be, 0x41fb8989, 0x40829df6 ),
	NORM( 0xbe2bdd5c, 0x3f7c4e49, 0xbcb426ef ),
	VERT( 0xc30cc4fa, 0x420a1a88, 0x40829df6 ),
	NORM( 0xbde43cf7, 0x3f7e5220, 0xbcd1cd6a ),
	VERT( 0xc30cc4fa, 0x420a1a88, 0x40829df6 ),
	NORM( 0xbd6dfa47, 0x3f2d2c30, 0x3f3bf3c3 ),
	VERT( 0xc30cc4fa, 0x420a1a88, 0x40829df6 ),
	NORM( 0xbdc16932, 0x3f2ccf2e, 0x3f3b51b2 ),
	VERT( 0xc307c792, 0x420bd164, 0x40829df6 ),
	NORM( 0xbd425cc8, 0x3f2cff26, 0x3f3c4f50 ),
	VERT( 0xc307c792, 0x420bd164, 0x40829df6 ),
	NORM( 0xbd9256e1, 0x3f7f4117, 0xbcda92c7 ),
	VERT( 0xc2e239f0, 0x420c788a, 0x40829df6 ),
	NORM( 0x3e17017c, 0x3f170974, 0x3f4b3883 ),
	VERT( 0xc2e239f0, 0x420c788a, 0x40829df6 ),
	NORM( 0x3e532405, 0x3f7a6968, 0xbcd380ef ),
	VERT( 0xc2f7ad64, 0x420e967c, 0x40829df6 ),
	NORM( 0xbb666f3d, 0x3f7fe732, 0xbcdf8306 ),
	VERT( 0xc2f7ad64, 0x420e967c, 0x40829df6 ),
	NORM( 0x3bb51cf6, 0x3f2992df, 0x3f3fc723 ),
	VERT( 0xc2cf17a8, 0x41fb8092, 0x40829df6 ),
	NORM( 0x3e92169f, 0x3ef42f8a, 0x3f54d2d7 ),
	VERT( 0xc2cf17a8, 0x41fb8092, 0x40829df6 ),
	NORM( 0x3ef9dcd4, 0x3f5f609f, 0xbcb149ae ),
	VERT( 0xc2bfe602, 0x41ccb1a0, 0x40829df6 ),
	NORM( 0x3f33934f, 0x3f365cb3, 0xbcb71235 ),
	VERT( 0xc2bfe602, 0x41ccb1a0, 0x40829df6 ),
	NORM( 0x3ebd881a, 0x3ebd11dd, 0x3f5a3783 ),
	VERT( 0xc2b35a35, 0x418fb3f6, 0x40829df6 ),
	NORM( 0x3f58f229, 0x3f07cc93, 0xbcac7f6c ),
	VERT( 0xc2b35a35, 0x418fb3f6, 0x40829df6 ),
	NORM( 0x3edb901b, 0x3e82401a, 0x3f5de835 ),
	VERT( 0xc34822c4, 0x41b5c495, 0x40829df6 ),
	NORM( 0xbf13a163, 0x3f512241, 0xbc04e559 ),
	VERT( 0xc34822c4, 0x41b5c495, 0x40829df6 ),
	NORM( 0xbea67fbf, 0x3ec24991, 0x3f5dbd70 ),
	VERT( 0xc2ab71ff, 0xbee1c240, 0x4096721f ),
	NORM( 0x3f7ffd07, 0x3af51d8c, 0xbc190f88 ),
	VERT( 0xc2adce7a, 0xc11fa4b4, 0x4096721f ),
	NORM( 0x3f764060, 0xbe8bc567, 0xbc5fc1d8 ),
	VERT( 0xc3486dba, 0xc1a9e850, 0x4096721f ),
	NORM( 0xbf7077e5, 0xbeaf9e6a, 0xbb32a3e5 ),
	VERT( 0xc34a319c, 0xbed83440, 0x4096721f ),
	NORM( 0xbf7ffefd, 0x3a560c4a, 0xbbb422ef ),
	VERT( 0xc334a27d, 0xc1e19f9e, 0x4096721f ),
	NORM( 0xbe5a4bc7, 0xbf7a06ba, 0xbcd59085 ),
	VERT( 0xc33ca9d1, 0xc1d14ea6, 0x4096721f ),
	NORM( 0xbe8080df, 0xbf77b945, 0xbccc196e ),
	VERT( 0xc32268f8, 0xc1ff2064, 0x4096721f ),
	NORM( 0xbe267f15, 0xbf7c7ee8, 0xbce0c606 ),
	VERT( 0xc30ccdf7, 0xc20ba7ee, 0x4096721f ),
	NORM( 0xbe0dd4e9, 0xbf7d6d39, 0xbcea6df5 ),
	VERT( 0xc30ccdf7, 0xc20ba7ee, 0x4096721f ),
	NORM( 0xbdaf3039, 0xbf7ef717, 0xbce077b2 ),
	VERT( 0xc307e9a8, 0xc20d562a, 0x4096721f ),
	NORM( 0xbd967e2e, 0xbf7f3523, 0xbce50714 ),
	VERT( 0xc2e365d2, 0xc20dfaab, 0x4096721f ),
	NORM( 0x3e26ab20, 0xbf7c7b14, 0xbce9a66b ),
	VERT( 0xc2f86d69, 0xc2100d54, 0x4096721f ),
	NORM( 0xbc910598, 0xbf7fdb58, 0xbce86c31 ),
	VERT( 0xc2d0a7c0, 0xc1ff1b6c, 0x4096721f ),
	NORM( 0x3eec66b5, 0xbf62fd45, 0xbccb8a38 ),
	VERT( 0xc2c1c248, 0xc1d1396c, 0x4096721f ),
	NORM( 0x3f2e7096, 0xbf3b46f6, 0xbcbaa057 ),
	VERT( 0xc2b56f90, 0xc1956f4e, 0x4096721f ),
	NORM( 0x3f5791b4, 0xbf09f84f, 0xbcaff272 ),
	VERT( 0xc347023e, 0xc1bab6b8, 0x4096721f ),
	NORM( 0xbeeb3488, 0xbf635110, 0xbcb72f14 ),
	VERT( 0xc2adce7a, 0x410ea013, 0x4096721f ),
	NORM( 0x3f7604a2, 0x3e8d559e, 0xbc84df67 ),
	VERT( 0xc3486dba, 0x41a16600, 0x4096721f ),
	NORM( 0xbf719feb, 0x3ea90e6c, 0xbc3aa4f5 ),
	VERT( 0xc334a27d, 0x41d91d4e, 0x4096721f ),
	NORM( 0xbe5a0f30, 0x3f7a090a, 0xbcda27ee ),
	VERT( 0xc33ca9d1, 0x41c8cc57, 0x4096721f ),
	NORM( 0xbe8076e8, 0x3f77b9e5, 0xbccf5287 ),
	VERT( 0xc32268f8, 0x41f69e16, 0x4096721f ),
	NORM( 0xbe2646a3, 0x3f7c8061, 0xbce4918c ),
	VERT( 0xc30ccdf7, 0x420766c5, 0x4096721f ),
	NORM( 0xbdaf2fdd, 0x3f7ef621, 0xbce4cf16 ),
	VERT( 0xc30ccdf7, 0x420766c5, 0x4096721f ),
	NORM( 0xbe0dd4a1, 0x3f7d6cdb, 0xbcec0e0a ),
	VERT( 0xc307e9a8, 0x42091502, 0x4096721f ),
	NORM( 0xbd9688fb, 0x3f7f33d2, 0xbcea6371 ),
	VERT( 0xc2f86d69, 0x420bcc2b, 0x4096721f ),
	NORM( 0xbc932dd5, 0x3f7fd9dd, 0xbced875b ),
	VERT( 0xc2e365d2, 0x4209b982, 0x4096721f ),
	NORM( 0x3e2565f7, 0x3f7c87fc, 0xbceb9b7b ),
	VERT( 0xc2d0a7c0, 0x41f6991b, 0x4096721f ),
	NORM( 0x3eeb9e84, 0x3f633135, 0xbccbe141 ),
	VERT( 0xc2c1c248, 0x41c8b71c, 0x4096721f ),
	NORM( 0x3f2e2361, 0x3f3b9006, 0xbcb57737 ),
	VERT( 0xc2b56f90, 0x418cecfc, 0x4096721f ),
	NORM( 0x3f5764fe, 0x3f0a3bf9, 0xbcb66bb5 ),
	VERT( 0xc347023e, 0x41b23467, 0x4096721f ),
	NORM( 0xbee7170f, 0x3f645453, 0xbce49ac9 ),
	VERT( 0xc35b0404, 0xbeef5f80, 0xc0a68c60 ),
	NORM( 0xbf5928d6, 0xb9923318, 0xbf079085 ),
	VERT( 0xc35b0404, 0x4004df90, 0xc09bd509 ),
	NORM( 0xbf593dce, 0x3e0c0345, 0xbf02d4ec ),
	VERT( 0xc35b0404, 0x408e4984, 0xc078d3e4 ),
	NORM( 0xbf594b4a, 0x3e874cff, 0xbeea7561 ),
	VERT( 0xc35b0404, 0x40cf6be2, 0xc014de81 ),
	NORM( 0xbf595069, 0x3ebf5d04, 0xbebf5ea9 ),
	VERT( 0xc35b0404, 0x4100b349, 0xbe94ce2c ),
	NORM( 0xbf594cd5, 0x3eea6ff5, 0xbe874c7d ),
	VERT( 0xc35b0404, 0x411068d5, 0x400519a8 ),
	NORM( 0xbf592e9c, 0x3f0302ef, 0xbe0acab1 ),
	VERT( 0xc3595296, 0x410aaae6, 0x4095489a ),
	NORM( 0xbf59c5b7, 0x3efbd68b, 0x3e3df91f ),
	VERT( 0xc35b0404, 0x411068d5, 0x40e55860 ),
	NORM( 0xbf592c60, 0x3f02cda6, 0x3e0e1ca6 ),
	VERT( 0xc35b0404, 0x4100b349, 0x4118990b ),
	NORM( 0xbf58f43b, 0x3eeb475a, 0x3e880ed0 ),
	VERT( 0xc35b0404, 0x40cf6be2, 0x41392a3b ),
	NORM( 0xbf58d2ef, 0x3ec055b9, 0x3ec09d9b ),
	VERT( 0xc35b0404, 0x408e4984, 0x41522793 ),
	NORM( 0xbf58b156, 0x3e88244f, 0x3eec310a ),
	VERT( 0xc35b0404, 0x4004df90, 0x4161dd1e ),
	NORM( 0xbf5891ba, 0x3e0cfb8e, 0x3f03e07a ),
	VERT( 0xc35b0404, 0xbeef5f80, 0x416738ca ),
	NORM( 0xbf587648, 0xb9941093, 0x3f08aceb ),
	VERT( 0xc35b0404, 0xc040b780, 0x4161dd1e ),
	NORM( 0xbf5860eb, 0xbe0dd5b7, 0x3f0421e9 ),
	VERT( 0xc35b0404, 0xc0ac3574, 0x41522793 ),
	NORM( 0xbf585323, 0xbe88f105, 0x3eed13ae ),
	VERT( 0xc35b0404, 0xc0ed57d4, 0x41392a3b ),
	NORM( 0xbf584de3, 0xbec1a500, 0x3ec1a356 ),
	VERT( 0xc35b0404, 0xc10fa944, 0x4118990b ),
	NORM( 0xbf58518e, 0xbeed1929, 0x3e88f187 ),
	VERT( 0xc35b0404, 0xc11f5ece, 0x40e55860 ),
	NORM( 0xbf58725f, 0xbf03ee32, 0x3e0f2c4c ),
	VERT( 0xc3595296, 0xc119d04e, 0x4095489a ),
	NORM( 0xbf5671ca, 0xbf03f54c, 0x3e38e4b1 ),
	VERT( 0xc35b0404, 0xc11f5ece, 0x400519a8 ),
	NORM( 0xbf587466, 0xbf042460, 0xbe0bd1b8 ),
	VERT( 0xc35b0404, 0xc10fa944, 0xbe94ce2c ),
	NORM( 0xbf58ab82, 0xbeec40ca, 0xbe882e1a ),
	VERT( 0xc35b0404, 0xc0ed57d4, 0xc014de81 ),
	NORM( 0xbf58ccee, 0xbec0ab24, 0xbec0633d ),
	VERT( 0xc35b0404, 0xc0ac3574, 0xc078d3e4 ),
	NORM( 0xbf58ee72, 0xbe881898, 0xbeeb5706 ),
	VERT( 0xc35b0404, 0xc040b780, 0xc09bd509 ),
	NORM( 0xbf590dc6, 0xbe0cdb72, 0xbf031613 ),
	VERT( 0xc3595107, 0xbee96480, 0xc0c60258 ),
	NORM( 0xbe8f3aba, 0x396ce497, 0xbf75c76e ),
	VERT( 0xc3595107, 0x4015b8b8, 0xc0ba3baf ),
	NORM( 0xbe8f78fa, 0x3e7e9358, 0xbf6d5bf1 ),
	VERT( 0xc3595107, 0x409e3686, 0xc097b520 ),
	NORM( 0xbe8f9fda, 0x3ef5c33d, 0xbf54ca00 ),
	VERT( 0xc3595107, 0x40e5ca00, 0xc041920b ),
	NORM( 0xbe8facca, 0x3f2dbfac, 0xbf2dbe4e ),
	VERT( 0xc3595107, 0x410e5b0d, 0xbf49ac56 ),
	NORM( 0xbe8f9ef0, 0x3f54cb0c, 0xbef5c027 ),
	VERT( 0xc3595107, 0x411f9e55, 0x3fe8926c ),
	NORM( 0xbe8f8ad0, 0x3f6d74b6, 0xbe7cf836 ),
	VERT( 0xc357be0c, 0x41194e05, 0x4094f3a7 ),
	NORM( 0xbe1225a5, 0x3f7d1d7e, 0x3d390c14 ),
	VERT( 0xc3595107, 0x411f9e55, 0x40ed09e9 ),
	NORM( 0xbe8ef4c8, 0x3f6d57e8, 0x3e7ff802 ),
	VERT( 0xc3595107, 0x410e5b0d, 0x41203207 ),
	NORM( 0xbe8e869a, 0x3f54fa09, 0x3ef5c08a ),
	VERT( 0xc3595107, 0x40e5ca00, 0x4143fbc5 ),
	NORM( 0xbe8e1fd0, 0x3f2df5fa, 0x3f2dd995 ),
	VERT( 0xc3595107, 0x409e3686, 0x415f71d2 ),
	NORM( 0xbe8db8d5, 0x3ef6216a, 0x3f550066 ),
	VERT( 0xc3595107, 0x4015b8b8, 0x4170b519 ),
	NORM( 0xbe8d58b0, 0x3e7f0078, 0x3f6da637 ),
	VERT( 0xc3595107, 0xbee96480, 0x4176986e ),
	NORM( 0xbe8d0605, 0x396f499e, 0x3f761904 ),
	VERT( 0xc3595107, 0xc05011e0, 0x4170b519 ),
	NORM( 0xbe8cc697, 0xbe7ea6a0, 0x3f6dc1e8 ),
	VERT( 0xc3595107, 0xc0bb6314, 0x415f71d2 ),
	NORM( 0xbe8c9ed2, 0xbef61d1c, 0x3f553059 ),
	VERT( 0xc3595107, 0xc1017b48, 0x4143fbc5 ),
	NORM( 0xbe8c9184, 0xbf2e0f89, 0x3f2e10ec ),
	VERT( 0xc3595107, 0xc11cf156, 0x41203207 ),
	NORM( 0xbe8c9fa1, 0xbf552f50, 0x3ef6203b ),
	VERT( 0xc3595107, 0xc12e349c, 0x40ed09e9 ),
	NORM( 0xbe8cb3f1, 0xbf6da65f, 0x3e8034c4 ),
	VERT( 0xc357be0c, 0xc1281a6e, 0x4094f3a7 ),
	NORM( 0xbe1032a9, 0xbf7d2ff2, 0x3d38446c ),
	VERT( 0xc3595107, 0xc12e349c, 0x3fe8926c ),
	NORM( 0xbe8d4ccf, 0xbf6dc335, 0xbe7d6917 ),
	VERT( 0xc3595107, 0xc11cf156, 0xbf49ac56 ),
	NORM( 0xbe8dbc02, 0xbf55003f, 0xbef6201b ),
	VERT( 0xc3595107, 0xc1017b48, 0xc041920b ),
	NORM( 0xbe8e232c, 0xbf2dd93b, 0xbf2df5a4 ),
	VERT( 0xc3595107, 0xc0bb6314, 0xc097b520 ),
	NORM( 0xbe8e89e5, 0xbef5bf31, 0xbf54f9e0 ),
	VERT( 0xc3595107, 0xc05011e0, 0xc0ba3baf ),
	NORM( 0xbe8ee937, 0xbe7e3a80, 0xbf6d7791 ),
	VERT( 0xc342ecc8, 0xbeef6f00, 0xc0ec386a ),
	NORM( 0xbd5a1f3a, 0xb835d0c1, 0xbf7fa302 ),
	VERT( 0xc342ecc8, 0x4028d800, 0xc0df22ca ),
	NORM( 0xbd599a30, 0x3e844f6e, 0xbf76ee23 ),
	VERT( 0xc342ecc8, 0x40b10910, 0xc0b8c62c ),
	NORM( 0xbd5930fa, 0x3effa0c8, 0xbf5d64de ),
	VERT( 0xc342ecc8, 0x4100483e, 0xc0777fac ),
	NORM( 0xbd58eabb, 0x3f34c337, 0xbf34c4a1 ),
	VERT( 0xc342ecc8, 0x411ecb69, 0xbfb0e1a5 ),
	NORM( 0xbd58cc3f, 0x3f5d642f, 0xbeffa47b ),
	VERT( 0xc342ecc8, 0x4131f9b8, 0x3fc19291 ),
	NORM( 0xbd59e378, 0x3f76ffd2, 0xbe83c941 ),
	VERT( 0xc342eb0e, 0x412afc36, 0x40952099 ),
	NORM( 0xbd587079, 0x3f7f6e60, 0x3d263954 ),
	VERT( 0xc342ecc8, 0x4131f9b8, 0x40f72a89 ),
	NORM( 0xbd596680, 0x3f76d944, 0x3e84ec2c ),
	VERT( 0xc342ecc8, 0x411ecb69, 0x4129e3cb ),
	NORM( 0xbd59df65, 0x3f5d6229, 0x3effa7d6 ),
	VERT( 0xc342ecc8, 0x4100483e, 0x4151a781 ),
	NORM( 0xbd5a6fcb, 0x3f34c0e0, 0x3f34c523 ),
	VERT( 0xc342ecc8, 0x40b10910, 0x41702aac ),
	NORM( 0xbd5b0d7c, 0x3eff9cbb, 0x3f5d6434 ),
	VERT( 0xc342ecc8, 0x4028d800, 0x4181ac7e ),
	NORM( 0xbd5badae, 0x3e844d19, 0x3f76ec9c ),
	VERT( 0xc342ecc8, 0xbeef6f00, 0x4184f1e6 ),
	NORM( 0xbd5c4571, 0xb835c17b, 0x3f7fa12b ),
	VERT( 0xc342ecc8, 0xc064b3c8, 0x4181ac7e ),
	NORM( 0xbd5cca6d, 0xbe845739, 0x3f76ea43 ),
	VERT( 0xc342ecc8, 0xc0cef6f0, 0x41702aac ),
	NORM( 0xbd5d3395, 0xbeffa36c, 0x3f5d6022 ),
	VERT( 0xc342ecc8, 0xc10f3f2e, 0x4151a781 ),
	NORM( 0xbd5d79cd, 0xbf34c1dc, 0x3f34c074 ),
	VERT( 0xc342ecc8, 0xc12dc25a, 0x4129e3cb ),
	NORM( 0xbd5d9844, 0xbf5d60d0, 0x3eff9fb5 ),
	VERT( 0xc342ecc8, 0xc140f0a8, 0x40f72a89 ),
	NORM( 0xbd5c7c4f, 0xbf76d722, 0x3e84e7b3 ),
	VERT( 0xc342eb0e, 0xc13a2282, 0x40952099 ),
	NORM( 0xbd5d327e, 0xbf7f6730, 0x3d2af074 ),
	VERT( 0xc342ecc8, 0xc140f0a8, 0x3fc19291 ),
	NORM( 0xbd5cfeeb, 0xbf76fda7, 0xbe83c4cb ),
	VERT( 0xc342ecc8, 0xc12dc25a, 0xbfb0e1a5 ),
	NORM( 0xbd5c8536, 0xbf5d62da, 0xbeff9c5e ),
	VERT( 0xc342ecc8, 0xc10f3f2e, 0xc0777fac ),
	NORM( 0xbd5bf4d5, 0xbf34c436, 0xbf34bff6 ),
	VERT( 0xc342ecc8, 0xc0cef6f0, 0xc0b8c62c ),
	NORM( 0xbd5b572e, 0xbeffa77d, 0xbf5d60d0 ),
	VERT( 0xc342ecc8, 0xc064b3c8, 0xc0df22ca ),
	NORM( 0xbd5ab702, 0xbe845990, 0xbf76ebcc ),
	VERT( 0xc35b0404, 0x41148f56, 0x40843e90 ),
	NORM( 0xbf58dfb3, 0x3f06f154, 0xbd88c11e ),
	VERT( 0xc35b0404, 0x41148f56, 0x40843e90 ),
	NORM( 0xbedd08ed, 0x3d8e0037, 0x3f663b6c ),
	VERT( 0xc35b0404, 0xc1238550, 0x40843e90 ),
	NORM( 0xbedcb861, 0xbdd5c356, 0x3f65709d ),
	VERT( 0xc35b0404, 0xc1238550, 0x40843e90 ),
	NORM( 0xbf581844, 0xbf082acb, 0xbd89fee8 ),
	VERT( 0xc3595107, 0x41245494, 0x40845dfc ),
	NORM( 0xbe8e7f36, 0x3f73e3cc, 0xbdfa1b96 ),
	VERT( 0xc3595107, 0x41245494, 0x40845dfc ),
	NORM( 0xbe19c02b, 0x3eb8d450, 0x3f6b9f6c ),
	VERT( 0xc3595107, 0xc132eadc, 0x40845dfc ),
	NORM( 0xbe8c0d77, 0xbf743ceb, 0xbdfa74e0 ),
	VERT( 0xc3595107, 0xc132eadc, 0x40845dfc ),
	NORM( 0xbe16a5f9, 0xbebed51a, 0x3f6a8c97 ),
	VERT( 0xc342ecc8, 0x41376f86, 0x4083576e ),
	NORM( 0xbcef4480, 0x3f11db08, 0x3f5240b7 ),
	VERT( 0xc342ecc8, 0x41376f86, 0x4083576e ),
	NORM( 0xbd59115e, 0x3f7d8678, 0xbe034377 ),
	VERT( 0xc342ecc8, 0xc1466678, 0x4083576e ),
	NORM( 0xbd5b41e0, 0xbf7d849c, 0xbe0342a7 ),
	VERT( 0xc342ecc8, 0xc1466678, 0x4083576e ),
	NORM( 0xbd0042a3, 0xbf131af8, 0x3f515c40 ),
	VERT( 0xc35b0404, 0x41148682, 0x40a9760b ),
	NORM( 0xbf5872b6, 0x3f076e2c, 0x3d948f1a ),
	VERT( 0xc35b0404, 0x41148682, 0x40a9760b ),
	NORM( 0xbf4b07b1, 0x3e19e2c5, 0xbf171c99 ),
	VERT( 0xc35b0404, 0xc1237c7c, 0x40a9760b ),
	NORM( 0xbf4a3566, 0xbe4e7fc5, 0xbf1443e4 ),
	VERT( 0xc35b0404, 0xc1237c7c, 0x40a9760b ),
	NORM( 0xbf57aa3f, 0xbf08a6ac, 0x3d95e5f6 ),
	VERT( 0xc342ecc8, 0xc1461cb4, 0x40a89825 ),
	NORM( 0xbd0d04c9, 0xbf23d0d1, 0xbf4486d5 ),
	VERT( 0xc342ecc8, 0xc1461cb4, 0x40a89825 ),
	NORM( 0xbd598d83, 0xbf7d5f71, 0x3e07d7d9 ),
	VERT( 0xc342ecc8, 0x413725c6, 0x40a89825 ),
	NORM( 0xbd5767b3, 0x3f7d613e, 0x3e07d8ed ),
	VERT( 0xc342ecc8, 0x413725c6, 0x40a89825 ),
	NORM( 0xbd0d5e84, 0x3f2229e3, 0xbf45e420 ),
	VERT( 0xc3595107, 0x41243b8b, 0x40a9961e ),
	NORM( 0xbe321b3a, 0x3eda1a7f, 0xbf634a70 ),
	VERT( 0xc3595107, 0x41243b8b, 0x40a9961e ),
	NORM( 0xbe8def3b, 0x3f73bddb, 0x3e040a62 ),
	VERT( 0xc3595107, 0xc132d1d2, 0x40a9961e ),
	NORM( 0xbe8b7f5d, 0xbf74162c, 0x3e043b84 ),
	VERT( 0xc3595107, 0xc132d1d2, 0x40a9961e ),
	NORM( 0xbe3505f1, 0xbeda39af, 0xbf631e12 ),
	VERT( 0xc2988530, 0xc1559860, 0x4096a696 ),
	NORM( 0xbb99b69d, 0xbf7fd489, 0xbd13e8ce ),
	VERT( 0xc2988530, 0xc15355ac, 0x40ac2a3b ),
	NORM( 0xbc9caf2e, 0xbf7e6c66, 0xbddf88aa ),
	VERT( 0xc2988530, 0xc15355ac, 0x40ac2a3b ),
	NORM( 0x3e22e69d, 0xbf60c620, 0xbee71ec6 ),
	VERT( 0xc2986269, 0x4140b720, 0x4096a696 ),
	NORM( 0xbe0e307c, 0x3f7d8343, 0x3bf58477 ),
	VERT( 0xc2988530, 0x413eb161, 0x40ac2a3b ),
	NORM( 0xbe0bf88c, 0x3f5619b6, 0xbf07e9e4 ),
	VERT( 0xc2988530, 0x413eb161, 0x40ac2a3b ),
	NORM( 0xbca37b49, 0x3f7e6b55, 0xbddf889e ),
	VERT( 0xc2988530, 0xc155b308, 0x4087edb6 ),
	NORM( 0xbdb39fce, 0xbf7a5632, 0xbe427582 ),
	VERT( 0xc2988530, 0xc155b308, 0x4087edb6 ),
	NORM( 0xbe664911, 0xbf4e1f5d, 0x3f0c7b43 ),
	VERT( 0xc2988530, 0x41410ec3, 0x4087edb6 ),
	NORM( 0x3d0010d1, 0x3f508cce, 0x3f1440a9 ),
	VERT( 0xc2988530, 0x41410ec3, 0x4087edb6 ),
	NORM( 0x3bf11215, 0x3f7ad234, 0xbe4ccab1 ),
	VERT( 0xc2988530, 0xc15738c8, 0x40f2f207 ),
	NORM( 0xbcb8d22f, 0xbf7fea9b, 0x3c447df1 ),
	VERT( 0xc2988530, 0x41429481, 0x40f2f207 ),
	NORM( 0xbcc21d6f, 0x3f7fe8df, 0x3c44c04f ),
	VERT( 0xc2988530, 0xc1503d74, 0x4065bb20 ),
	NORM( 0xbd5574ed, 0xbf709389, 0xbeacfc76 ),
	VERT( 0xc2988530, 0x413b992c, 0x4065bb20 ),
	NORM( 0xbbc1fb43, 0x3f7125a3, 0xbeabd5c4 ),
	VERT( 0xc2988530, 0xc13bc536, 0x3f90ccf0 ),
	NORM( 0xbd075349, 0xbf577e18, 0xbf09f09f ),
	VERT( 0xc2988530, 0xc11b3528, 0xbfc2b0c6 ),
	NORM( 0xbd199722, 0xbf34dba0, 0xbf34ed18 ),
	VERT( 0xc2988530, 0xc0e18ae4, 0xc0639878 ),
	NORM( 0xbd2735e8, 0xbeffa9a5, 0xbf5d8daf ),
	VERT( 0xc2988530, 0xc07d6998, 0xc09abcb8 ),
	NORM( 0xbd300ac8, 0xbe843941, 0xbf771239 ),
	VERT( 0xc2988530, 0xbf252240, 0xc0a8b36a ),
	NORM( 0xbd337a58, 0x39c4d048, 0xbf7fc10d ),
	VERT( 0xc2988530, 0x402ad880, 0xc09abcb8 ),
	NORM( 0xbd31443e, 0x3e849483, 0xbf77051f ),
	VERT( 0xc2988530, 0x40b84268, 0xc0639878 ),
	NORM( 0xbd298849, 0x3efff1af, 0xbf5d771f ),
	VERT( 0xc2988530, 0x410690ea, 0xbfc2b0c6 ),
	NORM( 0xbd1cc68e, 0x3f34f2cb, 0xbf34d330 ),
	VERT( 0xc2988530, 0x412720ed, 0x3f90ccf0 ),
	NORM( 0xbd09274b, 0x3f5787c1, 0xbf09dfb8 ),
	VERT( 0xc2988530, 0x413b992c, 0x412e13ac ),
	NORM( 0xbca61e3d, 0x3f770ccf, 0x3e85cbba ),
	VERT( 0xc2988530, 0x412720ed, 0x415f0045 ),
	NORM( 0xbc6d9e98, 0x3f5d6bf6, 0x3f006e74 ),
	VERT( 0xc2988530, 0x410690ea, 0x4184b7fe ),
	NORM( 0xbc18f368, 0x3f3505f7, 0x3f34ffe5 ),
	VERT( 0xc2988530, 0x40b84268, 0x41950001 ),
	NORM( 0xbbc41054, 0x3f00092e, 0x3f5dad30 ),
	VERT( 0xc2988530, 0x402ad880, 0x419f3c20 ),
	NORM( 0xbb7b7401, 0x3e84a6e8, 0x3f7741ba ),
	VERT( 0xc2988530, 0xbf252240, 0x41a2b9cc ),
	NORM( 0xbb474e32, 0x39c34324, 0x3f7fffb1 ),
	VERT( 0xc2988530, 0xc07d6998, 0x419f3c20 ),
	NORM( 0xbb6ef284, 0xbe844be1, 0x3f774df8 ),
	VERT( 0xc2988530, 0xc0e18ae4, 0x41950001 ),
	NORM( 0xbbb7a31a, 0xbeffc942, 0x3f5dc272 ),
	VERT( 0xc2988530, 0xc11b3528, 0x4184b7fe ),
	NORM( 0xbc0fc21f, 0xbf34eda9, 0x3f3518a9 ),
	VERT( 0xc2988530, 0xc13bc536, 0x415f0045 ),
	NORM( 0xbc57cbd6, 0xbf5d5dbb, 0x3f008961 ),
	VERT( 0xc2988530, 0xc1503d74, 0x412e13ac ),
	NORM( 0xbc98bc8e, 0xbf770c82, 0x3e85dde5 ),
	VERT( 0xc299dafe, 0xc15695a4, 0x4090c2d5 ),
	NORM( 0x3ec42522, 0xbf67a471, 0x3e3e241d ),
	VERT( 0xc299dafe, 0xc15695a4, 0x4090c2d5 ),
	NORM( 0xbd164805, 0xbf7fb655, 0x3cf5dca8 ),
	VERT( 0xc299dafe, 0xc15fb8d4, 0x40a7a607 ),
	NORM( 0x3f0a31de, 0xbf28663c, 0xbf06761c ),
	VERT( 0xc299dafe, 0xc15fb8d4, 0x40a7a607 ),
	NORM( 0x3f430714, 0xbf24d70b, 0xbd90e1f7 ),
	VERT( 0xc299dafe, 0xc15fb8d4, 0x40a7a607 ),
	NORM( 0xbceb0021, 0xbf48421d, 0xbf1f4e93 ),
	VERT( 0xc299dafe, 0xc15fb8d4, 0x40a7a607 ),
	NORM( 0xbd171a15, 0xbf7e4b7b, 0xbddf9027 ),
	VERT( 0xc299dafe, 0x41418956, 0x4090c2d5 ),
	NORM( 0xbd1b5cb3, 0x3f7fb3c0, 0x3cf3f6ce ),
	VERT( 0xc299dafe, 0x41418956, 0x4090c2d5 ),
	NORM( 0x3eb8169f, 0x3f6a712a, 0x3e375677 ),
	VERT( 0xc299dafe, 0x414aed34, 0x40a7a607 ),
	NORM( 0x3f420222, 0x3f260633, 0xbd91ed20 ),
	VERT( 0xc299dafe, 0x414aed34, 0x40a7a607 ),
	NORM( 0x3f0327b9, 0x3f29f540, 0xbf0b754e ),
	VERT( 0xc299dafe, 0x414aed34, 0x40a7a607 ),
	NORM( 0xbcf001f2, 0x3f45d196, 0xbf2251b5 ),
	VERT( 0xc299dafe, 0x414aed34, 0x40a7a607 ),
	NORM( 0xbd1c3da8, 0x3f7e4865, 0xbddf8eb2 ),
	VERT( 0xc299dafe, 0xc15d9c08, 0x40811965 ),
	NORM( 0x3de2906b, 0xbf3d63e3, 0x3f29e5de ),
	VERT( 0xc299dafe, 0xc15d9c08, 0x40811965 ),
	NORM( 0x3f327000, 0xbf3686d8, 0xbd9bf556 ),
	VERT( 0xc299dafe, 0xc15d9c08, 0x40811965 ),
	NORM( 0xbd1cbad8, 0xbf7e5335, 0xbddc5fbe ),
	VERT( 0xc299dafe, 0xc15d9c08, 0x40811965 ),
	NORM( 0xbce047ce, 0xbf3e7d0a, 0x3f2ae213 ),
	VERT( 0xc299dafe, 0x4148d06a, 0x40811965 ),
	NORM( 0xbd1da91f, 0x3f7e52a0, 0xbddc606d ),
	VERT( 0xc299dafe, 0x4148d06a, 0x40811965 ),
	NORM( 0xbce4cce7, 0x3f3bf982, 0x3f2da385 ),
	VERT( 0xc299dafe, 0x4148d06a, 0x40811965 ),
	NORM( 0x3db19389, 0x3f3ad100, 0x3f2d9dfe ),
	VERT( 0xc299dafe, 0x4148d06a, 0x40811965 ),
	NORM( 0x3f311296, 0x3f37d612, 0xbd9d14d8 ),
	VERT( 0xc299dafe, 0xc163e1e8, 0x40f35dd4 ),
	NORM( 0xbd0f0384, 0xbf7fd4d6, 0x3c2202dc ),
	VERT( 0xc299dafe, 0xc163e1e8, 0x40f35dd4 ),
	NORM( 0x3f43bbef, 0xbf24fc96, 0x3bf15b70 ),
	VERT( 0xc299dafe, 0x414f164e, 0x40f35dd4 ),
	NORM( 0xbd142f3b, 0x3f7fd1e5, 0x3c21fbfb ),
	VERT( 0xc299dafe, 0x414f164e, 0x40f35dd4 ),
	NORM( 0x3f42ac18, 0x3f263cee, 0x3bf44ffa ),
	VERT( 0xc299dafe, 0xc15c78d4, 0x405798d4 ),
	NORM( 0x3f3c0d20, 0xbf26c7d0, 0xbe4231e3 ),
	VERT( 0xc299dafe, 0xc15c78d4, 0x405798d4 ),
	NORM( 0xbd3de87d, 0xbf746cf0, 0xbe965998 ),
	VERT( 0xc299dafe, 0x4147ad34, 0x405798d4 ),
	NORM( 0x3f3af258, 0x3f27e889, 0xbe43b407 ),
	VERT( 0xc299dafe, 0x4147ad34, 0x405798d4 ),
	NORM( 0xbd38da16, 0x3f747108, 0xbe96582c ),
	VERT( 0xc299dafe, 0xc146bec0, 0x3f442cec ),
	NORM( 0x3f420418, 0xbf0d16b6, 0xbeb2bfaa ),
	VERT( 0xc299dafe, 0xc146bec0, 0x3f442cec ),
	NORM( 0xbd62fef8, 0xbf573301, 0xbf09ed75 ),
	VERT( 0xc299dafe, 0xc1242ebe, 0xc0032060 ),
	NORM( 0xbd7d1d9b, 0xbf344676, 0xbf351215 ),
	VERT( 0xc299dafe, 0xc1242ebe, 0xc0032060 ),
	NORM( 0x3f416a5b, 0xbeed974b, 0xbeecc324 ),
	VERT( 0xc299dafe, 0xc0ee47b0, 0xc086b021 ),
	NORM( 0xbd8aca20, 0xbefeb720, 0xbf5d64b7 ),
	VERT( 0xc299dafe, 0xc0ee47b0, 0xc086b021 ),
	NORM( 0x3f40d16a, 0xbea8cbe3, 0xbf11b82c ),
	VERT( 0xc299dafe, 0xc0855fb0, 0xc0b22444 ),
	NORM( 0xbd929b58, 0xbe83c2c0, 0xbf76b2b5 ),
	VERT( 0xc299dafe, 0xc0855fb0, 0xc0b22444 ),
	NORM( 0x3f40612d, 0xbe2f7138, 0xbf231a2d ),
	VERT( 0xc299dafe, 0xbf265d00, 0xc0c0f680 ),
	NORM( 0x3f40228e, 0xb97ae7cb, 0xbf292cc6 ),
	VERT( 0xc299dafe, 0xbf265d00, 0xc0c0f680 ),
	NORM( 0xbd957f03, 0x3858d69b, 0xbf7f512a ),
	VERT( 0xc299dafe, 0x403790f0, 0xc0b22444 ),
	NORM( 0xbd934496, 0x3e83ce93, 0xbf76af8d ),
	VERT( 0xc299dafe, 0x403790f0, 0xc0b22444 ),
	NORM( 0x3f401aa2, 0x3e2f4fb8, 0xbf236f7d ),
	VERT( 0xc299dafe, 0x40c4b08c, 0xc086b021 ),
	NORM( 0xbd8c117d, 0x3efebe80, 0xbf5d5f5f ),
	VERT( 0xc299dafe, 0x40c4b08c, 0xc086b021 ),
	NORM( 0x3f404a11, 0x3ea9383a, 0xbf124b52 ),
	VERT( 0xc299dafe, 0x410f632b, 0xc0032060 ),
	NORM( 0x3f40acfa, 0x3eeeacee, 0xbeee149b ),
	VERT( 0xc299dafe, 0x410f632b, 0xc0032060 ),
	NORM( 0xbd805e9d, 0x3f344764, 0xbf350c0e ),
	VERT( 0xc299dafe, 0x4131f321, 0x3f442cec ),
	NORM( 0xbd5fd6d7, 0x3f573702, 0xbf09ec5f ),
	VERT( 0xc299dafe, 0x4131f321, 0x3f442cec ),
	NORM( 0x3f412482, 0x3f0deb63, 0xbeb3e5d0 ),
	VERT( 0xc299dafe, 0x4147ad34, 0x4131a825 ),
	NORM( 0xbcefb88a, 0x3f773397, 0x3e843b3e ),
	VERT( 0xc299dafe, 0x4147ad34, 0x4131a825 ),
	NORM( 0x3f432e47, 0x3f1fdcfb, 0x3e2da172 ),
	VERT( 0xc299dafe, 0x4131f321, 0x4165beed ),
	NORM( 0x3f440416, 0x3f0e567b, 0x3ea592f4 ),
	VERT( 0xc299dafe, 0x4131f321, 0x4165beed ),
	NORM( 0xbc9d0e64, 0x3f5dd84b, 0x3eff5147 ),
	VERT( 0xc299dafe, 0x410f632b, 0x418964ea ),
	NORM( 0xbc27a016, 0x3f356937, 0x3f349b9b ),
	VERT( 0xc299dafe, 0x410f632b, 0x418964ea ),
	NORM( 0x3f44de9e, 0x3ee70765, 0x3ee7d124 ),
	VERT( 0xc299dafe, 0x40c4b08c, 0x419aace6 ),
	NORM( 0xbb886e24, 0x3f0059dc, 0x3f5d7f36 ),
	VERT( 0xc299dafe, 0x40c4b08c, 0x419aace6 ),
	NORM( 0x3f456a31, 0x3ea29bb3, 0x3f0d4155 ),
	VERT( 0xc299dafe, 0x403790f0, 0x41a589ef ),
	NORM( 0xb990244e, 0x3e84ef84, 0x3f773879 ),
	VERT( 0xc299dafe, 0x403790f0, 0x41a589ef ),
	NORM( 0x3f45ce5b, 0x3e27b28d, 0x3f1d01b7 ),
	VERT( 0xc299dafe, 0xbf265d00, 0x41a93e7d ),
	NORM( 0x3a9898ad, 0x385bfe8a, 0x3f7ffff5 ),
	VERT( 0xc299dafe, 0xbf265d00, 0x41a93e7d ),
	NORM( 0x3f46056e, 0xb9663057, 0x3f223ed8 ),
	VERT( 0xc299dafe, 0xc0855fb0, 0x41a589ef ),
	NORM( 0x3f460c5d, 0xbe27d036, 0x3f1cb17c ),
	VERT( 0xc299dafe, 0xc0855fb0, 0x41a589ef ),
	NORM( 0x3861ccab, 0xbe84e2bf, 0x3f773a31 ),
	VERT( 0xc299dafe, 0xc0ee47b0, 0x419aace6 ),
	NORM( 0xbb673702, 0xbf0054d2, 0x3f5d8251 ),
	VERT( 0xc299dafe, 0xc0ee47b0, 0x419aace6 ),
	NORM( 0x3f45e2c2, 0xbea23532, 0x3f0cb5d4 ),
	VERT( 0xc299dafe, 0xc1242ebe, 0x418964ea ),
	NORM( 0x3f458aee, 0xbee5fef4, 0x3ee68cde ),
	VERT( 0xc299dafe, 0xc1242ebe, 0x418964ea ),
	NORM( 0xbc18ea4e, 0xbf356625, 0x3f349f82 ),
	VERT( 0xc299dafe, 0xc146bec0, 0x4165beed ),
	NORM( 0xbc94116d, 0xbf5dd7bc, 0x3eff5897 ),
	VERT( 0xc299dafe, 0xc146bec0, 0x4165beed ),
	NORM( 0x3f450a8d, 0xbf0d4a66, 0x3ea449fe ),
	VERT( 0xc299dafe, 0xc15c78d4, 0x4131a825 ),
	NORM( 0xbce5b833, 0xbf77355d, 0x3e843fba ),
	VERT( 0xc299dafe, 0xc15c78d4, 0x4131a825 ),
	NORM( 0x3f4461f2, 0xbf1e801a, 0x3e2bee15 ),
	VERT( 0xc2973427, 0xc160beb4, 0x40a7a607 ),
	NORM( 0xbd219efa, 0xbf7e6c54, 0xbdd4162f ),
	VERT( 0xc2973427, 0xc160beb4, 0x40a7a607 ),
	NORM( 0xbce99aaf, 0xbf3db83b, 0xbf2bb95e ),
	VERT( 0xc2973427, 0xc160beb4, 0x40a7a607 ),
	NORM( 0xbf4a43d7, 0xbf1bfc6c, 0xbd88fdd5 ),
	VERT( 0xc2973427, 0xc160beb4, 0x40a7a607 ),
	NORM( 0xbe81d060, 0xbf6c6e7f, 0xbe9348cb ),
	VERT( 0xc2973427, 0xc15791c4, 0x4090c2d5 ),
	NORM( 0xbee11857, 0xbf64f558, 0x3da9290d ),
	VERT( 0xc2973427, 0xc15791c4, 0x4090c2d5 ),
	NORM( 0xbd1f4d8a, 0xbf7fce60, 0xba952e7f ),
	VERT( 0xc2973427, 0x414bfbf9, 0x40a7a607 ),
	NORM( 0xbd2834a6, 0x3f7e681a, 0xbdd412d3 ),
	VERT( 0xc2973427, 0x414bfbf9, 0x40a7a607 ),
	NORM( 0xbd002167, 0x3f4578f4, 0xbf22b74b ),
	VERT( 0xc2973427, 0x414bfbf9, 0x40a7a607 ),
	NORM( 0xbf49990f, 0x3f1cd647, 0xbd89bd8d ),
	VERT( 0xc2973427, 0x414bfbf9, 0x40a7a607 ),
	NORM( 0xbf47fda5, 0x3f1466a9, 0xbe6d360a ),
	VERT( 0xc2973427, 0x41428e01, 0x4090c2d5 ),
	NORM( 0xbed6841e, 0x3f63a330, 0x3e3c2a84 ),
	VERT( 0xc2973427, 0x41428e01, 0x4090c2d5 ),
	NORM( 0xbd240921, 0x3f7f0e56, 0x3d9b664c ),
	VERT( 0xc2973427, 0xc15ea3c0, 0x40811965 ),
	NORM( 0xbf4c4cf7, 0xbf13c137, 0xbe31593a ),
	VERT( 0xc2973427, 0xc15ea3c0, 0x40811965 ),
	NORM( 0xbd25c2f3, 0xbf7e677e, 0xbdd4bca4 ),
	VERT( 0xc2973427, 0xc15ea3c0, 0x40811965 ),
	NORM( 0xbf0851e9, 0xbf43efb0, 0x3eb90f7b ),
	VERT( 0xc2973427, 0xc15ea3c0, 0x40811965 ),
	NORM( 0xbcef40d6, 0xbf3dee7d, 0x3f2b7b67 ),
	VERT( 0xc2973427, 0x4149e10a, 0x40811965 ),
	NORM( 0xbd2b4731, 0x3f7e63de, 0xbdd4ba4a ),
	VERT( 0xc2973427, 0x4149e10a, 0x40811965 ),
	NORM( 0xbd05901d, 0x3f642f2b, 0x3ee78072 ),
	VERT( 0xc2973427, 0x4149e10a, 0x40811965 ),
	NORM( 0xbf2ac4ec, 0x3f36ac17, 0xbe5b42fb ),
	VERT( 0xc2973427, 0x4149e10a, 0x40811965 ),
	NORM( 0xbcd8e4cf, 0x3f2a6122, 0x3f3ef289 ),
	VERT( 0xc2973427, 0xc164dae0, 0x40f286fe ),
	NORM( 0xbf4a8cc1, 0xbf1c8c29, 0x3bc860c9 ),
	VERT( 0xc2973427, 0xc164dae0, 0x40f286fe ),
	NORM( 0xbd16bbca, 0xbf7fbde0, 0x3cd2e3fa ),
	VERT( 0xc2973427, 0x41501828, 0x40f286fe ),
	NORM( 0xbd1fd0b3, 0x3f7fb85e, 0x3cd2dcc6 ),
	VERT( 0xc2973427, 0x41501828, 0x40f286fe ),
	NORM( 0xbf49e228, 0x3f1d67e6, 0x3bc96732 ),
	VERT( 0xc2973427, 0xc15d6924, 0x40532b6f ),
	NORM( 0xbf4c6d7d, 0xbf0ea34a, 0xbe693ae8 ),
	VERT( 0xc2973427, 0xc15d6924, 0x40532b6f ),
	NORM( 0xbd45206d, 0xbf753054, 0xbe9124c3 ),
	VERT( 0xc2973427, 0x4148a66d, 0x40532b6f ),
	NORM( 0xbf3c8f8e, 0x3f20e40d, 0xbe7ff7df ),
	VERT( 0xc2973427, 0x4148a66d, 0x40532b6f ),
	NORM( 0xbd4a7254, 0x3f752b7c, 0xbe912838 ),
	VERT( 0xc2973427, 0xc14795c0, 0x3f2be80e ),
	NORM( 0xbd6ee6cc, 0xbf57def3, 0xbf08cb76 ),
	VERT( 0xc2973427, 0xc14795c0, 0x3f2be80e ),
	NORM( 0xbf4c2181, 0xbf025aed, 0xbea5d212 ),
	VERT( 0xc2973427, 0xc124dd7a, 0xc00a0386 ),
	NORM( 0xbd879897, 0xbf350e08, 0xbf34303d ),
	VERT( 0xc2973427, 0xc124dd7a, 0xc00a0386 ),
	NORM( 0xbf4cabde, 0xbed9206e, 0xbed9cdcf ),
	VERT( 0xc2973427, 0xc0ef3c30, 0xc08a723f ),
	NORM( 0xbd94d9a0, 0xbf000a90, 0xbf5ce57e ),
	VERT( 0xc2973427, 0xc0ef3c30, 0xc08a723f ),
	NORM( 0xbf4d143f, 0xbe98f606, 0xbf04c67f ),
	VERT( 0xc2973427, 0xc085d9f8, 0xc0b61904 ),
	NORM( 0xbf4d4c8f, 0xbe1e196d, 0xbf13bc8e ),
	VERT( 0xc2973427, 0xc085d9f8, 0xc0b61904 ),
	NORM( 0xbd9d5570, 0xbe8493b5, 0xbf767c44 ),
	VERT( 0xc2973427, 0xbf2615c0, 0xc0c4fc84 ),
	NORM( 0xbf4d51d7, 0xb91fe25d, 0xbf18e796 ),
	VERT( 0xc2973427, 0xbf2615c0, 0xc0c4fc84 ),
	NORM( 0xbda078c1, 0xb86d65af, 0xbf7f3682 ),
	VERT( 0xc2973427, 0x4038a910, 0xc0b61904 ),
	NORM( 0xbf4d23d5, 0x3e1e06e0, 0xbf13f653 ),
	VERT( 0xc2973427, 0x4038a910, 0xc0b61904 ),
	NORM( 0xbd9e0d36, 0x3e8484df, 0xbf767c6c ),
	VERT( 0xc2973427, 0x40c5b6d8, 0xc08a723f ),
	NORM( 0xbf4cc4f1, 0x3e994140, 0xbf052b0f ),
	VERT( 0xc2973427, 0x40c5b6d8, 0xc08a723f ),
	NORM( 0xbd963cb7, 0x3f00035a, 0xbf5ce5ea ),
	VERT( 0xc2973427, 0x41101acd, 0xc00a0386 ),
	NORM( 0xbf4c3a40, 0x3ed9e0a2, 0xbedab7fb ),
	VERT( 0xc2973427, 0x41101acd, 0xc00a0386 ),
	NORM( 0xbd898ee1, 0x3f35076b, 0xbf3430ef ),
	VERT( 0xc2973427, 0x4132d309, 0x3f2be80e ),
	NORM( 0xbf4b750a, 0x3f03186a, 0xbea6cba2 ),
	VERT( 0xc2973427, 0x4132d309, 0x3f2be80e ),
	NORM( 0xbd7394c6, 0x3f57d9d4, 0xbf08cb4a ),
	VERT( 0xc2973427, 0x4148a66d, 0x413136bb ),
	NORM( 0xbf49515a, 0x3f18b0f2, 0x3e248ffe ),
	VERT( 0xc2973427, 0x4148a66d, 0x413136bb ),
	NORM( 0xbd01549b, 0x3f737c76, 0x3e9d4a9a ),
	VERT( 0xc2973427, 0x4132d309, 0x41653807 ),
	NORM( 0xbf486a47, 0x3f09ebae, 0x3e9f5834 ),
	VERT( 0xc2973427, 0x4132d309, 0x41653807 ),
	NORM( 0xbca68eda, 0x3f587975, 0x3f088e83 ),
	VERT( 0xc2973427, 0x41101acd, 0x41893bb5 ),
	NORM( 0xbc31d465, 0x3f349372, 0x3f3570bb ),
	VERT( 0xc2973427, 0x41101acd, 0x41893bb5 ),
	NORM( 0xbf47b0f0, 0x3ee2e78f, 0x3ee22b14 ),
	VERT( 0xc2973427, 0x40c5b6d8, 0x419a97d4 ),
	NORM( 0xbb9044e5, 0x3eff3d58, 0x3f5deb31 ),
	VERT( 0xc2973427, 0x40c5b6d8, 0x419a97d4 ),
	NORM( 0xbf4738ad, 0x3ea11029, 0x3f0b2547 ),
	VERT( 0xc2973427, 0x4038a910, 0x41a58185 ),
	NORM( 0xb99094e0, 0x3e841044, 0x3f775661 ),
	VERT( 0xc2973427, 0x4038a910, 0x41a58185 ),
	NORM( 0xbf46f6a7, 0x3e27064e, 0x3f1b9527 ),
	VERT( 0xc2973427, 0xbf2615c0, 0x41a93a65 ),
	NORM( 0xbf46f06c, 0xb93206a6, 0x3f211e5f ),
	VERT( 0xc2973427, 0xbf2615c0, 0x41a93a65 ),
	NORM( 0x3aa3e0b9, 0xb86c896f, 0x3f7ffff3 ),
	VERT( 0xc2973427, 0xc085d9f8, 0x41a58185 ),
	NORM( 0x3899d3c7, 0xbe841e26, 0x3f775487 ),
	VERT( 0xc2973427, 0xc085d9f8, 0x41a58185 ),
	NORM( 0xbf47267c, 0xbe271bb9, 0x3f1b5678 ),
	VERT( 0xc2973427, 0xc0ef3c30, 0x419a97d4 ),
	NORM( 0xbf47944e, 0xbea0bef5, 0x3f0ab949 ),
	VERT( 0xc2973427, 0xc0ef3c30, 0x419a97d4 ),
	NORM( 0xbb744f80, 0xbeff48b3, 0x3f5de822 ),
	VERT( 0xc2973427, 0xc124dd7a, 0x41893bb5 ),
	NORM( 0xbf4830c4, 0xbee21a6c, 0x3ee133fa ),
	VERT( 0xc2973427, 0xc124dd7a, 0x41893bb5 ),
	NORM( 0xbc222d7a, 0xbf349792, 0x3f356d8b ),
	VERT( 0xc2973427, 0xc14795c0, 0x41653807 ),
	NORM( 0xbc895d54, 0xbf587eb1, 0x3f088e54 ),
	VERT( 0xc2973427, 0xc14795c0, 0x41653807 ),
	NORM( 0xbf4903ad, 0xbf0948f8, 0x3e9e84ca ),
	VERT( 0xc2973427, 0xc15d6924, 0x413136bb ),
	NORM( 0xbcdd7cd7, 0xbf738564, 0x3e9d4c0b ),
	VERT( 0xc2973427, 0xc15d6924, 0x413136bb ),
	NORM( 0xbf49f87d, 0xbf17e3fa, 0x3e239d80 ),
	VERT( 0xc30cdefa, 0x41da0000, 0x3f9c20d0 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0xc30d2d7c, 0x41da0000, 0xbf8e0807 ),
	NORM( 0x3f7746f0, 0x00000000, 0xbe8483c6 ),
	VERT( 0xc30e13a7, 0x41da0000, 0xc051ef98 ),
	NORM( 0x3f5db3e9, 0x00000000, 0xbeffffc3 ),
	VERT( 0xc30f81cd, 0x41da0000, 0xc0a49d5e ),
	NORM( 0x3f3504e9, 0x00000000, 0xbf3504fd ),
	VERT( 0xc3115efa, 0x41da0000, 0xc0d2621e ),
	NORM( 0x3efffff0, 0x00000000, 0xbf5db3dc ),
	VERT( 0xc3138aa8, 0x41da0000, 0xc0ef2793 ),
	NORM( 0x3e8483f6, 0x00000000, 0xbf7746e9 ),
	VERT( 0xc315defa, 0x41da0000, 0xc0f8f7cc ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0xc318334c, 0x41da0000, 0xc0ef2793 ),
	NORM( 0xbe8483f6, 0x00000000, 0xbf7746e9 ),
	VERT( 0xc31a5efa, 0x41da0000, 0xc0d2621e ),
	NORM( 0xbf000014, 0x00000000, 0xbf5db3cc ),
	VERT( 0xc31c3c26, 0x41da0000, 0xc0a49d5e ),
	NORM( 0xbf350501, 0x00000000, 0xbf3504e6 ),
	VERT( 0xc31daa4c, 0x41da0000, 0xc051ef98 ),
	NORM( 0xbf5db3d0, 0x00000000, 0xbf00000d ),
	VERT( 0xc31e9078, 0x41da0000, 0xbf8e0807 ),
	NORM( 0xbf7746e3, 0x00000000, 0xbe848426 ),
	VERT( 0xc31edefa, 0x41da0000, 0x3f9c20d0 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc31e9078, 0x41da0000, 0x406324d4 ),
	NORM( 0xbf7746e3, 0x00000000, 0x3e848426 ),
	VERT( 0xc31daa4c, 0x41da0000, 0x40b70834 ),
	NORM( 0xbf5db3d0, 0x00000000, 0x3f00000d ),
	VERT( 0xc31c3c26, 0x41da0000, 0x40f2adc6 ),
	NORM( 0xbf350501, 0x00000000, 0x3f3504e6 ),
	VERT( 0xc31a5efa, 0x41da0000, 0x41103943 ),
	NORM( 0xbf000015, 0x00000000, 0x3f5db3cb ),
	VERT( 0xc318334c, 0x41da0000, 0x411e9bfe ),
	NORM( 0xbe8483f5, 0x00000000, 0x3f7746e9 ),
	VERT( 0xc315defa, 0x41da0000, 0x4123841a ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc3138aa8, 0x41da0000, 0x411e9bfe ),
	NORM( 0x3e8483f5, 0x00000000, 0x3f7746e9 ),
	VERT( 0xc3115efa, 0x41da0000, 0x41103943 ),
	NORM( 0x3efffff3, 0x00000000, 0x3f5db3db ),
	VERT( 0xc30f81cd, 0x41da0000, 0x40f2adc6 ),
	NORM( 0x3f3504e9, 0x00000000, 0x3f3504fd ),
	VERT( 0xc30e13a7, 0x41da0000, 0x40b70834 ),
	NORM( 0x3f5db3e9, 0x00000000, 0x3effffc3 ),
	VERT( 0xc30d2d7c, 0x41da0000, 0x406324d4 ),
	NORM( 0x3f7746f0, 0x00000000, 0x3e8483c6 ),
	VERT( 0xc30cdefa, 0x4219e196, 0x3f9c20d0 ),
	NORM( 0x3f3bf81d, 0x3f2dcab2, 0x00000000 ),
	VERT( 0xc30d2d7c, 0x4219e196, 0xbf8e0807 ),
	NORM( 0x3f35906d, 0x3f2dcac1, 0xbe429953 ),
	VERT( 0xc30e13a7, 0x4219e196, 0xc051ef98 ),
	NORM( 0x3f22c94c, 0x3f2dcab0, 0xbebbf7f3 ),
	VERT( 0xc30f81cd, 0x4219e196, 0xc0a49d5e ),
	NORM( 0x3f04ea07, 0x3f2dcab3, 0xbf04ea16 ),
	VERT( 0xc3115efa, 0x4219e196, 0xc0d2621e ),
	NORM( 0x3ebbf809, 0x3f2dcabb, 0xbf22c93a ),
	VERT( 0xc3138aa8, 0x4219e196, 0xc0ef2793 ),
	NORM( 0x3e4299a4, 0x3f2dcab5, 0xbf359072 ),
	VERT( 0xc315defa, 0x4219e196, 0xc0f8f7cc ),
	NORM( 0x00000000, 0x3f2dcab7, 0xbf3bf818 ),
	VERT( 0xc318334c, 0x4219e196, 0xc0ef2793 ),
	NORM( 0xbe4299a4, 0x3f2dcab5, 0xbf359072 ),
	VERT( 0xc31a5efa, 0x4219e196, 0xc0d2621e ),
	NORM( 0xbebbf838, 0x3f2dcab5, 0xbf22c932 ),
	VERT( 0xc31c3c26, 0x4219e196, 0xc0a49d5e ),
	NORM( 0xbf04ea14, 0x3f2dcaba, 0xbf04ea00 ),
	VERT( 0xc31daa4c, 0x4219e196, 0xc051ef98 ),
	NORM( 0xbf22c931, 0x3f2dcabb, 0xbebbf829 ),
	VERT( 0xc31e9078, 0x4219e196, 0xbf8e0807 ),
	NORM( 0xbf35906d, 0x3f2dcab5, 0xbe4299ea ),
	VERT( 0xc31edefa, 0x4219e196, 0x3f9c20d0 ),
	NORM( 0xbf3bf81d, 0x3f2dcab2, 0x00000000 ),
	VERT( 0xc31e9078, 0x4219e196, 0x406324d4 ),
	NORM( 0xbf35906d, 0x3f2dcab5, 0x3e4299ea ),
	VERT( 0xc31daa4c, 0x4219e196, 0x40b70834 ),
	NORM( 0xbf22c931, 0x3f2dcabb, 0x3ebbf829 ),
	VERT( 0xc31c3c26, 0x4219e196, 0x40f2adc6 ),
	NORM( 0xbf04ea14, 0x3f2dcaba, 0x3f04ea00 ),
	VERT( 0xc31a5efa, 0x4219e196, 0x41103943 ),
	NORM( 0xbebbf83a, 0x3f2dcab5, 0x3f22c932 ),
	VERT( 0xc318334c, 0x4219e196, 0x411e9bfe ),
	NORM( 0xbe4299a4, 0x3f2dcab4, 0x3f359073 ),
	VERT( 0xc315defa, 0x4219e196, 0x4123841a ),
	NORM( 0x00000000, 0x3f2dcab8, 0x3f3bf818 ),
	VERT( 0xc3138aa8, 0x4219e196, 0x411e9bfe ),
	NORM( 0x3e4299a4, 0x3f2dcab4, 0x3f359073 ),
	VERT( 0xc3115efa, 0x4219e196, 0x41103943 ),
	NORM( 0x3ebbf80b, 0x3f2dcabb, 0x3f22c939 ),
	VERT( 0xc30f81cd, 0x4219e196, 0x40f2adc6 ),
	NORM( 0x3f04ea07, 0x3f2dcab3, 0x3f04ea16 ),
	VERT( 0xc30e13a7, 0x4219e196, 0x40b70834 ),
	NORM( 0x3f22c94c, 0x3f2dcab0, 0x3ebbf7f3 ),
	VERT( 0xc30d2d7c, 0x4219e196, 0x406324d4 ),
	NORM( 0x3f35906d, 0x3f2dcac1, 0x3e429953 ),
	VERT( 0xc2ee65da, 0x418491a1, 0x41ddec2b ),
	NORM( 0xbdbba82d, 0x3aab750c, 0x3f7eec3f ),
	VERT( 0xc2ee65da, 0xc19160d2, 0x41ddec2b ),
	NORM( 0xbdbb8f8b, 0xbab0619d, 0x3f7eec87 ),
	VERT( 0xc2ee65da, 0x418491a1, 0x41ddec2b ),
	NORM( 0xbe0245c6, 0xbf77a1b1, 0x3e60a377 ),
	VERT( 0xc2e7b35e, 0x41818fdc, 0x41e032fd ),
	NORM( 0xbdb4b335, 0xb9ec1650, 0x3f7f0066 ),
	VERT( 0xc2e7b35e, 0x41818fdc, 0x41e032fd ),
	NORM( 0xbe9e5cfb, 0xbf498d7a, 0x3f0889e5 ),
	VERT( 0xc2de79ac, 0x4166ffd4, 0x41e2d6d0 ),
	NORM( 0xbee63bbe, 0xbf31ddc9, 0x3f0fb170 ),
	VERT( 0xc2de79ac, 0x4166ffd4, 0x41e2d6d0 ),
	NORM( 0xbd2befef, 0x3265fcff, 0x3f7fc63c ),
	VERT( 0xc2e23805, 0x41726976, 0x41e235c2 ),
	NORM( 0xbd79b446, 0xb3215fc7, 0x3f7f861b ),
	VERT( 0xc2e23805, 0x41726976, 0x41e235c2 ),
	NORM( 0xbeae99b0, 0xbf575f77, 0x3ed6bf84 ),
	VERT( 0xc2d68da4, 0x413a4275, 0x41e42ba3 ),
	NORM( 0xbf09cb3c, 0xbef89711, 0x3f3059ca ),
	VERT( 0xc2d68da4, 0x413a4275, 0x41e42ba3 ),
	NORM( 0xbd31bbd3, 0x397471ce, 0x3f7fc245 ),
	VERT( 0xc2cca73b, 0x40703840, 0x41e54415 ),
	NORM( 0xbf11c485, 0xbe1bafaa, 0x3f4ed0ed ),
	VERT( 0xc2cca73b, 0x40703840, 0x41e54415 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc2d0679e, 0x410008a3, 0x41e54415 ),
	NORM( 0xbf09da73, 0xbe9ac183, 0x3f495bb1 ),
	VERT( 0xc2d0679e, 0x410008a3, 0x41e54415 ),
	NORM( 0xbc159af8, 0x389707ac, 0x3f7ffd45 ),
	VERT( 0xc2cb5991, 0xbf4cf320, 0x41e54415 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc2cb5991, 0xbf4cf320, 0x41e54415 ),
	NORM( 0xbf13adb9, 0xb919c2f0, 0x3f511c2f ),
	VERT( 0xc2cca73b, 0xc0ab58e8, 0x41e54415 ),
	NORM( 0xbf11c50c, 0x3e1cf606, 0x3f4ec122 ),
	VERT( 0xc2cca73b, 0xc0ab58e8, 0x41e54415 ),
	NORM( 0xba1f0be9, 0xb92b13eb, 0x3f7ffffd ),
	VERT( 0xc2d0797a, 0xc1199284, 0x41e53128 ),
	NORM( 0xbc301731, 0xba02c73e, 0x3f7ffc35 ),
	VERT( 0xc2d0797a, 0xc1199284, 0x41e53128 ),
	NORM( 0xbf0b1d36, 0x3e9bed8b, 0x3f484316 ),
	VERT( 0xc2d68da4, 0xc153e0d8, 0x41e42ba3 ),
	NORM( 0xbd2befb9, 0xb3121442, 0x3f7fc63c ),
	VERT( 0xc2d68da4, 0xc153e0d8, 0x41e42ba3 ),
	NORM( 0xbf09f9b7, 0x3ef8b1a7, 0x3f302c0e ),
	VERT( 0xc2de79ac, 0xc1804f1a, 0x41e2d6d0 ),
	NORM( 0xbee8fa9b, 0x3f33d857, 0x3f0c1411 ),
	VERT( 0xc2de79ac, 0xc1804f1a, 0x41e2d6d0 ),
	NORM( 0xbd2befee, 0xb25b9be2, 0x3f7fc63c ),
	VERT( 0xc2e23805, 0xc18603ec, 0x41e235c2 ),
	NORM( 0xbeaeaffb, 0x3f58706f, 0x3ed25811 ),
	VERT( 0xc2e23805, 0xc18603ec, 0x41e235c2 ),
	NORM( 0xbd79b447, 0x33254215, 0x3f7f861b ),
	VERT( 0xc2e7b35e, 0xc18e5f0c, 0x41e032fd ),
	NORM( 0xbdb4ae7b, 0x39f64d33, 0x3f7f0073 ),
	VERT( 0xc2e7b35e, 0xc18e5f0c, 0x41e032fd ),
	NORM( 0xbe9e5cf3, 0x3f498d81, 0x3f0889de ),
	VERT( 0xc2ee65da, 0xc19160d2, 0x41ddec2b ),
	NORM( 0xbe0245ee, 0x3f77a1ac, 0x3e60a3bd ),
	VERT( 0xc2e8ae9e, 0x41818fdc, 0x41ddec2b ),
	NORM( 0xbe2fa26f, 0xbf715174, 0x3e929bf7 ),
	VERT( 0xc2e8ae9e, 0x41818fdc, 0x41ddec2b ),
	NORM( 0xba527559, 0xbb449853, 0x3f7fffaf ),
	VERT( 0xc2d88425, 0x413a4275, 0x41ddec2b ),
	NORM( 0xbf0294a6, 0xbf12de0c, 0x3f240e91 ),
	VERT( 0xc2d88425, 0x413a4275, 0x41ddec2b ),
	NORM( 0xbb0e244c, 0xbb0caf0f, 0x3f7fffb2 ),
	VERT( 0xc2d3177b, 0x40ffe846, 0x41ddec2b ),
	NORM( 0xbf084229, 0xbeb2f73b, 0x3f45639c ),
	VERT( 0xc2d3177b, 0x40ffe846, 0x41ddec2b ),
	NORM( 0xbb2af051, 0xbac7b04f, 0x3f7fffb3 ),
	VERT( 0xc2d88425, 0xc153e0d8, 0x41ddec2b ),
	NORM( 0xbf02bab0, 0x3f12f082, 0x3f23dfb7 ),
	VERT( 0xc2d88425, 0xc153e0d8, 0x41ddec2b ),
	NORM( 0xbb5524b2, 0x3b740348, 0x3f7fff33 ),
	VERT( 0xc2dff28d, 0xc1804f1a, 0x41ddec2b ),
	NORM( 0xbec51ceb, 0x3f4cbb31, 0x3eebdcbd ),
	VERT( 0xc2e8ae9e, 0xc18e5f0c, 0x41ddec2b ),
	NORM( 0xbb258795, 0x3c0bad6b, 0x3f7ffd69 ),
	VERT( 0xc2e8ae9e, 0xc18e5f0c, 0x41ddec2b ),
	NORM( 0xbe2f9385, 0x3f715c48, 0x3e925913 ),
	VERT( 0xc2f7b01c, 0x41814b84, 0x41da55b4 ),
	NORM( 0xbdcbb314, 0x3a65bc15, 0x3f7ebb00 ),
	VERT( 0xc307c714, 0x411e5fec, 0x41d0604c ),
	NORM( 0xbe0d1df7, 0x00000000, 0x3f7d8eb4 ),
	VERT( 0xc2f7b01c, 0x41814b84, 0x41da55b4 ),
	NORM( 0x3d6115da, 0x3ebef5d4, 0xbf6d1c6d ),
	VERT( 0xc2f9299e, 0x4180a2a2, 0x41d9b830 ),
	NORM( 0xbdd47a34, 0xb5931e1f, 0x3f7e9e56 ),
	VERT( 0xc2f9299e, 0x4180a2a2, 0x41d9b830 ),
	NORM( 0xbdd47a9f, 0xb48669ce, 0x3f7e9e55 ),
	VERT( 0xc2f9299e, 0x4180a2a2, 0x41d9b830 ),
	NORM( 0x3d582425, 0x3ec3a5c0, 0xbf6c2fba ),
	VERT( 0xc2f7b01c, 0xc18f3c2c, 0x41da55b4 ),
	NORM( 0xbe8cf958, 0xbf5b3229, 0x3edfcac6 ),
	VERT( 0xc2f7b01c, 0xc18f3c2c, 0x41da55b4 ),
	NORM( 0xbdc843ad, 0xbb11abe3, 0x3f7ec5c2 ),
	VERT( 0xc2f9299f, 0xc18d71d2, 0x41d9b830 ),
	NORM( 0xbddf070e, 0xbf7e76ef, 0x3c23fdae ),
	VERT( 0xc3062ef2, 0xc1442924, 0x41d2491e ),
	NORM( 0xbe09b70c, 0xba79a968, 0x3f7dac99 ),
	VERT( 0xc3025cf1, 0x4166ffd4, 0x41d4e506 ),
	NORM( 0xbdb22720, 0x3b922c7e, 0x3f7f06eb ),
	VERT( 0xc3025cf1, 0x4166ffd4, 0x41d4e506 ),
	NORM( 0xbdd47a33, 0xb5931e1e, 0x3f7e9e56 ),
	VERT( 0xc3025cf1, 0x4166ffd4, 0x41d4e506 ),
	NORM( 0xbec4899e, 0x3f112113, 0x3f3a97ae ),
	VERT( 0xc3007edb, 0x417262d2, 0x41d673fc ),
	NORM( 0xbdd47a34, 0xb5931e1e, 0x3f7e9e56 ),
	VERT( 0xc3007edb, 0x417262d2, 0x41d673fc ),
	NORM( 0xbdd47a61, 0x3330eabf, 0x3f7e9e56 ),
	VERT( 0xc3007edb, 0x417262d2, 0x41d673fc ),
	NORM( 0xbe9aadcf, 0x3f2deb62, 0x3f2b3118 ),
	VERT( 0xc307c714, 0x411e5fe7, 0x41d0604c ),
	NORM( 0xbf0f3435, 0x3ecd5df9, 0x3f39b35d ),
	VERT( 0xc2fcfc2b, 0x417e994c, 0x41d84ac6 ),
	NORM( 0xbe7e4c1a, 0x3ed533ea, 0x3f5fe5f7 ),
	VERT( 0xc2f70168, 0x41818fdc, 0x41ddec2b ),
	NORM( 0xbe4a8de2, 0x3f5a9d12, 0x3ef669bf ),
	VERT( 0xc2f70168, 0x41818fdc, 0x41ddec2b ),
	NORM( 0x3adab936, 0xbba90e94, 0x3f7fff09 ),
	VERT( 0xc2fcfc2b, 0xc18c1bd6, 0x41d84ac6 ),
	NORM( 0xbe7b7f11, 0xbf251048, 0x3f394d55 ),
	VERT( 0xc3025cf1, 0xc1804f1a, 0x41d50e26 ),
	NORM( 0xbebffef3, 0xbf0d04ac, 0x3f3ee0a8 ),
	VERT( 0xc2ee65da, 0x418491a1, 0x41ddec2b ),
	NORM( 0x3d6e0500, 0x3eb89e39, 0xbf6e507b ),
	VERT( 0xc2ee65da, 0xc19160d2, 0x41ddec2b ),
	NORM( 0x3d84f3d9, 0xbece38c8, 0xbf69b9ea ),
	VERT( 0xc30906c6, 0xc0ab58e8, 0x41ddec2b ),
	NORM( 0x3b3ce15e, 0x3a648f7c, 0x3f7fffb4 ),
	VERT( 0xc30906c6, 0xc0ab58e8, 0x41ddec2b ),
	NORM( 0xbf318f29, 0xbe492e30, 0x3f316c6f ),
	VERT( 0xc309ad9a, 0xbf4cf320, 0x41ddec2b ),
	NORM( 0xbf3af736, 0x30ac5088, 0x3f2edef5 ),
	VERT( 0xc309ad9a, 0xbf4cf320, 0x41ddec2b ),
	NORM( 0x3bae71f5, 0xb99e2266, 0x3f7fff11 ),
	VERT( 0xc30906c6, 0x40703840, 0x41ddec2b ),
	NORM( 0x3c211f15, 0xbb529079, 0x3f7ffc7e ),
	VERT( 0xc30906c6, 0x40703840, 0x41ddec2b ),
	NORM( 0xbf318f21, 0x3e492e3c, 0x3f316c77 ),
	VERT( 0xc3041391, 0x413a4275, 0x41ddec2b ),
	NORM( 0x3bbc26e1, 0xbbcacb9c, 0x3f7ffdaa ),
	VERT( 0xc3041391, 0x413a4275, 0x41ddec2b ),
	NORM( 0xbeec9647, 0x3f00e8fc, 0x3f3ae1c2 ),
	VERT( 0xc3001d8d, 0x4166ffd4, 0x41ddec2b ),
	NORM( 0xbe9fcee2, 0x3f2a61cf, 0x3f2d8e0c ),
	VERT( 0xc3001d8d, 0x4166ffd4, 0x41ddec2b ),
	NORM( 0x3b80bf04, 0xbbf59448, 0x3f7ffda7 ),
	VERT( 0xc30becfe, 0xbf4cf320, 0x41ca5308 ),
	NORM( 0xbf3be97d, 0xbdb3201c, 0x3f2c67d9 ),
	VERT( 0xc30becfe, 0xbf4cf320, 0x41ca5308 ),
	NORM( 0xbf3be97d, 0x3db3201c, 0x3f2c67d9 ),
	VERT( 0xc30becfe, 0xbf4cf320, 0x41ca5308 ),
	NORM( 0xbe37b74c, 0x00000000, 0x3f7bd8a3 ),
	VERT( 0xc30becfe, 0xbf4cf320, 0x41ca5308 ),
	NORM( 0xbe37b642, 0x325aed3b, 0x3f7bd8af ),
	VERT( 0xc30b462a, 0x40703840, 0x41cb466d ),
	NORM( 0xbf3923e4, 0x3dc5c981, 0x3f2f10b8 ),
	VERT( 0xc30b462a, 0x40703840, 0x41cb466d ),
	NORM( 0xbf320a65, 0x3e8420c0, 0x3f2bad64 ),
	VERT( 0xc30b462a, 0x40703840, 0x41cb466d ),
	NORM( 0xbe37b944, 0x35992072, 0x3f7bd88c ),
	VERT( 0xc30b462a, 0x40703840, 0x41cb466d ),
	NORM( 0xbe37b74c, 0x00000000, 0x3f7bd8a3 ),
	VERT( 0xc30b462a, 0xc0ab58e8, 0x41cb466d ),
	NORM( 0xbe37b70c, 0x33a3ebdf, 0x3f7bd8a6 ),
	VERT( 0xc30b462a, 0xc0ab58e8, 0x41cb466d ),
	NORM( 0xbe37b74c, 0x00000000, 0x3f7bd8a3 ),
	VERT( 0xc30b462a, 0xc0ab58e8, 0x41cb466d ),
	NORM( 0xbf36c180, 0xbe2906d2, 0x3f2e36e5 ),
	VERT( 0xc3095d0a, 0xc1199284, 0x41ce1006 ),
	NORM( 0xbe37b6bb, 0xb2623395, 0x3f7bd8aa ),
	VERT( 0xc3095d0a, 0xc1199284, 0x41ce1006 ),
	NORM( 0xbf22a4ee, 0xbea2ad30, 0x3f342f93 ),
	VERT( 0xc30652f5, 0xc153e0d8, 0x41d27f32 ),
	NORM( 0xbf001ed9, 0xbee08196, 0x3f3f1a62 ),
	VERT( 0xc3095d0a, 0x40ffe846, 0x41ce1006 ),
	NORM( 0xbe37b6ad, 0xb37cf3f5, 0x3f7bd8aa ),
	VERT( 0xc3095d0a, 0x40ffe846, 0x41ce1006 ),
	NORM( 0xbf22a4cc, 0x3ea2ad1d, 0x3f342fb6 ),
	VERT( 0xc30652f5, 0x413a4275, 0x41d27f32 ),
	NORM( 0xbefef1e2, 0x3ebe3191, 0x3f489b86 ),
	VERT( 0xc3050094, 0x41463db1, 0x41d371fd ),
	NORM( 0xbdef48f2, 0x3b2493d7, 0x3f7e3eef ),
	VERT( 0x421503e4, 0xc09d3404, 0x40f567a1 ),
	NORM( 0xbf13cd3a, 0xbf13cd3a, 0x3f13cd3a ),
	VERT( 0x421503e4, 0x406eee60, 0xbf7a1cac ),
	NORM( 0xbf13cd3a, 0x3f13cd3a, 0xbf13cd3a ),
	VERT( 0x421503e4, 0x406eee60, 0x40f567a1 ),
	NORM( 0xbf13cd3a, 0x3f13cd3a, 0x3f13cd3a ),
	VERT( 0x421503e4, 0xc09d3404, 0xbf7a1cac ),
	NORM( 0xbf13cd3a, 0xbf13cd3a, 0xbf13cd3a ),
	VERT( 0x422a6ca4, 0xc09d3404, 0x40f567a1 ),
	NORM( 0x3f13cd3a, 0xbf13cd3a, 0x3f13cd3a ),
	VERT( 0x422a6ca4, 0x406eee60, 0xbf7a1cac ),
	NORM( 0x3f13cd3a, 0x3f13cd3a, 0xbf13cd3a ),
	VERT( 0x422a6ca4, 0x406eee60, 0x40f567a1 ),
	NORM( 0x3f13cd3a, 0x3f13cd3a, 0x3f13cd3a ),
	VERT( 0x422a6ca4, 0xc09d3404, 0xbf7a1cac ),
	NORM( 0x3f13cd3a, 0xbf13cd3a, 0xbf13cd3a ),
	VERT( 0xc2f14e07, 0x41867141, 0x41ddec22 ),
	NORM( 0x38da8b56, 0xbb4b8b73, 0x3f7fffaf ),
	VERT( 0xc2f14e07, 0x41867141, 0x41ddec22 ),
	NORM( 0x3d4a4851, 0x3ecec3be, 0xbf69daef ),
	VERT( 0xc2e00980, 0x41672518, 0x41ddec22 ),
	NORM( 0xbac7852a, 0xbb307842, 0x3f7fffb0 ),
	VERT( 0xc2e00980, 0x41672518, 0x41ddec22 ),
	NORM( 0xbec2bf9d, 0xbf4bd2f9, 0x3ef0ea31 ),
	VERT( 0xc2cf426c, 0x407064a0, 0x41ddec22 ),
	NORM( 0xbbaaa71c, 0xba96090e, 0x3f7fff11 ),
	VERT( 0xc2cf426c, 0x407064a0, 0x41ddec22 ),
	NORM( 0xbf10de67, 0xbe349055, 0x3f4e2eca ),
	VERT( 0xc2cdf2e0, 0xbf4cf420, 0x41ddec22 ),
	NORM( 0xbbee55d7, 0x3828c971, 0x3f7ffe44 ),
	VERT( 0xc2cdf2e0, 0xbf4cf420, 0x41ddec22 ),
	NORM( 0xbf13ae39, 0xb93acc53, 0x3f511bd4 ),
	VERT( 0xc2cf426c, 0xc0ab6f58, 0x41ddec22 ),
	NORM( 0xbf10f59b, 0x3e3670a3, 0x3f4e040a ),
	VERT( 0xc2cf426c, 0xc0ab6f58, 0x41ddec22 ),
	NORM( 0xbb9d1a79, 0x3a90533b, 0x3f7fff35 ),
	VERT( 0xc2d31a31, 0xc119a824, 0x41ddec22 ),
	NORM( 0xbb1ca631, 0x3abac128, 0x3f7fffbf ),
	VERT( 0xc2d31a31, 0xc119a824, 0x41ddec22 ),
	NORM( 0xbf099926, 0x3eb40bf7, 0x3f4435dc ),
	VERT( 0xc2e00980, 0xc18061ce, 0x41ddec22 ),
	NORM( 0xbb89940c, 0x3c04860d, 0x3f7ffd47 ),
	VERT( 0xc2f14e07, 0xc1934084, 0x41ddec22 ),
	NORM( 0x3d5e687d, 0xbee6bdeb, 0xbf641b1f ),
	VERT( 0xc2f14e07, 0xc1934084, 0x41ddec22 ),
	NORM( 0xb959afb3, 0x3b9c391a, 0x3f7fff41 ),
	VERT( 0xc2f6c3f8, 0xc18e73e8, 0x41ddec22 ),
	NORM( 0x3a47e099, 0x3b2eb2de, 0x3f7fffc0 ),
	VERT( 0xc2f6c3f8, 0xc18e73e8, 0x41ddec22 ),
	NORM( 0xbe5873bf, 0xbf60a3f9, 0x3edc6746 ),
	VERT( 0xc3000580, 0xc18061ce, 0x41ddec22 ),
	NORM( 0xbea384d4, 0xbf1fd1f5, 0x3f3681df ),
	VERT( 0xc3000580, 0xc18061ce, 0x41ddec22 ),
	NORM( 0x3aac464c, 0x3b273e72, 0x3f7fffbb ),
	VERT( 0xc304013e, 0xc153ff64, 0x41ddec22 ),
	NORM( 0x3b00e887, 0x3b0f06f6, 0x3f7fffb8 ),
	VERT( 0xc304013e, 0xc153ff64, 0x41ddec22 ),
	NORM( 0xbee29138, 0xbf0000c6, 0x3f3e92ac ),
	VERT( 0xc3070fb8, 0xc119a824, 0x41ddec22 ),
	NORM( 0xbf16e90f, 0xbeb73d16, 0x3f3962cf ),
	VERT( 0xc3070fb8, 0xc119a824, 0x41ddec22 ),
	NORM( 0x3b242715, 0x3ad357ff, 0x3f7fffb6 ),
	VERT( 0xc3070fb8, 0x410009a0, 0x41ddec22 ),
	NORM( 0x3c198168, 0xbbb2fa35, 0x3f7ffc25 ),
	VERT( 0xc3070fb8, 0x410009a0, 0x41ddec22 ),
	NORM( 0xbf16b6e0, 0x3ebea407, 0x3f37abe6 ),
	VERT( 0xc2f13dd9, 0x4114af6c, 0x41ddbcb7 ),
	NORM( 0x38f19699, 0xbb4b90df, 0x3f7fffaf ),
	VERT( 0xc2f13dd9, 0x4114af6c, 0x41ddbcb7 ),
	NORM( 0x3a5d75fc, 0xbf7fffd2, 0x3b0fe8dc ),
	VERT( 0xc2ec5286, 0x410f8863, 0x41ddbcb7 ),
	NORM( 0xbe83636a, 0xbf776d64, 0xb94a1f67 ),
	VERT( 0xc2ec5286, 0x410f8863, 0x41ddbcb7 ),
	NORM( 0xba54442b, 0xbb447b85, 0x3f7fffaf ),
	VERT( 0xc2e7bd06, 0x41006d2c, 0x41ddbcb7 ),
	NORM( 0xbefe82dd, 0xbf5e2145, 0xbb0a97e9 ),
	VERT( 0xc2e7bd06, 0x41006d2c, 0x41ddbcb7 ),
	NORM( 0xbac6286e, 0xbb30e37a, 0x3f7fffb0 ),
	VERT( 0xc2e3cd50, 0x40d0caa6, 0x41ddbcb7 ),
	NORM( 0xbb0ce15f, 0xbb0e1039, 0x3f7fffb2 ),
	VERT( 0xc2e3cd50, 0x40d0caa6, 0x41ddbcb7 ),
	NORM( 0xbf345224, 0xbf35b65b, 0xbb812708 ),
	VERT( 0xc2e0c812, 0x4092282a, 0x41ddbcb7 ),
	NORM( 0xbb2a2aba, 0xbacad8de, 0x3f7fffb3 ),
	VERT( 0xc2e0c812, 0x4092282a, 0x41ddbcb7 ),
	NORM( 0xbf5d3a94, 0xbf00ce9c, 0xbbcc464e ),
	VERT( 0xc2dee1fe, 0x40126f38, 0x41ddbcb7 ),
	NORM( 0xbf7676d3, 0xbe8a65c9, 0xbbdb9a88 ),
	VERT( 0xc2dee1fe, 0x40126f38, 0x41ddbcb7 ),
	NORM( 0xbba1acf6, 0xba977c80, 0x3f7fff29 ),
	VERT( 0xc2dee1fe, 0xc026a938, 0x41ddbcb7 ),
	NORM( 0xbba2db3b, 0x3a8fb233, 0x3f7fff27 ),
	VERT( 0xc2dee1fe, 0xc026a938, 0x41ddbcb7 ),
	NORM( 0xbf7655d3, 0x3e8b1e6e, 0xbc81b7da ),
	VERT( 0xc2e0c812, 0xc09c452c, 0x41ddbcb7 ),
	NORM( 0xbf5d865a, 0x3f00224e, 0xbcd55219 ),
	VERT( 0xc2e0c812, 0xc09c452c, 0x41ddbcb7 ),
	NORM( 0xbb1db3f0, 0x3ab7a2a9, 0x3f7fffbf ),
	VERT( 0xc2e3cd50, 0xc0dae7a8, 0x41ddbcb7 ),
	NORM( 0xbf396b01, 0x3f306992, 0xbcbce10e ),
	VERT( 0xc2e3cd50, 0xc0dae7a8, 0x41ddbcb7 ),
	NORM( 0xbb4efc06, 0x3b679c05, 0x3f7fff44 ),
	VERT( 0xc2f13dd9, 0xc119bdec, 0x41ddbcb7 ),
	NORM( 0x3cf15d40, 0x3f7fca48, 0xbce36a74 ),
	VERT( 0xc2f13dd9, 0xc119bdec, 0x41ddbcb7 ),
	NORM( 0xb939da41, 0x3b9994d5, 0x3f7fff47 ),
	VERT( 0xc2f6292c, 0xc11496e2, 0x41ddbcb7 ),
	NORM( 0x3e848b4e, 0x3f7720d3, 0xbd077078 ),
	VERT( 0xc2f6292c, 0xc11496e2, 0x41ddbcb7 ),
	NORM( 0x3a58c739, 0x3b2ec515, 0x3f7fffbf ),
	VERT( 0xc2fabeac, 0xc1057bac, 0x41ddbcb7 ),
	NORM( 0x3ab607bc, 0x3b2556be, 0x3f7fffba ),
	VERT( 0xc2fabeac, 0xc1057bac, 0x41ddbcb7 ),
	NORM( 0x3effcdd2, 0x3f5da87b, 0xbcd61551 ),
	VERT( 0xc2feae62, 0xc0dae7a8, 0x41ddbcb7 ),
	NORM( 0x3b043f56, 0x3b0c57ef, 0x3f7fffb7 ),
	VERT( 0xc2feae62, 0xc0dae7a8, 0x41ddbcb7 ),
	NORM( 0x3f34ef32, 0x3f350c92, 0xbc8f06c6 ),
	VERT( 0xc300d9d0, 0xc09c452c, 0x41ddbcb7 ),
	NORM( 0x3f5db389, 0x3efff7fe, 0xbc083f5b ),
	VERT( 0xc300d9d0, 0xc09c452c, 0x41ddbcb7 ),
	NORM( 0x3b261a17, 0x3acdafd2, 0x3f7fffb5 ),
	VERT( 0xc301ccda, 0xc026a938, 0x41ddbcb7 ),
	NORM( 0x3f7753fc, 0x3e84223b, 0xb782281a ),
	VERT( 0xc301ccda, 0xc026a938, 0x41ddbcb7 ),
	NORM( 0x3b3df431, 0x3a5851eb, 0x3f7fffb4 ),
	VERT( 0xc3021fc0, 0xbe21d000, 0x41ddbcb7 ),
	NORM( 0x3f7ffdd3, 0xbbe3f6a2, 0x3b8b3763 ),
	VERT( 0xc3021fc0, 0xbe21d000, 0x41ddbcb7 ),
	NORM( 0x3bb77200, 0xb9cc74ae, 0x3f7ffef8 ),
	VERT( 0xc2feae62, 0x40d0caa6, 0x41ddbcb7 ),
	NORM( 0x3f35092b, 0xbf34ff70, 0x3bad42ab ),
	VERT( 0xc2feae62, 0x40d0caa6, 0x41ddbcb7 ),
	NORM( 0x3bbcc97c, 0xbbca25c7, 0x3f7ffdaa ),
	VERT( 0xc2f6292c, 0x410f8863, 0x41ddbcb7 ),
	NORM( 0x3e863d46, 0xbf770b02, 0x3b577e09 ),
	VERT( 0xc2f6292c, 0x410f8863, 0x41ddbcb7 ),
	NORM( 0x3b0284f4, 0xbbbeb93b, 0x3f7ffec3 ),
	VERT( 0xc2de21f1, 0xbe6c9d00, 0x41dd2a06 ),
	NORM( 0xbf7ffd91, 0x3b93b027, 0xbbf09b67 ),
	VERT( 0xc2de21f1, 0xbe6c9d00, 0x41dd2a06 ),
	NORM( 0xbbee8f39, 0xb856cf76, 0x3f7ffe43 ),
	VERT( 0xc2e7a638, 0xc107907c, 0x41dd2a06 ),
	NORM( 0xbf05a581, 0x3f5a5597, 0xbc0b33cd ),
	VERT( 0xc2e7a638, 0xc107907c, 0x41dd2a06 ),
	NORM( 0xbb898d22, 0x3c015cbb, 0x3f7ffd61 ),
	VERT( 0xc2ec3d62, 0xc116c6a6, 0x41dd2a06 ),
	NORM( 0xbb2aeb6c, 0x3c0d305d, 0x3f7ffd58 ),
	VERT( 0xc2ec3d62, 0xc116c6a6, 0x41dd2a06 ),
	NORM( 0xbe6b9e6f, 0x3f791e40, 0xbc218f25 ),
	VERT( 0xc301c682, 0x400ed9b0, 0x41dd2a06 ),
	NORM( 0x3f76e470, 0xbe875934, 0x3b1d7eca ),
	VERT( 0xc301c682, 0x400ed9b0, 0x41dd2a06 ),
	NORM( 0x3c2441f5, 0xbb601374, 0x3f7ffc53 ),
	VERT( 0xc300d31f, 0x4090df82, 0x41dd2a06 ),
	NORM( 0x3c17b627, 0xbbb2dcf4, 0x3f7ffc37 ),
	VERT( 0xc300d31f, 0x4090df82, 0x41dd2a06 ),
	NORM( 0x3f5e88f6, 0xbefd172c, 0x3b2f211a ),
	VERT( 0xc2faaec4, 0x41002b93, 0x41dd2a06 ),
	NORM( 0x3b84a177, 0xbbf3b27d, 0x3f7ffda7 ),
	VERT( 0xc2faaec4, 0x41002b93, 0x41dd2a06 ),
	NORM( 0x3efe92d4, 0xbf5e1c38, 0x3b87b0b8 ),
	VERT( 0xc2f12a7e, 0x411491f6, 0x41c0292e ),
	NORM( 0xba5d90e0, 0xbf7fffd2, 0x3b0ec6ee ),
	VERT( 0xc2ec3d62, 0x410f61bc, 0x41c0292e ),
	NORM( 0xbe84533d, 0xbf774d6f, 0xb95a0457 ),
	VERT( 0xc2e7a638, 0x41002b93, 0x41c0292e ),
	NORM( 0xbeff703e, 0xbf5ddd1c, 0xbb0b80c5 ),
	VERT( 0xc2e3b514, 0x40cff1b8, 0x41c0292e ),
	NORM( 0xbf34bf2f, 0xbf3549e3, 0xbb81b5ee ),
	VERT( 0xc2e0aebd, 0x4090df82, 0x41c0292e ),
	NORM( 0xbf5d92ce, 0xbf003696, 0xbbcd2afe ),
	VERT( 0xc2dec7f8, 0x400ed9b0, 0x41c0292e ),
	NORM( 0xbf76bd0a, 0xbe886dde, 0xbbdaa847 ),
	VERT( 0xc2de21f1, 0xbe6c9d00, 0x41c0292e ),
	NORM( 0xbf7ffd97, 0x3b910982, 0xbbf0949b ),
	VERT( 0xc2dec7f8, 0xc02c6d50, 0x41c0292e ),
	NORM( 0xbf763454, 0x3e8c09fa, 0xbc829db8 ),
	VERT( 0xc2e0aebd, 0xc09fa954, 0x41c0292e ),
	NORM( 0xbf5d2311, 0x3f00cd1b, 0xbcd5e9cd ),
	VERT( 0xc2e3b514, 0xc0debb8c, 0x41c0292e ),
	NORM( 0xbf38e99a, 0x3f30f18f, 0xbcbb7ff0 ),
	VERT( 0xc2e7a638, 0xc107907c, 0x41c0292e ),
	NORM( 0xbf055730, 0x3f5a8581, 0xbc09f791 ),
	VERT( 0xc2ec3d62, 0xc116c6a6, 0x41c0292e ),
	NORM( 0xbe6d0f0f, 0x3f790873, 0xbc201dfc ),
	VERT( 0xc2f12a7e, 0xc11bf6e0, 0x41c0292e ),
	NORM( 0x3cde3261, 0x3f7fcef6, 0xbce1e139 ),
	VERT( 0xc2f6179a, 0xc116c6a6, 0x41c0292e ),
	NORM( 0x3e8307ea, 0x3f77544d, 0xbd07b6bb ),
	VERT( 0xc2faaec4, 0xc107907c, 0x41c0292e ),
	NORM( 0x3efdfa18, 0x3f5e2e88, 0xbcd71e8d ),
	VERT( 0xc2fe9fe8, 0xc0debb8c, 0x41c0292e ),
	NORM( 0x3f3414f3, 0x3f35e565, 0xbc906054 ),
	VERT( 0xc300d31f, 0xc09fa954, 0x41c0292e ),
	NORM( 0x3f5d1815, 0x3f0107a4, 0xbc0ae659 ),
	VERT( 0xc301c682, 0xc02c6d50, 0x41c0292e ),
	NORM( 0x3f770c0f, 0x3e863838, 0xb90f3983 ),
	VERT( 0xc3021986, 0xbe6c9d00, 0x41c0292e ),
	NORM( 0x3f7ffea8, 0xbb9d6961, 0x3b8af34c ),
	VERT( 0xc301c682, 0x400ed9b0, 0x41c0292e ),
	NORM( 0x3f76d036, 0xbe87ec79, 0x3b1c0963 ),
	VERT( 0xc300d31f, 0x4090df82, 0x41c0292e ),
	NORM( 0x3f5ead58, 0xbefc970f, 0x3b2d8dde ),
	VERT( 0xc2fe9fe8, 0x40cff1b8, 0x41c0292e ),
	NORM( 0x3f350641, 0xbf35025a, 0x3bad4293 ),
	VERT( 0xc2faaec4, 0x41002b93, 0x41c0292e ),
	NORM( 0x3efe948c, 0xbf5e1bba, 0x3b87b1e2 ),
	VERT( 0xc2f6179a, 0x410f61bc, 0x41c0292e ),
	NORM( 0x3e862979, 0xbf770db2, 0x3b5782ae ),
	VERT( 0xc341c49a, 0x41248aaa, 0x419b3eff ),
	NORM( 0xbf2347d6, 0x3f452b27, 0x3549873e ),
	VERT( 0xc341c49a, 0x41248aaa, 0x419b3eff ),
	NORM( 0xbf0ccc52, 0xb9907f42, 0x3f55cdaa ),
	VERT( 0xc340adfc, 0x4127a326, 0x41a0fab4 ),
	NORM( 0xbf0451df, 0xb94ae48d, 0x3f5b26d6 ),
	VERT( 0xc340adfc, 0x4127a326, 0x41a0fab4 ),
	NORM( 0xbe333b14, 0x3f7c0c54, 0x3589ea8f ),
	VERT( 0xc340ae2c, 0x413dfaa1, 0x41a0fa58 ),
	NORM( 0xbf06b3d5, 0xb92ce333, 0x3f59b1ff ),
	VERT( 0xc340ae2c, 0x413dfaa1, 0x41a0fa58 ),
	NORM( 0x3e2f8879, 0xbf7a90a9, 0x3de61dce ),
	VERT( 0xc33abc1c, 0x41517b32, 0x41bc1a90 ),
	NORM( 0xbefc0fc0, 0x3d518f8e, 0x3f5e714d ),
	VERT( 0xc33abc1c, 0x41517b32, 0x41bc1a90 ),
	NORM( 0x3e089cbf, 0xbf7d873c, 0x3d1a4ab3 ),
	VERT( 0xc339503d, 0x413b02e9, 0x41c20f7a ),
	NORM( 0xbef99745, 0xbaba2ff0, 0x3f5f8590 ),
	VERT( 0xc339503d, 0x413b02e9, 0x41c20f7a ),
	NORM( 0xbf16b6b2, 0x3f4eea1d, 0xbc3287da ),
	VERT( 0xc3380433, 0x413e2864, 0x41c7d4f1 ),
	NORM( 0xbef11863, 0xba21e34a, 0x3f61d758 ),
	VERT( 0xc3380433, 0x413e2864, 0x41c7d4f1 ),
	NORM( 0xbe0e78bc, 0x3f7d76b8, 0xbc9b1b2f ),
	VERT( 0xc3293452, 0x4170825e, 0x420255af ),
	NORM( 0x3d7e46b1, 0xbf7f7f0f, 0x3c100f38 ),
	VERT( 0xc3293452, 0x4170825e, 0x420255af ),
	NORM( 0xbedcd7e0, 0x388c78d0, 0x3f66f60f ),
	VERT( 0xc3293474, 0x41573ae9, 0x42025593 ),
	NORM( 0xbedc9fa1, 0x3abe2963, 0x3f67036c ),
	VERT( 0xc3293474, 0x41573ae9, 0x42025593 ),
	NORM( 0xbd7e7150, 0x3f7f7ee8, 0xbc0fa103 ),
	VERT( 0xc31eb286, 0x417b9ca8, 0x4214de81 ),
	NORM( 0xbec73786, 0x3d0537c2, 0x3f6badf5 ),
	VERT( 0xc31eb286, 0x417b9ca8, 0x4214de81 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc31eb286, 0x417b9ca8, 0x4214de81 ),
	NORM( 0x3d7e46b0, 0xbf7f7f0f, 0x3c100f37 ),
	VERT( 0xc31df824, 0x41625558, 0x4215f61f ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc31df824, 0x41625558, 0x4215f61f ),
	NORM( 0xbd9a21c5, 0xbd28d084, 0x3f7f0e4b ),
	VERT( 0xc31bce00, 0x41625558, 0x4214e751 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc31bce00, 0x41625558, 0x4214e751 ),
	NORM( 0x3eb46780, 0xbdaabc27, 0x3f6ea12f ),
	VERT( 0xc31aaadc, 0x417b9ca8, 0x4211443b ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc31aaadc, 0x417b9ca8, 0x4211443b ),
	NORM( 0x3f326578, 0xbd86cc30, 0x3f36d47e ),
	VERT( 0xc31aaadc, 0x41625558, 0x4211443b ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc31aaadc, 0x41625558, 0x4211443b ),
	NORM( 0x3f33c040, 0xbc70b4ea, 0x3f363d75 ),
	VERT( 0xc311ac9e, 0x41625558, 0x41cb6387 ),
	NORM( 0x3f159275, 0xbd1e70d6, 0x3f4f8618 ),
	VERT( 0xc311ac9e, 0x41625558, 0x41cb6387 ),
	NORM( 0xbe55ca2f, 0x3f16831a, 0x3f48104d ),
	VERT( 0xc3423026, 0x40c243da, 0x41990589 ),
	NORM( 0xbf7f7e06, 0x3d80ebe2, 0x00000000 ),
	VERT( 0xc3423026, 0x40c243da, 0x41990589 ),
	NORM( 0xbf0cc531, 0xb7d65d12, 0x3f55d25c ),
	VERT( 0xc343805a, 0x40c7e1fe, 0x4192255d ),
	NORM( 0xbf0e1632, 0xba45c754, 0x3f54f2fa ),
	VERT( 0xc343805a, 0x40c7e1fe, 0x4192255d ),
	NORM( 0x3f7f4707, 0xbd99c1ea, 0x3a294b13 ),
	VERT( 0xc342e1ac, 0x41337581, 0x419565eb ),
	NORM( 0x3f20c815, 0xbf461cd0, 0x3da72e02 ),
	VERT( 0xc342e1ac, 0x41337581, 0x419565eb ),
	NORM( 0xbf0d04dd, 0x3a977c9a, 0x3f55a856 ),
	VERT( 0xc33adb12, 0x413833e1, 0x41bb17ed ),
	NORM( 0x3f58832a, 0x3f089884, 0x35443b31 ),
	VERT( 0xc33adb12, 0x413833e1, 0x41bb17ed ),
	NORM( 0xbefa5475, 0xb9038ced, 0x3f5f50b9 ),
	VERT( 0xc33bdf7c, 0x40b31e0c, 0x41b686ae ),
	NORM( 0x3f7e1753, 0xbdf9a08d, 0x3a69f384 ),
	VERT( 0xc33bdf7c, 0x40b31e0c, 0x41b686ae ),
	NORM( 0xbefa5a63, 0xb8c07d70, 0x3f5f4f10 ),
	VERT( 0xc33a940e, 0x40b31e0c, 0x41bc54dd ),
	NORM( 0xbf7dc125, 0x3e0739f8, 0x3baae804 ),
	VERT( 0xc33a940e, 0x40b31e0c, 0x41bc54dd ),
	NORM( 0xbefa9097, 0x39717b09, 0x3f5f3fdc ),
	VERT( 0xc3393148, 0x41544a3a, 0x41c2fb68 ),
	NORM( 0xbef8a404, 0x3d2e73bd, 0x3f5f8556 ),
	VERT( 0xc3393148, 0x41544a3a, 0x41c2fb68 ),
	NORM( 0x3e02f26e, 0xbf7dd64c, 0x3cb24312 ),
	VERT( 0xc3380433, 0x41576f5a, 0x41c7d4bb ),
	NORM( 0xbeea3bde, 0x3873724f, 0x3f63a3a6 ),
	VERT( 0xc3380433, 0x41576f5a, 0x41c7d4bb ),
	NORM( 0x3e0a78ff, 0xbf7d8143, 0x3d088d28 ),
	VERT( 0xc331356b, 0x4167f372, 0x41e3cae9 ),
	NORM( 0x3dba4bde, 0xbf7ee50f, 0x3c975ca0 ),
	VERT( 0xc331356b, 0x4167f372, 0x41e3cae9 ),
	NORM( 0xbee9d9fa, 0xb7844e79, 0x3f63bccd ),
	VERT( 0xc331356b, 0x414eac20, 0x41e3cb2b ),
	NORM( 0xbdbd8045, 0x3f7ee178, 0xbc516a22 ),
	VERT( 0xc331356b, 0x414eac20, 0x41e3cb2b ),
	NORM( 0xbee9db52, 0x387d5a47, 0x3f63bc75 ),
	VERT( 0xc31eb286, 0x41625558, 0x4214de73 ),
	NORM( 0xbec1fa17, 0x3c4716cd, 0x3f6ce54b ),
	VERT( 0xc31eb286, 0x41625558, 0x4214de73 ),
	NORM( 0xbcd61d0e, 0x3f7fe92a, 0xbb71ba43 ),
	VERT( 0xc31df824, 0x417b9ca8, 0x4215f61f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc31df824, 0x417b9ca8, 0x4215f61f ),
	NORM( 0xbdf26003, 0x00000000, 0x3f7e336e ),
	VERT( 0xc31bce00, 0x417b9ca8, 0x4214e751 ),
	NORM( 0x3eaf61d8, 0x3e65c82e, 0x3f698d2d ),
	VERT( 0xc31bce00, 0x417b9ca8, 0x4214e751 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc311ac9e, 0x417b9ca8, 0x41cb6387 ),
	NORM( 0x3edf7301, 0xbd335ac4, 0x3f660f8e ),
	VERT( 0xc311ac9e, 0x417b9ca8, 0x41cb6387 ),
	NORM( 0xbe55ca2f, 0xbf16831a, 0x3f48104d ),
	VERT( 0xc3423026, 0x40c243da, 0x4191466d ),
	NORM( 0xbf5de993, 0x3d09ed66, 0x3efeb049 ),
	VERT( 0xc343805a, 0x40c7e1fe, 0x418abfd9 ),
	NORM( 0x3efe3567, 0xbd9affff, 0x3f5d5ef8 ),
	VERT( 0xc341c49a, 0x41248aaa, 0x41930108 ),
	NORM( 0xbf34a251, 0x3e4c72a0, 0x3f2e0de9 ),
	VERT( 0xc342e1ac, 0x41337581, 0x418e05fe ),
	NORM( 0x3ebdf3c6, 0xbf0907c4, 0x3f424367 ),
	VERT( 0xc33adb12, 0x413833e1, 0x41b34703 ),
	NORM( 0xbe8b814f, 0x3eb5853d, 0x3f64fb9e ),
	VERT( 0xc33abc1c, 0x41517b32, 0x41b43eb4 ),
	NORM( 0xbe7ebfcb, 0xbf3797a6, 0x3f26a796 ),
	VERT( 0xc33a9546, 0x40b31e0c, 0x41b51372 ),
	NORM( 0xbf5a591f, 0x3d8fb13a, 0x3f046ddd ),
	VERT( 0xc33bdf7c, 0x40b31e0c, 0x41aef47f ),
	NORM( 0x3f0017eb, 0xbdf29feb, 0x3f5b9058 ),
	VERT( 0xc339517a, 0x413b02e9, 0x41bad6cc ),
	NORM( 0xbf34cb17, 0x3e786a28, 0x3f2a45e6 ),
	VERT( 0xc3393283, 0x41544a3a, 0x41bbce7d ),
	NORM( 0xbe8426d3, 0xbf3b697e, 0x3f2163d0 ),
	VERT( 0xc3311675, 0x4167f372, 0x41dce2f1 ),
	NORM( 0xbe6ecfbd, 0xbf39dbdf, 0x3f259d39 ),
	VERT( 0xc3311675, 0x414eac20, 0x41dce2f1 ),
	NORM( 0xbec60474, 0x3f2eeadb, 0x3f1e8c0e ),
	VERT( 0xc31e9390, 0x417b9ca8, 0x42117a45 ),
	NORM( 0xbd26300e, 0xbf4ab0c7, 0x3f1c071b ),
	VERT( 0xc31e9390, 0x41625558, 0x42117a45 ),
	NORM( 0xbdc91293, 0x3f484f93, 0x3f1d6a8a ),
	VERT( 0xc31ad2f9, 0x417b9ca8, 0x420e1697 ),
	NORM( 0x3ea404c4, 0xbf481bff, 0x3f08fdde ),
	VERT( 0xc31ab4b0, 0x41625558, 0x420e1697 ),
	NORM( 0x3ea60075, 0x3f4bf550, 0x3f02914b ),
	VERT( 0xc312604e, 0x417b9ca8, 0x41c9e37f ),
	NORM( 0x3e7e7492, 0xbf185fb7, 0x3f43a187 ),
	VERT( 0xc312604e, 0x41625558, 0x41c9e37f ),
	NORM( 0x3e7a8f9b, 0x3f1c88fc, 0x3f40a30a ),
	VERT( 0xc3425946, 0xbedf1880, 0x4190a5a6 ),
	NORM( 0xbf5ef46e, 0x37861dda, 0x3efb9cb0 ),
	VERT( 0xc343a7cc, 0xbedf1880, 0x418a1f13 ),
	NORM( 0x3efbf209, 0x3a777c96, 0x3f5edc4b ),
	VERT( 0xc33ae8f6, 0xbedf1880, 0x41b35f5e ),
	NORM( 0xbf5bcc69, 0x3ce4a3a7, 0x3f030c4a ),
	VERT( 0xc33c4a8a, 0xbedf1880, 0x41acc3d3 ),
	NORM( 0x3ef708c4, 0xbd96cd81, 0x3f5f6fed ),
	VERT( 0xc3425946, 0xbedf1880, 0x41982d79 ),
	NORM( 0xbf800000, 0xb8d0883d, 0x00000000 ),
	VERT( 0xc3425946, 0xbedf1880, 0x41982d79 ),
	NORM( 0xbf0cd183, 0x389f0846, 0x3f55ca40 ),
	VERT( 0xc33ae7b3, 0xbedf1880, 0x41bae59c ),
	NORM( 0xbf7fff10, 0xba86af64, 0x3babedf2 ),
	VERT( 0xc33ae7b3, 0xbedf1880, 0x41bae59c ),
	NORM( 0xbefa8aec, 0x392968a6, 0x3f5f4173 ),
	VERT( 0xc3293594, 0xbedf1880, 0x4202549f ),
	NORM( 0xbedddd33, 0xbaba78f3, 0x3f66b757 ),
	VERT( 0xc3485f8c, 0x41038219, 0x4170689b ),
	NORM( 0xbf47ccdd, 0x3d1472e1, 0x3f1fc7c9 ),
	VERT( 0xc34340c2, 0x4103cf7d, 0x41937309 ),
	NORM( 0x3f7e0829, 0xbdfd7688, 0x00000000 ),
	VERT( 0xc34340c2, 0x4103cf7d, 0x41937309 ),
	NORM( 0xbf0d8df8, 0xb90af02a, 0x3f554da6 ),
	VERT( 0xc340adb1, 0x4103f666, 0x41a0fb47 ),
	NORM( 0xbf050f5f, 0xb9136982, 0x3f5ab3fb ),
	VERT( 0xc33b69f4, 0x410445f8, 0x41b89662 ),
	NORM( 0xbefa5476, 0xb8fb78cb, 0x3f5f50b9 ),
	VERT( 0xc33b69f4, 0x410445f8, 0x41b89662 ),
	NORM( 0x3f7c4be9, 0xbe2d8ca2, 0x00000000 ),
	VERT( 0xc311b14d, 0x41050f09, 0x41c9171a ),
	NORM( 0x3ede245f, 0xbc6d1c40, 0x3f669eac ),
	VERT( 0xc31aca5b, 0x410440ba, 0x4211443b ),
	NORM( 0x3f124e61, 0xbca921d7, 0x3f520191 ),
	VERT( 0xc341f8b4, 0x4103e2db, 0x41922a9e ),
	NORM( 0xbf5d8771, 0x3d5ed400, 0x3eff156a ),
	VERT( 0xc34340c2, 0x4103cf7d, 0x418c0fc2 ),
	NORM( 0x3ef92b1e, 0xbe043856, 0x3f5d2efa ),
	VERT( 0xc33a0714, 0x41045aec, 0x41b79b59 ),
	NORM( 0xbf5c0820, 0x3df80395, 0x3efe4053 ),
	VERT( 0xc33b69f4, 0x410445f8, 0x41b0e7e3 ),
	NORM( 0x3ef38c9e, 0xbe271c80, 0x3f5d45c7 ),
	VERT( 0xc33a05d9, 0x41045aff, 0x41bed8ef ),
	NORM( 0xbefa26d4, 0xb9f6945c, 0x3f5f5d7f ),
	VERT( 0xc33a05d9, 0x41045aff, 0x41bed8ef ),
	NORM( 0xbf7aae26, 0x3e4f99bd, 0x3baabd9f ),
	VERT( 0xc341f8b4, 0x4103e2db, 0x419a2b21 ),
	NORM( 0xbf0cc87b, 0xb913b46d, 0x3f55d032 ),
	VERT( 0xc341f8b4, 0x4103e2db, 0x419a2b21 ),
	NORM( 0xbf7ebc98, 0x3dcb355a, 0x00000000 ),
	VERT( 0xc3380433, 0x41047952, 0x41c7d56d ),
	NORM( 0xbef2020a, 0xb98b1f14, 0x3f6198d9 ),
	VERT( 0xc32934de, 0x4105592a, 0x42025539 ),
	NORM( 0xbedddc60, 0x388d22f6, 0x3f66b79c ),
	VERT( 0xc31e3721, 0x41060125, 0x4215f61f ),
	NORM( 0xbd50524d, 0xbb317666, 0x3f7faaf1 ),
	VERT( 0xc34a96d2, 0x4103609b, 0x40a8e290 ),
	NORM( 0xbf7aaadf, 0x3db9eb61, 0x3e39fa3a ),
	VERT( 0xc3491d2c, 0x410376e7, 0x4151d567 ),
	NORM( 0xbf7aba20, 0x3dbf069e, 0x3e376174 ),
	VERT( 0xc3491d2c, 0x410376e7, 0x4151d567 ),
	NORM( 0xbf7391de, 0x3d9ef43c, 0x3e988308 ),
	VERT( 0xc347ef18, 0x414c2e9b, 0x417560bc ),
	NORM( 0xbf489027, 0x3d18ffa7, 0x3f1ece10 ),
	VERT( 0xc340ae61, 0x41570fae, 0x41a0f9f1 ),
	NORM( 0xbf057e0e, 0x398e8011, 0x3f5a707d ),
	VERT( 0xc31056de, 0x41b7dca5, 0x41c9171a ),
	NORM( 0x3ee2d5c8, 0xbdae530f, 0x3f6477d0 ),
	VERT( 0xc31a8b5e, 0x418839b8, 0x4211443b ),
	NORM( 0x3f17f06d, 0x3d1bf823, 0x3f4dcdf0 ),
	VERT( 0xc34a37d0, 0x4148c188, 0x40a8e290 ),
	NORM( 0xbf7a5e3c, 0x3db82656, 0x3e40bf12 ),
	VERT( 0xc3489f7b, 0x414b2607, 0x41579198 ),
	NORM( 0xbf75c121, 0x3da81f50, 0x3e8919b1 ),
	VERT( 0xc3380433, 0x41640ef3, 0x41c7d4a0 ),
	NORM( 0xbeeff007, 0x3b9bf25a, 0x3f62255f ),
	VERT( 0xc3293446, 0x417a46d6, 0x420255ba ),
	NORM( 0xbedbee87, 0x3a27f93f, 0x3f672db0 ),
	VERT( 0xc31df824, 0x418578e6, 0x4215f61f ),
	NORM( 0xbdab4a2b, 0x3db87e73, 0x3f7e0ef9 ),
	VERT( 0xc31e3721, 0xc1131fbe, 0x4215f61f ),
	NORM( 0xbd421ba4, 0x3b1daee0, 0x3f7fb62e ),
	VERT( 0xc32934de, 0xc11277c2, 0x42025539 ),
	NORM( 0xbedd60cf, 0xbac3c215, 0x3f66d532 ),
	VERT( 0xc31aca5b, 0xc1115f52, 0x4211443b ),
	NORM( 0x3f124ff2, 0x3c8eca1b, 0x3f52055d ),
	VERT( 0xc3423026, 0xc0dc810c, 0x4191466d ),
	NORM( 0xbf5da26a, 0xbd10be7b, 0x3eff9899 ),
	VERT( 0xc343805a, 0xc0e21f30, 0x418abfd9 ),
	NORM( 0x3eff707a, 0x3d949b44, 0x3f5d15c9 ),
	VERT( 0xc34340c2, 0xc110ee16, 0x418c0fc2 ),
	NORM( 0x3ef99868, 0x3df8ce91, 0x3f5d58b5 ),
	VERT( 0xc341f8b4, 0xc1110174, 0x41922a9e ),
	NORM( 0xbf5d81aa, 0xbd718644, 0x3efee567 ),
	VERT( 0xc342e1ac, 0xc1409418, 0x418e05fe ),
	NORM( 0x3eb658f2, 0x3f0893b3, 0x3f446488 ),
	VERT( 0xc341c49a, 0xc131a942, 0x41930108 ),
	NORM( 0xbf352795, 0xbe4e459b, 0x3f2d60a3 ),
	VERT( 0xc33a0714, 0xc1117984, 0x41b79b59 ),
	NORM( 0xbf5c460a, 0xbdfb8579, 0x3efd3230 ),
	VERT( 0xc33a9546, 0xc0cd5b3c, 0x41b51372 ),
	NORM( 0xbf5a6eac, 0xbd9226df, 0x3f043f86 ),
	VERT( 0xc33bdf7c, 0xc0cd5b3c, 0x41aef47f ),
	NORM( 0x3f0023db, 0x3deeeb50, 0x3f5b99a1 ),
	VERT( 0xc33b69f4, 0xc1116490, 0x41b0e7e3 ),
	NORM( 0x3ef2a890, 0x3e247012, 0x3f5da463 ),
	VERT( 0xc339517a, 0xc1482180, 0x41bad6cc ),
	NORM( 0xbf34e99e, 0xbe75000c, 0x3f2a749b ),
	VERT( 0xc33adb12, 0xc1455278, 0x41b34703 ),
	NORM( 0xbe8c4d2a, 0xbeb584ba, 0x3f64dc93 ),
	VERT( 0xc33a940e, 0xc0cd5b3c, 0x41bc54dd ),
	NORM( 0xbf7dc01a, 0xbe07591c, 0x3bab7463 ),
	VERT( 0xc33a940e, 0xc0cd5b3c, 0x41bc54dd ),
	NORM( 0xbefa855e, 0x38c590d7, 0x3f5f4302 ),
	VERT( 0xc33b69f4, 0xc1116490, 0x41b89662 ),
	NORM( 0x3f7c4be9, 0x3e2d8ca4, 0x00000000 ),
	VERT( 0xc33bdf7c, 0xc0cd5b3c, 0x41b686ae ),
	NORM( 0x3f7e19f1, 0x3df8f790, 0x00000000 ),
	VERT( 0xc33adb12, 0xc1455278, 0x41bb17ed ),
	NORM( 0x3f588329, 0xbf089884, 0x359f5635 ),
	VERT( 0xc34340c2, 0xc110ee16, 0x41937309 ),
	NORM( 0x3f7e0829, 0x3dfd768e, 0x00000000 ),
	VERT( 0xc342e1ac, 0xc1409418, 0x419565eb ),
	NORM( 0x3f1d75f8, 0x3f484980, 0x3dc8588f ),
	VERT( 0xc343805a, 0xc0e21f30, 0x4192255d ),
	NORM( 0x3f7f4754, 0x3d99a2f2, 0xb9a5db31 ),
	VERT( 0xc341f8b4, 0xc1110174, 0x419a2b21 ),
	NORM( 0xbf7ebc98, 0xbdcb355c, 0x00000000 ),
	VERT( 0xc33ae8f6, 0xbec4ba80, 0x41b35f5e ),
	NORM( 0xbf5a518f, 0xbce2730b, 0x3f0580a4 ),
	VERT( 0xc33c4a8a, 0xbec4ba80, 0x41acc3d3 ),
	NORM( 0x3f02af00, 0x3d971bcc, 0x3f5b51c7 ),
	VERT( 0xc343a7cc, 0xbec4ba80, 0x41914b69 ),
	NORM( 0xbf0ea87f, 0xb5c6a2a4, 0x3f549119 ),
	VERT( 0xc343a7cc, 0xbec4ba80, 0x41914b69 ),
	NORM( 0x3f7ffff8, 0xba6aa8b5, 0x39c4c0b4 ),
	VERT( 0xc33abc1c, 0xc15e99cc, 0x41b43eb4 ),
	NORM( 0xbe843445, 0x3f360d7e, 0x3f2766d5 ),
	VERT( 0xc3393283, 0xc16168d4, 0x41bbce7d ),
	NORM( 0xbe828d06, 0x3f3c5aeb, 0x3f209da9 ),
	VERT( 0xc3311675, 0xc1751208, 0x41dce2f1 ),
	NORM( 0xbe6c69d2, 0x3f3ac9d2, 0x3f24c808 ),
	VERT( 0xc3311675, 0xc15bcab8, 0x41dce2f1 ),
	NORM( 0xbd7e46ec, 0xbf7f7f0f, 0xbc100ea3 ),
	VERT( 0xc3311675, 0xc15bcab8, 0x41dce2f1 ),
	NORM( 0xbee43345, 0xbef75c17, 0x3f40ed10 ),
	VERT( 0xc31e9390, 0xc1845da0, 0x42117a45 ),
	NORM( 0xbd264b5c, 0x3f4acc14, 0x3f1be381 ),
	VERT( 0xc31e9390, 0xc16f73f0, 0x42117a45 ),
	NORM( 0xbdc99ab1, 0xbf480cd9, 0x3f1dbc96 ),
	VERT( 0xc31ab246, 0xc1845da0, 0x420e1697 ),
	NORM( 0x3ea4ea16, 0x3f4a63cc, 0x3f0552d4 ),
	VERT( 0xc31ab4b0, 0xc16f73f0, 0x420e1697 ),
	NORM( 0x3ea4e637, 0xbf49fa45, 0x3f05f3ad ),
	VERT( 0xc312604e, 0xc1845da0, 0x41c9e37f ),
	NORM( 0x3e7c93b6, 0x3f1aa0eb, 0x3f4201da ),
	VERT( 0xc312604e, 0xc16f73f0, 0x41c9e37f ),
	NORM( 0x3e7d3962, 0xbf19efb9, 0x3f42811b ),
	VERT( 0xc31aaadc, 0xc16f73f0, 0x4211443b ),
	NORM( 0x3f33c040, 0x3c70b4ea, 0x3f363d75 ),
	VERT( 0xc31aaadc, 0xc16f73f0, 0x4211443b ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc31bce00, 0xc16f73f0, 0x4214e751 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc31bce00, 0xc16f73f0, 0x4214e751 ),
	NORM( 0x3eb46780, 0x3daabc27, 0x3f6ea12f ),
	VERT( 0xc31bce00, 0xc1845da0, 0x4214e751 ),
	NORM( 0x3eaf61d8, 0xbe65c82e, 0x3f698d2d ),
	VERT( 0xc31bce00, 0xc1845da0, 0x4214e751 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc31aaadc, 0xc1845da0, 0x4211443b ),
	NORM( 0x3f326578, 0x3d86cc30, 0x3f36d47e ),
	VERT( 0xc31aaadc, 0xc1845da0, 0x4211443b ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc31df824, 0xc16f73f0, 0x4215f61f ),
	NORM( 0xbd9a21c8, 0x3d28d084, 0x3f7f0e4b ),
	VERT( 0xc31df824, 0xc16f73f0, 0x4215f61f ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc31eb286, 0xc16f73f0, 0x4214de73 ),
	NORM( 0xbec1fa17, 0xbc4716cf, 0x3f6ce54b ),
	VERT( 0xc31eb286, 0xc16f73f0, 0x4214de73 ),
	NORM( 0xbcd5f95a, 0xbf7fe931, 0xbb7272ba ),
	VERT( 0xc31eb286, 0xc1845da0, 0x4214de81 ),
	NORM( 0x3cd61d41, 0x3f7fe92a, 0x3b71be40 ),
	VERT( 0xc31eb286, 0xc1845da0, 0x4214de81 ),
	NORM( 0xbec73787, 0xbd0537c2, 0x3f6badf4 ),
	VERT( 0xc31df824, 0xc1845da0, 0x4215f61f ),
	NORM( 0xbdf26003, 0x00000000, 0x3f7e336e ),
	VERT( 0xc31df824, 0xc1845da0, 0x4215f61f ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc3293474, 0xc1645980, 0x42025593 ),
	NORM( 0xbedc9f6c, 0xbabf275c, 0x3f670378 ),
	VERT( 0xc3293474, 0xc1645980, 0x42025593 ),
	NORM( 0xbd7e46ec, 0xbf7f7f0f, 0xbc100ea3 ),
	VERT( 0xc331356b, 0xc1751208, 0x41e3cae9 ),
	NORM( 0xbee9d9fa, 0x37844df5, 0x3f63bccd ),
	VERT( 0xc331356b, 0xc1751208, 0x41e3cae9 ),
	NORM( 0x3dba93ae, 0x3f7ee675, 0x3c879ab4 ),
	VERT( 0xc3380433, 0xc14b46fc, 0x41c7d4f1 ),
	NORM( 0xbe117337, 0xbf7d5f6e, 0xbc800826 ),
	VERT( 0xc3380433, 0xc14b46fc, 0x41c7d4f1 ),
	NORM( 0xbef0bd15, 0x39b91de3, 0x3f61efb3 ),
	VERT( 0xc3380433, 0xc1648df4, 0x41c7d4bb ),
	NORM( 0x3e0ac512, 0x3f7d888f, 0x3ce97862 ),
	VERT( 0xc3380433, 0xc1648df4, 0x41c7d4bb ),
	NORM( 0xbeea3bde, 0xb8737261, 0x3f63a3a6 ),
	VERT( 0xc31a8b5e, 0xc18ec904, 0x4211443b ),
	NORM( 0x3f14a225, 0xbd0b42b1, 0x3f504030 ),
	VERT( 0xc31df824, 0xc18c0832, 0x4215f61f ),
	NORM( 0xbd6d8768, 0xbd23c638, 0x3f7f5d37 ),
	VERT( 0xc3293446, 0xc183b2b8, 0x420255ba ),
	NORM( 0xbedbee88, 0xba269be6, 0x3f672daf ),
	VERT( 0xc329342e, 0xc18cc3dc, 0x420255ce ),
	NORM( 0xbed08576, 0xbeb764ad, 0x3f571350 ),
	VERT( 0xc31df824, 0xc18ebc22, 0x4215f61f ),
	NORM( 0xbd9576ea, 0xbe95bb56, 0x3f741826 ),
	VERT( 0xc3380433, 0xc1712d8c, 0x41c7d4a0 ),
	NORM( 0xbeefef16, 0xbb9ae6b6, 0x3f6225a1 ),
	VERT( 0xc3293452, 0xc17da0f4, 0x420255af ),
	NORM( 0xbedcd7de, 0xb88c7897, 0x3f66f610 ),
	VERT( 0xc3293452, 0xc17da0f4, 0x420255af ),
	NORM( 0x3d7e7108, 0x3f7f7ee8, 0x3c0fa318 ),
	VERT( 0xc3393148, 0xc16168d4, 0x41c2fb68 ),
	NORM( 0xbef8a404, 0xbd2e73cb, 0x3f5f8556 ),
	VERT( 0xc3393148, 0xc16168d4, 0x41c2fb68 ),
	NORM( 0x3e032349, 0x3f7dd8d6, 0x3c9907b0 ),
	VERT( 0xc33abc1c, 0xc15e99cc, 0x41bc1a90 ),
	NORM( 0x3dff5fe4, 0x3f7dbd8a, 0x3d3863a0 ),
	VERT( 0xc33abc1c, 0xc15e99cc, 0x41bc1a90 ),
	NORM( 0xbefc0fbf, 0xbd518f97, 0x3f5e714d ),
	VERT( 0xc340ae61, 0xc1642e48, 0x41a0f9f1 ),
	NORM( 0xbf057c07, 0xba58f4f3, 0x3f5a71b4 ),
	VERT( 0xc340ae2c, 0xc14b1938, 0x41a0fa58 ),
	NORM( 0xbf06b3d4, 0x392ce31e, 0x3f59b200 ),
	VERT( 0xc340ae2c, 0xc14b1938, 0x41a0fa58 ),
	NORM( 0x3e151449, 0x3f7af5cd, 0x3e0895b3 ),
	VERT( 0xc33bdf7c, 0xc0cd5b3c, 0x41b686ae ),
	NORM( 0xbefa5a57, 0x38c0703d, 0x3f5f4f13 ),
	VERT( 0xc33c4a8a, 0xbec4ba80, 0x41b4a71b ),
	NORM( 0xbefa6e3e, 0x346f71ca, 0x3f5f497f ),
	VERT( 0xc33c4a8a, 0xbec4ba80, 0x41b4a71b ),
	NORM( 0x3f7fffe7, 0xbabddd1d, 0x3a785f4e ),
	VERT( 0xc340ac8b, 0xbec4ba80, 0x41a0fd83 ),
	NORM( 0xbf05165f, 0x38177380, 0x3f5aafb9 ),
	VERT( 0xc340adb1, 0xc11114fe, 0x41a0fb47 ),
	NORM( 0xbf051461, 0x3931e758, 0x3f5ab0ef ),
	VERT( 0xc33b69f4, 0xc1116490, 0x41b89662 ),
	NORM( 0xbefa5405, 0x39070f33, 0x3f5f50d8 ),
	VERT( 0xc343805a, 0xc0e21f30, 0x4192255d ),
	NORM( 0xbf0e15eb, 0x3a44da48, 0x3f54f32a ),
	VERT( 0xc34934bc, 0xbec4ba80, 0x4166fcde ),
	NORM( 0xbf4a8612, 0x3aed8ec7, 0x3f1c96a2 ),
	VERT( 0xc3485f8c, 0xc110a0b2, 0x4170689b ),
	NORM( 0xbf47972f, 0xbd0af285, 0x3f20135a ),
	VERT( 0xc34340c2, 0xc110ee16, 0x41937309 ),
	NORM( 0xbf0d8df9, 0x390af022, 0x3f554da5 ),
	VERT( 0xc347ef18, 0xc1594d34, 0x417560bc ),
	NORM( 0xbf48cba1, 0xbd11d97c, 0x3f1e8992 ),
	VERT( 0xc342e1ac, 0xc1409418, 0x419565eb ),
	NORM( 0xbf0d04df, 0xba977c8d, 0x3f55a855 ),
	VERT( 0xc311ac9e, 0xc16f73f0, 0x41cb6387 ),
	NORM( 0xbe55ca2f, 0xbf16831a, 0x3f48104d ),
	VERT( 0xc311ac9e, 0xc16f73f0, 0x41cb6387 ),
	NORM( 0x3f159276, 0x3d1e70d8, 0x3f4f8617 ),
	VERT( 0xc311b14d, 0xc1122da2, 0x41c9171a ),
	NORM( 0x3edd078b, 0x3c2228cb, 0x3f66e71a ),
	VERT( 0xc311ac9e, 0xc1845da0, 0x41cb6387 ),
	NORM( 0x3edf7301, 0x3d335ac1, 0x3f660f8e ),
	VERT( 0xc311ac9e, 0xc1845da0, 0x41cb6387 ),
	NORM( 0xbe55ca2f, 0x3f16831a, 0x3f48104d ),
	VERT( 0xc31056de, 0xc1be6bf2, 0x41c9171a ),
	NORM( 0x3eb660a5, 0xbd3c10fa, 0x3f6eeb5a ),
	VERT( 0xc347cb98, 0xc1703ec4, 0x4176f25a ),
	NORM( 0xbf45bfc1, 0xbe3c178e, 0x3f1ba0d6 ),
	VERT( 0xc340aea8, 0xc182f9fe, 0x41a0f966 ),
	NORM( 0xbf02a59a, 0xbeb5974f, 0x3f488ee2 ),
	VERT( 0xc31a6be0, 0xc1a5b056, 0x420e5060 ),
	NORM( 0x3e30374a, 0xbeeec4b2, 0x3f5e21d1 ),
	VERT( 0xc3489f7b, 0xc15844a0, 0x41579198 ),
	NORM( 0xbf76018a, 0xbd9e77a9, 0x3e880286 ),
	VERT( 0xc3491d2c, 0xc1109580, 0x4151d567 ),
	NORM( 0xbf7b0a59, 0xbdb63346, 0x3e32b4e4 ),
	VERT( 0xc3491d2c, 0xc1109580, 0x4151d567 ),
	NORM( 0xbf735a27, 0xbd959eb6, 0x3e9a7aa1 ),
	VERT( 0xc34a96d2, 0xc1107f34, 0x40a8e290 ),
	NORM( 0xbf7ad224, 0xbdb0f2cd, 0x3e38da68 ),
	VERT( 0xc34a37d0, 0xc155e020, 0x40a8e290 ),
	NORM( 0xbf7a8329, 0xbdad7d9e, 0x3e403831 ),
	VERT( 0xc34987d5, 0xc1ab30ca, 0x40a8e290 ),
	NORM( 0xbf5d5405, 0xbeb7a93c, 0x3eb43045 ),
	VERT( 0xc34987d5, 0xc1ab30ca, 0x40a8e290 ),
	NORM( 0xbed745de, 0xbe0c5bd3, 0xbf659b3e ),
	VERT( 0xc3485aa0, 0xc17f89c0, 0x415ab5e7 ),
	NORM( 0xbf63b33b, 0xbe9188e1, 0x3eb73b9e ),
	VERT( 0xc3380433, 0xc18b00bc, 0x41c7d451 ),
	NORM( 0xbeec1103, 0xbeb576bc, 0x3f504259 ),
	VERT( 0xc33adb12, 0xc1455278, 0x41bb17ed ),
	NORM( 0xbefa53ad, 0x39141c5a, 0x3f5f50f1 ),
	VERT( 0xc340adfc, 0xc134c1be, 0x41a0fab4 ),
	NORM( 0xbe333b19, 0xbf7c0c53, 0x35dff8c2 ),
	VERT( 0xc340adfc, 0xc134c1be, 0x41a0fab4 ),
	NORM( 0xbf044fb4, 0x393daf78, 0x3f5b2825 ),
	VERT( 0xc3120fc8, 0xbec4ba80, 0x41c9171a ),
	NORM( 0x3ee435ad, 0xbb9bf505, 0x3f652920 ),
	VERT( 0xc31aca5b, 0xbec4ba80, 0x4211443b ),
	NORM( 0x3f125cb6, 0xbb529a9a, 0x3f520831 ),
	VERT( 0xc341f8b4, 0xc1110174, 0x419a2b21 ),
	NORM( 0xbf0cd398, 0x3950d42e, 0x3f55c8e0 ),
	VERT( 0xc341c49a, 0xc131a942, 0x419b3eff ),
	NORM( 0xbf0cc819, 0x396fc2f2, 0x3f55d072 ),
	VERT( 0xc341c49a, 0xc131a942, 0x419b3eff ),
	NORM( 0xbf2347d7, 0xbf452b26, 0x35a3a34a ),
	VERT( 0xc3423026, 0xc0dc810c, 0x41990589 ),
	NORM( 0xbf0cdd6d, 0x39365ba2, 0x3f55c266 ),
	VERT( 0xc3423026, 0xc0dc810c, 0x41990589 ),
	NORM( 0xbf7f7d9f, 0xbd811ede, 0x00000000 ),
	VERT( 0xc3380433, 0xc11197ea, 0x41c7d56d ),
	NORM( 0xbef1cd1b, 0x3957c0e9, 0x3f61a709 ),
	VERT( 0xc33a05d9, 0xc1117998, 0x41bed8ef ),
	NORM( 0xbf7aae0b, 0xbe4f9bcb, 0x3baab66a ),
	VERT( 0xc33a05d9, 0xc1117998, 0x41bed8ef ),
	NORM( 0xbef9ccd5, 0x39dc1d23, 0x3f5f76ac ),
	VERT( 0xc339503d, 0xc1482180, 0x41c20f7a ),
	NORM( 0xbef8d247, 0x3a61d364, 0x3f5fbc7e ),
	VERT( 0xc339503d, 0xc1482180, 0x41c20f7a ),
	NORM( 0xbf171812, 0xbf4ea4e8, 0xbc0bf010 ),
	VERT( 0xc3380433, 0xbec4ba80, 0x41c7d698 ),
	NORM( 0xbef23e89, 0x38b22b17, 0x3f61889d ),
	VERT( 0xc331356b, 0xc15bcab8, 0x41e3cb2b ),
	NORM( 0xbdbfcf1a, 0xbf7edb97, 0xbc3c556a ),
	VERT( 0xc331356b, 0xc15bcab8, 0x41e3cb2b ),
	NORM( 0xbee9dae7, 0xb89facc6, 0x3f63bc90 ),
	VERT( 0xc31e761e, 0xbec4ba80, 0x4215f61f ),
	NORM( 0xbd767acd, 0xb9c1445e, 0x3f7f893b ),
	VERT( 0xc34a0f8a, 0xbecb88c0, 0x4146c663 ),
	NORM( 0xbf7bee97, 0x3b2055d3, 0x3e35cec5 ),
	VERT( 0xc34a0f8a, 0xbecb88c0, 0x4146c663 ),
	NORM( 0xbf6dec4e, 0x3b318d81, 0x3ebcfa44 ),
	VERT( 0xc3469185, 0xc17fa324, 0x4182386e ),
	NORM( 0xbf164572, 0xbebde77c, 0x3f383974 ),
	VERT( 0xc34073b1, 0xc191372a, 0x41934b49 ),
	NORM( 0xbee08e51, 0xbf2e5022, 0x3f162611 ),
	VERT( 0xc3374e6e, 0xc19b41e4, 0x41bb0b96 ),
	NORM( 0xbec6437d, 0xbf2a873c, 0x3f232f16 ),
	VERT( 0xc3284116, 0xc19efef0, 0x41f86f00 ),
	NORM( 0xbe9fd9eb, 0xbf2ef8cc, 0x3f28ea98 ),
	VERT( 0xc3470393, 0xc18a4174, 0x416477fd ),
	NORM( 0xbf1d4664, 0xbf18fbf8, 0x3f03e53b ),
	CnkEnd()
END

CNKMODEL   model_FishCon1_Fish_stick[]
START
VList      vertex_FishCon1_Fish_stick,
PList      strip_FishCon1_Fish_stick,
Center      -88.204796F,  0.851366F, -0.196217F,
Radius      136.131424F,
END

CNKOBJECT  object_FishCon1_Fish_stick[]
START
EvalFlags ( 0x00000026 ),
CNKModel   model_FishCon1_Fish_stick,
OPosition  ( 89.500000F, -20.000000F, -0.500000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_FishCon1_analogue_L,
Sibling     NULL,
END

CNKOBJECT_END


DEFAULT_START

#ifndef DEFAULT_OBJECT_NAME
#define DEFAULT_OBJECT_NAME object_FishCon1_Fish_stick
#endif

DEFAULT_END


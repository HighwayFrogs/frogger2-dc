/* NJA 0.98alpha1 NinjaAsciiDataMix CnkModel (LW) */

/* ROOT OBJECT : object_Racing_Cont_Unite n(10) d(3) */


CNKOBJECT_START

PLIST      strip_Racing_Cont_VM_forR[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 241, 241, 241 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 2076, _NB( UFO_0, 289 ),
	StripR(5),  1411, 1162, 1397, 486, 1397, 
	StripL(6),  1409, 1410, 1398, 1408, 1399, 1433, 
	StripL(4),  1398, 1397, 1409, 1411, 
	StripL(4),  913, 918, 903, 907, 
	StripL(4),  1192, 1242, 1181, 1201, 
	StripL(4),  1072, 1076, 1091, 1080, 
	StripL(3),  522, 518, 517, 
	StripL(3),  512, 1152, 1151, 
	StripR(5),  512, 1153, 1151, 1541, 1155, 
	StripR(6),  1160, 1159, 1157, 1158, 1524, 1151, 
	StripR(7),  1437, 1440, 1464, 1447, 1633, 1484, 1228, 
	StripL(6),  1241, 1199, 1472, 1468, 1445, 1441, 
	StripL(4),  932, 942, 921, 929, 
	StripR(5),  515, 514, 511, 512, 488, 
	StripL(8),  515, 516, 511, 520, 664, 675, 666, 672, 
	StripR(7),  861, 859, 864, 857, 850, 855, 854, 
	StripL(6),  875, 878, 873, 869, 870, 914, 
	StripL(4),  1190, 1180, 1188, 1182, 
	StripL(4),  1230, 1208, 1227, 1226, 
	StripL(6),  1185, 1179, 1197, 1203, 1238, 1239, 
	StripL(4),  1557, 1564, 1560, 1565, 
	StripL(4),  1590, 1595, 1592, 1598, 
	StripL(4),  1191, 1186, 1210, 1207, 
	StripR(5),  919, 906, 1030, 904, 1027, 
	StripL(3),  919, 1002, 1030, 
	StripL(4),  998, 1002, 866, 849, 
	StripR(6),  1547, 1545, 1548, 1549, 1554, 1556, 
	StripL(4),  1563, 1570, 1566, 1571, 
	StripR(6),  1028, 905, 1020, 910, 1021, 871, 
	StripL(4),  612, 611, 607, 603, 
	StripL(4),  658, 654, 647, 648, 
	StripL(4),  1200, 1243, 1198, 1209, 
	StripL(4),  1003, 917, 1016, 912, 
	StripL(4),  1483, 1229, 1477, 1224, 
	StripL(4),  1550, 1555, 1544, 1552, 
	StripR(8),  1584, 1583, 1580, 1579, 1576, 1575, 1572, 1569, 
	StripL(4),  1596, 1601, 1597, 1602, 
	StripL(4),  999, 865, 1012, 862, 
	StripL(6),  600, 599, 592, 593, 590, 594, 
	StripL(4),  592, 590, 600, 596, 
	StripL(10),  610, 613, 617, 619, 624, 625, 629, 632, 637, 639, 
	StripL(4),  662, 661, 657, 655, 
	StripL(4),  1217, 1213, 1183, 1187, 
	StripL(4),  1206, 1103, 1223, 1221, 
	StripL(4),  1476, 1232, 1236, 1193, 
	StripL(4),  1231, 1215, 1196, 1184, 
	StripL(4),  1214, 1100, 1189, 1205, 
	StripL(4),  1204, 1099, 1194, 1235, 
	StripL(4),  737, 916, 1019, 1004, 
	StripL(4),  741, 902, 997, 1001, 
	StripL(10),  1001, 915, 1029, 909, 1026, 680, 1018, 736, 1023, 709, 
	StripL(3),  1225, 1222, 1478, 
	StripL(3),  743, 996, 1011, 
	StripL(4),  1543, 1551, 1546, 1553, 
	StripL(4),  1054, 1051, 1053, 1052, 
	StripL(4),  1058, 1055, 1057, 1056, 
	StripL(4),  1062, 1059, 1061, 1060, 
	StripL(4),  1066, 1063, 1065, 1064, 
	StripL(4),  1068, 1069, 1067, 1068, 
	StripL(4),  1069, 1070, 1067, 1069, 
	StripL(6),  1075, 1071, 1074, 1073, 1077, 1078, 
	StripL(4),  1074, 1079, 1075, 1081, 
	StripL(4),  1089, 1088, 1083, 1086, 
	StripL(3),  1102, 1104, 1480, 
	StripR(5),  1480, 1105, 1104, 1106, 1107, 
	StripL(3),  1109, 1110, 1108, 
	StripR(5),  1108, 1111, 1110, 1112, 1090, 
	StripL(4),  1115, 1113, 1114, 1480, 
	StripL(4),  1334, 1331, 1333, 1332, 
	StripL(4),  1338, 1335, 1337, 1336, 
	StripR(5),  1469, 1466, 1195, 1485, 1234, 
	StripL(3),  1469, 1202, 1195, 
	StripL(6),  1492, 1491, 1488, 1489, 1487, 1490, 
	StripL(6),  1234, 1616, 1617, 1420, 1485, 1419, 
	StripL(4),  1620, 1102, 1457, 1113, 
	StripL(8),  1084, 1085, 1082, 1087, 1098, 1096, 1095, 1097, 
	StripL(4),  1095, 1092, 1094, 1093, 
	StripL(4),  1651, 1510, 1649, 1508, 
	StripL(4),  1178, 1175, 1177, 1176, 
	StripL(3),  1251, 1246, 1249, 
	StripR(5),  1249, 1244, 1246, 1216, 1211, 
	StripR(6),  1262, 1260, 1257, 1256, 1474, 1258, 
	StripR(6),  1219, 1266, 1264, 1265, 1268, 1269, 
	StripL(4),  1358, 1355, 1357, 1356, 
	StripL(4),  1362, 1359, 1361, 1360, 
	StripR(8),  1117, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 
	StripL(8),  1123, 980, 565, 982, 972, 981, 968, 977, 
	StripR(24),  1688, 1685, 1686, 1683, 1684, 1681, 1682, 1679, 1680, 1677, 
                   1678, 1675, 1676, 1673, 1674, 1671, 1672, 1669, 1670, 1667, 
                   1668, 1664, 1665, 1663, 
	StripR(24),  1687, 1690, 1689, 1692, 1691, 1694, 1693, 1696, 1695, 1698, 
                   1697, 1700, 1699, 1702, 1701, 1704, 1703, 1706, 1705, 1708, 
                   1707, 1710, 1709, 1666, 
	StripL(32),  1690, 1688, 1687, 1685, 1722, 1721, 1723, 1720, 1724, 1719, 
                   1725, 1718, 1726, 1717, 1727, 1716, 1728, 1715, 1729, 1714, 
                   1730, 1713, 1731, 1712, 1732, 1711, 1733, 1734, 1709, 1663, 
                   1666, 1665, 
	StripR(24),  1722, 1687, 1723, 1689, 1724, 1691, 1725, 1693, 1726, 1695, 
                   1727, 1697, 1728, 1699, 1729, 1701, 1730, 1703, 1731, 1705, 
                   1732, 1707, 1733, 1709, 
	StripR(24),  1734, 1663, 1711, 1664, 1712, 1667, 1713, 1669, 1714, 1671, 
                   1715, 1673, 1716, 1675, 1717, 1677, 1718, 1679, 1719, 1681, 
                   1720, 1683, 1721, 1685, 
	StripL(4),  1139, 1142, 1140, 1143, 
	StripL(4),  1529, 1154, 1525, 1150, 
	StripL(4),  638, 642, 631, 635, 
	StripR(5),  497, 410, 1296, 1277, 1291, 
	StripL(3),  497, 500, 1296, 
	StripR(5),  508, 505, 495, 1293, 1292, 
	StripL(3),  508, 503, 495, 
	StripL(4),  1174, 1171, 1173, 1172, 
	StripL(4),  1218, 1248, 1245, 1250, 
	StripR(6),  1255, 1254, 1253, 1252, 1212, 1247, 
	StripL(4),  1259, 1263, 1261, 1233, 
	StripL(4),  1267, 1101, 1270, 1271, 
	StripL(4),  1275, 1272, 1274, 1273, 
	StripL(4),  1290, 1287, 1289, 1288, 
	StripL(4),  1342, 1339, 1341, 1340, 
	StripL(4),  1348, 1343, 1346, 1344, 
	StripL(4),  1354, 1349, 1352, 1351, 
	StripL(4),  1367, 1363, 1366, 1364, 
	StripL(4),  1369, 1368, 1346, 1352, 
	StripL(4),  1387, 1384, 1386, 1385, 
	StripL(4),  1391, 1388, 1390, 1389, 
	StripL(4),  1395, 1392, 1394, 1393, 
	StripL(4),  1407, 1404, 1406, 1405, 
	StripL(4),  1613, 1610, 1612, 1611, 
	StripL(4),  1628, 1625, 1627, 1626, 
	StripL(4),  786, 775, 783, 780, 
	StripL(4),  697, 694, 689, 685, 
	StripL(10),  686, 684, 682, 679, 681, 908, 688, 690, 699, 702, 
	StripL(4),  682, 681, 686, 688, 
	StripL(8),  712, 710, 718, 719, 723, 725, 734, 738, 
	StripL(8),  740, 746, 749, 751, 755, 756, 762, 765, 
	StripL(4),  776, 831, 779, 825, 
	StripL(4),  561, 559, 542, 548, 
	StripL(4),  525, 544, 527, 554, 
	StripL(4),  556, 546, 533, 535, 
	StripL(4),  812, 808, 819, 815, 
	StripL(4),  539, 551, 698, 695, 
	StripL(4),  550, 540, 545, 543, 
	StripL(4),  529, 553, 787, 777, 
	StripL(4),  819, 816, 533, 555, 
	StripL(4),  549, 703, 693, 692, 
	StripL(4),  704, 538, 701, 700, 
	StripL(4),  552, 833, 778, 830, 
	StripL(4),  846, 557, 843, 814, 
	StripL(4),  696, 691, 687, 683, 
	StripL(4),  842, 817, 838, 810, 
	StripL(4),  782, 826, 791, 829, 
	StripL(4),  937, 939, 1037, 1039, 
	StripL(4),  784, 781, 793, 789, 
	StripL(4),  938, 936, 928, 925, 
	StripL(6),  835, 886, 828, 835, 883, 886, 
	StripR(6),  926, 940, 1033, 1038, 930, 941, 
	StripL(4),  1038, 941, 1036, 933, 
	StripL(4),  1041, 667, 1044, 674, 
	StripL(3),  851, 1000, 852, 
	StripR(5),  852, 1005, 1000, 772, 901, 
	StripL(3),  922, 1032, 931, 
	StripR(5),  931, 1034, 1032, 927, 924, 
	StripL(4),  772, 774, 770, 766, 
	StripL(4),  802, 836, 807, 839, 
	StripL(4),  804, 801, 811, 809, 
	StripL(3),  735, 1017, 726, 
	StripR(5),  726, 1014, 1017, 867, 911, 
	StripR(6),  935, 923, 1035, 1031, 934, 920, 
	StripR(6),  735, 733, 739, 731, 726, 729, 
	StripL(4),  773, 761, 768, 764, 
	StripR(24),  325, 326, 324, 327, 370, 371, 368, 369, 366, 367, 
                   364, 365, 362, 363, 360, 361, 358, 359, 356, 357, 
                   354, 355, 352, 353, 
	StripL(32),  326, 329, 325, 328, 373, 374, 372, 375, 395, 376, 
                   394, 377, 393, 378, 392, 379, 391, 380, 390, 381, 
                   389, 382, 388, 383, 387, 384, 386, 385, 352, 350, 
                   353, 351, 
	StripR(24),  350, 351, 348, 349, 346, 347, 344, 345, 342, 343, 
                   340, 341, 338, 339, 336, 337, 334, 335, 332, 333, 
                   330, 331, 328, 329, 
	StripR(24),  373, 325, 372, 324, 395, 370, 394, 368, 393, 366, 
                   392, 364, 391, 362, 390, 360, 389, 358, 388, 356, 
                   387, 354, 386, 352, 
	StripR(24),  385, 350, 384, 348, 383, 346, 382, 344, 381, 342, 
                   380, 340, 379, 338, 378, 336, 377, 334, 376, 332, 
                   375, 330, 374, 328, 
	StripL(9),  1538, 1540, 1536, 1542, 1535, 1156, 1527, 1528, 1522, 
	StripL(3),  1527, 1521, 1535, 
	StripL(4),  577, 575, 574, 573, 
	StripL(6),  580, 577, 562, 574, 564, 573, 
	StripL(14),  586, 584, 581, 582, 578, 1534, 576, 1533, 1531, 1532, 
                   1530, 1517, 1518, 1515, 
	StripL(11),  587, 586, 580, 581, 577, 578, 575, 576, 573, 1531, 
                   1530, 
	StripR(5),  580, 587, 588, 523, 519, 
	StripL(3),  1530, 1518, 573, 
	StripL(4),  513, 1539, 583, 1537, 
	StripL(6),  564, 568, 562, 570, 579, 588, 
	StripL(13),  585, 513, 582, 583, 1534, 1538, 1533, 1536, 1532, 1535, 
                   1517, 1521, 1515, 
	StripL(4),  1127, 1125, 1638, 1126, 
	StripL(4),  955, 978, 1638, 979, 
	StripR(6),  1498, 1382, 1499, 1501, 1128, 1378, 
	StripR(7),  992, 991, 566, 1048, 971, 1045, 970, 
	StripR(8),  993, 566, 995, 990, 572, 1379, 1519, 1516, 
	StripR(9),  890, 1163, 1164, 1161, 1165, 1169, 1170, 1168, 1166, 
	StripL(3),  895, 898, 896, 
	StripR(5),  896, 1164, 898, 1166, 1167, 
	StripR(7),  896, 884, 899, 888, 900, 890, 1164, 
	StripR(10),  1141, 1138, 1137, 1136, 1135, 1134, 1131, 1130, 1132, 1133, 
	StripR(6),  1149, 1148, 1145, 1144, 1146, 1147, 
	StripR(5),  1281, 1280, 1276, 1279, 1278, 
	StripR(5),  1286, 1285, 1282, 1284, 1283, 
	StripL(12),  1308, 1309, 1306, 1307, 1304, 1305, 1302, 1303, 1299, 1300, 
                   1298, 1301, 
	StripL(6),  1310, 1313, 1311, 1314, 1315, 1317, 
	StripR(16),  1327, 1326, 1325, 1324, 1323, 1322, 1321, 1320, 1319, 1318, 
                   1316, 1315, 1312, 1311, 411, 1310, 
	StripR(8),  1347, 1328, 1345, 1370, 1353, 1371, 1350, 1372, 
	StripR(5),  1370, 1328, 531, 411, 496, 
	StripR(9),  1377, 1376, 1375, 1374, 1365, 1373, 1330, 1329, 494, 
	StripL(4),  1502, 1380, 1383, 1381, 
	StripR(9),  1399, 1398, 1396, 1397, 1434, 486, 834, 1162, 889, 
	StripL(4),  1403, 1400, 1402, 1401, 
	StripR(7),  1426, 1425, 1423, 1424, 1422, 1450, 1614, 
	StripL(8),  1425, 1427, 1426, 1444, 1443, 1442, 1467, 1470, 
	StripR(6),  1220, 1416, 1417, 1415, 1452, 1618, 
	StripL(3),  1444, 1446, 1442, 
	StripL(12),  1450, 1451, 1424, 1430, 1425, 1429, 1427, 1428, 1471, 1237, 
                   1473, 1240, 
	StripL(4),  1452, 1417, 1453, 1220, 
	StripL(5),  1413, 1455, 1454, 1436, 1435, 
	StripR(8),  531, 1462, 1370, 1461, 1371, 1459, 1372, 1460, 
	StripR(11),  1465, 1463, 1436, 1481, 1455, 1458, 1413, 1456, 1412, 1619, 
                   1618, 
	StripR(6),  1465, 1436, 1438, 1435, 1439, 1448, 
	StripL(3),  1475, 1237, 1428, 
	StripR(5),  1427, 1444, 1471, 1446, 1473, 
	StripL(10),  1482, 1479, 1449, 1220, 1432, 1416, 1414, 1415, 1412, 1618, 
	StripR(9),  1482, 1448, 1449, 1435, 1432, 1454, 1414, 1413, 1412, 
	StripR(9),  1443, 1426, 1486, 1423, 1418, 1422, 1421, 1614, 1615, 
	StripL(3),  1443, 1467, 1486, 
	StripL(4),  1506, 1504, 1505, 847, 
	StripL(4),  897, 1511, 1513, 1512, 
	StripL(3),  1365, 1514, 1330, 
	StripL(3),  1526, 1523, 1503, 
	StripR(10),  1526, 1520, 1503, 1516, 1378, 1379, 1128, 990, 1124, 566, 
	StripR(14),  1559, 1558, 1561, 1562, 1567, 1568, 1573, 1574, 1577, 1578, 
                   1581, 1582, 1585, 1586, 
	StripR(8),  1600, 1599, 1594, 1593, 1588, 1587, 1589, 1591, 
	StripL(3),  1605, 1606, 1502, 
	StripL(6),  1523, 1605, 1503, 1502, 1378, 1500, 
	StripR(7),  1496, 1609, 1608, 1607, 1604, 1603, 1497, 
	StripR(6),  1475, 1451, 1431, 1430, 1428, 1429, 
	StripL(4),  1624, 1621, 1623, 1622, 
	StripL(4),  1631, 847, 1630, 1629, 
	StripL(9),  847, 1624, 1632, 847, 848, 1634, 891, 1635, 1636, 
	StripL(4),  1641, 1637, 1640, 1639, 
	StripL(4),  1643, 1644, 1642, 1645, 
	StripL(6),  1642, 1646, 1643, 1647, 1644, 1648, 
	StripL(14),  1652, 1650, 848, 1507, 961, 1509, 1653, 1654, 1495, 1493, 
                   1050, 1494, 1496, 1497, 
	StripL(4),  960, 943, 957, 956, 
	StripR(8),  962, 956, 974, 976, 965, 969, 1042, 1043, 
	StripL(10),  604, 601, 616, 609, 622, 618, 628, 623, 636, 630, 
	StripL(6),  660, 663, 651, 656, 644, 645, 
	StripR(5),  499, 558, 498, 547, 534, 
	StripR(5),  526, 541, 504, 560, 507, 
	StripR(5),  501, 1297, 506, 1295, 1294, 
	StripL(3),  501, 509, 506, 
	StripR(12),  427, 396, 425, 398, 423, 401, 421, 402, 419, 405, 
                   416, 406, 
	StripL(16),  409, 411, 408, 413, 407, 415, 404, 418, 403, 420, 
                   400, 422, 399, 424, 397, 426, 
	StripR(6),  417, 407, 414, 408, 412, 409, 
	StripL(8),  536, 496, 532, 537, 818, 806, 813, 805, 
	StripL(3),  496, 531, 537, 
	StripL(4),  530, 502, 528, 524, 
	StripL(6),  994, 991, 569, 567, 571, 589, 
	StripL(5),  994, 569, 995, 563, 572, 
	StripL(4),  1046, 671, 1049, 670, 
	StripL(7),  832, 796, 794, 530, 795, 528, 788, 
	StripL(4),  820, 844, 797, 840, 
	StripR(5),  827, 832, 887, 889, 887, 
	StripL(4),  887, 827, 885, 887, 
	StripL(9),  887, 832, 827, 794, 790, 795, 792, 788, 785, 
	StripL(3),  858, 856, 1008, 
	StripR(12),  876, 877, 1025, 1013, 720, 727, 721, 728, 722, 730, 
                   724, 732, 
	StripR(12),  717, 713, 716, 707, 715, 708, 714, 705, 1024, 1022, 
                   874, 872, 
	StripL(4),  750, 745, 744, 742, 
	StripR(5),  796, 530, 1329, 502, 494, 
	StripL(8),  531, 824, 537, 822, 806, 799, 805, 800, 
	StripR(9),  853, 856, 1007, 1008, 754, 747, 753, 748, 752, 
	StripL(11),  853, 1006, 1007, 771, 760, 769, 759, 767, 758, 763, 
                   757, 
	StripL(3),  1022, 711, 705, 
	StripL(5),  742, 1010, 1009, 863, 860, 
	StripR(5),  727, 1013, 1015, 877, 868, 
	StripR(6),  1047, 991, 670, 567, 676, 521, 
	StripL(4),  847, 988, 987, 989, 
	StripL(4),  881, 879, 880, 897, 
	StripL(3),  521, 589, 567, 
	StripL(4),  598, 597, 595, 591, 
	StripL(14),  608, 602, 606, 605, 614, 615, 620, 621, 626, 627, 
                   633, 634, 640, 641, 
	StripL(8),  646, 649, 643, 650, 652, 653, 659, 489, 
	StripL(3),  673, 676, 670, 
	StripL(7),  678, 487, 677, 510, 669, 665, 668, 
	StripL(6),  711, 713, 706, 707, 705, 708, 
	StripR(12),  724, 717, 722, 716, 721, 715, 720, 714, 1025, 1024, 
                   876, 874, 
	StripL(11),  757, 750, 752, 744, 748, 742, 747, 1009, 1008, 860, 
                   858, 
	StripL(8),  757, 752, 758, 753, 759, 754, 760, 1007, 
	StripL(4),  798, 841, 803, 837, 
	StripL(4),  823, 847, 821, 845, 
	StripR(5),  848, 847, 882, 848, 1632, 
	StripR(12),  889, 832, 834, 796, 1434, 1329, 1396, 1373, 1399, 1374, 
                   1433, 1376, 
	StripL(4),  847, 882, 837, 847, 
	StripL(3),  889, 834, 832, 
	StripL(6),  892, 893, 891, 894, 848, 882, 
	StripL(4),  1639, 947, 949, 948, 
	StripL(3),  951, 952, 950, 
	StripL(6),  954, 950, 953, 952, 958, 959, 
	StripL(3),  953, 958, 954, 
	StripL(4),  964, 963, 946, 944, 
	StripR(14),  945, 946, 848, 964, 961, 963, 973, 975, 967, 966, 
                   1050, 1040, 678, 668, 
	CnkNull(),
	CnkM_D( FBS_SA|FBD_ISA ), 2,
	MDiff( 255, 18, 18, 18 ),
	CnkS( 0x0 ), 116, _NB( UFO_0, 17 ),
	StripL(3),  471, 434, 473, 
	StripL(9),  463, 462, 461, 464, 468, 466, 465, 467, 463, 
	StripL(4),  463, 461, 465, 468, 
	StripL(3),  464, 462, 466, 
	StripR(6),  447, 446, 437, 440, 438, 442, 
	StripL(4),  443, 442, 451, 452, 
	StripL(11),  449, 438, 439, 437, 441, 447, 444, 448, 440, 445, 
                   446, 
	StripL(3),  450, 449, 439, 
	StripL(10),  460, 457, 458, 453, 456, 454, 455, 459, 460, 457, 
	StripR(6),  439, 443, 441, 442, 444, 440, 
	StripR(15),  472, 469, 429, 430, 428, 432, 474, 475, 476, 477, 
                   436, 432, 433, 435, 470, 
	StripL(5),  476, 474, 431, 428, 429, 
	StripR(5),  476, 436, 431, 433, 429, 
	StripL(3),  477, 432, 475, 
	StripL(4),  482, 483, 485, 484, 
	StripL(4),  479, 478, 481, 480, 
	StripL(3),  435, 430, 432, 
	CnkM_D( FBS_SA|FBD_ISA ), 2,
	MDiff( 255, 131, 129, 173 ),
	CnkS( 0x0 ), 484, _NB( UFO_0, 21 ),
	StripL(24),  45, 105, 109, 40, 111, 34, 52, 33, 56, 26, 
                   63, 96, 67, 22, 121, 19, 71, 13, 76, 11, 
                   79, 4, 82, 130, 
	StripL(3),  64, 60, 58, 
	StripL(6),  31, 29, 36, 24, 17, 20, 
	StripL(3),  55, 50, 48, 
	StripL(6),  9, 6, 15, 86, 81, 84, 
	StripL(3),  74, 72, 68, 
	StripL(3),  47, 42, 38, 
	StripR(8),  64, 68, 58, 74, 36, 81, 17, 15, 
	StripL(6),  36, 58, 38, 55, 47, 48, 
	StripL(28),  299, 297, 251, 249, 252, 246, 255, 245, 257, 242, 
                   259, 241, 260, 239, 262, 236, 265, 234, 267, 233, 
                   268, 231, 270, 229, 272, 274, 321, 323, 
	StripR(24),  321, 272, 318, 270, 317, 268, 314, 267, 313, 265, 
                   311, 262, 308, 260, 307, 259, 305, 257, 302, 255, 
                   301, 252, 299, 251, 
	StripR(24),  274, 323, 229, 276, 231, 278, 233, 281, 234, 283, 
                   236, 285, 239, 286, 241, 288, 242, 291, 245, 293, 
                   246, 294, 249, 297, 
	StripL(28),  298, 296, 250, 248, 253, 247, 254, 244, 256, 243, 
                   258, 240, 261, 238, 263, 237, 264, 235, 266, 232, 
                   269, 230, 271, 228, 273, 275, 320, 322, 
	StripR(24),  250, 298, 253, 300, 254, 303, 256, 304, 258, 306, 
                   261, 309, 263, 310, 264, 312, 266, 315, 269, 316, 
                   271, 319, 273, 320, 
	StripR(24),  275, 322, 228, 277, 230, 279, 232, 280, 235, 282, 
                   237, 284, 238, 287, 240, 289, 243, 290, 244, 292, 
                   247, 295, 248, 296, 
	StripL(24),  154, 152, 156, 151, 159, 148, 161, 146, 163, 144, 
                   164, 143, 167, 140, 168, 139, 171, 136, 172, 135, 
                   174, 133, 177, 178, 
	StripL(50),  192, 146, 195, 148, 196, 151, 199, 152, 200, 154, 
                   203, 156, 204, 159, 207, 161, 209, 163, 211, 164, 
                   212, 167, 215, 168, 216, 171, 219, 172, 221, 174, 
                   222, 177, 225, 178, 227, 133, 180, 135, 182, 136, 
                   184, 139, 187, 140, 189, 143, 190, 144, 192, 146, 
                   
	StripL(24),  179, 176, 132, 175, 134, 173, 137, 170, 138, 169, 
                   141, 166, 142, 165, 145, 162, 147, 160, 149, 158, 
                   150, 157, 153, 155, 
	StripL(50),  217, 170, 218, 173, 220, 175, 223, 176, 224, 179, 
                   226, 132, 181, 134, 183, 137, 185, 138, 186, 141, 
                   188, 142, 191, 145, 193, 147, 194, 149, 197, 150, 
                   198, 153, 201, 155, 202, 157, 205, 158, 206, 160, 
                   208, 162, 210, 165, 213, 166, 214, 169, 217, 170, 
                   
	StripL(50),  28, 97, 25, 23, 21, 93, 16, 91, 14, 10, 
                   8, 5, 7, 131, 87, 83, 85, 126, 80, 125, 
                   75, 70, 73, 120, 69, 66, 65, 62, 61, 116, 
                   59, 115, 54, 112, 51, 110, 49, 44, 46, 106, 
                   43, 103, 39, 100, 37, 32, 30, 27, 28, 97, 
                   
	StripL(50),  98, 32, 99, 35, 101, 41, 102, 106, 104, 44, 
                   107, 110, 108, 112, 113, 53, 114, 57, 117, 62, 
                   118, 66, 119, 120, 122, 70, 123, 77, 124, 78, 
                   127, 83, 128, 131, 129, 5, 88, 10, 89, 12, 
                   90, 18, 92, 23, 94, 97, 95, 27, 98, 32, 
                   
	CnkM_D( FBS_SA|FBD_ISA ), 2,
	MDiff( 255, 116, 163, 132 ),
	CnkS( 0x0 ), 6, _NB( UFO_0, 1 ),
	StripL(4),  3, 0, 1, 2, 
	CnkEnd()
END

VLIST      vertex_Racing_Cont_VM_forR[]
START
	CnkV_VN(0x0, 10411),
	OffnbIdx(0, 1735),
	VERT( 0x4300fb14, 0xc264f8e2, 0xc0bab445 ),
	NORM( 0x00000000, 0x3ee0722e, 0x3f66175e ),
	VERT( 0x42c8b1c6, 0xc2a422ad, 0x40c8bed9 ),
	NORM( 0x00000000, 0x3ee0722e, 0x3f66175e ),
	VERT( 0x42c8b1c6, 0xc264f8e2, 0xc0bab445 ),
	NORM( 0x00000000, 0x3ee0722e, 0x3f66175e ),
	VERT( 0x4300fb14, 0xc2a422ad, 0x40c8bed9 ),
	NORM( 0x00000000, 0x3ee0722e, 0x3f66175e ),
	VERT( 0x42f803a5, 0xc24b42d1, 0xc0bc193c ),
	NORM( 0xb9900ba0, 0x3ee0bf41, 0x3f66048e ),
	VERT( 0x42f803a5, 0xc24b42d1, 0xc0bc193c ),
	NORM( 0xbe05a8ac, 0xbf641f73, 0x3ede8694 ),
	VERT( 0x42f803a5, 0xc2487b24, 0xc08e8009 ),
	NORM( 0x3c5201fb, 0x3f16ab22, 0x3f4ef0b0 ),
	VERT( 0x42f803a5, 0xc2487b24, 0xc08e8009 ),
	NORM( 0xbe05a8af, 0xbf641f6d, 0x3ede86ab ),
	VERT( 0x42f4f2a2, 0xc246f822, 0xc094661a ),
	NORM( 0xbf37a71d, 0xbf204c16, 0x3e9c5d4b ),
	VERT( 0x42f4f2a2, 0xc246f822, 0xc094661a ),
	NORM( 0x3d65636f, 0x3f1caa01, 0x3f49f51d ),
	VERT( 0x42f4f2a2, 0xc249bfcf, 0xc0c1ff4d ),
	NORM( 0xbf1196d3, 0xbf3d4260, 0x3eb89d94 ),
	VERT( 0x42f4f2a2, 0xc249bfcf, 0xc0c1ff4d ),
	NORM( 0xb9900ba0, 0x3ee0bf3f, 0x3f66048e ),
	VERT( 0x42f23418, 0xc246cb8e, 0xc0cd861a ),
	NORM( 0xbf1fa0dc, 0xbf33e1c8, 0x3eaf77da ),
	VERT( 0x42f23418, 0xc246cb8e, 0xc0cd861a ),
	NORM( 0xb9900ba0, 0x3ee0bf41, 0x3f66048e ),
	VERT( 0x42f4453e, 0xc23fd15e, 0xc0c00292 ),
	NORM( 0xbf67a762, 0xbec3ddfa, 0x3e3f0fa2 ),
	VERT( 0x42f4453e, 0xc23fd15e, 0xc0c00292 ),
	NORM( 0x3bdb8463, 0x3eff2651, 0x3f5df0d8 ),
	VERT( 0x42f2a8c0, 0xc23ccb27, 0xc0cbcf75 ),
	NORM( 0xbee853f0, 0xbf4d0a00, 0x3ec8025b ),
	VERT( 0x42f2a8c0, 0xc23ccb27, 0xc0cbcf75 ),
	NORM( 0x3d8d6bc9, 0x3ee2f2e8, 0x3f64cb77 ),
	VERT( 0x42eff7e7, 0xc2429999, 0xc0dde487 ),
	NORM( 0xbf4e6563, 0xbf081f09, 0x3e84c7e1 ),
	VERT( 0x42eff7e7, 0xc2429999, 0xc0dde487 ),
	NORM( 0xb9900ba0, 0x3ee0bf41, 0x3f66048e ),
	VERT( 0x42ee650d, 0xc23aab73, 0xc0c463d3 ),
	NORM( 0x3e585e36, 0x3ef380a2, 0x3f5a9a07 ),
	VERT( 0x42ee650d, 0xc23aab73, 0xc0c463d3 ),
	NORM( 0xbf368389, 0xbf215834, 0x3e9d6303 ),
	VERT( 0x42ee650d, 0xc23d7321, 0xc0f1fd04 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42ee650d, 0xc23d7321, 0xc0f1fd04 ),
	NORM( 0xbf564548, 0xbefbd11e, 0x3e75a3a0 ),
	VERT( 0x42ed9700, 0xc234ea51, 0xc0dad7ca ),
	NORM( 0x3e389883, 0x3ee21c45, 0x3f60ffe2 ),
	VERT( 0x42ed9700, 0xc234ea51, 0xc0dad7ca ),
	NORM( 0xbf7e25f5, 0xbddcff5a, 0x3d579312 ),
	VERT( 0x42ed9bc8, 0xc231ba97, 0xc10fdc5a ),
	NORM( 0xb9900b9f, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42ed9bc8, 0xc231ba97, 0xc10fdc5a ),
	NORM( 0xbf7dcf57, 0x3df042e4, 0xbd6a5dd6 ),
	VERT( 0x42ed9bc8, 0xc22ef2ea, 0xc0f21f80 ),
	NORM( 0xbf7dcf57, 0x3df042e8, 0xbd6a5de6 ),
	VERT( 0x42ed9bc8, 0xc22ef2ea, 0xc0f21f80 ),
	NORM( 0x3e3862e4, 0x3ed67e82, 0x3f63d5f9 ),
	VERT( 0x42ee7314, 0xc2292d55, 0xc1045268 ),
	NORM( 0xbf3425ec, 0x3f237a7a, 0xbe9f77a2 ),
	VERT( 0x42ee7314, 0xc2292d55, 0xc1045268 ),
	NORM( 0x3e575c5a, 0x3ec1ba3f, 0x3f66c50a ),
	VERT( 0x42ee7314, 0xc22bf502, 0xc11b1f02 ),
	NORM( 0xbf54d755, 0x3effb44e, 0xbe796e33 ),
	VERT( 0x42ee7314, 0xc22bf502, 0xc11b1f02 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42f00e37, 0xc226c5ee, 0xc1253c0b ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42f00e37, 0xc226c5ee, 0xc1253c0b ),
	NORM( 0xbf4dee97, 0x3f08b00b, 0xbe85558a ),
	VERT( 0x42f2b8d6, 0xc228bbb4, 0xc10d0aa3 ),
	NORM( 0x3d8d2cbe, 0x3edc82f5, 0x3f665d90 ),
	VERT( 0x42f2b8d6, 0xc228bbb4, 0xc10d0aa3 ),
	NORM( 0xbee41618, 0x3f4dffb3, 0xbec8f1ba ),
	VERT( 0x42f45a35, 0xc225acb8, 0xc113022e ),
	NORM( 0x3be8888f, 0x3ec1d61a, 0x3f6cf01a ),
	VERT( 0x42f45a35, 0xc225acb8, 0xc113022e ),
	NORM( 0xbf6735a2, 0x3ec58e69, 0xbe40b57c ),
	VERT( 0x42f2512c, 0xc22287d1, 0xc12d82f9 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42f2512c, 0xc22287d1, 0xc12d82f9 ),
	NORM( 0xbf203112, 0x3f337a14, 0xbeaf12cd ),
	VERT( 0x42f5147f, 0xc21cbcfe, 0xc11c96d5 ),
	NORM( 0x3d68a60f, 0x3e7fd29e, 0x3f77749e ),
	VERT( 0x42f5147f, 0xc21cbcfe, 0xc11c96d5 ),
	NORM( 0xbf385934, 0x3f1fa699, 0xbe9bbbef ),
	VERT( 0x42f827fc, 0xc21df108, 0xc13676e5 ),
	NORM( 0xbe10bce2, 0x3f63c7fc, 0xbede315d ),
	VERT( 0x42f827fc, 0xc21df108, 0xc13676e5 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42f827fc, 0xc21b295b, 0xc11faa4d ),
	NORM( 0xbe10bce5, 0x3f63c7f8, 0xbede316e ),
	VERT( 0x42f827fc, 0xc21b295b, 0xc11faa4d ),
	NORM( 0x3c6bd826, 0x3e8ea5af, 0x3f75d607 ),
	VERT( 0x42fb55f8, 0xc21b20c3, 0xc11fbb12 ),
	NORM( 0xbc5076ed, 0x3e8ea7dc, 0x3f75d743 ),
	VERT( 0x42fb55f8, 0xc21b20c3, 0xc11fbb12 ),
	NORM( 0x3e05a90e, 0x3f641f66, 0xbede86ba ),
	VERT( 0x42fe66fb, 0xc21ca3c6, 0xc11cc808 ),
	NORM( 0xbd5ea1cf, 0x3e8074c9, 0x3f776bc5 ),
	VERT( 0x42fe66fb, 0xc21ca3c6, 0xc11cc808 ),
	NORM( 0x3f38d3c6, 0x3f1f33f5, 0xbe9b4c18 ),
	VERT( 0x430092c3, 0xc2225fb4, 0xc12dd13c ),
	NORM( 0xb9900ba0, 0x3ee0bf3f, 0x3f66048e ),
	VERT( 0x430092c3, 0xc2225fb4, 0xc12dd13c ),
	NORM( 0x3f1fa7a2, 0x3f33dcef, 0xbeaf7316 ),
	VERT( 0x42ff0aff, 0xc2258fce, 0xc1133a97 ),
	NORM( 0x3f684c6b, 0x3ec1624b, 0xbe3ca3d5 ),
	VERT( 0x42ff0aff, 0xc2258fce, 0xc1133a97 ),
	NORM( 0xbbd26e69, 0x3ec163b9, 0x3f6d07c9 ),
	VERT( 0x4301b0dc, 0xc22691a8, 0xc125a206 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x4301b0dc, 0xc22691a8, 0xc125a206 ),
	NORM( 0x3f4e6551, 0x3f081f15, 0xbe84c81c ),
	VERT( 0x430053bf, 0xc2289605, 0xc10d5426 ),
	NORM( 0xbd8dc21e, 0x3edcde37, 0x3f664645 ),
	VERT( 0x430053bf, 0xc2289605, 0xc10d5426 ),
	NORM( 0x3ee11f22, 0x3f4ea7fe, 0xbec99621 ),
	VERT( 0x43027a49, 0xc228f074, 0xc104c92c ),
	NORM( 0xbe54fcf9, 0x3ec327ff, 0x3f669b36 ),
	VERT( 0x43027a49, 0xc228f074, 0xc104c92c ),
	NORM( 0x3f3410cf, 0x3f238d3f, 0xbe9f8a07 ),
	VERT( 0x43027a49, 0xc22bb821, 0xc11b95c6 ),
	NORM( 0x3f557ac7, 0x3efdfa89, 0xbe77bf50 ),
	VERT( 0x43027a49, 0xc22bb821, 0xc11b95c6 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x4302e150, 0xc22eb197, 0xc0f31e62 ),
	NORM( 0xbe3724ec, 0x3ed76232, 0x3f63b04a ),
	VERT( 0x4302e150, 0xc22eb197, 0xc0f31e62 ),
	NORM( 0x3f7e25fa, 0x3ddcfe2a, 0xbd57922d ),
	VERT( 0x4302e150, 0xc2317944, 0xc1105bcb ),
	NORM( 0x3f7e25fa, 0x3ddcfe28, 0xbd579200 ),
	VERT( 0x4302e150, 0xc2317944, 0xc1105bcb ),
	NORM( 0xb9900ba1, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x4302deeb, 0xc234a8fd, 0xc0dbd6af ),
	NORM( 0xbe3741a3, 0x3ee2f461, 0x3f60dafe ),
	VERT( 0x4302deeb, 0xc234a8fd, 0xc0dbd6af ),
	NORM( 0x3f7dcf4f, 0xbdf04493, 0x3d6a5f92 ),
	VERT( 0x43027345, 0xc23d3642, 0xc0f2ea88 ),
	NORM( 0x3f559188, 0xbefdbcb5, 0x3e7782e9 ),
	VERT( 0x43027345, 0xc23d3642, 0xc0f2ea88 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x43027345, 0xc23a6e95, 0xc0c55157 ),
	NORM( 0xbe572795, 0x3ef46999, 0x3f5a6c2d ),
	VERT( 0x43027345, 0xc23a6e95, 0xc0c55157 ),
	NORM( 0x3f3638f8, 0xbf219c49, 0x3e9da528 ),
	VERT( 0x43004bb4, 0xc23ca578, 0xc0cc627e ),
	NORM( 0xbd8ac320, 0x3ee33d54, 0x3f64bf83 ),
	VERT( 0x43004bb4, 0xc23ca578, 0xc0cc627e ),
	NORM( 0x3eeab12f, 0xbf4c7ead, 0x3ec77a1d ),
	VERT( 0x4301a5b4, 0xc2426552, 0xc0deb084 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x4301a5b4, 0xc2426552, 0xc0deb084 ),
	NORM( 0x3f4dee90, 0xbf08b013, 0x3e855590 ),
	VERT( 0x43008439, 0xc246a370, 0xc0ce229d ),
	NORM( 0x3f202a4a, 0xbf337ef7, 0x3eaf1795 ),
	VERT( 0x43008439, 0xc246a370, 0xc0ce229d ),
	NORM( 0xb9900ba0, 0x3ee0bf3f, 0x3f66048e ),
	VERT( 0x42fef608, 0xc23fb472, 0xc0c0736a ),
	NORM( 0x3f6779c8, 0xbec48be4, 0x3e3fb942 ),
	VERT( 0x42fef608, 0xc23fb472, 0xc0c0736a ),
	NORM( 0xbbf34f41, 0x3efee061, 0x3f5e048b ),
	VERT( 0x42fe451e, 0xc249a697, 0xc0c261b5 ),
	NORM( 0xb9900ba0, 0x3ee0bf3f, 0x3f66048e ),
	VERT( 0x42fe451e, 0xc249a697, 0xc0c261b5 ),
	NORM( 0x3f12ecec, 0xbf3c6c55, 0x3eb7cccd ),
	VERT( 0x42fe451e, 0xc246deea, 0xc094c880 ),
	NORM( 0xbd6ea3fb, 0x3f1cacc7, 0x3f49e83e ),
	VERT( 0x42fe451e, 0xc246deea, 0xc094c880 ),
	NORM( 0x3f386dd4, 0xbf1f935c, 0x3e9ba922 ),
	VERT( 0x42fb31a1, 0xc248728c, 0xc08ea196 ),
	NORM( 0xbc6ff704, 0x3f16a4ff, 0x3f4ef31f ),
	VERT( 0x42fb31a1, 0xc248728c, 0xc08ea196 ),
	NORM( 0x3e10bc98, 0xbf63c7fe, 0x3ede3163 ),
	VERT( 0x42f803a5, 0xc24e0cc4, 0xc0e9d7bd ),
	NORM( 0xbe05a8a9, 0xbf641f79, 0x3ede867e ),
	VERT( 0x42f4f2a2, 0xc24c89c1, 0xc0efbdce ),
	NORM( 0xbec91649, 0xbf539a48, 0x3ece6911 ),
	VERT( 0x42f23418, 0xc2499581, 0xc0fb449a ),
	NORM( 0xbf1fa0dc, 0xbf33e1c8, 0x3eaf77d9 ),
	VERT( 0x42f4453e, 0xc241d40e, 0xc0e0fcba ),
	NORM( 0xbf659714, 0xbecb9142, 0x3e46928c ),
	VERT( 0x42eff7e7, 0xc245638b, 0xc105d184 ),
	NORM( 0xbf4e6566, 0xbf081f06, 0x3e84c7dd ),
	VERT( 0x42f2a8c0, 0xc23ecdd7, 0xc0ecc99a ),
	NORM( 0xbef1501c, 0xbf4aeeb1, 0x3ec5f443 ),
	VERT( 0x42ee650d, 0xc2403d13, 0xc10fddc3 ),
	NORM( 0xbf6e46ac, 0xbea84005, 0x3e241f2b ),
	VERT( 0x42ed9700, 0xc23a7bf1, 0xc11b17be ),
	NORM( 0xbf7e25f5, 0xbddcff45, 0x3d579382 ),
	VERT( 0x42ed9700, 0xc237b445, 0xc1044b33 ),
	NORM( 0xb9900ba0, 0x3ee0bf41, 0x3f66048e ),
	VERT( 0x42ed9700, 0xc237b445, 0xc1044b33 ),
	NORM( 0xbf7e25f6, 0xbddcff2c, 0x3d579328 ),
	VERT( 0x42ed9bc8, 0xc234848a, 0xc126bb99 ),
	NORM( 0xbf7dcf57, 0x3df042e2, 0xbd6a5dcb ),
	VERT( 0x42ee7314, 0xc22ebef5, 0xc131fe43 ),
	NORM( 0xbf6d8896, 0x3eab9bef, 0xbe276613 ),
	VERT( 0x42f2b8d6, 0xc22abe64, 0xc11d87b5 ),
	NORM( 0xbeed614e, 0x3f4bde04, 0xbec6dd6f ),
	VERT( 0x42f00e37, 0xc2298fe1, 0xc13c1b4b ),
	NORM( 0xbf4dee97, 0x3f08b00b, 0xbe855589 ),
	VERT( 0x42f2512c, 0xc22551c4, 0xc1446238 ),
	NORM( 0xbf202a56, 0x3f337eef, 0xbeaf1789 ),
	VERT( 0x42f45a35, 0xc227af68, 0xc1237f41 ),
	NORM( 0xbf653c0d, 0x3eccdbb0, 0xbe47d4e7 ),
	VERT( 0x42f5147f, 0xc2224e9e, 0xc14a42af ),
	NORM( 0xbeccc7d9, 0x3f52e2ce, 0xbecdb637 ),
	VERT( 0x42f5147f, 0xc21f86f3, 0xc1337623 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42f5147f, 0xc21f86f3, 0xc1337623 ),
	NORM( 0xbf12b54c, 0x3f3c8f51, 0xbeb7ef02 ),
	VERT( 0x42f827fc, 0xc220bafb, 0xc14d5626 ),
	NORM( 0xbe10bcdd, 0x3f63c801, 0xbede314b ),
	VERT( 0x42fb55f8, 0xc220b263, 0xc14d66eb ),
	NORM( 0x3e05a90f, 0x3f641f6f, 0xbede8697 ),
	VERT( 0x42fb55f8, 0xc21deab8, 0xc1369a5f ),
	NORM( 0xb9900ba0, 0x3ee0bf41, 0x3f66048e ),
	VERT( 0x42fb55f8, 0xc21deab8, 0xc1369a5f ),
	NORM( 0x3e05a911, 0x3f641f6b, 0xbede86a8 ),
	VERT( 0x42fe66fb, 0xc21f6dbb, 0xc133a755 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42fe66fb, 0xc21f6dbb, 0xc133a755 ),
	NORM( 0x3f120121, 0x3f3d002b, 0xbeb85d07 ),
	VERT( 0x42fe66fb, 0xc2223566, 0xc14a73e0 ),
	NORM( 0x3ec9162f, 0x3f539a4c, 0xbece691b ),
	VERT( 0x430092c3, 0xc22529a6, 0xc144b07c ),
	NORM( 0x3f1fa0a6, 0x3f33e1f0, 0xbeaf77f9 ),
	VERT( 0x42ff0aff, 0xc227927e, 0xc123b7aa ),
	NORM( 0x3f664adc, 0x3ec8fcd3, 0xbe440e9f ),
	VERT( 0x430053bf, 0xc22a98b6, 0xc11dd139 ),
	NORM( 0x3eea9999, 0x3f4c8416, 0xbec77faa ),
	VERT( 0x4301b0dc, 0xc2295b9b, 0xc13c8147 ),
	NORM( 0x3f4e6551, 0x3f081f15, 0xbe84c81d ),
	VERT( 0x43027a49, 0xc22e8214, 0xc1327506 ),
	NORM( 0x3f6e46a0, 0x3ea8403c, 0xbe241f66 ),
	VERT( 0x4302e150, 0xc2344336, 0xc1273b0b ),
	NORM( 0x3f7e25fa, 0x3ddcfe56, 0xbd5791fd ),
	VERT( 0x4302deeb, 0xc23772f1, 0xc104caa7 ),
	NORM( 0x3f7dcf50, 0xbdf04485, 0x3d6a5f50 ),
	VERT( 0x4302deeb, 0xc23772f1, 0xc104caa7 ),
	NORM( 0xb9900b9f, 0x3ee0bf3f, 0x3f66048e ),
	VERT( 0x4302deeb, 0xc23a3a9d, 0xc11b9731 ),
	NORM( 0x3f7dcf4f, 0xbdf044c1, 0x3d6a5f58 ),
	VERT( 0x43027345, 0xc2400034, 0xc1105484 ),
	NORM( 0x3f6d889c, 0xbeab9bd9, 0x3e2765ee ),
	VERT( 0x4301a5b4, 0xc2452f45, 0xc1063781 ),
	NORM( 0x3f4dee90, 0xbf08b013, 0x3e855590 ),
	VERT( 0x43004bb4, 0xc23ea828, 0xc0ed5ca4 ),
	NORM( 0x3ef36873, 0xbf4a6d3b, 0x3ec575a8 ),
	VERT( 0x42fef608, 0xc241b722, 0xc0e16d92 ),
	NORM( 0x3f656b2a, 0xbecc3102, 0x3e472e5b ),
	VERT( 0x43008439, 0xc2496d63, 0xc0fbe11e ),
	NORM( 0x3f202a4a, 0xbf337ef7, 0x3eaf1794 ),
	VERT( 0x42fe451e, 0xc24c708a, 0xc0f02034 ),
	NORM( 0x3eccc795, 0xbf52e2e2, 0x3ecdb62b ),
	VERT( 0x42fb31a1, 0xc24e042b, 0xc0e9f94b ),
	NORM( 0x3e10bca1, 0xbf63c80a, 0x3ede312f ),
	VERT( 0x42fb31a1, 0xc24b3c81, 0xc0bc6033 ),
	NORM( 0xb9900ba0, 0x3ee0bf40, 0x3f66048e ),
	VERT( 0x42fb31a1, 0xc24b3c81, 0xc0bc6033 ),
	NORM( 0x3e10bc9a, 0xbf63c804, 0x3ede314b ),
	VERT( 0x42d4b776, 0xc249de30, 0xc0a4c5b3 ),
	NORM( 0xb5a32b19, 0xbeba6d80, 0x3f6e6d2c ),
	VERT( 0x42e04f29, 0xc2492418, 0xc0a79bd1 ),
	NORM( 0xb38fa16b, 0xbeba6d90, 0x3f6e6d29 ),
	VERT( 0x42d40dc4, 0xc249b3ea, 0xc0a56aa6 ),
	NORM( 0xbe4c11b7, 0xbeada286, 0x3f6b5d0d ),
	VERT( 0x42dfa577, 0xc248f9d2, 0xc0a840c4 ),
	NORM( 0xbe4c10f2, 0xbeada28b, 0x3f6b5d17 ),
	VERT( 0x42df0755, 0xc2487de2, 0xc0aa245a ),
	NORM( 0xbec32710, 0xbe88e8f7, 0x3f628efd ),
	VERT( 0x42d36fa3, 0xc24937fa, 0xc0a74e3c ),
	NORM( 0xbec3269a, 0xbe88e888, 0x3f628f28 ),
	VERT( 0x42d2e7d8, 0xc24872d1, 0xc0aa4f88 ),
	NORM( 0xbf082872, 0xbe21193d, 0x3f550394 ),
	VERT( 0x42de7f8b, 0xc247b8b8, 0xc0ad25a7 ),
	NORM( 0xbf0828a8, 0xbe211717, 0x3f55038b ),
	VERT( 0x42de1759, 0xc246b7c8, 0xc0b11031 ),
	NORM( 0xbf2498c4, 0xbca08786, 0x3f4401cc ),
	VERT( 0x42d27fa6, 0xc24771e1, 0xc0ae3a11 ),
	NORM( 0xbf2498dd, 0xbca08960, 0x3f4401b6 ),
	VERT( 0x42d23e26, 0xc24646a7, 0xc0b2c995 ),
	NORM( 0xbf35df53, 0x3e0a8d06, 0x3f30cd1d ),
	VERT( 0x42ddd5d9, 0xc2458c90, 0xc0b59fb5 ),
	NORM( 0xbf35df48, 0x3e0a8aab, 0x3f30cd45 ),
	VERT( 0x42ddbf81, 0xc2444b77, 0xc0ba8493 ),
	NORM( 0xbf3ba71b, 0x3e98ab8d, 0x3f1c8295 ),
	VERT( 0x42d227cf, 0xc2450590, 0xc0b7ae76 ),
	NORM( 0xbf3ba6f9, 0x3e98ab9a, 0x3f1c82b9 ),
	VERT( 0x42ddd5d9, 0xc2430a5e, 0xc0bf6974 ),
	NORM( 0xbf35df42, 0x3eebff45, 0x3f082492 ),
	VERT( 0x42d23e26, 0xc243c476, 0xc0bc9356 ),
	NORM( 0xbf35df7a, 0x3eebfe12, 0x3f0824cc ),
	VERT( 0x42de1759, 0xc241df28, 0xc0c3f8ef ),
	NORM( 0xbf2498af, 0x3f1d8b31, 0x3ee9719a ),
	VERT( 0x42d27fa6, 0xc242993f, 0xc0c122d8 ),
	NORM( 0xbf2498be, 0x3f1d8b57, 0x3ee97109 ),
	VERT( 0x42d2e7d8, 0xc241984f, 0xc0c50d5f ),
	NORM( 0xbf08285d, 0x3f40a71f, 0x3ec6d0f9 ),
	VERT( 0x42de7f8b, 0xc240de36, 0xc0c7e380 ),
	NORM( 0xbf0828b6, 0x3f40a6e5, 0x3ec6d0e8 ),
	VERT( 0x42df0755, 0xc240190e, 0xc0cae4c8 ),
	NORM( 0xbec326f2, 0x3f5cace0, 0x3eab152f ),
	VERT( 0x42d36fa3, 0xc240d325, 0xc0c80ead ),
	NORM( 0xbec3268a, 0x3f5cad0e, 0x3eab14b7 ),
	VERT( 0x42dfa577, 0xc23f9d1c, 0xc0ccc863 ),
	NORM( 0xbe4c117c, 0x3f6eeb57, 0x3e98fb3c ),
	VERT( 0x42d40dc4, 0xc2405736, 0xc0c9f242 ),
	NORM( 0xbe4c1234, 0x3f6eeb31, 0x3e98fbf0 ),
	VERT( 0x42e04f29, 0xc23f72d7, 0xc0cd6d54 ),
	NORM( 0xb38fa131, 0x3f75454f, 0x3e92ac60 ),
	VERT( 0x42d4b776, 0xc2402cef, 0xc0ca9737 ),
	NORM( 0xb5a32b44, 0x3f754561, 0x3e92abe3 ),
	VERT( 0x42d56129, 0xc2405736, 0xc0c9f242 ),
	NORM( 0x3e4c11ee, 0x3f6eeb3a, 0x3e98fbcb ),
	VERT( 0x42e0f8db, 0xc23f9d1c, 0xc0ccc863 ),
	NORM( 0x3e4c125b, 0x3f6eeb4f, 0x3e98fb24 ),
	VERT( 0x42d5ff4a, 0xc240d325, 0xc0c80ead ),
	NORM( 0x3ec32733, 0x3f5caced, 0x3eab14a0 ),
	VERT( 0x42e196fc, 0xc240190e, 0xc0cae4c8 ),
	NORM( 0x3ec32691, 0x3f5cace3, 0x3eab158d ),
	VERT( 0x42d68714, 0xc241984f, 0xc0c50d5f ),
	NORM( 0x3f082822, 0x3f40a727, 0x3ec6d17c ),
	VERT( 0x42e21ec7, 0xc240de36, 0xc0c7e380 ),
	NORM( 0x3f082888, 0x3f40a720, 0x3ec6d081 ),
	VERT( 0x42e286f9, 0xc241df28, 0xc0c3f8ef ),
	NORM( 0x3f2498ad, 0x3f1d8b32, 0x3ee9719c ),
	VERT( 0x42d6ef47, 0xc242993f, 0xc0c122d8 ),
	NORM( 0x3f2498a3, 0x3f1d8bac, 0x3ee9706f ),
	VERT( 0x42d730c7, 0xc243c476, 0xc0bc9356 ),
	NORM( 0x3f35df79, 0x3eebfe13, 0x3f0824cd ),
	VERT( 0x42e2c879, 0xc2430a5e, 0xc0bf6974 ),
	NORM( 0x3f35df83, 0x3eebfe4f, 0x3f0824a6 ),
	VERT( 0x42e2ded0, 0xc2444b77, 0xc0ba8493 ),
	NORM( 0x3f3ba6d4, 0x3e98abd0, 0x3f1c82d9 ),
	VERT( 0x42d7471e, 0xc2450590, 0xc0b7ae76 ),
	NORM( 0x3f3ba6f7, 0x3e98ab9c, 0x3f1c82bb ),
	VERT( 0x42d730c7, 0xc24646a7, 0xc0b2c995 ),
	NORM( 0x3f35df54, 0x3e0a8cff, 0x3f30cd1c ),
	VERT( 0x42e2c879, 0xc2458c90, 0xc0b59fb5 ),
	NORM( 0x3f35df8a, 0x3e0a8c18, 0x3f30ccf0 ),
	VERT( 0x42e286f9, 0xc246b7c8, 0xc0b11031 ),
	NORM( 0x3f2498c2, 0xbca08771, 0x3f4401cd ),
	VERT( 0x42d6ef47, 0xc24771e1, 0xc0ae3a11 ),
	NORM( 0x3f2498c4, 0xbca097f8, 0x3f4401c8 ),
	VERT( 0x42e21ec7, 0xc247b8b8, 0xc0ad25a7 ),
	NORM( 0x3f08287d, 0xbe21185e, 0x3f550398 ),
	VERT( 0x42d68714, 0xc24872d1, 0xc0aa4f88 ),
	NORM( 0x3f08283b, 0xbe211899, 0x3f5503bf ),
	VERT( 0x42d5ff4a, 0xc24937fa, 0xc0a74e3c ),
	NORM( 0x3ec3273e, 0xbe88e868, 0x3f628f09 ),
	VERT( 0x42e196fc, 0xc2487de2, 0xc0aa245a ),
	NORM( 0x3ec326b3, 0xbe88e8be, 0x3f628f1a ),
	VERT( 0x42e0f8db, 0xc248f9d2, 0xc0a840c4 ),
	NORM( 0x3e4c11cb, 0xbeada28b, 0x3f6b5d0b ),
	VERT( 0x42d56129, 0xc249b3ea, 0xc0a56aa6 ),
	NORM( 0x3e4c1167, 0xbeada293, 0x3f6b5d0f ),
	VERT( 0x42e04f29, 0xc24e1aca, 0xc0f9064a ),
	NORM( 0x00000000, 0xbf661760, 0x3ee07228 ),
	VERT( 0x42d4b776, 0xc24ed4e2, 0xc0f6302c ),
	NORM( 0xb5d258a5, 0xbf66175c, 0x3ee07237 ),
	VERT( 0x42dfa577, 0xc24df083, 0xc0f9ab3d ),
	NORM( 0xbe8ac0a9, 0xbf5d7b2c, 0x3ed80bef ),
	VERT( 0x42d40dc4, 0xc24eaa9c, 0xc0f6d521 ),
	NORM( 0xbe8ac120, 0xbf5d7b18, 0x3ed80bf3 ),
	VERT( 0x42df0755, 0xc24d7493, 0xc0fb8ed6 ),
	NORM( 0xbf04c7b5, 0xbf44b8cf, 0x3ebfe527 ),
	VERT( 0x42d36fa3, 0xc24e2eab, 0xc0f8b8b5 ),
	NORM( 0xbf04c788, 0xbf44b8ea, 0x3ebfe533 ),
	VERT( 0x42d2e7d8, 0xc24d6982, 0xc0fbba03 ),
	NORM( 0xbf3971ea, 0xbf1e9f28, 0x3e9abac7 ),
	VERT( 0x42de7f8b, 0xc24caf6a, 0xc0fe9022 ),
	NORM( 0xbf397261, 0xbf1e9eb5, 0x3e9aba66 ),
	VERT( 0x42d27fa6, 0xc24c6892, 0xc0ffa48b ),
	NORM( 0xbf605dc8, 0xbedd972b, 0x3e582776 ),
	VERT( 0x42de1759, 0xc24bae79, 0xc1013d56 ),
	NORM( 0xbf605dc7, 0xbedd9736, 0x3e58275c ),
	VERT( 0x42ddd5d9, 0xc24a8342, 0xc1038517 ),
	NORM( 0xbf781012, 0xbe63673b, 0x3dddd2ee ),
	VERT( 0x42d23e26, 0xc24b3d5b, 0xc1021a06 ),
	NORM( 0xbf781044, 0xbe636477, 0x3dddd085 ),
	VERT( 0x42ddbf81, 0xc2494228, 0xc105f787 ),
	NORM( 0xbf800000, 0x3337767b, 0xb2fc42e9 ),
	VERT( 0x42d227cf, 0xc249fc41, 0xc1048c77 ),
	NORM( 0xbf800000, 0xb517ee04, 0x3456feb3 ),
	VERT( 0x42d23e26, 0xc248bb28, 0xc106fee8 ),
	NORM( 0xbf78103f, 0x3e6364c5, 0xbdddd074 ),
	VERT( 0x42ddd5d9, 0xc248010f, 0xc10869f7 ),
	NORM( 0xbf781003, 0x3e63681c, 0xbdddd3a9 ),
	VERT( 0x42de1759, 0xc246d5d9, 0xc10ab1b4 ),
	NORM( 0xbf605dd6, 0x3edd9706, 0xbe58271c ),
	VERT( 0x42d27fa6, 0xc2478ff0, 0xc10946a8 ),
	NORM( 0xbf605db7, 0x3edd976d, 0xbe58277e ),
	VERT( 0x42d2e7d8, 0xc2468f00, 0xc10b3bee ),
	NORM( 0xbf3971e1, 0x3f1e9f2a, 0xbe9abaec ),
	VERT( 0x42de7f8b, 0xc245d4e7, 0xc10ca6fd ),
	NORM( 0xbf397237, 0x3f1e9edc, 0xbe9aba90 ),
	VERT( 0x42df0755, 0xc2450fc0, 0xc10e27a0 ),
	NORM( 0xbf04c7c3, 0x3f44b8c2, 0xbebfe537 ),
	VERT( 0x42d36fa3, 0xc245c9d8, 0xc10cbc92 ),
	NORM( 0xbf04c76a, 0x3f44b8f3, 0xbebfe564 ),
	VERT( 0x42d40dc4, 0xc2454de7, 0xc10dae5e ),
	NORM( 0xbe8ac198, 0x3f5d7b0d, 0xbed80bd3 ),
	VERT( 0x42dfa577, 0xc24493ce, 0xc10f196e ),
	NORM( 0xbe8ac0ea, 0x3f5d7b1a, 0xbed80c0e ),
	VERT( 0x42e04f29, 0xc2446989, 0xc10f6be6 ),
	NORM( 0x00000000, 0x3f66175b, 0xbee0723a ),
	VERT( 0x42d4b776, 0xc24523a0, 0xc10e00d8 ),
	NORM( 0xb5d258c7, 0x3f661764, 0xbee07214 ),
	VERT( 0x42d56129, 0xc2454de7, 0xc10dae5e ),
	NORM( 0x3e8ac165, 0x3f5d7b0b, 0xbed80bfe ),
	VERT( 0x42e0f8db, 0xc24493ce, 0xc10f196e ),
	NORM( 0x3e8ac17e, 0x3f5d7b08, 0xbed80bfb ),
	VERT( 0x42d5ff4a, 0xc245c9d8, 0xc10cbc92 ),
	NORM( 0x3f04c7ce, 0x3f44b8bc, 0xbebfe530 ),
	VERT( 0x42e196fc, 0xc2450fc0, 0xc10e27a0 ),
	NORM( 0x3f04c79f, 0x3f44b8d9, 0xbebfe53a ),
	VERT( 0x42d68714, 0xc2468f00, 0xc10b3bee ),
	NORM( 0x3f3971cb, 0x3f1e9f46, 0xbe9abae2 ),
	VERT( 0x42e21ec7, 0xc245d4e7, 0xc10ca6fd ),
	NORM( 0x3f3971e6, 0x3f1e9f2c, 0xbe9abacb ),
	VERT( 0x42e286f9, 0xc246d5d9, 0xc10ab1b4 ),
	NORM( 0x3f605dd6, 0x3edd9706, 0xbe58271e ),
	VERT( 0x42d6ef47, 0xc2478ff0, 0xc10946a8 ),
	NORM( 0x3f605d6f, 0x3edd9855, 0xbe582875 ),
	VERT( 0x42d730c7, 0xc248bb28, 0xc106fee8 ),
	NORM( 0x3f78103f, 0x3e6364c1, 0xbdddd084 ),
	VERT( 0x42e2c879, 0xc248010f, 0xc10869f7 ),
	NORM( 0x3f781030, 0x3e6365a6, 0xbdddd140 ),
	VERT( 0x42e2ded0, 0xc2494228, 0xc105f787 ),
	NORM( 0x3f800000, 0x33b7765a, 0x3370cb57 ),
	VERT( 0x42d7471e, 0xc249fc41, 0xc1048c77 ),
	NORM( 0x3f800000, 0xb4eb0fa5, 0x34fdb1aa ),
	VERT( 0x42d730c7, 0xc24b3d5b, 0xc1021a06 ),
	NORM( 0x3f781044, 0xbe636486, 0x3dddd04c ),
	VERT( 0x42e2c879, 0xc24a8342, 0xc1038517 ),
	NORM( 0x3f78103f, 0xbe6364c8, 0x3dddd074 ),
	VERT( 0x42d6ef47, 0xc24c6892, 0xc0ffa48b ),
	NORM( 0x3f605d7f, 0xbedd9824, 0x3e582830 ),
	VERT( 0x42e286f9, 0xc24bae79, 0xc1013d56 ),
	NORM( 0x3f605dc7, 0xbedd9734, 0x3e582761 ),
	VERT( 0x42e21ec7, 0xc24caf6a, 0xc0fe9022 ),
	NORM( 0x3f397210, 0xbf1e9f03, 0x3e9abaac ),
	VERT( 0x42d68714, 0xc24d6982, 0xc0fbba03 ),
	NORM( 0x3f3971d4, 0xbf1e9f3e, 0x3e9abadc ),
	VERT( 0x42d5ff4a, 0xc24e2eab, 0xc0f8b8b5 ),
	NORM( 0x3f04c7ed, 0xbf44b8af, 0x3ebfe50f ),
	VERT( 0x42e196fc, 0xc24d7493, 0xc0fb8ed6 ),
	NORM( 0x3f04c792, 0xbf44b8e5, 0x3ebfe52e ),
	VERT( 0x42d56129, 0xc24eaa9c, 0xc0f6d521 ),
	NORM( 0x3e8ac0ed, 0xbf5d7b1b, 0x3ed80c0a ),
	VERT( 0x42e0f8db, 0xc24df083, 0xc0f9ab3d ),
	NORM( 0x3e8ac13b, 0xbf5d7b14, 0x3ed80bf2 ),
	VERT( 0x42c9874a, 0xc23c0b5c, 0xc0e44ee8 ),
	NORM( 0xb58214b1, 0xbeb9855f, 0x3f6e9a6c ),
	VERT( 0x42daa5d2, 0xc233d2db, 0xc0f5fc9a ),
	NORM( 0x34e7b8e8, 0xbeb98522, 0x3f6e9a78 ),
	VERT( 0x42c7f562, 0xc23bac3e, 0xc0e5c20b ),
	NORM( 0xbe429a19, 0xbeae01c2, 0x3f6bcba8 ),
	VERT( 0x42d913e8, 0xc23373be, 0xc0f76fba ),
	NORM( 0xbe429987, 0xbeae01e7, 0x3f6bcba9 ),
	VERT( 0x42c67edc, 0xc23a9560, 0xc0ea0222 ),
	NORM( 0xbebbf80a, 0xbe8c4047, 0x3f63905c ),
	VERT( 0x42d79d63, 0xc2325ce1, 0xc0fbafd2 ),
	NORM( 0xbebbf841, 0xbe8c4063, 0x3f63904c ),
	VERT( 0x42d65bc7, 0xc230a145, 0xc101395a ),
	NORM( 0xbf04ea19, 0xbe2d1b93, 0x3f567802 ),
	VERT( 0x42c53d40, 0xc238d9c5, 0xc0f0c507 ),
	NORM( 0xbf04e9f0, 0xbe2d1c53, 0x3f567812 ),
	VERT( 0x42d56500, 0xc22e5f27, 0xc105a13a ),
	NORM( 0xbf22c937, 0xbd0499f7, 0x3f45673a ),
	VERT( 0x42c44678, 0xc23697a6, 0xc0f994c3 ),
	NORM( 0xbf22c916, 0xbd049b58, 0x3f456754 ),
	VERT( 0x42c3ab56, 0xc233f66b, 0xc101ebd0 ),
	NORM( 0xbf3590ad, 0x3e01d6bb, 0x3f31875f ),
	VERT( 0x42d4c9de, 0xc22bbdeb, 0xc10ac2a8 ),
	NORM( 0xbf359060, 0x3e01d56f, 0x3f3187bc ),
	VERT( 0x42c3766e, 0xc23123f1, 0xc1076d50 ),
	NORM( 0xbf3bf7e6, 0x3e985f24, 0x3f1c342a ),
	VERT( 0x42d494f4, 0xc228eb73, 0xc1104426 ),
	NORM( 0xbf3bf827, 0x3e985ecd, 0x3f1c33f2 ),
	VERT( 0x42d4c9de, 0xc22618fb, 0xc115c5a3 ),
	NORM( 0xbf359069, 0x3eefd2f7, 0x3f06e04c ),
	VERT( 0x42c3ab56, 0xc22e5179, 0xc10ceecc ),
	NORM( 0xbf3590a1, 0x3eefd234, 0x3f06e058 ),
	VERT( 0x42c44678, 0xc22bb03d, 0xc112103b ),
	NORM( 0xbf22c925, 0x3f20a8a0, 0x3ee60151 ),
	VERT( 0x42d56500, 0xc22377bd, 0xc11ae713 ),
	NORM( 0xbf22c93a, 0x3f20a86d, 0x3ee601a5 ),
	VERT( 0x42d65bc7, 0xc221359f, 0xc11f4ef2 ),
	NORM( 0xbf04ea2b, 0x3f43a5b9, 0x3ec3e01b ),
	VERT( 0x42c53d40, 0xc2296e1f, 0xc1167819 ),
	NORM( 0xbf04e9f8, 0x3f43a5dd, 0x3ec3e013 ),
	VERT( 0x42c67edc, 0xc227b282, 0xc119d98e ),
	NORM( 0xbebbf7fc, 0x3f5e7f2b, 0x3ea9af05 ),
	VERT( 0x42d79d63, 0xc21f7a02, 0xc122b067 ),
	NORM( 0xbebbf7ef, 0x3f5e7f30, 0x3ea9aefa ),
	VERT( 0x42c7f562, 0xc2269ba7, 0xc11bf997 ),
	NORM( 0xbe429917, 0x3f6f5fc9, 0x3e9938d0 ),
	VERT( 0x42d913e8, 0xc21e6328, 0xc124d06d ),
	NORM( 0xbe4298bc, 0x3f6f5fc9, 0x3e9938ea ),
	VERT( 0x42daa5d2, 0xc21e040a, 0xc12589ff ),
	NORM( 0x34e9d441, 0x3f752183, 0x3e939afd ),
	VERT( 0x42c9874a, 0xc2263c89, 0xc11cb327 ),
	NORM( 0xb5818dd5, 0x3f752180, 0x3e939b10 ),
	VERT( 0x42cb1934, 0xc2269ba7, 0xc11bf997 ),
	NORM( 0x3e42993b, 0x3f6f5fcc, 0x3e9938af ),
	VERT( 0x42dc37bb, 0xc21e6328, 0xc124d06d ),
	NORM( 0x3e4298d8, 0x3f6f5fc8, 0x3e9938ea ),
	VERT( 0x42cc8fb9, 0xc227b282, 0xc119d98e ),
	NORM( 0x3ebbf81a, 0x3f5e7f20, 0x3ea9af1f ),
	VERT( 0x42ddae40, 0xc21f7a02, 0xc122b067 ),
	NORM( 0x3ebbf7ee, 0x3f5e7f30, 0x3ea9aefa ),
	VERT( 0x42cdd155, 0xc2296e1f, 0xc1167819 ),
	NORM( 0x3f04ea21, 0x3f43a5c1, 0x3ec3e013 ),
	VERT( 0x42deefdc, 0xc221359f, 0xc11f4ef2 ),
	NORM( 0x3f04ea01, 0x3f43a5d6, 0x3ec3e018 ),
	VERT( 0x42dfe6a4, 0xc22377bd, 0xc11ae713 ),
	NORM( 0x3f22c955, 0x3f20a866, 0x3ee6016b ),
	VERT( 0x42cec81c, 0xc22bb03d, 0xc112103b ),
	NORM( 0x3f22c934, 0x3f20a87c, 0x3ee6018d ),
	VERT( 0x42e081c5, 0xc22618fb, 0xc115c5a3 ),
	NORM( 0x3f359065, 0x3eefd2a1, 0x3f06e078 ),
	VERT( 0x42cf633e, 0xc22e5179, 0xc10ceecc ),
	NORM( 0x3f359064, 0x3eefd310, 0x3f06e047 ),
	VERT( 0x42cf9828, 0xc23123f1, 0xc1076d50 ),
	NORM( 0x3f3bf823, 0x3e985eea, 0x3f1c33ef ),
	VERT( 0x42e0b6af, 0xc228eb73, 0xc1104426 ),
	NORM( 0x3f3bf827, 0x3e985ecd, 0x3f1c33f2 ),
	VERT( 0x42cf633e, 0xc233f66b, 0xc101ebd0 ),
	NORM( 0x3f35906e, 0x3e01d580, 0x3f3187ad ),
	VERT( 0x42e081c5, 0xc22bbdeb, 0xc10ac2a8 ),
	NORM( 0x3f359061, 0x3e01d653, 0x3f3187b1 ),
	VERT( 0x42dfe6a4, 0xc22e5f27, 0xc105a13a ),
	NORM( 0x3f22c952, 0xbd049b13, 0x3f456723 ),
	VERT( 0x42cec81c, 0xc23697a6, 0xc0f994c3 ),
	NORM( 0x3f22c924, 0xbd04986b, 0x3f45674b ),
	VERT( 0x42deefdc, 0xc230a145, 0xc101395a ),
	NORM( 0x3f04e9ed, 0xbe2d1bc8, 0x3f56781b ),
	VERT( 0x42cdd155, 0xc238d9c5, 0xc0f0c507 ),
	NORM( 0x3f04ea1b, 0xbe2d1c1c, 0x3f5677fa ),
	VERT( 0x42ddae40, 0xc2325ce1, 0xc0fbafd2 ),
	NORM( 0x3ebbf83f, 0xbe8c4061, 0x3f63904d ),
	VERT( 0x42cc8fb9, 0xc23a9560, 0xc0ea0222 ),
	NORM( 0x3ebbf82c, 0xbe8c4025, 0x3f63905a ),
	VERT( 0x42dc37bb, 0xc23373be, 0xc0f76fba ),
	NORM( 0x3e4299a1, 0xbeae01e3, 0x3f6bcba8 ),
	VERT( 0x42cb1934, 0xc23bac3e, 0xc0e5c20b ),
	NORM( 0x3e429a3d, 0xbeae01e3, 0x3f6bcba0 ),
	VERT( 0x42daa5d2, 0xc239060f, 0xc125a3c9 ),
	NORM( 0x3524f782, 0xbf66175e, 0x3ee0722e ),
	VERT( 0x42c9874a, 0xc2413e91, 0xc11cccfe ),
	NORM( 0xb5a94533, 0xbf661764, 0x3ee07215 ),
	VERT( 0x42d913e8, 0xc238a6f2, 0xc1265d58 ),
	NORM( 0xbe8483e3, 0xbf5e4049, 0x3ed8cc5c ),
	VERT( 0x42c7f562, 0xc240df73, 0xc11d8690 ),
	NORM( 0xbe848444, 0xbf5e4041, 0x3ed8cc44 ),
	VERT( 0x42c67edc, 0xc23fc896, 0xc11fa69b ),
	NORM( 0xbefffff8, 0xbf4743d3, 0x3ec2603c ),
	VERT( 0x42d79d63, 0xc2379015, 0xc1287d64 ),
	NORM( 0xbf000018, 0xbf4743c4, 0x3ec26031 ),
	VERT( 0x42c53d40, 0xc23e0cfa, 0xc123080d ),
	NORM( 0xbf3504ca, 0xbf22b31c, 0x3e9eb53a ),
	VERT( 0x42d65bc7, 0xc235d479, 0xc12bded7 ),
	NORM( 0xbf35050b, 0xbf22b2e7, 0x3e9eb4f0 ),
	VERT( 0x42c44678, 0xc23bcadd, 0xc1276fec ),
	NORM( 0xbf5db3b0, 0xbee617d4, 0x3e6072b3 ),
	VERT( 0x42d56500, 0xc233925a, 0xc13046b7 ),
	NORM( 0xbf5db3d4, 0xbee6176e, 0x3e607221 ),
	VERT( 0x42d4c9de, 0xc230f11f, 0xc1356823 ),
	NORM( 0xbf7746da, 0xbe6e361d, 0x3de85de7 ),
	VERT( 0x42c3ab56, 0xc23929a0, 0xc12c915b ),
	NORM( 0xbf774707, 0xbe6e33bd, 0x3de85b86 ),
	VERT( 0x42d494f4, 0xc22e1ea6, 0xc13ae9a1 ),
	NORM( 0xbf800000, 0x3409b624, 0x332c23ad ),
	VERT( 0x42c3766e, 0xc2365727, 0xc13212d9 ),
	NORM( 0xbf800000, 0x34e86336, 0xb4572c75 ),
	VERT( 0x42c3ab56, 0xc23384af, 0xc1379456 ),
	NORM( 0xbf774705, 0x3e6e33d1, 0xbde85bbb ),
	VERT( 0x42d4c9de, 0xc22b4c2d, 0xc1406b20 ),
	NORM( 0xbf7746dd, 0x3e6e35ec, 0xbde85dca ),
	VERT( 0x42c44678, 0xc230e373, 0xc13cb5c5 ),
	NORM( 0xbf5db3b7, 0x3ee617c5, 0xbe607284 ),
	VERT( 0x42d56500, 0xc228aaf2, 0xc1458c8e ),
	NORM( 0xbf5db3e2, 0x3ee6173d, 0xbe607205 ),
	VERT( 0x42d65bc7, 0xc22668d2, 0xc149f46f ),
	NORM( 0xbf350521, 0x3f22b2d1, 0xbe9eb4e1 ),
	VERT( 0x42c53d40, 0xc22ea154, 0xc1411da3 ),
	NORM( 0xbf3504eb, 0x3f22b301, 0xbe9eb515 ),
	VERT( 0x42c67edc, 0xc22ce5b8, 0xc1447f18 ),
	NORM( 0xbeffffb8, 0x3f4743e4, 0xbec26048 ),
	VERT( 0x42d79d63, 0xc224ad36, 0xc14d55e1 ),
	NORM( 0xbeffffa2, 0x3f4743ec, 0xbec26048 ),
	VERT( 0x42c7f562, 0xc22bcedc, 0xc1469f21 ),
	NORM( 0xbe8483a2, 0x3f5e4058, 0xbed8cc45 ),
	VERT( 0x42d913e8, 0xc223965b, 0xc14f75ea ),
	NORM( 0xbe848369, 0x3f5e4060, 0xbed8cc47 ),
	VERT( 0x42c9874a, 0xc22b6fbe, 0xc14758b2 ),
	NORM( 0xb5a9fcd8, 0x3f661765, 0xbee07213 ),
	VERT( 0x42daa5d2, 0xc223373d, 0xc1502f79 ),
	NORM( 0x3527d5ee, 0x3f661766, 0xbee0720d ),
	VERT( 0x42dc37bb, 0xc223965b, 0xc14f75ea ),
	NORM( 0x3e84837e, 0x3f5e405a, 0xbed8cc54 ),
	VERT( 0x42cb1934, 0xc22bcedc, 0xc1469f21 ),
	NORM( 0x3e8483b6, 0x3f5e4051, 0xbed8cc56 ),
	VERT( 0x42cc8fb9, 0xc22ce5b8, 0xc1447f18 ),
	NORM( 0x3effffee, 0x3f4743d6, 0xbec2603e ),
	VERT( 0x42ddae40, 0xc224ad36, 0xc14d55e1 ),
	NORM( 0x3effffa0, 0x3f4743ec, 0xbec2604b ),
	VERT( 0x42cdd155, 0xc22ea154, 0xc1411da3 ),
	NORM( 0x3f350518, 0x3f22b2d9, 0xbe9eb4eb ),
	VERT( 0x42deefdc, 0xc22668d2, 0xc149f46f ),
	NORM( 0x3f3504f3, 0x3f22b2fa, 0xbe9eb50e ),
	VERT( 0x42dfe6a4, 0xc228aaf2, 0xc1458c8e ),
	NORM( 0x3f5db3e8, 0x3ee6172c, 0xbe6071f6 ),
	VERT( 0x42cec81c, 0xc230e373, 0xc13cb5c5 ),
	NORM( 0x3f5db3d7, 0x3ee6175c, 0xbe607239 ),
	VERT( 0x42cf633e, 0xc23384af, 0xc1379456 ),
	NORM( 0x3f7746dc, 0x3e6e35fd, 0xbde85ddc ),
	VERT( 0x42e081c5, 0xc22b4c2d, 0xc1406b20 ),
	NORM( 0x3f7746f1, 0x3e6e34f9, 0xbde85c80 ),
	VERT( 0x42cf9828, 0xc2365727, 0xc13212d9 ),
	NORM( 0x3f800000, 0x34cbb2c0, 0xb49dcb5f ),
	VERT( 0x42e0b6af, 0xc22e1ea6, 0xc13ae9a1 ),
	NORM( 0x3f800000, 0x33fc7898, 0x32e584e7 ),
	VERT( 0x42e081c5, 0xc230f11f, 0xc1356823 ),
	NORM( 0x3f7746ed, 0xbe6e3520, 0x3de85cd2 ),
	VERT( 0x42cf633e, 0xc23929a0, 0xc12c915b ),
	NORM( 0x3f7746de, 0xbe6e35df, 0x3de85dd0 ),
	VERT( 0x42cec81c, 0xc23bcadd, 0xc1276fec ),
	NORM( 0x3f5db3d1, 0xbee61771, 0x3e607244 ),
	VERT( 0x42dfe6a4, 0xc233925a, 0xc13046b7 ),
	NORM( 0x3f5db3d9, 0xbee6175b, 0x3e607216 ),
	VERT( 0x42deefdc, 0xc235d479, 0xc12bded7 ),
	NORM( 0x3f3504dd, 0xbf22b30d, 0x3e9eb525 ),
	VERT( 0x42cdd155, 0xc23e0cfa, 0xc123080d ),
	NORM( 0x3f3504f8, 0xbf22b2f5, 0x3e9eb50a ),
	VERT( 0x42cc8fb9, 0xc23fc896, 0xc11fa69b ),
	NORM( 0x3f000018, 0xbf4743c6, 0x3ec2602a ),
	VERT( 0x42ddae40, 0xc2379015, 0xc1287d64 ),
	NORM( 0x3f000018, 0xbf4743c3, 0x3ec26035 ),
	VERT( 0x42cb1934, 0xc240df73, 0xc11d8690 ),
	NORM( 0x3e848456, 0xbf5e4042, 0x3ed8cc31 ),
	VERT( 0x42dc37bb, 0xc238a6f2, 0xc1265d58 ),
	NORM( 0x3e8483f7, 0xbf5e4048, 0x3ed8cc56 ),
	VERT( 0x43093f55, 0xc228e529, 0xc1773065 ),
	NORM( 0x3f640688, 0x3e4c12b1, 0x3ed12a3e ),
	VERT( 0x43093f55, 0xc22b3f87, 0xc173f8ce ),
	NORM( 0x3f642fe1, 0x3dbd0b80, 0x3ee33aab ),
	VERT( 0x43089078, 0xc22a9447, 0xc164c626 ),
	NORM( 0x3f50e2de, 0x3dedf379, 0x3f10f9b1 ),
	VERT( 0x43089078, 0xc22737bf, 0xc1695eb5 ),
	NORM( 0x3f5098b0, 0x3e821555, 0x3f05640c ),
	VERT( 0x43093f55, 0xc22db61b, 0xc1733169 ),
	NORM( 0x3f649b18, 0xbcad2562, 0x3ee62ef3 ),
	VERT( 0x43089078, 0xc22e191b, 0xc163a94a ),
	NORM( 0x3f51a06c, 0xbcf2e488, 0x3f12bf8f ),
	VERT( 0x43093f55, 0xc2301df0, 0xc174e7cf ),
	NORM( 0x3f652e61, 0xbe08f30e, 0x3ed99f24 ),
	VERT( 0x43089078, 0xc23188db, 0xc1661b8b ),
	NORM( 0x3f52a38e, 0xbe31d291, 0x3f0a880c ),
	VERT( 0x43093f55, 0xc2324d09, 0xc178fe12 ),
	NORM( 0x3f65c586, 0xbe738fb4, 0x3ebe169c ),
	VERT( 0x43089078, 0xc234a791, 0xc16bf237 ),
	NORM( 0x3f53ada8, 0xbe9ca085, 0x3ef19f2c ),
	VERT( 0x43093f55, 0xc2341d4c, 0xc17f2cf0 ),
	NORM( 0x3f663b32, 0xbea6e096, 0x3e953b79 ),
	VERT( 0x43089078, 0xc2373ed1, 0xc174c784 ),
	NORM( 0x3f547f73, 0xbed58a7f, 0x3ebd888a ),
	VERT( 0x43093f55, 0xc2356f1b, 0xc1838448 ),
	NORM( 0x3f6672d2, 0xbec85a07, 0x3e43b9c3 ),
	VERT( 0x43089078, 0xc2392165, 0xc180009c ),
	NORM( 0x3f54e9cd, 0xbeff979d, 0x3e78e782 ),
	VERT( 0x43093f55, 0xc2362b6e, 0xc18803e9 ),
	NORM( 0x3f66611d, 0xbedbb0fa, 0x3d9f0dee ),
	VERT( 0x43089078, 0xc23a2e6a, 0xc1866dc8 ),
	NORM( 0x3f54da64, 0xbf0bec39, 0x3dcc25c4 ),
	VERT( 0x43093f55, 0xc236456d, 0xc18cc6db ),
	NORM( 0x3f660f50, 0xbedf9db5, 0xbd25da74 ),
	VERT( 0x43089078, 0xc23a538f, 0xc18d3b24 ),
	NORM( 0x3f545fc1, 0xbf0e6058, 0xbd4bcc90 ),
	VERT( 0x43093f55, 0xc235bb55, 0xc1917a15 ),
	NORM( 0x3f659788, 0xbed42834, 0xbe1e89cc ),
	VERT( 0x43089078, 0xc2398e46, 0xc193f20a ),
	NORM( 0x3f53a3dd, 0xbf071e21, 0xbe4781bb ),
	VERT( 0x43093f55, 0xc234968c, 0xc195cb98 ),
	NORM( 0x3f651cff, 0xbeba78d7, 0xbe83e950 ),
	VERT( 0x43089078, 0xc237ec04, 0xc19a1d52 ),
	NORM( 0x3f52dfd9, 0xbeed9348, 0xbea6d2ae ),
	VERT( 0x43093f55, 0xc232eb0a, 0xc1997006 ),
	NORM( 0x3f64c1a8, 0xbe948ed3, 0xbeaf600c ),
	VERT( 0x43089078, 0xc235894b, 0xc19f515c ),
	NORM( 0x3f524bc7, 0xbebd2e22, 0xbede63c8 ),
	VERT( 0x43093f55, 0xc230d5f1, 0xc19c27d6 ),
	NORM( 0x3f649dde, 0xbe49f740, 0xbecf15b9 ),
	VERT( 0x43089078, 0xc2328fb7, 0xc1a33364 ),
	NORM( 0x3f521043, 0xbe804fce, 0xbf038110 ),
	VERT( 0x43093f55, 0xc22e7b91, 0xc19dc3a4 ),
	NORM( 0x3f64ba83, 0xbdbae6af, 0xbee12715 ),
	VERT( 0x43089078, 0xc22f3332, 0xc1a57faa ),
	NORM( 0x3f523c8c, 0xbdeb77c9, 0xbf0f130a ),
	VERT( 0x43093f55, 0xc22c04fe, 0xc19e2755 ),
	NORM( 0x3f650f49, 0x3cae5d7c, 0xbee45e26 ),
	VERT( 0x43089078, 0xc22bae5b, 0xc1a60e19 ),
	NORM( 0x3f52c2c7, 0x3cec5fbe, 0xbf112009 ),
	VERT( 0x43093f55, 0xc2299d2a, 0xc19d4c22 ),
	NORM( 0x3f65844f, 0x3e08891d, 0xbed84477 ),
	VERT( 0x43089078, 0xc2283e9c, 0xc1a4d4f8 ),
	NORM( 0x3f537b3e, 0x3e2fbc85, 0xbf0968dd ),
	VERT( 0x43093f55, 0xc2276e10, 0xc19b4101 ),
	NORM( 0x3f65f7dd, 0x3e731a6c, 0xbebd4833 ),
	VERT( 0x43089078, 0xc2251fe5, 0xc1a1e9a2 ),
	NORM( 0x3f542e77, 0x3e9b8529, 0xbef091b4 ),
	VERT( 0x43093f55, 0xc2259dca, 0xc1982994 ),
	NORM( 0x3f664717, 0x3ea6e865, 0xbe94e940 ),
	VERT( 0x43089078, 0xc22288a8, 0xc19d7f02 ),
	NORM( 0x3f54a3ce, 0x3ed4f8c6, 0xbebd8968 ),
	VERT( 0x43093f55, 0xc2244bfb, 0xc1943bc5 ),
	NORM( 0x3f6657d4, 0x3ec8db79, 0xbe43a372 ),
	VERT( 0x43089078, 0xc220a613, 0xc197e22a ),
	NORM( 0x3f54b13f, 0x3f0002be, 0xbe7a28a8 ),
	VERT( 0x43093f55, 0xc2238faa, 0xc18fbc22 ),
	NORM( 0x3f6620f3, 0x3edcbff2, 0xbd9ed3f7 ),
	VERT( 0x43089078, 0xc21f990e, 0xc19174fd ),
	NORM( 0x3f54483f, 0x3f0cba74, 0xbdcebc02 ),
	VERT( 0x43093f55, 0xc22375ac, 0xc18af92f ),
	NORM( 0x3f65adc4, 0x3ee12508, 0x3d28abbd ),
	VERT( 0x43089078, 0xc21f73e8, 0xc18aa79a ),
	NORM( 0x3f537b5c, 0x3f0fb36b, 0x3d4b529f ),
	VERT( 0x43093f55, 0xc223ffc5, 0xc18645f6 ),
	NORM( 0x3f651aa9, 0x3ed5f1a1, 0x3e203701 ),
	VERT( 0x43089078, 0xc2203931, 0xc183f0b4 ),
	NORM( 0x3f52798a, 0x3f08bfbd, 0x3e49703f ),
	VERT( 0x43093f55, 0xc225248d, 0xc181f471 ),
	NORM( 0x3f648cf6, 0x3ebc3f08, 0x3e8549d6 ),
	VERT( 0x43089078, 0xc221db72, 0xc17b8ad8 ),
	NORM( 0x3f518204, 0x3ef0def9, 0x3ea8f865 ),
	VERT( 0x43093f55, 0xc226d00c, 0xc17ca00b ),
	NORM( 0x3f642877, 0x3e961000, 0x3eb133e9 ),
	VERT( 0x43089078, 0xc2243e2d, 0xc17122c1 ),
	NORM( 0x3f50d2ea, 0x3ebfed97, 0x3ee18fb8 ),
	VERT( 0x43098f34, 0xc22aa440, 0xc182c3c5 ),
	NORM( 0x3f7c969a, 0x3d92187d, 0x3e15c141 ),
	VERT( 0x43098f34, 0xc22bf596, 0xc181dd2d ),
	NORM( 0x3f7c9b3d, 0x3d0829db, 0x3e22a834 ),
	VERT( 0x43098f34, 0xc22d56b3, 0xc181a557 ),
	NORM( 0x3f7ca77f, 0xbbec79a6, 0x3e24d8b5 ),
	VERT( 0x43098f34, 0xc22eaf91, 0xc1822016 ),
	NORM( 0x3f7cb857, 0xbd429acf, 0x3e1bfb2b ),
	VERT( 0x43098f34, 0xc22fe8aa, 0xc183450c ),
	NORM( 0x3f7cc94d, 0xbdadf12e, 0x3e085f15 ),
	VERT( 0x43098f34, 0xc230eca7, 0xc185003c ),
	NORM( 0x3f7cd5b8, 0xbdef1f84, 0x3dd63b50 ),
	VERT( 0x43098f34, 0xc231a9d2, 0xc187337b ),
	NORM( 0x3f7cda20, 0xbe0fe4e8, 0x3d8c5778 ),
	VERT( 0x43098f34, 0xc2321347, 0xc189b862 ),
	NORM( 0x3f7cd52c, 0xbe1e12ef, 0x3ce213cc ),
	VERT( 0x43098f34, 0xc23221d8, 0xc18c6305 ),
	NORM( 0x3f7cc82b, 0xbe211d85, 0xbc773b92 ),
	VERT( 0x43098f34, 0xc231d482, 0xc18f04d3 ),
	NORM( 0x3f7cb6bf, 0xbe19019b, 0xbd670c40 ),
	VERT( 0x43098f34, 0xc231308e, 0xc1916fea ),
	NORM( 0x3f7ca57e, 0xbe0699b7, 0xbdbf9297 ),
	VERT( 0x43098f34, 0xc2304126, 0xc1937a10 ),
	NORM( 0x3f7c98fd, 0xbdd6b3d9, 0xbdfe4457 ),
	VERT( 0x43098f34, 0xc22f169c, 0xc194ffbd ),
	NORM( 0x3f7c9445, 0xbd9243c4, 0xbe15f58b ),
	VERT( 0x43098f34, 0xc22dc548, 0xc195e652 ),
	NORM( 0x3f7c98a1, 0xbd08564d, 0xbe22e6a3 ),
	VERT( 0x43098f34, 0xc22c642a, 0xc1961e2a ),
	NORM( 0x3f7ca4c8, 0x3bece2ef, 0xbe251b20 ),
	VERT( 0x43098f34, 0xc22b0b4c, 0xc195a36a ),
	NORM( 0x3f7cb5be, 0x3d42e1be, 0xbe1c38e7 ),
	VERT( 0x43098f34, 0xc229d232, 0xc1947e76 ),
	NORM( 0x3f7cc6f7, 0x3dae2aa8, 0xbe0891f6 ),
	VERT( 0x43098f34, 0xc228ce34, 0xc192c33e ),
	NORM( 0x3f7cd3da, 0x3def5fc7, 0xbdd6806f ),
	VERT( 0x43098f34, 0xc2281108, 0xc1908fff ),
	NORM( 0x3f7cd8c2, 0x3e1001b7, 0xbd8c7efe ),
	VERT( 0x43098f34, 0xc227a793, 0xc18e0b17 ),
	NORM( 0x3f7cd467, 0x3e1e2519, 0xbce2597d ),
	VERT( 0x43098f34, 0xc2279905, 0xc18b607d ),
	NORM( 0x3f7cc817, 0x3e211ffc, 0x3c76e2a5 ),
	VERT( 0x43098f34, 0xc227e65c, 0xc188bead ),
	NORM( 0x3f7cb75b, 0x3e18f5a9, 0x3d66e043 ),
	VERT( 0x43098f34, 0xc2288a51, 0xc1865395 ),
	NORM( 0x3f7ca6c9, 0x3e068357, 0x3dbf646b ),
	VERT( 0x43098f34, 0xc22979b7, 0xc1844972 ),
	NORM( 0x3f7c9add, 0x3dd68055, 0x3dfdf875 ),
	VERT( 0x42e361f3, 0xc20569b4, 0xc1a0e835 ),
	NORM( 0xbf7e4d73, 0xbdd3a672, 0x3d4e52ea ),
	VERT( 0x42e361f3, 0xc20569b4, 0xc1a0e835 ),
	NORM( 0xbf7e4d72, 0xbdd39fcb, 0x3d4e6e9a ),
	VERT( 0x42e35001, 0xc20452fa, 0xc1a1f817 ),
	NORM( 0xbf800000, 0x3682491f, 0xb72ca7c2 ),
	VERT( 0x42e35001, 0xc20452fa, 0xc1a1f817 ),
	NORM( 0xbf800000, 0xb5695ed5, 0x34e51346 ),
	VERT( 0x42e361f3, 0xc2033c3f, 0xc1a307fc ),
	NORM( 0xbf79215e, 0x3e53c840, 0xbdce9608 ),
	VERT( 0x42e361f3, 0xc2033c3f, 0xc1a307fc ),
	NORM( 0xbf792117, 0x3e53d25c, 0xbdce8220 ),
	VERT( 0x42e3968e, 0xc2023882, 0xc1a40559 ),
	NORM( 0xbf641710, 0x3ed0f8a1, 0xbe4bb65c ),
	VERT( 0x42e3968e, 0xc2023882, 0xc1a40559 ),
	NORM( 0xbf64178b, 0x3ed0f04c, 0xbe4bcff8 ),
	VERT( 0x42e3ea3f, 0xc2015979, 0xc1a4deea ),
	NORM( 0xbf3fe8b2, 0x3f1848a6, 0xbe948c33 ),
	VERT( 0x42e3ea3f, 0xc2015979, 0xc1a4deea ),
	NORM( 0xbf3fe986, 0x3f1846d1, 0xbe948f6b ),
	VERT( 0x42e4574f, 0xc200ae54, 0xc1a585db ),
	NORM( 0xbf285abe, 0x3f2d5006, 0xbea92e3e ),
	VERT( 0x42e4574f, 0xc200ae54, 0xc1a585db ),
	NORM( 0xbf01fa53, 0x3f4637e6, 0xbec16759 ),
	VERT( 0x42e4d651, 0xc20042be, 0xc1a5eece ),
	NORM( 0xbe949f15, 0x3f5c2b4e, 0xbed6d7ff ),
	VERT( 0x42e55e9d, 0xc2001e0d, 0xc1a61298 ),
	NORM( 0xbe17a8d0, 0x3f6389c7, 0xbede08d7 ),
	VERT( 0x42e55e9d, 0xc20b4d9e, 0xc1d3f0f3 ),
	NORM( 0x3af7b3c3, 0x3ee07dc4, 0x3f661469 ),
	VERT( 0x42e55e9d, 0xc20b4d9e, 0xc1d3f0f3 ),
	NORM( 0x3babe020, 0x3f6ae524, 0xbecb8dad ),
	VERT( 0x42e55e9d, 0xc2001b2c, 0xc1a606cd ),
	NORM( 0xbe17a904, 0x3f6385ca, 0xbede1926 ),
	VERT( 0x42e4d651, 0xc20b724e, 0xc1d3cd28 ),
	NORM( 0xbe949e85, 0x3f5c2f3c, 0xbed6c848 ),
	VERT( 0x42e4d651, 0xc2003fdd, 0xc1a5e302 ),
	NORM( 0xbe949dc2, 0x3f5c27a3, 0xbed6e7f5 ),
	VERT( 0x42e4574f, 0xc20bdde5, 0xc1d36435 ),
	NORM( 0xbf0c15bc, 0x3f4095f7, 0xbebbdc63 ),
	VERT( 0x42e4574f, 0xc200ab73, 0xc1a57a0f ),
	NORM( 0xbf285abe, 0x3f2d5006, 0xbea92e3d ),
	VERT( 0x42e4574f, 0xc200ab73, 0xc1a57a0f ),
	NORM( 0xbeda40cd, 0x3f501c4f, 0xbecb2625 ),
	VERT( 0x42e3ea3f, 0xc20c890a, 0xc1d2bd43 ),
	NORM( 0xbf3fe8b3, 0x3f1848a4, 0xbe948c31 ),
	VERT( 0x42e3ea3f, 0xc2015698, 0xc1a4d31e ),
	NORM( 0xbf3fe801, 0x3f18485c, 0xbe9490ef ),
	VERT( 0x42e3968e, 0xc20d6812, 0xc1d1e3b4 ),
	NORM( 0xbf64178b, 0x3ed0f04b, 0xbe4bcff7 ),
	VERT( 0x42e3968e, 0xc20235a2, 0xc1a3f98d ),
	NORM( 0xbf64181b, 0x3ed0f4f2, 0xbe4bb2c5 ),
	VERT( 0x42e361f3, 0xc20e6bcf, 0xc1d0e657 ),
	NORM( 0xbf79215f, 0x3e53c838, 0xbdce9600 ),
	VERT( 0x42e361f3, 0xc203395f, 0xc1a2fc30 ),
	NORM( 0xbf7921a4, 0x3e53c9f5, 0xbdce79f0 ),
	VERT( 0x42e35001, 0xc20f828b, 0xc1cfd672 ),
	NORM( 0xbf800000, 0xb5802385, 0x34fbfb7b ),
	VERT( 0x42e35001, 0xc204501a, 0xc1a1ec4c ),
	NORM( 0xbf800000, 0xb74d2ec6, 0xb62392d0 ),
	VERT( 0x42e361f3, 0xc2109944, 0xc1cec68f ),
	NORM( 0xbf7e4d72, 0xbdd39fcc, 0x3d4e6e9b ),
	VERT( 0x42e361f3, 0xc20566d4, 0xc1a0dc69 ),
	NORM( 0xbf7e4d73, 0xbdd3a674, 0x3d4e52eb ),
	VERT( 0x42fe1e66, 0xc2ce2f50, 0x410440a8 ),
	NORM( 0x3f13cd39, 0xbf45a2a0, 0xbe881a43 ),
	VERT( 0x42fe1e66, 0xc2ae4775, 0x40a2616d ),
	NORM( 0x3f313359, 0x3ef961a0, 0x3f0856a9 ),
	VERT( 0x42fe1e66, 0xc2b1e545, 0x3faef999 ),
	NORM( 0x3f31336b, 0xbdf55ae9, 0xbf363215 ),
	VERT( 0x42fe1e66, 0xc2ca9182, 0x413f922d ),
	NORM( 0x3f13cd3d, 0xbe881a4f, 0x3f45a29b ),
	VERT( 0x42e84800, 0xc2ce2f50, 0x410440a8 ),
	NORM( 0xbf13cd38, 0xbf45a29f, 0xbe881a4c ),
	VERT( 0x42e84800, 0xc2ae4775, 0x40a2616d ),
	NORM( 0xbf33bb9b, 0x3ed457ec, 0x3f14301f ),
	VERT( 0x42e84800, 0xc2ae4775, 0x40a2616d ),
	NORM( 0x371caf16, 0x3f66175f, 0xbee0722b ),
	VERT( 0x42e84800, 0xc2b1e545, 0x3faef999 ),
	NORM( 0xbf31336b, 0xbdf55ae9, 0xbf363215 ),
	VERT( 0x42e84800, 0xc2ca9182, 0x413f922d ),
	NORM( 0xbf13cd3b, 0xbe881a4b, 0x3f45a29d ),
	VERT( 0x42e46627, 0xc2cf3f9d, 0x40e59ca5 ),
	NORM( 0x3f13cd32, 0xbf45a2ae, 0xbe881a12 ),
	VERT( 0x42e46627, 0xc2ad3729, 0x40c54617 ),
	NORM( 0x3f2fe3b3, 0x3f037e5b, 0x3f038fa8 ),
	VERT( 0x42e46627, 0xc2b2f591, 0x3e8d9bb2 ),
	NORM( 0x3f2fe3ae, 0xbdb5bac9, 0xbf389d94 ),
	VERT( 0x42e46627, 0xc2c98135, 0x41510483 ),
	NORM( 0x3f13cd43, 0xbe881a17, 0x3f45a2a0 ),
	VERT( 0x42cba65e, 0xc2cf3f9d, 0x40e59ca5 ),
	NORM( 0xbf13cd32, 0xbf45a2ae, 0xbe881a12 ),
	VERT( 0x42cba65e, 0xc2ad3729, 0x40c54617 ),
	NORM( 0xbf2fe3af, 0x3f037e74, 0x3f038f95 ),
	VERT( 0x42cba65e, 0xc2b2f591, 0x3e8d9bb2 ),
	NORM( 0xbf2fe3aa, 0xbdb5b9bc, 0xbf389d9d ),
	VERT( 0x42cba65e, 0xc2c98135, 0x41510483 ),
	NORM( 0xbf13cd43, 0xbe881a17, 0x3f45a2a0 ),
	VERT( 0x42e2f176, 0xc2ca9182, 0x413f922d ),
	NORM( 0x36d9eacc, 0xbf661755, 0x3ee07255 ),
	VERT( 0x42e2f176, 0xc2ce2f50, 0x410440a8 ),
	NORM( 0xb6759fd6, 0xbf66174a, 0x3ee07282 ),
	VERT( 0x42cd1b10, 0xc2ce2f50, 0x410440a8 ),
	NORM( 0x36759eef, 0xbf661749, 0x3ee07283 ),
	VERT( 0x42cd1b10, 0xc2ca9182, 0x413f922d ),
	NORM( 0xb6d9ea1d, 0xbf661754, 0x3ee07255 ),
	VERT( 0x42e2f176, 0xc2ae4775, 0x40a2616d ),
	NORM( 0x35c972ba, 0x3f661756, 0xbee0724d ),
	VERT( 0x42e2f176, 0xc2b1e545, 0x3faef999 ),
	NORM( 0xb6543be1, 0x3f661752, 0xbee0725f ),
	VERT( 0x42cd1b10, 0xc2b1e545, 0x3faef999 ),
	NORM( 0x35effcf1, 0x3f661757, 0xbee0724b ),
	VERT( 0x42cd1b10, 0xc2ae4775, 0x40a2616d ),
	NORM( 0xb640f5df, 0x3f661752, 0xbee0725f ),
	VERT( 0x42e2f176, 0xc2ce2f50, 0x410440a8 ),
	NORM( 0xbf3504fb, 0x3e9eb510, 0x3f22b2f0 ),
	VERT( 0x42e2f176, 0xc2ca9182, 0x413f922d ),
	NORM( 0xbf3504ed, 0xbe9eb515, 0xbf22b2ff ),
	VERT( 0x42e2f176, 0xc2ae4775, 0x40a2616d ),
	NORM( 0xbf3504ed, 0xbe9eb515, 0xbf22b2ff ),
	VERT( 0x42e2f176, 0xc2b1e545, 0x3faef999 ),
	NORM( 0xbf3504f9, 0x3e9eb512, 0x3f22b2f2 ),
	VERT( 0x42cd1b10, 0xc2ce2f50, 0x410440a8 ),
	NORM( 0x3f3504fb, 0x3e9eb510, 0x3f22b2f0 ),
	VERT( 0x42cd1b10, 0xc2b1e545, 0x3faef999 ),
	NORM( 0x3f3504f9, 0x3e9eb512, 0x3f22b2f2 ),
	VERT( 0x42cd1b10, 0xc2ca9182, 0x413f922d ),
	NORM( 0x3f3504ed, 0xbe9eb515, 0xbf22b2ff ),
	VERT( 0x42cd1b10, 0xc2ae4775, 0x40a2616d ),
	NORM( 0x3f3504ed, 0xbe9eb515, 0xbf22b2ff ),
	VERT( 0x42e17cc4, 0xc2c9daf4, 0x410d468f ),
	NORM( 0x3f13cd35, 0xbf45a2af, 0xbe8819fc ),
	VERT( 0x42e17cc4, 0xc2ac0138, 0x4039997c ),
	NORM( 0x3f3504f3, 0x3e9eb517, 0x3f22b2f7 ),
	VERT( 0x42e17cc4, 0xc2ad1184, 0x3fe7a059 ),
	NORM( 0x3f3504f4, 0xbe9eb510, 0xbf22b2f8 ),
	VERT( 0x42e17cc4, 0xc2c8caa7, 0x411eb8e4 ),
	NORM( 0x3f13cd3f, 0xbe8819f3, 0x3f45a2a9 ),
	VERT( 0x42ce8fc1, 0xc2c9daf4, 0x410d468f ),
	NORM( 0xbf13cd35, 0xbf45a2af, 0xbe8819fc ),
	VERT( 0x42ce8fc1, 0xc2ac0138, 0x4039997c ),
	NORM( 0xbf3504f3, 0x3e9eb517, 0x3f22b2f7 ),
	VERT( 0x42ce8fc1, 0xc2ad1184, 0x3fe7a059 ),
	NORM( 0xbf3504f4, 0xbe9eb510, 0xbf22b2f8 ),
	VERT( 0x42ce8fc1, 0xc2c8caa7, 0x411eb8e4 ),
	NORM( 0xbf13cd3f, 0xbe8819f3, 0x3f45a2a9 ),
	VERT( 0x42fca9b4, 0xc2b09e83, 0x402b3b48 ),
	NORM( 0xb670178d, 0x3f661753, 0xbee07259 ),
	VERT( 0x42e9bcb2, 0xc2b09e83, 0x402b3b48 ),
	NORM( 0x364567f1, 0x3f661752, 0xbee0725f ),
	VERT( 0x42e9bcb2, 0xc2b09e83, 0x402b3b48 ),
	NORM( 0x371caf16, 0x3f66175f, 0xbee0722b ),
	VERT( 0x42fca9b4, 0xc2af8e37, 0x4071049c ),
	NORM( 0xb71caf16, 0x3f66175f, 0xbee0722b ),
	VERT( 0x42e9bcb2, 0xc2af8e37, 0x4071049c ),
	NORM( 0x371caf16, 0x3f66175f, 0xbee0722b ),
	VERT( 0x42fca9b4, 0xc2cce88e, 0x41193046 ),
	NORM( 0xb5a28ba5, 0xbf661770, 0x3ee071e3 ),
	VERT( 0x42e9bcb2, 0xc2cce88e, 0x41193046 ),
	NORM( 0x36c3d7e8, 0xbf66177d, 0x3ee071af ),
	VERT( 0x42fca9b4, 0xc2cbd843, 0x412aa29d ),
	NORM( 0x36b01bd5, 0xbf66177f, 0x3ee071a8 ),
	VERT( 0x42e9bcb2, 0xc2cbd843, 0x412aa29d ),
	NORM( 0xb52739f5, 0xbf661772, 0x3ee071dd ),
	VERT( 0x42e9bcb2, 0xc2b09e83, 0x402b3b48 ),
	NORM( 0x00000000, 0x3ee07233, 0x3f66175d ),
	VERT( 0x42fca9b4, 0xc2b09e83, 0x402b3b48 ),
	NORM( 0x00000000, 0x3ee07233, 0x3f66175d ),
	VERT( 0x42e9bcb2, 0xc2cce88e, 0x41193046 ),
	NORM( 0x00000000, 0x3ee07233, 0x3f66175d ),
	VERT( 0x42fca9b4, 0xc2cce88e, 0x41193046 ),
	NORM( 0x00000000, 0x3ee07233, 0x3f66175d ),
	VERT( 0x42e9bcb2, 0xc2af8e37, 0x4071049c ),
	NORM( 0x00000000, 0xbee07231, 0xbf66175d ),
	VERT( 0x42fca9b4, 0xc2af8e37, 0x4071049c ),
	NORM( 0x00000000, 0xbee07231, 0xbf66175d ),
	VERT( 0x42fca9b4, 0xc2cbd843, 0x412aa29d ),
	NORM( 0x00000000, 0xbee07231, 0xbf66175d ),
	VERT( 0x42e9bcb2, 0xc2cbd843, 0x412aa29d ),
	NORM( 0x00000000, 0xbee07231, 0xbf66175d ),
	VERT( 0x42e5437c, 0xc210f774, 0xc152746d ),
	NORM( 0x3b0409ec, 0x3ee0a64a, 0x3f660a81 ),
	VERT( 0x42e54b2c, 0xc2c902cf, 0x3fb40795 ),
	NORM( 0xbbcbe2b3, 0xbf0e9945, 0xbf5499c9 ),
	VERT( 0x42e54b2c, 0xc2c902cf, 0x3fb40795 ),
	NORM( 0xbd2cf5fe, 0xbf65e21d, 0x3ee041dc ),
	VERT( 0x42e54cd1, 0xc2c1105f, 0x3ea8bc2a ),
	NORM( 0xbcb7a21c, 0xbf0c3486, 0xbf561da6 ),
	VERT( 0x42e53941, 0xc216316e, 0xc1a7a042 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e53941, 0xc2145ad4, 0xc1a01685 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e5437c, 0xc2148de4, 0xc1a0e878 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e5437c, 0xc2162a68, 0xc1a78406 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e53698, 0xc1fd9211, 0xc1a785e8 ),
	NORM( 0xb9ce0175, 0x3f64feb2, 0xbee4e319 ),
	VERT( 0x42e53698, 0xc1fd9211, 0xc1a785e8 ),
	NORM( 0x337e1574, 0xbee0721d, 0xbf661762 ),
	VERT( 0x42dc8216, 0xc20a4932, 0xc1d51bd5 ),
	NORM( 0xbd394e28, 0x3f677112, 0xbed997aa ),
	VERT( 0x42dc8216, 0xc20a4932, 0xc1d51bd5 ),
	NORM( 0xba6f50af, 0x3ee16b72, 0x3f65da63 ),
	VERT( 0x42dc8216, 0xc20a4932, 0xc1d51bd5 ),
	NORM( 0x3f601291, 0x3ee80811, 0xbe2cdfe1 ),
	VERT( 0x42e1c76f, 0xc21ccd11, 0xc1c2ede5 ),
	NORM( 0x3f601291, 0x3ee80811, 0xbe2cdfe1 ),
	VERT( 0x42e1c76f, 0xc21ccd11, 0xc1c2ede5 ),
	NORM( 0xba6f50af, 0x3ee16b72, 0x3f65da63 ),
	VERT( 0x42e1c76f, 0xc21ccd11, 0xc1c2ede5 ),
	NORM( 0x3c8e3c3b, 0x3f671fef, 0xbedbfa6a ),
	VERT( 0x42dc8216, 0xc1fe30d1, 0xc1a7387b ),
	NORM( 0xbd75daa1, 0x3f65abbf, 0xbee01065 ),
	VERT( 0x42dc8216, 0xc1fe30d1, 0xc1a7387b ),
	NORM( 0x33fb6656, 0xbee0721d, 0xbf661762 ),
	VERT( 0x42dc8216, 0xc1fe30d1, 0xc1a7387b ),
	NORM( 0x3f6070de, 0x3e9c8267, 0xbebe2457 ),
	VERT( 0x42e5641c, 0xc211da8a, 0xc194ec2d ),
	NORM( 0x3378b7ae, 0xbee0721d, 0xbf661762 ),
	VERT( 0x42e5641c, 0xc211da8a, 0xc194ec2d ),
	NORM( 0xbc0b0461, 0x3f66e5ac, 0xbedd1174 ),
	VERT( 0x42e1c4d6, 0xc211da8a, 0xc194ec2d ),
	NORM( 0x3f6070de, 0x3e9c8268, 0xbebe2456 ),
	VERT( 0x42e1c4d6, 0xc211da8a, 0xc194ec2d ),
	NORM( 0x33fb6656, 0xbee0721d, 0xbf661762 ),
	VERT( 0x42e1c4d6, 0xc211da8a, 0xc194ec2d ),
	NORM( 0x3c8e3c3b, 0x3f671fee, 0xbedbfa6b ),
	VERT( 0x42db5384, 0xc2c8a1e1, 0x3fa835e9 ),
	NORM( 0xbb5dfc1b, 0xbf10bc49, 0xbf5327f4 ),
	VERT( 0x42db5384, 0xc2c8a1e1, 0x3fa835e9 ),
	NORM( 0xbe07a7ed, 0xbf643419, 0x3edde453 ),
	VERT( 0x42e54f87, 0xc2bc3731, 0x41686101 ),
	NORM( 0xb8ff0adb, 0xbf6915b0, 0x3ed3bb28 ),
	VERT( 0x42e54f87, 0xc2bc3731, 0x41686101 ),
	NORM( 0x3933dc0f, 0x3ed7810d, 0x3f6837f8 ),
	VERT( 0x42e1bb7e, 0xc2bc5f25, 0x4169b7ab ),
	NORM( 0xbc3fc3ce, 0xbf682df2, 0x3ed796eb ),
	VERT( 0x42deb9d5, 0xc2bc01e7, 0x416a4105 ),
	NORM( 0xbdc9f9ce, 0xbf64f835, 0x3edf5a1c ),
	VERT( 0x42dcbc5d, 0xc2bbb04c, 0x416be229 ),
	NORM( 0xbdc9fa1f, 0xbf64f836, 0x3edf5a15 ),
	VERT( 0x42dcbc5d, 0xc2bbb04c, 0x416be229 ),
	NORM( 0xbdc9f567, 0xbf64f6dc, 0x3edf5fe2 ),
	VERT( 0x42db5384, 0xc2bb67d7, 0x416df9fb ),
	NORM( 0xbdc9f567, 0xbf64f6dd, 0x3edf5fe2 ),
	VERT( 0x42db5384, 0xc2bb67d7, 0x416df9fb ),
	NORM( 0x3a49a393, 0x3ee3fac7, 0x3f653896 ),
	VERT( 0x42db5384, 0xc2bb67d7, 0x416df9fb ),
	NORM( 0xbe28980a, 0xbf62f386, 0x3edd621a ),
	VERT( 0x42db5384, 0xc2bb67d7, 0x416df9fb ),
	NORM( 0xbd0eb2c7, 0x3ee54e0d, 0x3f64b772 ),
	VERT( 0x42dc4ced, 0xc2bb7e0e, 0x416e50a5 ),
	NORM( 0xbdc9f566, 0xbf64f6dd, 0x3edf5fe2 ),
	VERT( 0x42dc4ced, 0xc2bb7e0e, 0x416e50a5 ),
	NORM( 0x3e970740, 0x3ec64c20, 0x3f5f9d25 ),
	VERT( 0x42dc847d, 0xc201f907, 0xc1b3089f ),
	NORM( 0xbda17c58, 0x3f6566c3, 0xbedfa36b ),
	VERT( 0x42dc847d, 0xc201f907, 0xc1b3089f ),
	NORM( 0x3b91898a, 0xbef9ea88, 0xbf5f6da3 ),
	VERT( 0x42dc847d, 0xc201f907, 0xc1b3089f ),
	NORM( 0x3f6070de, 0x3e9c8267, 0xbebe2456 ),
	VERT( 0x42db3fa6, 0xc2022737, 0xc1b2db92 ),
	NORM( 0x3b91898b, 0xbef9ea88, 0xbf5f6da3 ),
	VERT( 0x42db3fa6, 0xc2022737, 0xc1b2db92 ),
	NORM( 0xbdc63168, 0x3f65057c, 0xbedf59e3 ),
	VERT( 0x42db3fa6, 0xc2022737, 0xc1b2db92 ),
	NORM( 0x339c6927, 0xbee0723a, 0xbf66175b ),
	VERT( 0x42db3fa6, 0xc1f0677d, 0xc18a0d6d ),
	NORM( 0xbda09327, 0x3f7f02d2, 0xbd21fce9 ),
	VERT( 0x42e55738, 0xc211f22d, 0xc1f6d0c3 ),
	NORM( 0x394bb314, 0x3f2bfae2, 0xbf3da0d5 ),
	VERT( 0x42db3fa6, 0xc203c3ba, 0xc1b97723 ),
	NORM( 0xbdc64495, 0x3f65015e, 0xbedf69b4 ),
	VERT( 0x42db3fa6, 0xc203c3ba, 0xc1b97723 ),
	NORM( 0xb3f044b4, 0x3ee0726f, 0x3f66174e ),
	VERT( 0x42dc847d, 0xc203958b, 0xc1b9a42f ),
	NORM( 0x3f601291, 0x3ee80811, 0xbe2cdfe1 ),
	VERT( 0x42dc847d, 0xc203958b, 0xc1b9a42f ),
	NORM( 0xb536169b, 0x3ee07288, 0x3f661748 ),
	VERT( 0x42dc847d, 0xc203958b, 0xc1b9a42f ),
	NORM( 0xbda178da, 0x3f655d0e, 0xbedfcb63 ),
	VERT( 0x42db3fa6, 0xc2129370, 0xc1f63373 ),
	NORM( 0xbd8e48b7, 0x3f27dc24, 0xbf407701 ),
	VERT( 0x42db410d, 0xc20585c6, 0xc1ae8e6b ),
	NORM( 0x00000000, 0x3ee0722f, 0x3f66175e ),
	VERT( 0x42db410d, 0xc20585c6, 0xc1ae8e6b ),
	NORM( 0xbde90c61, 0x3f6498c5, 0xbedefcea ),
	VERT( 0x42db410d, 0xc20585c6, 0xc1ae8e6b ),
	NORM( 0xbcd1cfde, 0x3f65a651, 0xbee1de17 ),
	VERT( 0x42dcd1f8, 0xc2056d08, 0xc1aea68d ),
	NORM( 0x3f6070de, 0x3e9c8268, 0xbebe2457 ),
	VERT( 0x42dcd1f8, 0xc2056d08, 0xc1aea68d ),
	NORM( 0x3f5ba436, 0x3eec648e, 0xbe669724 ),
	VERT( 0x42dcd1f8, 0xc2056d08, 0xc1aea68d ),
	NORM( 0xbcd1cfde, 0x3f65a651, 0xbee1de17 ),
	VERT( 0x42dcd1f8, 0xc2056d08, 0xc1aea68d ),
	NORM( 0x3b91898b, 0xbef9ea88, 0xbf5f6da3 ),
	VERT( 0x42dcd404, 0xc20742db, 0xc1b60df7 ),
	NORM( 0xbcd1cfdd, 0x3f65a651, 0xbee1de16 ),
	VERT( 0x42dcd404, 0xc20742db, 0xc1b60df7 ),
	NORM( 0xb536169b, 0x3ee07288, 0x3f661748 ),
	VERT( 0x42dcd404, 0xc20742db, 0xc1b60df7 ),
	NORM( 0x3f601291, 0x3ee80810, 0xbe2cdfe1 ),
	VERT( 0x42dcd404, 0xc20742db, 0xc1b60df7 ),
	NORM( 0x3f5ba436, 0x3eec648e, 0xbe669726 ),
	VERT( 0x42db410d, 0xc2075c5f, 0xc1b61828 ),
	NORM( 0xb2fed25f, 0xbee0722f, 0xbf66175e ),
	VERT( 0x42db410d, 0xc2075c5f, 0xc1b61828 ),
	NORM( 0xbcd1cfde, 0x3f65a651, 0xbee1de18 ),
	VERT( 0x42db410d, 0xc2075c5f, 0xc1b61828 ),
	NORM( 0xbde90c60, 0x3f6498c5, 0xbedefcea ),
	VERT( 0x42db3fa6, 0xc205bf93, 0xc1af59ca ),
	NORM( 0x34c90562, 0xbee07231, 0xbf66175d ),
	VERT( 0x42db3fa6, 0xc205bf93, 0xc1af59ca ),
	NORM( 0x339c6928, 0xbee0723a, 0xbf66175b ),
	VERT( 0x42db3fa6, 0xc205bf93, 0xc1af59ca ),
	NORM( 0x3b91898b, 0xbef9ea87, 0xbf5f6da3 ),
	VERT( 0x42db3fa6, 0xc2075c17, 0xc1b5f559 ),
	NORM( 0x350e48ab, 0x3ee07253, 0x3f661755 ),
	VERT( 0x42db3fa6, 0xc2075c17, 0xc1b5f559 ),
	NORM( 0xb536169b, 0x3ee07288, 0x3f661748 ),
	VERT( 0x42db3fa6, 0xc2075c17, 0xc1b5f559 ),
	NORM( 0x00000000, 0x3ee07226, 0x3f661760 ),
	VERT( 0x42e1c76f, 0xc2162702, 0xc1a7aa6c ),
	NORM( 0x3f601291, 0x3ee80811, 0xbe2cdfe0 ),
	VERT( 0x42e1c76f, 0xc2162702, 0xc1a7aa6c ),
	NORM( 0x3f5ba436, 0x3eec648e, 0xbe669725 ),
	VERT( 0x42e1c76f, 0xc2145069, 0xc1a020b0 ),
	NORM( 0x3f6070de, 0x3e9c8267, 0xbebe2456 ),
	VERT( 0x42e1c76f, 0xc2145069, 0xc1a020b0 ),
	NORM( 0x3f5ba436, 0x3eec648e, 0xbe669725 ),
	VERT( 0x42df2702, 0xc2b5a93f, 0x41554f99 ),
	NORM( 0x3ead25a6, 0x3d98c351, 0x3f7028ba ),
	VERT( 0x42e1fbbf, 0xc2b37d74, 0x414eed6c ),
	NORM( 0xbc5ccf1c, 0x3ee0710d, 0x3f661105 ),
	VERT( 0x42e1fbbf, 0xc2b37d74, 0x414eed6c ),
	NORM( 0x3e8451ef, 0xbca63b05, 0x3f773fa4 ),
	VERT( 0x42db3f60, 0xc2a26dca, 0x410b8ab9 ),
	NORM( 0xb89bb37d, 0x3f792999, 0x3e6b15ae ),
	VERT( 0x42db3f60, 0xc2a26dca, 0x410b8ab9 ),
	NORM( 0xbccbf86e, 0x3ee06367, 0x3f66045e ),
	VERT( 0x42db3f60, 0xc2b49026, 0x41524c93 ),
	NORM( 0xbcd864b1, 0x3ee31814, 0x3f655753 ),
	VERT( 0x42e04959, 0xc2b4883d, 0x4152ce57 ),
	NORM( 0x3e9803a6, 0xbd099407, 0x3f744e1b ),
	VERT( 0x42e04959, 0xc2b4883d, 0x4152ce57 ),
	NORM( 0xbc5b00fa, 0x3ee1cd5d, 0x3f65bbdc ),
	VERT( 0x42decc9b, 0xc2b591d8, 0x4156cf6f ),
	NORM( 0x3ef53e89, 0x3c970451, 0x3f60ac0d ),
	VERT( 0x42decc9b, 0xc2b591d8, 0x4156cf6f ),
	NORM( 0xbc64bd66, 0x3ee6c6a8, 0x3f647e16 ),
	VERT( 0x42e552a2, 0xc2b2c40a, 0x414c8a7d ),
	NORM( 0x38a5f6f2, 0x3ee04dd5, 0x3f66203a ),
	VERT( 0x42e552a2, 0xc2b2c40a, 0x414c8a7d ),
	NORM( 0xba254bfa, 0xbd8397a6, 0x3f7f7890 ),
	VERT( 0x42e2c455, 0xc2b397c6, 0x414d3da9 ),
	NORM( 0x3e1b9407, 0xbdb89667, 0x3f7bf94f ),
	VERT( 0x42e3f087, 0xc2b3a11b, 0x414ca487 ),
	NORM( 0x3d3ee933, 0x3df08fe5, 0x3f7df299 ),
	VERT( 0x42e54df0, 0xc2b3a463, 0x414c6ec5 ),
	NORM( 0x38ea5ddd, 0x3e189b2b, 0x3f7d2425 ),
	VERT( 0x42e099a4, 0xc2b5c311, 0x4153a819 ),
	NORM( 0x3e241e85, 0x3e72ecd2, 0x3f7548b8 ),
	VERT( 0x42e2c455, 0xc2b5d452, 0x41528d17 ),
	NORM( 0x3d430652, 0x3eab5936, 0x3f70ee20 ),
	VERT( 0x42dd42c0, 0xc2b8cb00, 0x4160ca5b ),
	NORM( 0x3efda382, 0x3dca75e1, 0x3f5cef6c ),
	VERT( 0x42dd42c0, 0xc2b8cb00, 0x4160ca5b ),
	NORM( 0x3e9c8c35, 0x3eb5978a, 0x3f62328e ),
	VERT( 0x42df2702, 0xc2b8ecbc, 0x415ea0f9 ),
	NORM( 0x3df05f3d, 0x3ec21c2c, 0x3f6af9c1 ),
	VERT( 0x42e1fbbf, 0xc2b90347, 0x415d2f2d ),
	NORM( 0x3d42db07, 0x3ecb4f38, 0x3f6aa2ca ),
	VERT( 0x42e54df0, 0xc2b90b32, 0x415cad5d ),
	NORM( 0x38ee90c2, 0x3ecd4dec, 0x3f6a8484 ),
	VERT( 0x42e1bb7e, 0xc2bc5f25, 0x4169b7ab ),
	NORM( 0x3d90ed82, 0x3ed5a7af, 0x3f67f062 ),
	VERT( 0x42e1bb7e, 0xc2bc5f25, 0x4169b7ab ),
	NORM( 0x3cb9c7d5, 0x3ed7a7e5, 0x3f681c5f ),
	VERT( 0x42deb9d5, 0xc2bc01e7, 0x416a4105 ),
	NORM( 0x3deaaabe, 0x3ed235cc, 0x3f679407 ),
	VERT( 0x42dcbc5d, 0xc2bbb04c, 0x416be229 ),
	NORM( 0x3ec46af1, 0x3eb4cb52, 0x3f5a729a ),
	VERT( 0x42dcc119, 0xc2b8a80d, 0x4163078f ),
	NORM( 0x3f00dfc5, 0x3e75c350, 0x3f547dbe ),
	VERT( 0x42dcc119, 0xc2b8a80d, 0x4163078f ),
	NORM( 0xbc5bc5f8, 0x3ee6e99a, 0x3f6475cf ),
	VERT( 0x42bcc6b0, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0xbf3504fd, 0xbf22b2fa, 0x3e9eb4dc ),
	VERT( 0x42bcc6b0, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0x00000000, 0xbee0723f, 0xbf66175a ),
	VERT( 0x42bcc6b0, 0xc2bf96d3, 0x410ce0e3 ),
	NORM( 0xbf13cd38, 0xbe881a55, 0x3f45a29e ),
	VERT( 0x42bcc6b0, 0xc2b9602b, 0x40e944b7 ),
	NORM( 0xbf3504fd, 0x3e9eb516, 0x3f22b2ec ),
	VERT( 0x42bcc6b0, 0xc2bab74e, 0x40bd4c1b ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42bcc6b0, 0xc2bab74e, 0x40bd4c1b ),
	NORM( 0x00000000, 0xbee0723f, 0xbf66175a ),
	VERT( 0x42e54e40, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0x00000000, 0xbf66176d, 0x3ee071ef ),
	VERT( 0x42e54e40, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0x00000000, 0xbee0723f, 0xbf66175a ),
	VERT( 0x42e54e40, 0xc2bab74e, 0x40bd4c1b ),
	NORM( 0x00000000, 0xbee0723f, 0xbf66175a ),
	VERT( 0x42e54e40, 0xc2b9602b, 0x40e944b7 ),
	NORM( 0x00000000, 0x3ee07241, 0x3f661759 ),
	VERT( 0x42e54e40, 0xc2bf96d3, 0x410ce0e3 ),
	NORM( 0x00000000, 0xbea6b0f6, 0x3f720d7d ),
	VERT( 0x42ba682e, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbf661764, 0x3ee07216 ),
	VERT( 0x42ba682e, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42ba682e, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x42ba682e, 0xc2beb0f7, 0x4148335f ),
	NORM( 0x00000000, 0xbf661764, 0x3ee07216 ),
	VERT( 0x42ba682e, 0xc2beb0f7, 0x4148335f ),
	NORM( 0xbf66002b, 0x3e451b5e, 0x3eca107a ),
	VERT( 0x42ba682e, 0xc2b701f7, 0x412a3866 ),
	NORM( 0xbf660033, 0x3e451b43, 0x3eca105e ),
	VERT( 0x42ba682e, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x42ba682e, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42bcb980, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbf661764, 0x3ee07217 ),
	VERT( 0x42bcb980, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x42bcb980, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x42bcb980, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x42bcb980, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x42bcb980, 0xc2b6376e, 0x41373273 ),
	NORM( 0xbebb3a78, 0x3ed0e6af, 0x3f5627bd ),
	VERT( 0x42bcb980, 0xc2bde66f, 0x41552d6d ),
	NORM( 0xbebb3a75, 0x3ed0e6af, 0x3f5627be ),
	VERT( 0x42bcb980, 0xc2bde66f, 0x41552d6d ),
	NORM( 0x00000000, 0xbf661764, 0x3ee07216 ),
	VERT( 0x42c9c69a, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x42c9c69a, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbf661764, 0x3ee07215 ),
	VERT( 0x42c9c69a, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x42c9c69a, 0xc2b5b783, 0x413f6492 ),
	NORM( 0xbd9dac73, 0x3edfc7a7, 0x3f656889 ),
	VERT( 0x42c9c69a, 0xc2bd6684, 0x415d5f8d ),
	NORM( 0xbd9dac73, 0x3edfc7a7, 0x3f656889 ),
	VERT( 0x42c9c69a, 0xc2bd6684, 0x415d5f8d ),
	NORM( 0x00000000, 0xbf661764, 0x3ee07214 ),
	VERT( 0x42d24482, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbf661766, 0x3ee0720b ),
	VERT( 0x42d24482, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x42d24482, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x42d24482, 0xc2b5778d, 0x41437db0 ),
	NORM( 0xbd65d064, 0x3ee017a7, 0x3f65ba96 ),
	VERT( 0x42d24482, 0xc2bd268f, 0x416178ab ),
	NORM( 0xbd65d063, 0x3ee017a9, 0x3f65ba95 ),
	VERT( 0x42d24482, 0xc2bd268f, 0x416178ab ),
	NORM( 0x00000000, 0xbf661766, 0x3ee0720c ),
	VERT( 0x42dcc110, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0xb3eaa4ce, 0xbee07229, 0xbf66175f ),
	VERT( 0x42dcc110, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbf661768, 0x3ee07203 ),
	VERT( 0x42dcc110, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbf661765, 0x3ee07212 ),
	VERT( 0x42dcc110, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0xb3eacdd2, 0xbee07229, 0xbf66175f ),
	VERT( 0x42dcc110, 0xc2b54242, 0x4146e7e1 ),
	NORM( 0xbce6c265, 0x3ee05b62, 0x3f65fffe ),
	VERT( 0x42dcc110, 0xc2bcf143, 0x4164e2db ),
	NORM( 0xbce6dad7, 0x3ee05b5d, 0x3f65fff9 ),
	VERT( 0x42dcc110, 0xc2bcf143, 0x4164e2db ),
	NORM( 0x00000000, 0xbf661765, 0x3ee07213 ),
	VERT( 0x42dcc110, 0xc2bcf143, 0x4164e2db ),
	NORM( 0x00000000, 0xbf661768, 0x3ee07204 ),
	VERT( 0x42e54de2, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0xb46aa4cf, 0xbee0722b, 0xbf66175f ),
	VERT( 0x42e54de2, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbf661765, 0x3ee07212 ),
	VERT( 0x42e54de2, 0xc2ba47dc, 0x40e86629 ),
	NORM( 0xb46aa4d0, 0xbee0722c, 0xbf66175f ),
	VERT( 0x42e54de2, 0xc2b5335f, 0x41478645 ),
	NORM( 0xbc360bb4, 0x3ee06eab, 0x3f6613b9 ),
	VERT( 0x42e54de2, 0xc2bce699, 0x416591bb ),
	NORM( 0xbc360bb4, 0x3ee06eab, 0x3f6613b9 ),
	VERT( 0x42e54de2, 0xc2bce699, 0x416591bb ),
	NORM( 0x00000000, 0xbf661765, 0x3ee07213 ),
	VERT( 0x42ba682e, 0xc2c54664, 0x40b86ca3 ),
	NORM( 0xbf668a78, 0xbe73e085, 0xbeba38cc ),
	VERT( 0x42ba682e, 0xc2c54664, 0x40b86ca3 ),
	NORM( 0x3c3217e1, 0xbf6613e6, 0x3ee06ebd ),
	VERT( 0x42ba682e, 0xc2c2d044, 0x410495e3 ),
	NORM( 0x3c3217e0, 0xbf6613e6, 0x3ee06ebd ),
	VERT( 0x42ba682e, 0xc2c2d044, 0x410495e3 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42ba682e, 0xc2c2d044, 0x410495e3 ),
	NORM( 0xb442d4a5, 0x3ee07236, 0x3f66175c ),
	VERT( 0x42ba682e, 0xc2bb2143, 0x40cd35d5 ),
	NORM( 0xb442d4a5, 0x3ee07235, 0x3f66175c ),
	VERT( 0x42ba682e, 0xc2bb2143, 0x40cd35d5 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42ba682e, 0xc2be10df, 0x4059cade ),
	NORM( 0xbf5e4e02, 0xbe8b1717, 0xbed46a62 ),
	VERT( 0x42c3254e, 0xc2c7dac1, 0x4040abc2 ),
	NORM( 0x3b1acc65, 0xbf661735, 0x3ee07200 ),
	VERT( 0x42c3254e, 0xc2c7dac1, 0x4040abc2 ),
	NORM( 0xbea13093, 0xbf051bd4, 0xbf4b478b ),
	VERT( 0x42c3254e, 0xc2c0a53d, 0x3f2675a5 ),
	NORM( 0xbe99b468, 0xbf05c575, 0xbf4c4a95 ),
	VERT( 0x42c3254e, 0xc2bb0b69, 0x40cc8b47 ),
	NORM( 0xb442d4a5, 0x3ee07235, 0x3f66175c ),
	VERT( 0x42c3254e, 0xc2bb0b69, 0x40cc8b47 ),
	NORM( 0x3349de7f, 0x3ee0723d, 0x3f66175a ),
	VERT( 0x42c3254e, 0xc2c2ba69, 0x4104409d ),
	NORM( 0x3b848751, 0xbf6616e4, 0x3ee071b0 ),
	VERT( 0x42c3254e, 0xc2c2ba69, 0x4104409d ),
	NORM( 0x3349de80, 0x3ee0723d, 0x3f66175a ),
	VERT( 0x42c3254e, 0xc2c2ba69, 0x4104409d ),
	NORM( 0xb442d4a4, 0x3ee07236, 0x3f66175c ),
	VERT( 0x42e54de2, 0xc2c845e4, 0x402c25e8 ),
	NORM( 0xbcb7a21b, 0xbf0c3486, 0xbf561da6 ),
	VERT( 0x42e54de2, 0xc2c845e4, 0x402c25e8 ),
	NORM( 0xbb364567, 0xbf661724, 0x3ee071f3 ),
	VERT( 0x42e54de2, 0xc2bb1d0a, 0x40cd14dd ),
	NORM( 0x3349de7f, 0x3ee0723e, 0x3f66175a ),
	VERT( 0x42e54de2, 0xc2c2d044, 0x410495e3 ),
	NORM( 0x3349de7f, 0x3ee0723d, 0x3f66175a ),
	VERT( 0x42e54de2, 0xc2c2d044, 0x410495e3 ),
	NORM( 0xbb364567, 0xbf661724, 0x3ee071f4 ),
	VERT( 0x42d16ea8, 0xc2c69d84, 0x3f527f6d ),
	NORM( 0xbea9265e, 0xbf592c01, 0x3ed3d803 ),
	VERT( 0x42d16ea8, 0xc2c69d84, 0x3f527f6d ),
	NORM( 0x3b256da3, 0xbf15c1ee, 0xbf4fa013 ),
	VERT( 0x42c60a4e, 0xc2c23b8d, 0xbf5ea17f ),
	NORM( 0xbedc0d06, 0xbf4fc1a1, 0x3ecaa8c8 ),
	VERT( 0x42c60a4e, 0xc2c23b8d, 0xbf5ea17f ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc2c23b8d, 0xbf5ea17f ),
	NORM( 0xbc4827de, 0xbf140c44, 0xbf50d34b ),
	VERT( 0x42d16ea8, 0xc2c20945, 0xbf6589db ),
	NORM( 0x3b55ef2a, 0xbf167bc8, 0xbf4f195a ),
	VERT( 0x42d1623a, 0xc2b4b7a0, 0x414fc51b ),
	NORM( 0xbd96b5b8, 0x3ee15762, 0x3f651962 ),
	VERT( 0x42c60a4e, 0xc2b541fd, 0x4146e789 ),
	NORM( 0xbddd4d4d, 0x3edf21bf, 0x3f64be77 ),
	VERT( 0x42c60a4e, 0xc2b541fd, 0x4146e789 ),
	NORM( 0xbedc0d06, 0xbf4fc1a1, 0x3ecaa8c9 ),
	VERT( 0x42c60a4e, 0xc2b541fd, 0x4146e789 ),
	NORM( 0xbddd4cfd, 0x3ee0aa65, 0x3f645e4f ),
	VERT( 0x42c60a4e, 0xc2b541fd, 0x4146e789 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42d16ea8, 0xc2b994a8, 0x4162f487 ),
	NORM( 0xbea5321a, 0xbf59c927, 0x3ed4714d ),
	VERT( 0x42d16ea8, 0xc2b994a8, 0x4162f487 ),
	NORM( 0xbd89f56a, 0x3ee34b97, 0x3f64bde9 ),
	VERT( 0x42db5384, 0xc2c20945, 0xbf6589db ),
	NORM( 0xbb4ac118, 0xbf10f4ab, 0xbf530157 ),
	VERT( 0x42e54d8e, 0xc2c23753, 0xbf5fa937 ),
	NORM( 0xbc446795, 0xbf1075f1, 0xbf5352db ),
	VERT( 0x42bb7bd6, 0xc220193e, 0xc19df6a9 ),
	NORM( 0xbf31b7e4, 0xbe9e5703, 0xbf2662d5 ),
	VERT( 0x42bb7bd6, 0xc220193e, 0xc19df6a9 ),
	NORM( 0xbf3695d3, 0xbe9cfd68, 0xbf215c42 ),
	VERT( 0x42bb6596, 0xc214add1, 0xc19fc592 ),
	NORM( 0xbf2778b9, 0x3f2c1998, 0x3eb16f96 ),
	VERT( 0x42bb6596, 0xc216846a, 0xc1a74f4f ),
	NORM( 0xbf28b325, 0x3e1df5f6, 0xbf3c7594 ),
	VERT( 0x42c5f53e, 0xc220193e, 0xc19df6a9 ),
	NORM( 0xb2a870bd, 0xbee07230, 0xbf66175e ),
	VERT( 0x42c5f53e, 0xc220193e, 0xc19df6a9 ),
	NORM( 0xb1d9ee0b, 0xbee0722f, 0xbf66175e ),
	VERT( 0x42c60b7e, 0xc20f5464, 0xc1ae5230 ),
	NORM( 0xbe8f2493, 0x3f5cea88, 0xbed77edf ),
	VERT( 0x42c60b7e, 0xc20f5464, 0xc1ae5230 ),
	NORM( 0xbe8eedf6, 0x3ecdb08d, 0xbf5f4667 ),
	VERT( 0x42c60b7e, 0xc20f5464, 0xc1ae5230 ),
	NORM( 0xb2a870bd, 0xbee07230, 0xbf66175e ),
	VERT( 0x42c60b7e, 0xc20d7dcb, 0xc1a6c872 ),
	NORM( 0xbe290f42, 0x3f45772d, 0x3f1d57fd ),
	VERT( 0x42c60b7e, 0xc20d7dcb, 0xc1a6c872 ),
	NORM( 0xbe8f2493, 0x3f5cea88, 0xbed77ee0 ),
	VERT( 0x42c5f53e, 0xc21e42a5, 0xc1966cec ),
	NORM( 0xbbdc6794, 0x3ede39ff, 0x3f669f70 ),
	VERT( 0x42d1636b, 0xc220193e, 0xc19df6a9 ),
	NORM( 0xb2a870bd, 0xbee07230, 0xbf66175e ),
	VERT( 0x42d1636b, 0xc220193e, 0xc19df6a9 ),
	NORM( 0xb2fed260, 0xbee07230, 0xbf66175e ),
	VERT( 0x42d1636b, 0xc2096460, 0xc1b41ce9 ),
	NORM( 0xb2fed25f, 0xbee07230, 0xbf66175e ),
	VERT( 0x42d1636b, 0xc2096460, 0xc1b41ce9 ),
	NORM( 0xbe8f2493, 0x3f5cea88, 0xbed77edf ),
	VERT( 0x42d1636b, 0xc2096460, 0xc1b41ce9 ),
	NORM( 0xbde90c61, 0x3f6498c5, 0xbedefcea ),
	VERT( 0x42d1636b, 0xc2096460, 0xc1b41ce9 ),
	NORM( 0xb2a870bd, 0xbee0722f, 0xbf66175e ),
	VERT( 0x42d1636b, 0xc2078dc7, 0xc1ac932c ),
	NORM( 0xbe8f2493, 0x3f5cea88, 0xbed77edf ),
	VERT( 0x42d1636b, 0xc2078dc7, 0xc1ac932c ),
	NORM( 0xbde90c60, 0x3f6498c5, 0xbedefcea ),
	VERT( 0x42d1636b, 0xc2078dc7, 0xc1ac932c ),
	NORM( 0x00000000, 0x3ee0722b, 0x3f66175f ),
	VERT( 0x42d1636b, 0xc2078dc7, 0xc1ac932c ),
	NORM( 0x00000000, 0x3ee07230, 0x3f66175e ),
	VERT( 0x42d1636b, 0xc21e42a5, 0xc1966cec ),
	NORM( 0x00000000, 0x3ee07230, 0x3f66175e ),
	VERT( 0x42d1636b, 0xc21e42a5, 0xc1966cec ),
	NORM( 0x00000000, 0x3ee0722a, 0x3f66175f ),
	VERT( 0x42db410d, 0xc220193e, 0xc19df6a9 ),
	NORM( 0xb2fed260, 0xbee07230, 0xbf66175e ),
	VERT( 0x42db410d, 0xc21e42a5, 0xc1966cec ),
	NORM( 0x00000000, 0x3ee07230, 0x3f66175e ),
	VERT( 0x42b975ca, 0xc2289f32, 0xc1c1853b ),
	NORM( 0xbf7c7f3a, 0xbd9469f7, 0xbe17a313 ),
	VERT( 0x42b96e46, 0xc2270524, 0xc1bb3504 ),
	NORM( 0xbf7ffded, 0xbb9e1d01, 0xbbcf6c8c ),
	VERT( 0x42b96e46, 0xc21e19a1, 0xc1c3e881 ),
	NORM( 0xbf7ccd27, 0x3df22e5e, 0xbdd55256 ),
	VERT( 0x42b97572, 0xc2227327, 0xc1c799e8 ),
	NORM( 0xbf7c4302, 0xbd186167, 0xbe2a24da ),
	VERT( 0x42b975ca, 0xc21fe990, 0xc19dce62 ),
	NORM( 0xb97d415f, 0x3ee06a06, 0x3f66195b ),
	VERT( 0x42b975ca, 0xc21fe990, 0xc19dce62 ),
	NORM( 0x3d5027bc, 0x3ee17562, 0x3f6579a6 ),
	VERT( 0x42b975ca, 0xc21fe990, 0xc19dce62 ),
	NORM( 0xbf7fffee, 0xbaad347c, 0x3a28f490 ),
	VERT( 0x42b96e46, 0xc216f877, 0xc1a6ac37 ),
	NORM( 0x3d5027bd, 0x3ee17562, 0x3f6579a6 ),
	VERT( 0x42b96e46, 0xc216f877, 0xc1a6ac37 ),
	NORM( 0xbf7cc4a7, 0x3e1207b0, 0xbd8d2f30 ),
	VERT( 0x42ba1450, 0xc22a409a, 0xc1c834d7 ),
	NORM( 0xbf56e143, 0xbe7430f9, 0xbefa1612 ),
	VERT( 0x42ba1456, 0xc221edf4, 0xc1d05325 ),
	NORM( 0xbf5ca988, 0xbdee227c, 0xbefca69e ),
	VERT( 0x42ba12e2, 0xc21c6633, 0xc1cf1dfb ),
	NORM( 0xbf5f6b23, 0x3e9fa1c9, 0xbec05977 ),
	VERT( 0x42ba1854, 0xc213636a, 0xc1aa2ac4 ),
	NORM( 0xbf5903ee, 0x3ef44e21, 0xbe6d4989 ),
	VERT( 0x42ba1854, 0xc213636a, 0xc1aa2ac4 ),
	NORM( 0x3bc8e1cd, 0x3ee09952, 0x3f660c73 ),
	VERT( 0x42ba1854, 0xc21fe3fa, 0xc19df8bb ),
	NORM( 0x3cd18df5, 0x3ee10743, 0x3f65db14 ),
	VERT( 0x42bc95c4, 0xc22c4697, 0xc1d080ea ),
	NORM( 0xbf1996b8, 0xbeb3980a, 0xbf3812c8 ),
	VERT( 0x42bc95b0, 0xc21f9328, 0xc1dce6f9 ),
	NORM( 0xbf268b63, 0xbddbbaa1, 0xbf407838 ),
	VERT( 0x42bc95b0, 0xc21a06c8, 0xc1db9ee1 ),
	NORM( 0xbf1b05bf, 0x3f0236d7, 0xbf1cadd0 ),
	VERT( 0x42bc95b0, 0xc20f0224, 0xc1ae7086 ),
	NORM( 0xbb8cdab9, 0x3ee12c5d, 0x3f65e933 ),
	VERT( 0x42bc95b0, 0xc20f0224, 0xc1ae7086 ),
	NORM( 0xbf04b49c, 0x3f44ccd1, 0xbebfc7ee ),
	VERT( 0x42bc95b0, 0xc21ffeb2, 0xc19ddeaa ),
	NORM( 0xbb4987e4, 0x3ee0f778, 0x3f65f679 ),
	VERT( 0x42c4856a, 0xc230681b, 0xc1e1b2a1 ),
	NORM( 0x3f7fffcb, 0x3a0b2ddd, 0x3b20b567 ),
	VERT( 0x42c4856a, 0xc230681b, 0xc1e1b2a1 ),
	NORM( 0xbf042198, 0xbec0441c, 0xbf451166 ),
	VERT( 0x42c4856a, 0xc21ebefe, 0xc1f2ecd1 ),
	NORM( 0xbf0c35da, 0xbdc21961, 0xbf54cf8a ),
	VERT( 0x42c4856a, 0xc21ebefe, 0xc1f2ecd1 ),
	NORM( 0x3f7ffefd, 0x3b1f992b, 0x3ba39cd9 ),
	VERT( 0x42c482c0, 0xc2193c22, 0xc1eff6e1 ),
	NORM( 0xbefc0bdb, 0x3ef27baa, 0xbf3af62e ),
	VERT( 0x42c482c0, 0xc2193c22, 0xc1eff6e1 ),
	NORM( 0x3f7fff1f, 0x3b975229, 0xbb1a1e11 ),
	VERT( 0x42c482c0, 0xc20a5c72, 0xc1b2f909 ),
	NORM( 0xbe9ec4ec, 0x3f5abfbf, 0xbed561c1 ),
	VERT( 0x42c482c0, 0xc20a5c72, 0xc1b2f909 ),
	NORM( 0x3f7ffde7, 0x3bb7edaf, 0xbbbacab0 ),
	VERT( 0x42c482c0, 0xc20a5c72, 0xc1b2f909 ),
	NORM( 0xbbc84bfc, 0x3ee17a9b, 0x3f65d556 ),
	VERT( 0x42c499f4, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0x3f7fff95, 0x3b0a6e6f, 0xbb3d62e9 ),
	VERT( 0x42c499f4, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0xbeaf2f01, 0x3ea864ac, 0x3f61550c ),
	VERT( 0x42c499f4, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0x3f7fffeb, 0xba9cf5c5, 0x3a886661 ),
	VERT( 0x42c499f4, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0xbbc84bfb, 0x3ee17a9b, 0x3f65d556 ),
	VERT( 0x42c482c0, 0xc22ec3ab, 0xc1daf693 ),
	NORM( 0x3f7fff77, 0x3b83e2b1, 0xb9ba7e46 ),
	VERT( 0x42b96e46, 0xc21e3c77, 0xc1973010 ),
	NORM( 0xb60e4a1b, 0xbee07216, 0xbf661764 ),
	VERT( 0x42b96e46, 0xc21e3c77, 0xc1973010 ),
	NORM( 0x398b31f9, 0xbee07911, 0xbf6615af ),
	VERT( 0x42b96e46, 0xc21e3c77, 0xc1973010 ),
	NORM( 0xbf7fc5b4, 0xbb806814, 0x3d2bfb18 ),
	VERT( 0x42b96e46, 0xc21e3c77, 0xc1973010 ),
	NORM( 0x3f7ccd80, 0xbd8c7fed, 0xbe113c4b ),
	VERT( 0x42b96e46, 0xc20db0a3, 0xc1809de1 ),
	NORM( 0xbf72a55c, 0x3e79c2f0, 0x3e52260a ),
	VERT( 0x42b96e46, 0xc21550f3, 0xc19fe38c ),
	NORM( 0xbf7cb1bd, 0x3e136da7, 0xbd8fcfa8 ),
	VERT( 0x42b96e46, 0xc21550f3, 0xc19fe38c ),
	NORM( 0xb60e4a1b, 0xbee07215, 0xbf661764 ),
	VERT( 0x42b9bcfa, 0xc215ee56, 0xc16a435a ),
	NORM( 0xbf6869ed, 0x3e1a9d7f, 0x3ec841d0 ),
	VERT( 0x42b9bcfa, 0xc20fc92b, 0xc1762288 ),
	NORM( 0xbf62b3e9, 0x3e42596f, 0x3ed914ee ),
	VERT( 0x42ba1854, 0xc21e3c77, 0xc1973010 ),
	NORM( 0xb58072ff, 0xbee0721d, 0xbf661762 ),
	VERT( 0x42ba1854, 0xc211bbe6, 0xc1a36219 ),
	NORM( 0xbf5909b0, 0x3ef40a09, 0xbe6e0d3f ),
	VERT( 0x42ba1854, 0xc211bbe6, 0xc1a36219 ),
	NORM( 0xb3bff397, 0xbee07222, 0xbf661761 ),
	VERT( 0x42ba1854, 0xc209e9a9, 0xc1834fb3 ),
	NORM( 0xbf5cf76a, 0x3f001c0f, 0x3d8a0b36 ),
	VERT( 0x42bb6eb6, 0xc20bca41, 0xc16ebe0a ),
	NORM( 0xbf1ebeba, 0x3edb863c, 0x3f2830f3 ),
	VERT( 0x42bb6eb6, 0xc2146f5b, 0xc15dfe67 ),
	NORM( 0xbf0c46ea, 0x3ebb492f, 0x3f409603 ),
	VERT( 0x42bc95b0, 0xc21e572e, 0xc19715ff ),
	NORM( 0xb2ffa4a3, 0xbee07226, 0xbf661760 ),
	VERT( 0x42bc95b0, 0xc20d5aa0, 0xc1a7a7dc ),
	NORM( 0xb3fb9dca, 0xbee07226, 0xbf661760 ),
	VERT( 0x42bc95b0, 0xc20d5aa0, 0xc1a7a7dc ),
	NORM( 0xbf04b4a7, 0x3f44c32d, 0xbebfef5b ),
	VERT( 0x42bc95b0, 0xc20548d9, 0xc18690ed ),
	NORM( 0xbf09c4d4, 0x3f577157, 0xbd3d6de4 ),
	VERT( 0x42bc95b0, 0xc20704eb, 0xc17414e9 ),
	NORM( 0xbedb9a3c, 0x3f266ccf, 0x3f2091a8 ),
	VERT( 0x42bc95b0, 0xc2142604, 0xc15a95ad ),
	NORM( 0xbe3d70ec, 0x3edc43cf, 0x3f6231bc ),
	VERT( 0x42c482c0, 0xc21e3c77, 0xc1973010 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c482c0, 0xc21e3c77, 0xc1973010 ),
	NORM( 0xb484576b, 0xbee07227, 0xbf661760 ),
	VERT( 0x42c482c0, 0xc208b4ee, 0xc1ac305e ),
	NORM( 0xbe9ec4e5, 0x3f5abfbb, 0xbed561d6 ),
	VERT( 0x42c482c0, 0xc208b4ee, 0xc1ac305e ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c482c0, 0xc208b4ee, 0xc1ac305e ),
	NORM( 0xb484576b, 0xbee07228, 0xbf661760 ),
	VERT( 0x42c482c0, 0xc200490c, 0xc189a7f2 ),
	NORM( 0x3f7ffed2, 0x3952ca10, 0xbbc4a706 ),
	VERT( 0x42c482c0, 0xc200490c, 0xc189a7f2 ),
	NORM( 0xbe9511c5, 0x3f740245, 0xbda7db58 ),
	VERT( 0x42c482c0, 0xc200490c, 0xc189a7f2 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c482c0, 0xc2025f39, 0xc17d25ec ),
	NORM( 0xbe16967a, 0x3f4a3090, 0x3f1870b5 ),
	VERT( 0x42c482c0, 0xc2025f39, 0xc17d25ec ),
	NORM( 0x3f7ffed2, 0x3952ca0f, 0xbbc4a706 ),
	VERT( 0x42c489d6, 0xc214161b, 0xc15a9fec ),
	NORM( 0xba2e6663, 0x3ee03900, 0x3f66254a ),
	VERT( 0x42c489d6, 0xc214161b, 0xc15a9fec ),
	NORM( 0x3f7fffbe, 0xb9a4ecf9, 0xbb368eb6 ),
	VERT( 0x42c482c0, 0xc215d095, 0xc1694f47 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c482c0, 0xc215d095, 0xc1694f47 ),
	NORM( 0x3f7ffed2, 0x3952ca0f, 0xbbc4a706 ),
	VERT( 0x42d164df, 0xc207cbb1, 0xc1ad5a89 ),
	NORM( 0x340854c2, 0xbee0723c, 0xbf66175b ),
	VERT( 0x42d164df, 0xc207cbb1, 0xc1ad5a89 ),
	NORM( 0xb4852deb, 0xbee07231, 0xbf66175d ),
	VERT( 0x42d164df, 0xc207cbb1, 0xc1ad5a89 ),
	NORM( 0x339c6928, 0xbee0723a, 0xbf66175b ),
	VERT( 0x42d164df, 0xc207cbb1, 0xc1ad5a89 ),
	NORM( 0x34c90562, 0xbee07231, 0xbf66175d ),
	VERT( 0x42c5fef6, 0xc20be3ed, 0xc1a95c04 ),
	NORM( 0xb4852deb, 0xbee07231, 0xbf66175d ),
	VERT( 0x42c5fef6, 0xc20be3ed, 0xc1a95c04 ),
	NORM( 0x340854c2, 0xbee0723d, 0xbf66175a ),
	VERT( 0x42c5fef6, 0xc20be3ed, 0xc1a95c04 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5fef6, 0xc20be3ed, 0xc1a95c04 ),
	NORM( 0xbf7fffd9, 0xbaff109d, 0x3a78ce8c ),
	VERT( 0x42c5fef6, 0xc2084b8f, 0xc1acddce ),
	NORM( 0x340854c2, 0xbee0723c, 0xbf66175b ),
	VERT( 0x42c5fef6, 0xc2084b8f, 0xc1acddce ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5fef6, 0xc2084b8f, 0xc1acddce ),
	NORM( 0xbe48ac60, 0x3f61a134, 0xbedc1824 ),
	VERT( 0x42d164df, 0xc2043354, 0xc1b0dc51 ),
	NORM( 0x340854c2, 0xbee0723c, 0xbf66175b ),
	VERT( 0x42d164df, 0xc2043354, 0xc1b0dc51 ),
	NORM( 0x339c6928, 0xbee0723b, 0xbf66175b ),
	VERT( 0x42d164df, 0xc2043354, 0xc1b0dc51 ),
	NORM( 0xbe1f40ed, 0x3f634aa4, 0xbeddb729 ),
	VERT( 0x42c5fef6, 0xc201cb08, 0xc17fe8bf ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5fef6, 0xc201cb08, 0xc17fe8bf ),
	NORM( 0xbe2c5345, 0x3f33ecce, 0x3f30f015 ),
	VERT( 0x42c5fef6, 0xc201cb08, 0xc17fe8bf ),
	NORM( 0xbf7fffd9, 0xbaff109e, 0x3a78ce8e ),
	VERT( 0x42c5fef6, 0xc1ff9f31, 0xc18a1376 ),
	NORM( 0xbe6475dc, 0x3f7945c0, 0xbd3b5941 ),
	VERT( 0x42c5fef6, 0xc1ff9f31, 0xc18a1376 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42d164df, 0xc1f91b51, 0xc17e81ba ),
	NORM( 0xbdfea3f7, 0x3f3b74ce, 0x3f2b6a29 ),
	VERT( 0x42d164df, 0xc1f52478, 0xc1895ff2 ),
	NORM( 0xbe2db62f, 0x3f7c20ac, 0xbd109918 ),
	VERT( 0x42db3fa6, 0xc1f45e57, 0xc17fdcb1 ),
	NORM( 0xbd4baa13, 0x3f3d2dec, 0x3f2c00d8 ),
	VERT( 0x42d164df, 0xc219e886, 0xc1f7a05a ),
	NORM( 0x34c89f05, 0xbee07231, 0xbf66175d ),
	VERT( 0x42d164df, 0xc219e886, 0xc1f7a05a ),
	NORM( 0xb9b737bb, 0xbedfa411, 0xbf664984 ),
	VERT( 0x42d164df, 0xc219e886, 0xc1f7a05a ),
	NORM( 0xbde2bc70, 0x3e9cbfca, 0xbf720dd5 ),
	VERT( 0x42c5fef6, 0xc21e00c2, 0xc1f3a1d6 ),
	NORM( 0xbe0ca8d0, 0x3e9c3933, 0xbf713e1b ),
	VERT( 0x42c5fef6, 0xc21e00c2, 0xc1f3a1d6 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5fef6, 0xc21e00c2, 0xc1f3a1d6 ),
	NORM( 0xbf7fffd9, 0xbaff10a0, 0x3a78ce9c ),
	VERT( 0x42c5fef6, 0xc21e00c2, 0xc1f3a1d6 ),
	NORM( 0xb9b737ba, 0xbedfa411, 0xbf664984 ),
	VERT( 0x42c5fef6, 0xc218b7c9, 0xc1f035af ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5fef6, 0xc218b7c9, 0xc1f035af ),
	NORM( 0xbe37a13b, 0x3f2134cd, 0xbf417f35 ),
	VERT( 0x42d164df, 0xc2149f8e, 0xc1f43432 ),
	NORM( 0xbe11e671, 0x3f269ffb, 0xbf3ee5a9 ),
	VERT( 0x42c5fef6, 0xc20d8071, 0xc1aff794 ),
	NORM( 0xbf7fffd9, 0xbaff10a0, 0x3a78ce9c ),
	VERT( 0x42c5fef6, 0xc20d8071, 0xc1aff794 ),
	NORM( 0xb489b1de, 0x3ee07221, 0x3f661761 ),
	VERT( 0x42c5fef6, 0xc20d8071, 0xc1aff794 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5fef6, 0xc20d8071, 0xc1aff794 ),
	NORM( 0x00000000, 0x3ee07227, 0x3f661760 ),
	VERT( 0x42c5fef6, 0xc209e813, 0xc1b3795d ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5fef6, 0xc209e813, 0xc1b3795d ),
	NORM( 0xb489b1de, 0x3ee07222, 0x3f661761 ),
	VERT( 0x42c5fef6, 0xc209e813, 0xc1b3795d ),
	NORM( 0xbe48ac78, 0x3f61a139, 0xbedc180b ),
	VERT( 0x42d164df, 0xc2096835, 0xc1b3f617 ),
	NORM( 0x00000000, 0x3ee07225, 0x3f661760 ),
	VERT( 0x42d164df, 0xc2096835, 0xc1b3f617 ),
	NORM( 0xb489b1de, 0x3ee07222, 0x3f661761 ),
	VERT( 0x42d164df, 0xc2096835, 0xc1b3f617 ),
	NORM( 0x350e48ab, 0x3ee07254, 0x3f661755 ),
	VERT( 0x42d164df, 0xc2096835, 0xc1b3f617 ),
	NORM( 0x00000000, 0x3ee07228, 0x3f661760 ),
	VERT( 0x42d164df, 0xc205cfd8, 0xc1b777df ),
	NORM( 0xbe1f4103, 0x3f634aa9, 0xbeddb70e ),
	VERT( 0x42d164df, 0xc205cfd8, 0xc1b777df ),
	NORM( 0x343dfa71, 0x3ee0723d, 0x3f66175a ),
	VERT( 0x42db3fa6, 0xc217dc68, 0xc1f99f9b ),
	NORM( 0x34c89f06, 0xbee07231, 0xbf66175d ),
	VERT( 0x42db3fa6, 0xc217dc68, 0xc1f99f9b ),
	NORM( 0xb859e2de, 0xbedfc2df, 0xbf66420a ),
	VERT( 0x42db3fa6, 0xc217dc68, 0xc1f99f9b ),
	NORM( 0xbd58fe3c, 0x3e9d7f54, 0xbf73358e ),
	VERT( 0x42e55738, 0xc2173b25, 0xc1fa3cea ),
	NORM( 0xb859e2dd, 0xbedfc2df, 0xbf66420a ),
	VERT( 0x42e55738, 0xc2173b25, 0xc1fa3cea ),
	NORM( 0xbcc55630, 0x3e9dac45, 0xbf737b06 ),
	VERT( 0x42c5fef6, 0xc21e3cd2, 0xc197765c ),
	NORM( 0xb4852deb, 0xbee07231, 0xbf66175d ),
	VERT( 0x42c5fef6, 0xc21e3cd2, 0xc197765c ),
	NORM( 0xbf7fffd9, 0xbaff109e, 0x3a78ce8e ),
	VERT( 0x42c60a4e, 0xc2142867, 0xc15b4ae8 ),
	NORM( 0xbddd4dc9, 0x3edfcdef, 0x3f649464 ),
	VERT( 0x42c60a4e, 0xc2142867, 0xc15b4ae8 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc2142867, 0xc15b4ae8 ),
	NORM( 0xbf7fffd9, 0xbaff109d, 0x3a78ce8c ),
	VERT( 0x42d164df, 0xc21e3cd2, 0xc197765c ),
	NORM( 0x34c90561, 0xbee07231, 0xbf66175d ),
	VERT( 0x42d164df, 0xc21e3cd2, 0xc197765c ),
	NORM( 0xb4852deb, 0xbee07231, 0xbf66175d ),
	VERT( 0x42d1623a, 0xc21313a9, 0xc1526d56 ),
	NORM( 0xbd9340c8, 0x3ee03f93, 0x3f6566f6 ),
	VERT( 0x42db3fa6, 0xc21e3cd2, 0xc197765c ),
	NORM( 0x34c90561, 0xbee07231, 0xbf66175d ),
	VERT( 0x42db3f60, 0xc212c4b6, 0xc14fe5df ),
	NORM( 0xbcd35270, 0x3ee07e6a, 0x3f65fc1e ),
	VERT( 0x42c60a4e, 0xc2307aef, 0xc1e1c90d ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc2307aef, 0xc1e1c90d ),
	NORM( 0xbf7fffd9, 0xbaff10a0, 0x3a78ce9c ),
	VERT( 0x42c60a4e, 0xc2307aef, 0xc1e1c90d ),
	NORM( 0xb8f15adc, 0xbee02e56, 0xbf6627e6 ),
	VERT( 0x42c5fef6, 0xc21fd956, 0xc19e11ec ),
	NORM( 0x00000000, 0x3ee07227, 0x3f661760 ),
	VERT( 0x42c5fef6, 0xc21fd956, 0xc19e11ec ),
	NORM( 0xbf7fffd9, 0xbaff10a0, 0x3a78ce9b ),
	VERT( 0x42d164df, 0xc23059a6, 0xc1e1bc2e ),
	NORM( 0x34c89f06, 0xbee07231, 0xbf66175d ),
	VERT( 0x42d164df, 0xc23059a6, 0xc1e1bc2e ),
	NORM( 0xb9b737ba, 0xbedfa411, 0xbf664984 ),
	VERT( 0x42d164df, 0xc21fd956, 0xc19e11ec ),
	NORM( 0x00000000, 0x3ee07227, 0x3f661760 ),
	VERT( 0x42d164df, 0xc21fd956, 0xc19e11ec ),
	NORM( 0x00000000, 0x3ee07225, 0x3f661760 ),
	VERT( 0x42db3fa6, 0xc23059a6, 0xc1e1bc2e ),
	NORM( 0x34c89f06, 0xbee07231, 0xbf66175d ),
	VERT( 0x42db3fa6, 0xc23059a6, 0xc1e1bc2e ),
	NORM( 0xb859e2df, 0xbedfc2e0, 0xbf66420a ),
	VERT( 0x42db3fa6, 0xc21fd956, 0xc19e11ec ),
	NORM( 0x00000000, 0x3ee07225, 0x3f661760 ),
	VERT( 0x42e55ba6, 0xc22ede31, 0xc1e35bab ),
	NORM( 0x39bcb604, 0xbee0574a, 0xbf661deb ),
	VERT( 0x42e55ba6, 0xc27dedb7, 0xc1963cb7 ),
	NORM( 0xb928374c, 0xbe4a2611, 0xbf7af64e ),
	VERT( 0x42c46dcc, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0x00000000, 0xbee07230, 0xbf66175e ),
	VERT( 0x42c46dcc, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0xb6b77952, 0xbf661770, 0x3ee071e3 ),
	VERT( 0x42c46dcc, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0x3f7ffff9, 0xba58280b, 0x39d2da3e ),
	VERT( 0x42c46dcc, 0xc2b53780, 0x41478d45 ),
	NORM( 0x3f7ffff9, 0xba58280b, 0x39d2da3e ),
	VERT( 0x42c46dcc, 0xc2b53780, 0x41478d45 ),
	NORM( 0xb8c26155, 0x3ee07234, 0x3f66175c ),
	VERT( 0x42c46dcc, 0xc2b53780, 0x41478d45 ),
	NORM( 0xb6b77952, 0xbf661770, 0x3ee071e3 ),
	VERT( 0x42bc821a, 0xc2b53780, 0x41478d45 ),
	NORM( 0xb6b77953, 0xbf661770, 0x3ee071e2 ),
	VERT( 0x42bc821a, 0xc2b53780, 0x41478d45 ),
	NORM( 0xbe41453b, 0x3edc7c0c, 0x3f61f02b ),
	VERT( 0x42bb7720, 0xc2b56651, 0x41448d5c ),
	NORM( 0xb6b77953, 0xbf661770, 0x3ee071e4 ),
	VERT( 0x42bb7720, 0xc2b56651, 0x41448d5c ),
	NORM( 0xbf0cdeda, 0x3ebb7f18, 0x3f4019d7 ),
	VERT( 0x42b9be9c, 0xc2b6276c, 0x41382de5 ),
	NORM( 0xb6b77953, 0xbf661770, 0x3ee071e3 ),
	VERT( 0x42b9be9c, 0xc2b6276c, 0x41382de5 ),
	NORM( 0xbf6b231e, 0x3e31684b, 0x3eb5fb8d ),
	VERT( 0x42b97bde, 0xc2ba562d, 0x40e725eb ),
	NORM( 0xb6b77953, 0xbf661770, 0x3ee071e4 ),
	VERT( 0x42b97bde, 0xc2ba562d, 0x40e725eb ),
	NORM( 0x3f7ccd82, 0xbd8d0f7c, 0xbe111947 ),
	VERT( 0x42b97bde, 0xc2ba562d, 0x40e725eb ),
	NORM( 0xbf7fe61b, 0x3c464593, 0x3ccfd446 ),
	VERT( 0x42b97bde, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0xb6b77952, 0xbf661770, 0x3ee071e3 ),
	VERT( 0x42b97bde, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0x3f7ccd82, 0xbd8d0f7c, 0xbe111947 ),
	VERT( 0x42b97bde, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0x00000000, 0xbee07230, 0xbf66175e ),
	VERT( 0x42c46b2a, 0xc2c2382f, 0xbf5b9343 ),
	NORM( 0x3f7fffc1, 0xbb0da556, 0xbadc0045 ),
	VERT( 0x42c46b2a, 0xc2c2382f, 0xbf5b9343 ),
	NORM( 0xbf043861, 0xbef569f6, 0xbf35a677 ),
	VERT( 0x42c46b2a, 0xc2c2382f, 0xbf5b9343 ),
	NORM( 0xba5db01b, 0xbf66175d, 0x3ee07218 ),
	VERT( 0x42b975ca, 0xc2bb213b, 0x40cd20d9 ),
	NORM( 0xba5db01b, 0xbf66175d, 0x3ee07218 ),
	VERT( 0x42b975ca, 0xc2bb213b, 0x40cd20d9 ),
	NORM( 0xba646ad2, 0x3ee0c740, 0x3f660293 ),
	VERT( 0x42b975ca, 0xc2bb213b, 0x40cd20d9 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42b975ca, 0xc2be4c56, 0x404a6132 ),
	NORM( 0xba5db01a, 0xbf66175d, 0x3ee07218 ),
	VERT( 0x42b975ca, 0xc2be4c56, 0x404a6132 ),
	NORM( 0xbf7d33d1, 0xbda9046f, 0xbdfa3531 ),
	VERT( 0x42ba144a, 0xc2bf1d0d, 0x4014e3a4 ),
	NORM( 0xba5db01a, 0xbf66175d, 0x3ee07218 ),
	VERT( 0x42ba144a, 0xc2bf1d0d, 0x4014e3a4 ),
	NORM( 0xbf58fda0, 0xbe9811fd, 0xbee11e92 ),
	VERT( 0x42bc95c4, 0xc2c02009, 0x3fa50769 ),
	NORM( 0xbf1a2bc0, 0xbee4cc6c, 0xbf295a25 ),
	VERT( 0x42bc95c4, 0xc2c02009, 0x3fa50769 ),
	NORM( 0xba5db01b, 0xbf66175d, 0x3ee07218 ),
	VERT( 0x42e568db, 0xc2801615, 0xc189b1dd ),
	NORM( 0xbb467912, 0xbf661717, 0x3ee071f2 ),
	VERT( 0x42c8aa74, 0xc265d4ac, 0xc073c64b ),
	NORM( 0xbb467912, 0xbf661717, 0x3ee071f2 ),
	VERT( 0x42c8aa78, 0xc280020e, 0xc189d8f0 ),
	NORM( 0xbb467911, 0xbf661717, 0x3ee071f1 ),
	VERT( 0x42c60a4e, 0xc27fe433, 0xc194528f ),
	NORM( 0xb9c38720, 0xbed68c5b, 0xbf687095 ),
	VERT( 0x42c60a4e, 0xc27fe433, 0xc194528f ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc26391aa, 0xc080bbda ),
	NORM( 0xbc2ca4ff, 0xbed09905, 0x3f69c63f ),
	VERT( 0x42c60a4e, 0xc26391aa, 0xc080bbda ),
	NORM( 0xbddd4dd0, 0x3edf21bc, 0x3f64be76 ),
	VERT( 0x42c60a4e, 0xc26391aa, 0xc080bbda ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42d1623a, 0xc26131ff, 0xc06817ea ),
	NORM( 0xbd954c58, 0x3edfd94b, 0x3f657aa5 ),
	VERT( 0x42d1623a, 0xc26131ff, 0xc06817ea ),
	NORM( 0xbbba4f76, 0xbed4be2b, 0x3f68d989 ),
	VERT( 0x42db3f60, 0xc26070ae, 0xc061768e ),
	NORM( 0xbcea31b2, 0x3ee05ab1, 0x3f65ff4b ),
	VERT( 0x42db3f60, 0xc26070ae, 0xc061768e ),
	NORM( 0xba15587b, 0xbed75c0e, 0x3f68408a ),
	VERT( 0x42e568db, 0xc280534a, 0xc193b344 ),
	NORM( 0xb98b7253, 0xbed636e4, 0xbf68844a ),
	VERT( 0x42e568db, 0xc2811e25, 0xc1922782 ),
	NORM( 0x33112db3, 0xbee07203, 0xbf661768 ),
	VERT( 0x42c613dc, 0xc2810a1e, 0xc1924e95 ),
	NORM( 0x33112db3, 0xbee07204, 0xbf661768 ),
	VERT( 0x42c613dc, 0xc280534a, 0xc193b344 ),
	NORM( 0xba1828bf, 0xbed0fec8, 0xbf69b37e ),
	VERT( 0x42c613d6, 0xc265d4ac, 0xc073c64b ),
	NORM( 0x328d1c2c, 0x3ee071dc, 0x3f661772 ),
	VERT( 0x42c613d6, 0xc2646704, 0xc07eebc3 ),
	NORM( 0xbbc3c9ca, 0x3b881919, 0x3f7ffe44 ),
	VERT( 0x42e568db, 0xc265fcbc, 0xc0728dab ),
	NORM( 0x379b0baf, 0xbf661786, 0x3ee0718b ),
	VERT( 0x42e568db, 0xc265fcbc, 0xc0728dab ),
	NORM( 0xb21dd097, 0x3ee071e5, 0x3f661770 ),
	VERT( 0x42d1623a, 0xc26473c5, 0xc07f57bf ),
	NORM( 0xbbc265bf, 0xbed48854, 0x3f68e5b8 ),
	VERT( 0x42db3f60, 0xc264746c, 0xc07f6d14 ),
	NORM( 0xba19743f, 0xbed761bb, 0x3f683f39 ),
	VERT( 0x42c489d6, 0xc21e4801, 0xc1971e21 ),
	NORM( 0x3f7ffff9, 0xba587837, 0x39d32886 ),
	VERT( 0x42c489d6, 0xc21e4801, 0xc1971e21 ),
	NORM( 0x398b31f8, 0xbee07911, 0xbf6615af ),
	VERT( 0x42bb342c, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x00000000, 0xbf661739, 0x3ee072c6 ),
	VERT( 0x42bb342c, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42bb342c, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0xba446abe, 0xbee0722e, 0xbf661759 ),
	VERT( 0x42bb342c, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0xbf34f027, 0x3e9f1005, 0x3f22b3e6 ),
	VERT( 0x42bb342c, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x00000000, 0xbf661739, 0x3ee072c6 ),
	VERT( 0x42bb342c, 0xc21e40af, 0xc1971240 ),
	NORM( 0xbf3b29c8, 0x3e997452, 0x3f1ce76e ),
	VERT( 0x42bb342c, 0xc21e40af, 0xc1971240 ),
	NORM( 0xbf32a4e8, 0x3ea12f4a, 0x3f24b402 ),
	VERT( 0x42c47de8, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0xbf5c39be, 0x3e49d6dc, 0xbef0c0ca ),
	VERT( 0x42c47de8, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x3f7fffc1, 0xbb0da556, 0xbadc0045 ),
	VERT( 0x42c47de8, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x3f7fffcd, 0x3b209fb3, 0xb993a204 ),
	VERT( 0x42c47de8, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x00000000, 0xbf661739, 0x3ee072c6 ),
	VERT( 0x42c47de8, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0xba5db01b, 0xbf66175d, 0x3ee07217 ),
	VERT( 0x42c499f4, 0xc21e40af, 0xc1971240 ),
	NORM( 0x3aec9bc3, 0x3ee06818, 0x3f6619b5 ),
	VERT( 0x42c499f4, 0xc21e40af, 0xc1971240 ),
	NORM( 0x3f7fffeb, 0xba9cf5c5, 0x3a886661 ),
	VERT( 0x42c47de8, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x3f7fffcd, 0x3b209fb3, 0xb993a204 ),
	VERT( 0x42c47de8, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x00000000, 0xbf661739, 0x3ee072c6 ),
	VERT( 0x42c47de8, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x3a6c077f, 0x3ee0d8f6, 0x3f65fe3f ),
	VERT( 0x42c4902e, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x00000000, 0xbf0f511c, 0xbf541f8f ),
	VERT( 0x42c4902e, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x00000000, 0xbf66175e, 0x3ee0722f ),
	VERT( 0x42c4902e, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c4902e, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x00000000, 0xbee0722f, 0xbf66175e ),
	VERT( 0x42c4902e, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c4902e, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722e ),
	VERT( 0x42c4902e, 0xc2028864, 0xc1834b09 ),
	NORM( 0x00000000, 0x3ee0722f, 0x3f66175e ),
	VERT( 0x42c4902e, 0xc2028864, 0xc1834b09 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c4902e, 0xc2028864, 0xc1834b09 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722e ),
	VERT( 0x42c4902e, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0x00000000, 0xbf66175e, 0x3ee0722f ),
	VERT( 0x42c4902e, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0x00000000, 0x3ee07226, 0x3f661760 ),
	VERT( 0x42c4902e, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5ee62, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x00000000, 0xbf66175e, 0x3ee0722f ),
	VERT( 0x42c5ee62, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5ee62, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x00000000, 0xbf0f511c, 0xbf541f8f ),
	VERT( 0x42c5ee62, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x00000000, 0xbee0722f, 0xbf66175e ),
	VERT( 0x42c5ee62, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722e ),
	VERT( 0x42c5ee62, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5ee62, 0xc2028864, 0xc1834b09 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722e ),
	VERT( 0x42c5ee62, 0xc2028864, 0xc1834b09 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5ee62, 0xc2028864, 0xc1834b09 ),
	NORM( 0x00000000, 0x3ee0722f, 0x3f66175e ),
	VERT( 0x42c5ee62, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0x3f3504f4, 0x3e9eb50b, 0x3f22b2f9 ),
	VERT( 0x42c5ee62, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0x00000000, 0xbf66175e, 0x3ee0722f ),
	VERT( 0x42c613dc, 0xc2a2fd84, 0x40b56705 ),
	NORM( 0xbf800000, 0xb726c5a8, 0xb7aaf779 ),
	VERT( 0x42c613dc, 0xc2a2fd84, 0x40b56705 ),
	NORM( 0xbf800000, 0xb612ed52, 0xb62b0aea ),
	VERT( 0x42e568db, 0xc265300b, 0xc0c491ca ),
	NORM( 0x00000000, 0x3f660356, 0xbee0c441 ),
	VERT( 0x42c613d6, 0xc265300b, 0xc0c491ca ),
	NORM( 0xbf35099f, 0x3f22a08b, 0xbe9eeb46 ),
	VERT( 0x42e568db, 0xc2ae3c1c, 0xc0bea615 ),
	NORM( 0xbb47fc40, 0x3f6616c7, 0xbee07334 ),
	VERT( 0x42c8aa78, 0xc2ae5023, 0xc0be09c8 ),
	NORM( 0xbb47fc40, 0x3f6616c7, 0xbee07335 ),
	VERT( 0x42c8aa74, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0xbb47fc40, 0x3f6616c7, 0xbee07335 ),
	VERT( 0x42c8b3e4, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0x3f3504e6, 0x3e9eb51f, 0x3f22b304 ),
	VERT( 0x42c8b3e4, 0xc2a2fd84, 0x40b56705 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c8b3e4, 0xc2652c45, 0xc0c453e4 ),
	NORM( 0x3f3504f3, 0x3f22b2f8, 0xbe9eb512 ),
	VERT( 0x42c8b3e4, 0xc261a213, 0xc08a4416 ),
	NORM( 0x3f13cd3a, 0x3f45a2a0, 0x3e881a40 ),
	VERT( 0x42c613d6, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0x00000000, 0x3ee07230, 0x3f66175e ),
	VERT( 0x42c613d6, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0xb35cb534, 0x3ee072a0, 0x3f661742 ),
	VERT( 0x42c613d6, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0xbf800000, 0xb6bbab90, 0xb74063ea ),
	VERT( 0x42c613d6, 0xc261a213, 0xc08a4416 ),
	NORM( 0xbf800000, 0xb726c5a8, 0xb7aaf779 ),
	VERT( 0x42c613d6, 0xc261a213, 0xc08a4416 ),
	NORM( 0x00000000, 0x3f720d5a, 0x3ea6b1c3 ),
	VERT( 0x42c613dc, 0xc2652c45, 0xc0c453e4 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722f ),
	VERT( 0x42c613dc, 0xc2652c45, 0xc0c453e4 ),
	NORM( 0xbf800000, 0xb726c5a8, 0xb7aaf779 ),
	VERT( 0x42e568db, 0xc2af5833, 0xc0dfe05c ),
	NORM( 0x38d4d8c7, 0xbee06b2c, 0xbf661913 ),
	VERT( 0x42c613dc, 0xc2af5833, 0xc0dfe05c ),
	NORM( 0xbf800000, 0xb5a7301f, 0xb62b6462 ),
	VERT( 0x42c613dc, 0xc2af5833, 0xc0dfe05c ),
	NORM( 0xbee4d131, 0xbec8bbe8, 0xbf4dd8ee ),
	VERT( 0x42c613dc, 0xc27de1a3, 0xc19666d1 ),
	NORM( 0xbf13bcb7, 0x3e881804, 0xbf45af5a ),
	VERT( 0x42c60a4e, 0xc2b06a40, 0xc0d70c7f ),
	NORM( 0xbf7fb9bb, 0x3d2a6f7d, 0xbca64461 ),
	VERT( 0x42c60a4e, 0xc2b06a40, 0xc0d70c7f ),
	NORM( 0x318f1ee7, 0xbee6c945, 0xbf648495 ),
	VERT( 0x42e55ba6, 0xc2b1657d, 0xc0cf63e5 ),
	NORM( 0x318e9cf9, 0xbee6cf17, 0xbf64831d ),
	VERT( 0x42c60a4e, 0xc2a240fb, 0x40f981e1 ),
	NORM( 0x39ea0228, 0x3f6fded3, 0x3eb2dd73 ),
	VERT( 0x42c60a4e, 0xc2a240fb, 0x40f981e1 ),
	NORM( 0xbf7fc84f, 0x3d17bcee, 0xbc9406e2 ),
	VERT( 0x42c60a4e, 0xc2a240fb, 0x40f981e1 ),
	NORM( 0xbddd4db6, 0x3edf21cd, 0x3f64be72 ),
	VERT( 0x42d1623a, 0xc2a25c14, 0x41082423 ),
	NORM( 0xbd954c38, 0x3edfd934, 0x3f657aab ),
	VERT( 0x42d1623a, 0xc2a25c14, 0x41082423 ),
	NORM( 0x39a3399c, 0x3f7525a2, 0x3e937f95 ),
	VERT( 0x42e568db, 0xc2b00f07, 0xc0da4d9f ),
	NORM( 0x00000000, 0xbee6c283, 0xbf64864a ),
	VERT( 0x42c613dc, 0xc2b00f07, 0xc0da4d9f ),
	NORM( 0xbf7fbf4a, 0x3d238e8c, 0xbc9f91e3 ),
	VERT( 0x42c613dc, 0xc2b00f07, 0xc0da4d9f ),
	NORM( 0x00000000, 0xbee7023b, 0xbf647631 ),
	VERT( 0x42c613d6, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0xbf7fb199, 0x3d340460, 0xbcafa054 ),
	VERT( 0x42c613d6, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0x39ea0229, 0x3f6fded3, 0x3eb2dd74 ),
	VERT( 0x42c613d6, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0xb35cb535, 0x3ee072a0, 0x3f661742 ),
	VERT( 0x42e568db, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0xb35cb534, 0x3ee072a0, 0x3f661742 ),
	VERT( 0x42e568db, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0xb9aba0f3, 0x3f794f57, 0x3e6891f3 ),
	VERT( 0x42d1623a, 0xc2a1edfa, 0x40f497e9 ),
	NORM( 0x39a6d93e, 0x3f74e723, 0x3e951c99 ),
	VERT( 0x42db3f60, 0xc2a1ee4f, 0x40f48d3f ),
	NORM( 0xb8906c98, 0x3f7928cb, 0x3e6b235a ),
	VERT( 0x42e56172, 0xc216316e, 0xc1a7a042 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e56172, 0xc2145ad4, 0xc1a01685 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e55738, 0xc2162a68, 0xc1a78406 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e55738, 0xc2148de4, 0xc1a0e878 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5e3ee, 0xc2307854, 0xc1e20932 ),
	NORM( 0x3ae03eb4, 0xbee05266, 0xbf661f02 ),
	VERT( 0x42e54d5a, 0xc2b179ff, 0xc0cfba53 ),
	NORM( 0x3ae03eb5, 0xbee05265, 0xbf661f02 ),
	VERT( 0x42c58780, 0xc2b080c4, 0xc0d7533c ),
	NORM( 0x3ae03eb5, 0xbee05266, 0xbf661f02 ),
	VERT( 0x42e55b35, 0xc2a34751, 0x41101dd1 ),
	NORM( 0x389a6364, 0x3ee07026, 0x3f6617dd ),
	VERT( 0x42db3f60, 0xc2a35733, 0x410f1974 ),
	NORM( 0xbccb5070, 0x3ee06062, 0x3f66053f ),
	VERT( 0x42db803b, 0xc2a356cc, 0x410f1ff8 ),
	NORM( 0xbc6575f9, 0x3ee06c5f, 0x3f6611a2 ),
	VERT( 0x42db803b, 0xc2a356cc, 0x410f1ff8 ),
	NORM( 0xbc4a6c94, 0x3ee09e2d, 0x3f660711 ),
	VERT( 0x42db803b, 0xc2a356cc, 0x410f1ff8 ),
	NORM( 0xbc59e64c, 0x3ee08234, 0x3f660d02 ),
	VERT( 0x42db9b4f, 0xc2a356a7, 0x410f2262 ),
	NORM( 0xbc583cff, 0x3ee085e9, 0x3f660c34 ),
	VERT( 0x42b97bde, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x3f7ccd80, 0xbd8c7fec, 0xbe113c4b ),
	VERT( 0x42b97bde, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x398b31f8, 0xbee07911, 0xbf6615b0 ),
	VERT( 0x42b97bde, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x00000000, 0xbee07230, 0xbf66175e ),
	VERT( 0x42b97bde, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x3f7ccd82, 0xbd8d0f7b, 0xbe111947 ),
	VERT( 0x42c4724c, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x3f7ffff9, 0xba585021, 0x39d30161 ),
	VERT( 0x42c4724c, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x3f7ac7db, 0x3cb40851, 0x3e4c7c42 ),
	VERT( 0x42c4724c, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x3ebd9281, 0x3f32bb53, 0x3f1cdd61 ),
	VERT( 0x42c4724c, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x3f7fffcd, 0x3b209fb3, 0xb993a204 ),
	VERT( 0x42c4724c, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x3f7fffeb, 0xba9cf5c5, 0x3a886661 ),
	VERT( 0x42c4724c, 0xc2a3fedc, 0x41045b5d ),
	NORM( 0x3f7ffff9, 0xba585021, 0x39d30162 ),
	VERT( 0x42c4724c, 0xc2a3fedc, 0x41045b5d ),
	NORM( 0xb911c801, 0x3ee07474, 0x3f6616d0 ),
	VERT( 0x42bc8540, 0xc2a3ff07, 0x410458ac ),
	NORM( 0xbe3fbe25, 0x3edc8d79, 0x3f6200bd ),
	VERT( 0x42bb75c6, 0xc2a42e5b, 0x41015057 ),
	NORM( 0xbf0ca5a8, 0x3ebba111, 0x3f403b71 ),
	VERT( 0x42b9be5a, 0xc2a4ef34, 0x40e9ea2b ),
	NORM( 0xbf6b1ff8, 0x3e3169c6, 0x3eb60b78 ),
	VERT( 0x42b979ae, 0xc2a91dd1, 0x404171ce ),
	NORM( 0xbf7fe414, 0x3c4c7062, 0x3cd82852 ),
	VERT( 0x42b979ae, 0xc2a91dd1, 0x404171ce ),
	NORM( 0x3f7ccd80, 0xbd8c7fec, 0xbe113c4b ),
	VERT( 0x42b979ae, 0xc2a91dd1, 0x404171ce ),
	NORM( 0x3f7ccd82, 0xbd8d0f7c, 0xbe111947 ),
	VERT( 0x42bc95c4, 0xc2b0171a, 0xc0840d13 ),
	NORM( 0xbf191c21, 0xbecd47d5, 0xbf31a58b ),
	VERT( 0x42c46f62, 0xc2b22f19, 0xc0c8bc4a ),
	NORM( 0x3f7fffe0, 0xbae55377, 0xba5e1be9 ),
	VERT( 0x42c46f62, 0xc2b22f19, 0xc0c8bc4a ),
	NORM( 0xbf0494cf, 0xbeda7d2b, 0xbf3dccac ),
	VERT( 0x42c472b0, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0x3f7fffcd, 0x3b209fb3, 0xb993a204 ),
	VERT( 0x42c472b0, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0x3f7fffdf, 0xbae7be5d, 0xba67ded1 ),
	VERT( 0x42c472b0, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0xbf7788fa, 0xbe6a6c41, 0x3de62ab1 ),
	VERT( 0x42c472b0, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0x3f7fffeb, 0xba9cf5c5, 0x3a886661 ),
	VERT( 0x42c472b0, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0xbf69d3e2, 0x3ebb668d, 0xbe367768 ),
	VERT( 0x42b975ca, 0xc2a9e897, 0x400d7a14 ),
	NORM( 0xba646ad3, 0x3ee0c73f, 0x3f660293 ),
	VERT( 0x42b975ca, 0xc2a9e897, 0x400d7a14 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42b975ca, 0xc2a9e897, 0x400d7a14 ),
	NORM( 0xb97d415f, 0x3ee06a06, 0x3f66195b ),
	VERT( 0x42b975ca, 0xc2ae4367, 0xc0103caf ),
	NORM( 0xbf7c6392, 0xbdac6d11, 0xbe141f87 ),
	VERT( 0x42ba144c, 0xc2af141d, 0xc045ba09 ),
	NORM( 0xbf558a19, 0xbe8d795c, 0xbef4671c ),
	VERT( 0x42bb342c, 0xc2a9e6bc, 0x400df3de ),
	NORM( 0xbf355e9a, 0xbe9e122f, 0xbf2276ba ),
	VERT( 0x42bb342c, 0xc2a9e6bc, 0x400df3de ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42bb342c, 0xc2a9e6bc, 0x400df3de ),
	NORM( 0xba446abf, 0xbee0722e, 0xbf661759 ),
	VERT( 0x42bb342c, 0xc2a915f0, 0x40437710 ),
	NORM( 0xbf34db0f, 0x3e9f474c, 0x3f22bdd5 ),
	VERT( 0x42bb342c, 0xc2a915f0, 0x40437710 ),
	NORM( 0xbf34f018, 0x3e9f1013, 0x3f22b3f4 ),
	VERT( 0x42c4902e, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0x00000000, 0xbf0015db, 0xbf5da737 ),
	VERT( 0x42c4902e, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c4902e, 0xc2a4795b, 0x40f90439 ),
	NORM( 0x00000000, 0x3ee0722a, 0x3f66175f ),
	VERT( 0x42c4902e, 0xc2a4795b, 0x40f90439 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5ee62, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0x00000000, 0xbf0015db, 0xbf5da737 ),
	VERT( 0x42c5ee62, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5ee62, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c5ee62, 0xc2a4795b, 0x40f90439 ),
	NORM( 0x3ee4f92b, 0x3ec8c026, 0x3f4dccc8 ),
	VERT( 0x42c5ee62, 0xc2a4795b, 0x40f90439 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc2b2324e, 0xc0c92592 ),
	NORM( 0xbc07c5c3, 0xbf006b9f, 0xbf5d72f8 ),
	VERT( 0x42c60a4e, 0xc2b2324e, 0xc0c92592 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc2b2324e, 0xc0c92592 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc2a40909, 0x4103b46a ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc2a40909, 0x4103b46a ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x42c60a4e, 0xc2a40909, 0x4103b46a ),
	NORM( 0xbddd4db6, 0x3edf21cc, 0x3f64be72 ),
	VERT( 0x42c60a4e, 0xc2a40909, 0x4103b46a ),
	NORM( 0xbddd4d4d, 0x3edf21bf, 0x3f64be77 ),
	VERT( 0x42d1623a, 0xc2a37eac, 0x410c91fc ),
	NORM( 0xbd11f844, 0x3ee04db6, 0x3f65f1f2 ),
	VERT( 0x42d1623a, 0xc2a37eac, 0x410c91fc ),
	NORM( 0xbd933db7, 0x3edfdd61, 0x3f657ef7 ),
	VERT( 0x42d1623a, 0xc2a37eac, 0x410c91fc ),
	NORM( 0xbddd4d4d, 0x3edf21bf, 0x3f64be77 ),
	VERT( 0x42e53f0d, 0xc2b57091, 0xc0afd671 ),
	NORM( 0xbb2d0db9, 0xbf01fe7e, 0xbf5c89c4 ),
	VERT( 0x43024ddf, 0xc21e3cd2, 0xc197765c ),
	NORM( 0x3f7fff46, 0xbb46a985, 0x3b6be919 ),
	VERT( 0x43024ddf, 0xc20be3ed, 0xc1a95c04 ),
	NORM( 0x3f7fff46, 0xbb46a984, 0x3b6be91a ),
	VERT( 0x43024ddf, 0xc201cb08, 0xc17fe8bf ),
	NORM( 0x3f7fff46, 0xbb46a984, 0x3b6be919 ),
	VERT( 0x43024833, 0xc2142867, 0xc15b4ae8 ),
	NORM( 0x3f7fff46, 0xbb46a984, 0x3b6be91a ),
	VERT( 0x43025629, 0xc2028864, 0xc1834b09 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43025629, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43025629, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43025629, 0xc2a4795b, 0x40f90439 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024ddf, 0xc20be3ed, 0xc1a95c04 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024ddf, 0xc2084b8f, 0xc1acddce ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024ddf, 0xc1ff9f31, 0xc18a1376 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024ddf, 0xc201cb08, 0xc17fe8bf ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43025629, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722e ),
	VERT( 0x43025629, 0xc2028864, 0xc1834b09 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722e ),
	VERT( 0x43030543, 0xc2028864, 0xc1834b09 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722e ),
	VERT( 0x43030543, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee0722e ),
	VERT( 0x43024833, 0xc2307aef, 0xc1e1c90d ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc2142867, 0xc15b4ae8 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc26391aa, 0xc080bbda ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc27fe433, 0xc194528f ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43030543, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0x00000000, 0x3ee07226, 0x3f661760 ),
	VERT( 0x43030543, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0x00000000, 0xbf66175e, 0x3ee0722f ),
	VERT( 0x43030543, 0xc2a4795b, 0x40f90439 ),
	NORM( 0x00000000, 0x3ee0722a, 0x3f66175f ),
	VERT( 0x43025629, 0xc2a4795b, 0x40f90439 ),
	NORM( 0xbee4f92b, 0x3ec8c026, 0x3f4dccc8 ),
	VERT( 0x43025629, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0xbf3504f4, 0x3e9eb50b, 0x3f22b2f9 ),
	VERT( 0x43025629, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0x00000000, 0xbf66175e, 0x3ee0722f ),
	VERT( 0x43025629, 0xc2028864, 0xc1834b09 ),
	NORM( 0x00000000, 0x3ee0722f, 0x3f66175e ),
	VERT( 0x43030543, 0xc2028864, 0xc1834b09 ),
	NORM( 0x00000000, 0x3ee0722f, 0x3f66175e ),
	VERT( 0x43025629, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43025629, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x00000000, 0xbf66175e, 0x3ee0722f ),
	VERT( 0x43025629, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc2a240fb, 0x40f981e1 ),
	NORM( 0x3f7fc871, 0x3d178e58, 0xbc93d774 ),
	VERT( 0x43024833, 0xc2a40909, 0x4103b46a ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc2a40909, 0x4103b46a ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc2b2324e, 0xc0c92592 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc2b2324e, 0xc0c92592 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc2b06a40, 0xc0d70c7f ),
	NORM( 0x3f7fb9e6, 0x3d2a3b2b, 0xbca60f1b ),
	VERT( 0x43024833, 0xc2c23b8d, 0xbf5ea17f ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024833, 0xc2b541fd, 0x4146e789 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43030543, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43030543, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x00000000, 0xbf66175e, 0x3ee0722f ),
	VERT( 0x4302436d, 0xc2a2fd84, 0x40b56705 ),
	NORM( 0x3f800000, 0xb6de5ce7, 0xb763f4ac ),
	VERT( 0x4302436d, 0xc2652c45, 0xc0c453e4 ),
	NORM( 0x3f800000, 0xb6de5ce6, 0xb763f4ac ),
	VERT( 0x4302436f, 0xc261a213, 0xc08a4416 ),
	NORM( 0x3f800000, 0xb6de5ce6, 0xb763f4ac ),
	VERT( 0x4302436f, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0x3f800000, 0xb67a3a28, 0xb70042a0 ),
	VERT( 0x4302436d, 0xc2b00f07, 0xc0da4d9f ),
	NORM( 0x3f7fbf72, 0x3d235c8b, 0xbc9f5dd7 ),
	VERT( 0x4302436d, 0xc2af5833, 0xc0dfe05c ),
	NORM( 0x3f800000, 0xb55eeb21, 0xb5e485c4 ),
	VERT( 0x4302436f, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0x3f7fb1ca, 0x3d33cd4f, 0xbcaf673c ),
	VERT( 0x4303086f, 0xc21e4801, 0xc1971e21 ),
	NORM( 0xbf7fffee, 0xba444872, 0x3aa54066 ),
	VERT( 0x4303086f, 0xc21e4801, 0xc1971e21 ),
	NORM( 0xbaeb80d7, 0x3ee07215, 0x3f661746 ),
	VERT( 0x4303086f, 0xc21e4801, 0xc1971e21 ),
	NORM( 0xb9c1437d, 0xbee0722d, 0xbf66175d ),
	VERT( 0x4303086f, 0xc21e4801, 0xc1971e21 ),
	NORM( 0xbf800000, 0x38dc6240, 0xb856fad3 ),
	VERT( 0x4303086f, 0xc21e4801, 0xc1971e21 ),
	NORM( 0x00000000, 0xbee075a3, 0xbf661686 ),
	VERT( 0x43031434, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0xbf7ffff9, 0xba58802b, 0x39d33033 ),
	VERT( 0x43031434, 0xc2a3fedc, 0x41045b5d ),
	NORM( 0xbf7ffff9, 0xba588029, 0x39d33035 ),
	VERT( 0x43031675, 0xc2b53780, 0x41478d45 ),
	NORM( 0xbf7ffff9, 0xba58881d, 0x39d337f4 ),
	VERT( 0x43031675, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0xbf7ffff9, 0xba58881d, 0x39d337f4 ),
	VERT( 0x43030543, 0xc2028864, 0xc1834b09 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43030543, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43030543, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43030543, 0xc2a4795b, 0x40f90439 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43030543, 0xc2b5af6f, 0x413faa01 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x43030bfa, 0xc215d095, 0xc1694f47 ),
	NORM( 0xbf7ffff0, 0x3ab56091, 0x389be740 ),
	VERT( 0x43030bfa, 0xc2025f39, 0xc17d25ec ),
	NORM( 0xbf7fffe3, 0x3ae278b4, 0x3a2a91bc ),
	VERT( 0x43030bfa, 0xc200490c, 0xc189a7f2 ),
	NORM( 0xbf7fffe3, 0x3ae278b5, 0x3a2a91bc ),
	VERT( 0x43024833, 0xc2a240fb, 0x40f981e1 ),
	NORM( 0x3c2caa1a, 0x3f786dc3, 0x3e76f629 ),
	VERT( 0x4302436f, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0x3c2caa1a, 0x3f786dc3, 0x3e76f628 ),
	VERT( 0x42f93879, 0xc2a1edfa, 0x40f497e9 ),
	NORM( 0x3bc26475, 0x3f78f308, 0x3e6e97e0 ),
	VERT( 0x42f93879, 0xc2a25c14, 0x41082423 ),
	NORM( 0x3bba4d90, 0x3f78fa02, 0x3e6e24eb ),
	VERT( 0x42ef5b54, 0xc2a1ee4f, 0x40f48d3f ),
	NORM( 0x3a195937, 0x3f795065, 0x3e687fc4 ),
	VERT( 0x42ef5b54, 0xc2a26dca, 0x410b8ab9 ),
	NORM( 0x3a153f03, 0x3f794faf, 0x3e688bf7 ),
	VERT( 0x42e531d8, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0xb92cf455, 0x3f792e25, 0x3e6ac888 ),
	VERT( 0x42e55ba6, 0xc2a27a82, 0x410cfea9 ),
	NORM( 0xb9806e04, 0x3f793e8a, 0x3e69b16b ),
	VERT( 0x42e55ba6, 0xc2a27a82, 0x410cfea9 ),
	NORM( 0x38c56c0d, 0x3ee07180, 0x3f661788 ),
	VERT( 0x4302436f, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0x32d07250, 0x3ee07286, 0x3f661749 ),
	VERT( 0x4302436f, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0x32d0724f, 0x3ee07285, 0x3f661749 ),
	VERT( 0x42e531d8, 0xc2a1ef3f, 0x40f5098f ),
	NORM( 0x32d07250, 0x3ee07286, 0x3f661749 ),
	VERT( 0x42ef5b54, 0xc2a26dca, 0x410b8ab9 ),
	NORM( 0x3cccd0cc, 0x3ee05e2a, 0x3f660574 ),
	VERT( 0x42ef5b54, 0xc2a26dca, 0x410b8ab9 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x4306f09a, 0xc2bde66f, 0x41552d6d ),
	NORM( 0x35100dd6, 0xbf661765, 0x3ee07213 ),
	VERT( 0x4306f09a, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x35767ecd, 0xbf661763, 0x3ee07218 ),
	VERT( 0x43081943, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x36156e7b, 0xbf66175f, 0x3ee07229 ),
	VERT( 0x43081943, 0xc2beb0f7, 0x4148335f ),
	NORM( 0x36156e7b, 0xbf66175f, 0x3ee07229 ),
	VERT( 0x43006a0d, 0xc2bd6684, 0x415d5f8d ),
	NORM( 0x34851369, 0xbf661764, 0x3ee07216 ),
	VERT( 0x43006a0d, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x3469ea57, 0xbf661764, 0x3ee07217 ),
	VERT( 0x42f85631, 0xc2bd268f, 0x416178ab ),
	NORM( 0x34acf482, 0xbf661765, 0x3ee07211 ),
	VERT( 0x42f85631, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x34b65959, 0xbf661765, 0x3ee07210 ),
	VERT( 0x42edd9a4, 0xc2bcf143, 0x4164e2db ),
	NORM( 0xb41d6095, 0xbf66176a, 0x3ee071fe ),
	VERT( 0x42edd9a4, 0xc2bcf143, 0x4164e2db ),
	NORM( 0xb50d9837, 0xbf661768, 0x3ee07206 ),
	VERT( 0x42edd9a4, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0xb50d9837, 0xbf661768, 0x3ee07206 ),
	VERT( 0x42edd9a4, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0xb41d6095, 0xbf66176a, 0x3ee071fe ),
	VERT( 0x42e54cd1, 0xc2bce699, 0x416591bb ),
	NORM( 0xb50d9837, 0xbf661768, 0x3ee07206 ),
	VERT( 0x42e54cd1, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0xb50d9837, 0xbf661768, 0x3ee07206 ),
	VERT( 0x4303bab3, 0xc2c2ba69, 0x4104409d ),
	NORM( 0xbb848742, 0xbf6616e4, 0x3ee071b2 ),
	VERT( 0x4303bab3, 0xc2c7dac1, 0x4040abc2 ),
	NORM( 0xbb1acd5c, 0xbf661736, 0x3ee071fc ),
	VERT( 0x43081943, 0xc2c54664, 0x40b86ca3 ),
	NORM( 0xbc3216c0, 0xbf6613df, 0x3ee06ed9 ),
	VERT( 0x43081943, 0xc2c2d044, 0x410495e3 ),
	NORM( 0xbc3216c0, 0xbf6613df, 0x3ee06ed8 ),
	VERT( 0x42e54cd1, 0xc2c2d044, 0x410495e3 ),
	NORM( 0x3b36411f, 0xbf66172a, 0x3ee071dc ),
	VERT( 0x42e54cd1, 0xc2c845e4, 0x402c25e8 ),
	NORM( 0x3b36411f, 0xbf66172a, 0x3ee071dd ),
	VERT( 0x42ef472f, 0xc2c8a1e1, 0x3fa835e9 ),
	NORM( 0x3dc9fbd5, 0xbf64f830, 0x3edf5a14 ),
	VERT( 0x42ef472f, 0xc2c8a1e1, 0x3fa835e9 ),
	NORM( 0x3e08321d, 0xbf6430ab, 0x3edddd42 ),
	VERT( 0x42e54f87, 0xc2c902cf, 0x3fb40795 ),
	NORM( 0x3d2cf5f3, 0xbf65e2d2, 0x3ee03ef6 ),
	VERT( 0x42e8df35, 0xc2bc5f25, 0x4169b7ab ),
	NORM( 0x3c3d4787, 0xbf682ef8, 0x3ed79311 ),
	VERT( 0x42edde56, 0xc2bbb04c, 0x416be229 ),
	NORM( 0x3dc9fab6, 0xbf64f7f5, 0x3edf5b17 ),
	VERT( 0x42edde56, 0xc2bbb04c, 0x416be229 ),
	NORM( 0x3dc9f86e, 0xbf64f83c, 0x3edf5a14 ),
	VERT( 0x42edde56, 0xc2bbb04c, 0x416be229 ),
	NORM( 0xbeb49112, 0x3eb6ca4d, 0x3f5d6e6e ),
	VERT( 0x42f92c0b, 0xc2b994a8, 0x4162f487 ),
	NORM( 0x3ea53218, 0xbf59c926, 0x3ed47151 ),
	VERT( 0x42f92c0b, 0xc2c69d84, 0x3f527f6d ),
	NORM( 0x3ea9265c, 0xbf592c01, 0x3ed3d806 ),
	VERT( 0x43024833, 0xc2c23b8d, 0xbf5ea17f ),
	NORM( 0x3edc0cfe, 0xbf4fc1a2, 0x3ecaa8cd ),
	VERT( 0x43024833, 0xc2b541fd, 0x4146e789 ),
	NORM( 0x3edc0cfe, 0xbf4fc1a2, 0x3ecaa8cd ),
	VERT( 0x42ef5b54, 0xc26070ae, 0xc061768e ),
	NORM( 0x38a44008, 0xbed62c50, 0x3f6886ba ),
	VERT( 0x42e53f0d, 0xc26017c0, 0xc05f234e ),
	NORM( 0x3a2b80e6, 0x3ee08476, 0x3f6612e4 ),
	VERT( 0x42e53f0d, 0xc26017c0, 0xc05f234e ),
	NORM( 0x3980b15a, 0xbed6ceda, 0x3f68613b ),
	VERT( 0x42e568db, 0xc2646704, 0xc07eebc3 ),
	NORM( 0x3912dd8c, 0x3c226cde, 0x3f7ffcc7 ),
	VERT( 0x42ef5b54, 0xc264746c, 0xc07f6d14 ),
	NORM( 0x3898e87f, 0xbed625f3, 0x3f688831 ),
	VERT( 0x4302436f, 0xc2646704, 0xc07eebc3 ),
	NORM( 0xb981b5e5, 0x3d803633, 0x3f7f7f73 ),
	VERT( 0x4302436f, 0xc265d4ac, 0xc073c64b ),
	NORM( 0xb31576b9, 0x3ee071ed, 0x3f66176e ),
	VERT( 0x43024833, 0xc26391aa, 0xc080bbda ),
	NORM( 0xb9ea69b7, 0xbe9a6b00, 0x3f741454 ),
	VERT( 0x42f93879, 0xc26131ff, 0xc06817ea ),
	NORM( 0xb9a2a2f1, 0xbeb9a129, 0x3f6e9504 ),
	VERT( 0x42f93879, 0xc26473c5, 0xc07f57bf ),
	NORM( 0xb9a64f82, 0xbeb80ec8, 0x3f6ee2e7 ),
	VERT( 0x42f935d4, 0xc207cbb1, 0xc1ad5a89 ),
	NORM( 0xb41f5145, 0xbee07257, 0xbf661754 ),
	VERT( 0x42f935d4, 0xc2043354, 0xc1b0dc51 ),
	NORM( 0xb41f5145, 0xbee07257, 0xbf661754 ),
	VERT( 0x43024ddf, 0xc2084b8f, 0xc1acddce ),
	NORM( 0xb41f5145, 0xbee07256, 0xbf661754 ),
	VERT( 0x43024ddf, 0xc20be3ed, 0xc1a95c04 ),
	NORM( 0xb41f5145, 0xbee07256, 0xbf661754 ),
	VERT( 0x42f93748, 0xc2096460, 0xc1b41ce9 ),
	NORM( 0x3e8f2485, 0x3f5cea8d, 0xbed77ed5 ),
	VERT( 0x42f93748, 0xc2078dc7, 0xc1ac932c ),
	NORM( 0x3e8f2485, 0x3f5cea8d, 0xbed77ed4 ),
	VERT( 0x4302479b, 0xc20d7dcb, 0xc1a6c872 ),
	NORM( 0x3e8f2485, 0x3f5cea8d, 0xbed77ed5 ),
	VERT( 0x4302479b, 0xc20f5464, 0xc1ae5230 ),
	NORM( 0x3e8f2485, 0x3f5cea8d, 0xbed77ed4 ),
	VERT( 0x4307b344, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x00000000, 0xbee09cdb, 0xbf660cf5 ),
	VERT( 0x4307b344, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4307b344, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x00000000, 0xbf661739, 0x3ee072c6 ),
	VERT( 0x4307b344, 0xc2a9e6bc, 0x400df3de ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4307b344, 0xc2a9e6bc, 0x400df3de ),
	NORM( 0x3f7f4fac, 0xbcf304f3, 0xbd894a2e ),
	VERT( 0x4307b344, 0xc2a9e6bc, 0x400df3de ),
	NORM( 0xbb8ca5e9, 0xbee06214, 0xbf661a9f ),
	VERT( 0x4307b344, 0xc2a9e6bc, 0x400df3de ),
	NORM( 0x00000000, 0xbee09cdb, 0xbf660cf5 ),
	VERT( 0x4307b344, 0xc2a915f0, 0x40437710 ),
	NORM( 0x00000000, 0x3ee0a57d, 0x3f660ad9 ),
	VERT( 0x4307b344, 0xc2a915f0, 0x40437710 ),
	NORM( 0x3f7f4fac, 0xbcf304f3, 0xbd894a2e ),
	VERT( 0x4307b344, 0xc2a915f0, 0x40437710 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4307b344, 0xc2a915f0, 0x40437710 ),
	NORM( 0xbaeb80d6, 0x3ee07215, 0x3f661746 ),
	VERT( 0x4307b344, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4307b344, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x00000000, 0x3ee0a57d, 0x3f660ad9 ),
	VERT( 0x4307b344, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x00000000, 0xbf661739, 0x3ee072c6 ),
	VERT( 0x43031403, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0x3a634c68, 0x3ee07227, 0x3f661759 ),
	VERT( 0x43031403, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0xbf7fffee, 0xba444871, 0x3aa54066 ),
	VERT( 0x43031403, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0xbf7fff97, 0xbb05e984, 0xbb3d7858 ),
	VERT( 0x43031403, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0xbb8ca5e9, 0xbee06214, 0xbf661a9f ),
	VERT( 0x43031403, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0x3f7ffff5, 0xba8ca0c1, 0x39b1a2a2 ),
	VERT( 0x43031403, 0xc2a9e84b, 0x400d8da2 ),
	NORM( 0xbf7fffd3, 0x3b124f31, 0xba282678 ),
	VERT( 0x43030e66, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x3a7c39e3, 0xbf662446, 0x3ee03d16 ),
	VERT( 0x43030e66, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0xbf7fffd3, 0x3b124f31, 0xba282678 ),
	VERT( 0x43030e66, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x00000000, 0xbf661739, 0x3ee072c6 ),
	VERT( 0x43030e66, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0xbf7fff53, 0xbad579eb, 0xbb8ad44a ),
	VERT( 0x43030e66, 0xc2bb21e4, 0x40cd7161 ),
	NORM( 0x3f6bc247, 0xbe300238, 0xbeb314e0 ),
	VERT( 0x43031434, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0xbf7fffee, 0xba444872, 0x3aa54066 ),
	VERT( 0x43031434, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0xbaeb80d7, 0x3ee07215, 0x3f661746 ),
	VERT( 0x43031434, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x00000000, 0xbee075a2, 0xbf661686 ),
	VERT( 0x43031434, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x00000000, 0x3ee0a57e, 0x3f660ad9 ),
	VERT( 0x43031434, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x00000000, 0xbee0722f, 0xbf66175e ),
	VERT( 0x43031434, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0xbf7fffd3, 0x3b124f31, 0xba282678 ),
	VERT( 0x43030e66, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x00000000, 0x3ee0a57d, 0x3f660ad9 ),
	VERT( 0x4307b344, 0xc21e40af, 0xc1971240 ),
	NORM( 0x3f7f3050, 0x3b864206, 0xbda2b354 ),
	VERT( 0x4307b344, 0xc21e40af, 0xc1971240 ),
	NORM( 0x3ae001da, 0x3ed3d672, 0x3f690f62 ),
	VERT( 0x4307b344, 0xc21e40af, 0xc1971240 ),
	NORM( 0x3f7f4fac, 0xbcf304f3, 0xbd894a2e ),
	VERT( 0x4307b344, 0xc21e40af, 0xc1971240 ),
	NORM( 0xbaeb80d7, 0x3ee07216, 0x3f661746 ),
	VERT( 0x43078f6f, 0xc220193e, 0xc19df6a9 ),
	NORM( 0xbb8ca5e9, 0xbee06214, 0xbf661a9f ),
	VERT( 0x43078f6f, 0xc220193e, 0xc19df6a9 ),
	NORM( 0x3f7f3050, 0x3b864206, 0xbda2b354 ),
	VERT( 0x43078f6f, 0xc220193e, 0xc19df6a9 ),
	NORM( 0x3f7f4fac, 0xbcf304f3, 0xbd894a2e ),
	VERT( 0x43078f6f, 0xc220193e, 0xc19df6a9 ),
	NORM( 0x31969aa8, 0xbee0722f, 0xbf66175e ),
	VERT( 0x43089638, 0xc21e3c77, 0xc1973010 ),
	NORM( 0x35aada64, 0xbee07211, 0xbf661765 ),
	VERT( 0x43089638, 0xc21e3c77, 0xc1973010 ),
	NORM( 0x3f7fe9ab, 0x3c390da9, 0x3cc0ca77 ),
	VERT( 0x43089638, 0xc21e3c77, 0xc1973010 ),
	NORM( 0x00000000, 0xbee075a4, 0xbf661686 ),
	VERT( 0x43089638, 0xc21e3c77, 0xc1973010 ),
	NORM( 0xbf7ccd73, 0xbd8c80e9, 0xbe113d7d ),
	VERT( 0x43088f6b, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x00000000, 0xbee075a3, 0xbf661686 ),
	VERT( 0x43088f6b, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0xbf7f2677, 0xbd10941b, 0xbd963dea ),
	VERT( 0x43088f6b, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0xbf7ccd73, 0xbd8c80e9, 0xbe113d7d ),
	VERT( 0x43088f6b, 0xc2a917ce, 0x4042fc22 ),
	NORM( 0x00000000, 0xbee0722f, 0xbf66175e ),
	VERT( 0x43088f6b, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0x00000000, 0xbee0722f, 0xbf66175e ),
	VERT( 0x43088f6b, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0x35811838, 0xbf661765, 0x3ee07211 ),
	VERT( 0x43088f6b, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0xbf7f2677, 0xbd10941b, 0xbd963dea ),
	VERT( 0x43031675, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0x00000000, 0xbee0722e, 0xbf66175e ),
	VERT( 0x43030061, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0xbb8ca5e9, 0xbee06215, 0xbf661a9f ),
	VERT( 0x43030061, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0x3a634c68, 0x3ee07226, 0x3f661759 ),
	VERT( 0x43030061, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0x3b49104c, 0x3ee071de, 0x3f66171a ),
	VERT( 0x43030061, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0xbf7fffe9, 0x39f30a75, 0xbad1d002 ),
	VERT( 0x43030061, 0xc21fe248, 0xc19dc2a6 ),
	NORM( 0xbf7fffee, 0xba444872, 0x3aa54066 ),
	VERT( 0x43089275, 0xc2a9e897, 0x400d7a14 ),
	NORM( 0x3a634c69, 0x3ee07226, 0x3f661759 ),
	VERT( 0x43089275, 0xc2a9e897, 0x400d7a14 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43089275, 0xc2a9e897, 0x400d7a14 ),
	NORM( 0x3ac47ab9, 0x3ee09c98, 0x3f660cf0 ),
	VERT( 0x43089275, 0xc2bb213b, 0x40cd20d9 ),
	NORM( 0x3ac47ab9, 0x3ee09c98, 0x3f660cf0 ),
	VERT( 0x43089275, 0xc2bb213b, 0x40cd20d9 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43089275, 0xc2bb213b, 0x40cd20d9 ),
	NORM( 0x3a7c39e4, 0xbf662446, 0x3ee03d15 ),
	VERT( 0x43030e66, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0x00000000, 0xbf661739, 0x3ee072c6 ),
	VERT( 0x43030e66, 0xc2ba5117, 0x40e832f9 ),
	NORM( 0xbf7fffd3, 0x3b124f31, 0xba282678 ),
	VERT( 0x43079a8f, 0xc216846a, 0xc1a74f4f ),
	NORM( 0x3f4f4a42, 0x3f01fc37, 0xbe969b97 ),
	VERT( 0x43079a8f, 0xc216846a, 0xc1a74f4f ),
	NORM( 0x31969aa8, 0xbee0722e, 0xbf66175e ),
	VERT( 0x43079a8f, 0xc214add1, 0xc19fc592 ),
	NORM( 0x3f4e6b09, 0x3f031c22, 0xbe977efb ),
	VERT( 0x43079a8f, 0xc214add1, 0xc19fc592 ),
	NORM( 0x3ae001db, 0x3ed3d672, 0x3f690f62 ),
	VERT( 0x430252bc, 0xc220193e, 0xc19df6a9 ),
	NORM( 0x31969aa8, 0xbee0722f, 0xbf66175e ),
	VERT( 0x4302479b, 0xc20f5464, 0xc1ae5230 ),
	NORM( 0x3eb3fd61, 0x3f5767b0, 0xbed21eb3 ),
	VERT( 0x4302479b, 0xc20f5464, 0xc1ae5230 ),
	NORM( 0x31969aa7, 0xbee0722f, 0xbf66175e ),
	VERT( 0x4302479b, 0xc20d7dcb, 0xc1a6c872 ),
	NORM( 0x3eb3fd5f, 0x3f5767b0, 0xbed21eb3 ),
	VERT( 0x4302479b, 0xc20d7dcb, 0xc1a6c872 ),
	NORM( 0x3a2faccd, 0x3edb8558, 0x3f6746ac ),
	VERT( 0x430252bc, 0xc21e42a5, 0xc1966cec ),
	NORM( 0x3a60d6bd, 0x3eda2370, 0x3f679a51 ),
	VERT( 0x42f93748, 0xc2078dc7, 0xc1ac932c ),
	NORM( 0xb4678894, 0x3ee07223, 0x3f661761 ),
	VERT( 0x42f93748, 0xc21e42a5, 0xc1966cec ),
	NORM( 0xb4678894, 0x3ee07223, 0x3f661761 ),
	VERT( 0x43084130, 0xc213636a, 0xc1aa2ac4 ),
	NORM( 0xbae83e45, 0x3ee0cf80, 0x3f660079 ),
	VERT( 0x43084130, 0xc21fe3fa, 0xc19df8bb ),
	NORM( 0xbbf25485, 0x3ee1f61c, 0x3f65b65f ),
	VERT( 0x43089638, 0xc216f877, 0xc1a6ac37 ),
	NORM( 0xbc70cca3, 0x3ee37163, 0x3f6552d2 ),
	VERT( 0x43070283, 0xc20f0224, 0xc1ae7086 ),
	NORM( 0x3b49104c, 0x3ee071dd, 0x3f66171a ),
	VERT( 0x43070283, 0xc20f0224, 0xc1ae7086 ),
	NORM( 0x35b9d41a, 0x3ee07227, 0x3f661760 ),
	VERT( 0x43070283, 0xc21ffeb2, 0xc19ddeaa ),
	NORM( 0x3b49104c, 0x3ee071dd, 0x3f66171a ),
	VERT( 0x43070283, 0xc21ffeb2, 0xc19ddeaa ),
	NORM( 0x35b9d419, 0x3ee07226, 0x3f661760 ),
	VERT( 0x43030bfa, 0xc20a5c72, 0xc1b2f909 ),
	NORM( 0x3b49104c, 0x3ee071dd, 0x3f66171a ),
	VERT( 0x43084130, 0xc21e3c77, 0xc1973010 ),
	NORM( 0x337bd3b4, 0xbee07214, 0xbf661764 ),
	VERT( 0x43084130, 0xc211bbe6, 0xc1a36219 ),
	NORM( 0xb56362f1, 0xbee07218, 0xbf661763 ),
	VERT( 0x43089638, 0xc21550f3, 0xc19fe38c ),
	NORM( 0x35aada64, 0xbee07211, 0xbf661765 ),
	VERT( 0x43070283, 0xc21e572e, 0xc19715ff ),
	NORM( 0xb9c1437d, 0xbee0722d, 0xbf66175d ),
	VERT( 0x43070283, 0xc21e572e, 0xc19715ff ),
	NORM( 0xb598baef, 0xbee07218, 0xbf661764 ),
	VERT( 0x43070283, 0xc20d5aa0, 0xc1a7a7dc ),
	NORM( 0xb598baef, 0xbee07218, 0xbf661763 ),
	VERT( 0x43070283, 0xc20d5aa0, 0xc1a7a7dc ),
	NORM( 0xb9c1437d, 0xbee0722d, 0xbf66175d ),
	VERT( 0x43030bfa, 0xc208b4ee, 0xc1ac305e ),
	NORM( 0xb9c1437d, 0xbee0722e, 0xbf66175d ),
	VERT( 0x42f935d4, 0xc21e3cd2, 0xc197765c ),
	NORM( 0x34140a59, 0xbee0722d, 0xbf66175e ),
	VERT( 0x42f935d4, 0xc207cbb1, 0xc1ad5a89 ),
	NORM( 0x34140a58, 0xbee0722c, 0xbf66175f ),
	VERT( 0x43024ddf, 0xc20be3ed, 0xc1a95c04 ),
	NORM( 0x34140a58, 0xbee0722c, 0xbf66175e ),
	VERT( 0x43024ddf, 0xc21e3cd2, 0xc197765c ),
	NORM( 0x34140a59, 0xbee0722d, 0xbf66175e ),
	VERT( 0x42ee189e, 0xc20a4932, 0xc1d51bd5 ),
	NORM( 0xbf63498f, 0x3ee33cf9, 0xbdf8cb64 ),
	VERT( 0x42ee189e, 0xc20a4932, 0xc1d51bd5 ),
	NORM( 0x3b97f219, 0x3edf9420, 0x3f664c9b ),
	VERT( 0x42e8d345, 0xc21ccd11, 0xc1c2ede5 ),
	NORM( 0xbf63498f, 0x3ee33cf9, 0xbdf8cb64 ),
	VERT( 0x42e8d345, 0xc2162702, 0xc1a7aa6c ),
	NORM( 0xbf63498f, 0x3ee33cf8, 0xbdf8cb64 ),
	VERT( 0x42edc6b0, 0xc20742db, 0xc1b60df7 ),
	NORM( 0xbf63498f, 0x3ee33cf9, 0xbdf8cb64 ),
	VERT( 0x42ee1636, 0xc203958b, 0xc1b9a42f ),
	NORM( 0xbf63498f, 0x3ee33cfa, 0xbdf8cb64 ),
	VERT( 0x42ee189e, 0xc1fe30d1, 0xc1a7387b ),
	NORM( 0xbf5fcda5, 0x3ec5303d, 0xbe975b7e ),
	VERT( 0x42ee1636, 0xc201f907, 0xc1b3089f ),
	NORM( 0xbf5fcda5, 0x3ec5303d, 0xbe975b7e ),
	VERT( 0x42edc8bb, 0xc2056d08, 0xc1aea68d ),
	NORM( 0xbf5fcda5, 0x3ec5303d, 0xbe975b7e ),
	VERT( 0x42e8d345, 0xc2145069, 0xc1a020b0 ),
	NORM( 0xbf5fcda5, 0x3ec5303d, 0xbe975b7e ),
	VERT( 0x42e8d5dd, 0xc211da8a, 0xc194ec2d ),
	NORM( 0xbf5fcda5, 0x3ec5303d, 0xbe975b7e ),
	VERT( 0x42e8d345, 0xc2162702, 0xc1a7aa6c ),
	NORM( 0xbf5ba440, 0x3eec6437, 0xbe6697f0 ),
	VERT( 0x42e8d345, 0xc2145069, 0xc1a020b0 ),
	NORM( 0xbf5ba440, 0x3eec6437, 0xbe6697f0 ),
	VERT( 0x42edc8bb, 0xc2056d08, 0xc1aea68d ),
	NORM( 0xbf5ba440, 0x3eec6437, 0xbe6697f0 ),
	VERT( 0x42edc6b0, 0xc20742db, 0xc1b60df7 ),
	NORM( 0xbf5ba440, 0x3eec6437, 0xbe6697f0 ),
	VERT( 0x42e8d345, 0xc21ccd11, 0xc1c2ede5 ),
	NORM( 0x3b97f218, 0x3edf9420, 0x3f664c9b ),
	VERT( 0x42ee189e, 0xc1fe30d1, 0xc1a7387b ),
	NORM( 0x00000000, 0xbee0721c, 0xbf661762 ),
	VERT( 0x42e8d5dd, 0xc211da8a, 0xc194ec2d ),
	NORM( 0x00000000, 0xbee0721c, 0xbf661763 ),
	VERT( 0x42e8d5dd, 0xc211da8a, 0xc194ec2d ),
	NORM( 0xbd0abe08, 0x3f6685ad, 0xbeddfe77 ),
	VERT( 0x42e8d345, 0xc21ccd11, 0xc1c2ede5 ),
	NORM( 0xbd0abe08, 0x3f6685ad, 0xbeddfe77 ),
	VERT( 0x42e53698, 0xc21d0b52, 0xc1c2cf86 ),
	NORM( 0x3af0838e, 0x3ee0826b, 0x3f661349 ),
	VERT( 0x42e53698, 0xc21d0b52, 0xc1c2cf86 ),
	NORM( 0xbc039b44, 0x3f66e709, 0xbedd0ce5 ),
	VERT( 0x42e64364, 0xc200ab73, 0xc1a57a0f ),
	NORM( 0x3f2859dd, 0x3f2d50b6, 0xbea92ee9 ),
	VERT( 0x42e6b075, 0xc2015698, 0xc1a4d31e ),
	NORM( 0x3f3fe805, 0x3f18462e, 0xbe9499ce ),
	VERT( 0x42e6b075, 0xc2015979, 0xc1a4deea ),
	NORM( 0x3f3fe989, 0x3f1844a3, 0xbe94984c ),
	VERT( 0x42e64364, 0xc200ae54, 0xc1a585db ),
	NORM( 0x3f2859dd, 0x3f2d50b6, 0xbea92ee9 ),
	VERT( 0x42e70425, 0xc20235a2, 0xc1a3f98d ),
	NORM( 0x3f641806, 0x3ed0f0e9, 0xbe4bc4ce ),
	VERT( 0x42e70425, 0xc2023882, 0xc1a40559 ),
	NORM( 0x3f6416fb, 0x3ed0f499, 0xbe4bc868 ),
	VERT( 0x42e738c1, 0xc203395f, 0xc1a2fc30 ),
	NORM( 0x3f7921a6, 0x3e53ca43, 0xbdce7809 ),
	VERT( 0x42e738c1, 0xc2033c3f, 0xc1a307fc ),
	NORM( 0x3f792119, 0x3e53d2ac, 0xbdce803a ),
	VERT( 0x42e74ab2, 0xc204501a, 0xc1a1ec4c ),
	NORM( 0x3f800000, 0xb717f0bc, 0x36942ea0 ),
	VERT( 0x42e74ab2, 0xc20452fa, 0xc1a1f817 ),
	NORM( 0x3f800000, 0x36ec96e5, 0xb666af03 ),
	VERT( 0x42e738c1, 0xc20566d4, 0xc1a0dc69 ),
	NORM( 0x3f7e4da2, 0xbdd3992b, 0x3d4e4eb7 ),
	VERT( 0x42e738c1, 0xc20569b4, 0xc1a0e835 ),
	NORM( 0x3f7e4da2, 0xbdd3992a, 0x3d4e4eb6 ),
	VERT( 0x42e53c16, 0xc2001e0d, 0xc1a61298 ),
	NORM( 0x3e2254ff, 0x3f632996, 0xbeddafc8 ),
	VERT( 0x42e5c462, 0xc20042be, 0xc1a5eece ),
	NORM( 0x3e9736e7, 0x3f5bcf7c, 0xbed680cb ),
	VERT( 0x42e5c462, 0xc20b724e, 0xc1d3cd28 ),
	NORM( 0x3e99cc2e, 0x3f5b7713, 0xbed614a3 ),
	VERT( 0x42e53c16, 0xc2001b2c, 0xc1a606cd ),
	NORM( 0x3e17a89d, 0x3f6383f3, 0xbede20c4 ),
	VERT( 0x42e5c462, 0xc2003fdd, 0xc1a5e302 ),
	NORM( 0x3e949da9, 0x3f5c26b6, 0xbed6ebd1 ),
	VERT( 0x42e64364, 0xc200ae54, 0xc1a585db ),
	NORM( 0x3f01fa1e, 0x3f463801, 0xbec16778 ),
	VERT( 0x42e64364, 0xc20bdde5, 0xc1d36435 ),
	NORM( 0x3f0c156f, 0x3f409624, 0xbebbdc93 ),
	VERT( 0x42e64364, 0xc200ab73, 0xc1a57a0f ),
	NORM( 0x3eda40cd, 0x3f501c4f, 0xbecb2625 ),
	VERT( 0x42e6b075, 0xc2015979, 0xc1a4deea ),
	NORM( 0x3f3fe8b3, 0x3f1848a6, 0xbe948c2e ),
	VERT( 0x42e6b075, 0xc20c890a, 0xc1d2bd43 ),
	NORM( 0x3f3fe8b4, 0x3f1848a4, 0xbe948c2d ),
	VERT( 0x42e70425, 0xc2023882, 0xc1a40559 ),
	NORM( 0x3f641770, 0x3ed0f0ad, 0xbe4bd04d ),
	VERT( 0x42e70425, 0xc20d6812, 0xc1d1e3b4 ),
	NORM( 0x3f641770, 0x3ed0f0ab, 0xbe4bd04a ),
	VERT( 0x42e738c1, 0xc2033c3f, 0xc1a307fc ),
	NORM( 0x3f792161, 0x3e53c80f, 0xbdce95da ),
	VERT( 0x42e738c1, 0xc20e6bcf, 0xc1d0e657 ),
	NORM( 0x3f792162, 0x3e53c807, 0xbdce95d3 ),
	VERT( 0x42e74ab2, 0xc20452fa, 0xc1a1f817 ),
	NORM( 0x3f800000, 0xb5ba1f85, 0x352f62a0 ),
	VERT( 0x42e74ab2, 0xc20f828b, 0xc1cfd672 ),
	NORM( 0x3f800000, 0xb5c59395, 0x353a1f6e ),
	VERT( 0x42e738c1, 0xc20569b4, 0xc1a0e835 ),
	NORM( 0x3f7e4da2, 0xbdd39462, 0x3d4e6373 ),
	VERT( 0x42e738c1, 0xc2109944, 0xc1cec68f ),
	NORM( 0x3f7e4da2, 0xbdd39463, 0x3d4e6373 ),
	VERT( 0x42ee189e, 0xc20a4932, 0xc1d51bd5 ),
	NORM( 0x3d3869e0, 0x3f677653, 0xbed98455 ),
	VERT( 0x42e55738, 0xc1eef487, 0xc18a476b ),
	NORM( 0x39e394ab, 0x3f7fc5d5, 0xbd2c86c2 ),
	VERT( 0x42ee189e, 0xc1fe30d1, 0xc1a7387b ),
	NORM( 0x3d75c477, 0x3f65a857, 0xbee01ebc ),
	VERT( 0x43024833, 0xc2307aef, 0xc1e1c90d ),
	NORM( 0x3f7ffff4, 0xba072255, 0xba8a8874 ),
	VERT( 0x43024ddf, 0xc21e00c2, 0xc1f3a1d6 ),
	NORM( 0x3f7ffff4, 0xba072255, 0xba8a8874 ),
	VERT( 0x43024ddf, 0xc20d8071, 0xc1aff794 ),
	NORM( 0x3f7ffff4, 0xba072255, 0xba8a8874 ),
	VERT( 0x43024ddf, 0xc21fd956, 0xc19e11ec ),
	NORM( 0x3f7ffff4, 0xba072255, 0xba8a8874 ),
	VERT( 0x43024ddf, 0xc21e00c2, 0xc1f3a1d6 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024ddf, 0xc218b7c9, 0xc1f035af ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024ddf, 0xc209e813, 0xc1b3795d ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43024ddf, 0xc20d8071, 0xc1aff794 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42edc8bb, 0xc2056d08, 0xc1aea68d ),
	NORM( 0xbda3dc98, 0xbedfba1d, 0xbf655a7d ),
	VERT( 0x42ee1636, 0xc201f907, 0xc1b3089f ),
	NORM( 0xbda3dc98, 0xbedfba1e, 0xbf655a7d ),
	VERT( 0x42ef5b0d, 0xc2022737, 0xc1b2db92 ),
	NORM( 0xbda3dc98, 0xbedfba1e, 0xbf655a7d ),
	VERT( 0x42ef5b0d, 0xc205bf93, 0xc1af59ca ),
	NORM( 0xbda3dc98, 0xbedfba1d, 0xbf655a7d ),
	VERT( 0x42edc6b0, 0xc20742db, 0xc1b60df7 ),
	NORM( 0x362fbdec, 0x3ee0725d, 0x3f661753 ),
	VERT( 0x42ef5b0d, 0xc2075c17, 0xc1b5f559 ),
	NORM( 0x362fbdec, 0x3ee0725e, 0x3f661752 ),
	VERT( 0x42ef5b0d, 0xc203c3ba, 0xc1b97723 ),
	NORM( 0x3dc6448b, 0x3f650160, 0xbedf69af ),
	VERT( 0x42ef5b0d, 0xc203c3ba, 0xc1b97723 ),
	NORM( 0x35bbba11, 0x3ee07272, 0x3f66174e ),
	VERT( 0x42ee1636, 0xc203958b, 0xc1b9a42f ),
	NORM( 0x3da178da, 0x3f655d0f, 0xbedfcb60 ),
	VERT( 0x42ee1636, 0xc203958b, 0xc1b9a42f ),
	NORM( 0x362fbdec, 0x3ee0725e, 0x3f661752 ),
	VERT( 0x43024ddf, 0xc20d8071, 0xc1aff794 ),
	NORM( 0x348574f9, 0x3ee07220, 0x3f661761 ),
	VERT( 0x43024ddf, 0xc209e813, 0xc1b3795d ),
	NORM( 0x3e48ac6b, 0x3f61a139, 0xbedc180d ),
	VERT( 0x43024ddf, 0xc209e813, 0xc1b3795d ),
	NORM( 0x348574f9, 0x3ee07221, 0x3f661761 ),
	VERT( 0x42f935d4, 0xc205cfd8, 0xc1b777df ),
	NORM( 0x34014d3f, 0x3ee07259, 0x3f661754 ),
	VERT( 0x42f935d4, 0xc205cfd8, 0xc1b777df ),
	NORM( 0x3e1f40f3, 0x3f634aab, 0xbeddb70d ),
	VERT( 0x42f935d4, 0xc2096835, 0xc1b3f617 ),
	NORM( 0x348574f9, 0x3ee07220, 0x3f661761 ),
	VERT( 0x42ef59a6, 0xc2075c5f, 0xc1b61828 ),
	NORM( 0x3de90c60, 0x3f6498c5, 0xbedefcea ),
	VERT( 0x42ef59a6, 0xc20585c6, 0xc1ae8e6b ),
	NORM( 0x3de90c61, 0x3f6498c5, 0xbedefcea ),
	VERT( 0x42f93748, 0xc2078dc7, 0xc1ac932c ),
	NORM( 0x3de90c60, 0x3f6498c5, 0xbedefcea ),
	VERT( 0x42f93748, 0xc2096460, 0xc1b41ce9 ),
	NORM( 0x3de90c61, 0x3f6498c5, 0xbedefcea ),
	VERT( 0x42ef59a6, 0xc20585c6, 0xc1ae8e6b ),
	NORM( 0x3cf516bc, 0x3f653f0c, 0xbee35ced ),
	VERT( 0x42ef59a6, 0xc2075c5f, 0xc1b61828 ),
	NORM( 0x3cf516bb, 0x3f653f0c, 0xbee35ced ),
	VERT( 0x42edc6b0, 0xc20742db, 0xc1b60df7 ),
	NORM( 0x3cf516bb, 0x3f653f0c, 0xbee35cec ),
	VERT( 0x42edc8bb, 0xc2056d08, 0xc1aea68d ),
	NORM( 0x3cf516bc, 0x3f653f0c, 0xbee35ced ),
	VERT( 0x42ef5b0d, 0xc205bf93, 0xc1af59ca ),
	NORM( 0xb41ca6ca, 0xbee07221, 0xbf661761 ),
	VERT( 0x42ef5b0d, 0xc2022737, 0xc1b2db92 ),
	NORM( 0xb41ca6c9, 0xbee07220, 0xbf661761 ),
	VERT( 0x42ef5b0d, 0xc2022737, 0xc1b2db92 ),
	NORM( 0x3dc63158, 0x3f65057d, 0xbedf59e0 ),
	VERT( 0x42f935d4, 0xc2043354, 0xc1b0dc51 ),
	NORM( 0xb41ca6ca, 0xbee07220, 0xbf661761 ),
	VERT( 0x42f935d4, 0xc207cbb1, 0xc1ad5a89 ),
	NORM( 0xb41ca6ca, 0xbee07220, 0xbf661761 ),
	VERT( 0x42f935d4, 0xc2096835, 0xc1b3f617 ),
	NORM( 0x32897616, 0x3ee07288, 0x3f661748 ),
	VERT( 0x42ef5b0d, 0xc2075c17, 0xc1b5f559 ),
	NORM( 0x32897616, 0x3ee07289, 0x3f661748 ),
	VERT( 0x42ef5b0d, 0xc2129370, 0xc1f63373 ),
	NORM( 0x3d8e7879, 0x3f27db9b, 0xbf4076eb ),
	VERT( 0x42f935d4, 0xc2149f8e, 0xc1f43432 ),
	NORM( 0x3e11e669, 0x3f269ff9, 0xbf3ee5ab ),
	VERT( 0x43024ddf, 0xc218b7c9, 0xc1f035af ),
	NORM( 0x3e37a134, 0x3f2134c6, 0xbf417f3b ),
	VERT( 0x42ef5b0d, 0xc1f0677d, 0xc18a0d6d ),
	NORM( 0x3da0c979, 0x3f7f0329, 0xbd209b29 ),
	VERT( 0x42f935d4, 0xc1f52478, 0xc1895ff2 ),
	NORM( 0x3e2db62a, 0x3f7c20ac, 0xbd1099be ),
	VERT( 0x42f935d4, 0xc2043354, 0xc1b0dc51 ),
	NORM( 0x3e1f40dc, 0x3f634aa5, 0xbeddb727 ),
	VERT( 0x43024ddf, 0xc1ff9f31, 0xc18a1376 ),
	NORM( 0x3e6475eb, 0x3f7945bd, 0xbd3b5b36 ),
	VERT( 0x43024ddf, 0xc2084b8f, 0xc1acddce ),
	NORM( 0x3e48ac5f, 0x3f61a132, 0xbedc182f ),
	VERT( 0x42ef5b54, 0xc2a35733, 0x410f1974 ),
	NORM( 0x3ccb6220, 0x3ee0604e, 0x3f660540 ),
	VERT( 0x42eecbec, 0xc2a35650, 0x410f27e2 ),
	NORM( 0x3c66c169, 0x3ee06877, 0x3f661281 ),
	VERT( 0x43024833, 0xc2b541fd, 0x4146e789 ),
	NORM( 0x3ddd4d39, 0x3edf21bf, 0x3f64be77 ),
	VERT( 0x43024833, 0xc2a40909, 0x4103b46a ),
	NORM( 0x3ddd4d39, 0x3edf21be, 0x3f64be78 ),
	VERT( 0x43024833, 0xc2a40909, 0x4103b46a ),
	NORM( 0x3ddd4d7c, 0x3edf2164, 0x3f64be8d ),
	VERT( 0x42f93879, 0xc2a37eac, 0x410c91fc ),
	NORM( 0x3ddd4d39, 0x3edf21bf, 0x3f64be77 ),
	VERT( 0x42ef59a6, 0xc220193e, 0xc19df6a9 ),
	NORM( 0x32851c1d, 0xbee07230, 0xbf66175e ),
	VERT( 0x42ef59a6, 0xc2075c5f, 0xc1b61828 ),
	NORM( 0x32851c1d, 0xbee0722f, 0xbf66175e ),
	VERT( 0x42f93748, 0xc2096460, 0xc1b41ce9 ),
	NORM( 0x32851c1d, 0xbee07230, 0xbf66175e ),
	VERT( 0x42f93748, 0xc220193e, 0xc19df6a9 ),
	NORM( 0x32851c1d, 0xbee07230, 0xbf66175e ),
	VERT( 0x42ef59a6, 0xc20585c6, 0xc1ae8e6b ),
	NORM( 0xb2851c1d, 0x3ee0722f, 0x3f66175e ),
	VERT( 0x42ef59a6, 0xc21e42a5, 0xc1966cec ),
	NORM( 0xb2851c1d, 0x3ee07230, 0x3f66175e ),
	VERT( 0x42f93748, 0xc21e42a5, 0xc1966cec ),
	NORM( 0xb2851c1d, 0x3ee07230, 0x3f66175e ),
	VERT( 0x42f93748, 0xc2078dc7, 0xc1ac932c ),
	NORM( 0xb2851c1d, 0x3ee07230, 0x3f66175e ),
	VERT( 0x42ef5b0d, 0xc21e3cd2, 0xc197765c ),
	NORM( 0xb45230bc, 0xbee07235, 0xbf66175c ),
	VERT( 0x42ef5b0d, 0xc205bf93, 0xc1af59ca ),
	NORM( 0xb45230bc, 0xbee07235, 0xbf66175c ),
	VERT( 0x42f935d4, 0xc207cbb1, 0xc1ad5a89 ),
	NORM( 0xb45230bc, 0xbee07234, 0xbf66175d ),
	VERT( 0x42f935d4, 0xc21e3cd2, 0xc197765c ),
	NORM( 0xb45230bc, 0xbee07235, 0xbf66175c ),
	VERT( 0x42ef5b0d, 0xc1f45e57, 0xc17fdcb1 ),
	NORM( 0x3d4c8a62, 0x3f3d26b4, 0x3f2c07be ),
	VERT( 0x42ef5b54, 0xc212c4b6, 0xc14fe5df ),
	NORM( 0x3cad28ef, 0x3ee0a585, 0x3f65fa8c ),
	VERT( 0x42f93879, 0xc21313a9, 0xc1526d56 ),
	NORM( 0x3d959975, 0x3ee0ec7f, 0x3f65368c ),
	VERT( 0x42f935d4, 0xc1f91b51, 0xc17e81ba ),
	NORM( 0x3e006c1c, 0x3f3b9c33, 0x3f2b31df ),
	VERT( 0x42ef5b0d, 0xc23059a6, 0xc1e1bc2e ),
	NORM( 0xb451c5b5, 0xbee07235, 0xbf66175c ),
	VERT( 0x42ef5b0d, 0xc217dc68, 0xc1f99f9b ),
	NORM( 0xb451c5b5, 0xbee07234, 0xbf66175d ),
	VERT( 0x42f935d4, 0xc219e886, 0xc1f7a05a ),
	NORM( 0xb451c5b5, 0xbee07234, 0xbf66175d ),
	VERT( 0x42f935d4, 0xc23059a6, 0xc1e1bc2e ),
	NORM( 0xb451c5b5, 0xbee07235, 0xbf66175c ),
	VERT( 0x42ef5b0d, 0xc2075c17, 0xc1b5f559 ),
	NORM( 0xb22adeb1, 0x3ee07224, 0x3f661761 ),
	VERT( 0x42ef5b0d, 0xc21fd956, 0xc19e11ec ),
	NORM( 0xb22adeb1, 0x3ee07223, 0x3f661761 ),
	VERT( 0x42f935d4, 0xc21fd956, 0xc19e11ec ),
	NORM( 0xb22adeb1, 0x3ee07223, 0x3f661761 ),
	VERT( 0x42f935d4, 0xc2096835, 0xc1b3f617 ),
	NORM( 0xb22adeb0, 0x3ee07223, 0x3f661761 ),
	VERT( 0x43024833, 0xc2142867, 0xc15b4ae8 ),
	NORM( 0x3de118be, 0x3ee0f337, 0x3f643d8a ),
	VERT( 0x42f93879, 0xc26131ff, 0xc06817ea ),
	NORM( 0x3d954c51, 0x3edfd94f, 0x3f657aa4 ),
	VERT( 0x43024833, 0xc26391aa, 0xc080bbda ),
	NORM( 0x3ddd4dbe, 0x3edf21c0, 0x3f64be75 ),
	VERT( 0x42ef5b54, 0xc26070ae, 0xc061768e ),
	NORM( 0x3ccc55ab, 0x3ee0604e, 0x3f66050a ),
	VERT( 0x43070283, 0xc20548d9, 0xc18690ed ),
	NORM( 0x3eff4078, 0x3f5dd0af, 0xbcd838a2 ),
	VERT( 0x43070283, 0xc20704eb, 0xc17414e9 ),
	NORM( 0x3eada04c, 0x3f2e2511, 0x3f265a2f ),
	VERT( 0x43079600, 0xc20bca41, 0xc16ebe0a ),
	NORM( 0x3f119e7d, 0x3ee90b56, 0x3f2f5e04 ),
	VERT( 0x43084130, 0xc209e9a9, 0xc1834fb3 ),
	NORM( 0x3f524fed, 0x3f0ec5f3, 0x3df2ba57 ),
	VERT( 0x43086edd, 0xc20fc92b, 0xc1762288 ),
	NORM( 0x3f658b2b, 0x3e6cfa3e, 0x3ec13e83 ),
	VERT( 0x43089638, 0xc20db0a3, 0xc1809de1 ),
	NORM( 0x3f726889, 0x3e89199c, 0x3e363672 ),
	VERT( 0x43030aa6, 0xc21ebefe, 0xc1f2ecd1 ),
	NORM( 0x3f0d8156, 0xbe035f26, 0xbf52caf7 ),
	VERT( 0x43030aa6, 0xc21ebefe, 0xc1f2ecd1 ),
	NORM( 0xbf7ffeff, 0x3b1f2154, 0x3ba321f9 ),
	VERT( 0x43030bfa, 0xc2193c22, 0xc1eff6e1 ),
	NORM( 0xbf7fffae, 0x3b4abc93, 0x39dccbee ),
	VERT( 0x43030bfa, 0xc2193c22, 0xc1eff6e1 ),
	NORM( 0x3f02ce88, 0x3ee068b6, 0xbf3d4da5 ),
	VERT( 0x43070283, 0xc21a06c8, 0xc1db9ee1 ),
	NORM( 0x3f1d5098, 0x3efcb7fa, 0xbf1d8c49 ),
	VERT( 0x43070283, 0xc21f9328, 0xc1dce6f9 ),
	NORM( 0x3f2703e5, 0xbdfe9ff0, 0xbf3f6303 ),
	VERT( 0x430843e9, 0xc21c6633, 0xc1cf1dfb ),
	NORM( 0x3f5e6218, 0x3ea39cde, 0xbec1cc56 ),
	VERT( 0x4308432f, 0xc221edf4, 0xc1d05325 ),
	NORM( 0x3f5c57de, 0xbdda6f04, 0xbefede0a ),
	VERT( 0x43070278, 0xc22c4697, 0xc1d080ea ),
	NORM( 0x3f19ba33, 0xbeb37901, 0xbf37fcba ),
	VERT( 0x43084333, 0xc22a409a, 0xc1c834d7 ),
	NORM( 0x3f56ec2a, 0xbe744256, 0xbef9ec58 ),
	VERT( 0x43089275, 0xc2289f32, 0xc1c1853b ),
	NORM( 0x3f7c814a, 0xbd9498bb, 0xbe17608f ),
	VERT( 0x430892a1, 0xc2227327, 0xc1c799e8 ),
	NORM( 0x3f7c22c5, 0xbcd4033d, 0xbe2f412a ),
	VERT( 0x43089638, 0xc21e19a1, 0xc1c3e881 ),
	NORM( 0x3f7c80e2, 0x3e001c36, 0xbddb6a86 ),
	VERT( 0x43089638, 0xc2270524, 0xc1bb3504 ),
	NORM( 0x3f7ffe03, 0xbbbdefc2, 0xbbaa9a9e ),
	VERT( 0x43086edd, 0xc215ee56, 0xc16a435a ),
	NORM( 0x3f6a6533, 0x3e33b71c, 0x3eb9374a ),
	VERT( 0x43024ddf, 0xc201cb08, 0xc17fe8bf ),
	NORM( 0x3e2e5e2d, 0x3f343da0, 0x3f307da9 ),
	VERT( 0x42e5437c, 0xc1f2eb60, 0xc1802856 ),
	NORM( 0xb99c6294, 0x3f3d458d, 0x3f2c5f52 ),
	VERT( 0x43079277, 0xc2a42e5b, 0x41015057 ),
	NORM( 0x3f0d06bb, 0x3ebb635e, 0x3f400356 ),
	VERT( 0x43070aba, 0xc2a3ff07, 0x410458ac ),
	NORM( 0x3e415230, 0x3edc7b67, 0x3f61efa2 ),
	VERT( 0x43070c4d, 0xc2b53780, 0x41478d45 ),
	NORM( 0x35811838, 0xbf661765, 0x3ee07211 ),
	VERT( 0x43070c4d, 0xc2b53780, 0x41478d45 ),
	NORM( 0x3e41bb28, 0x3edc75d3, 0x3f61eb5f ),
	VERT( 0x430791ca, 0xc2b56651, 0x41448d5c ),
	NORM( 0x3f0cf26c, 0x3ebb6e08, 0x3f400fa5 ),
	VERT( 0x430791ca, 0xc2b56651, 0x41448d5c ),
	NORM( 0x35811838, 0xbf661765, 0x3ee07210 ),
	VERT( 0x43070278, 0xc2c02009, 0x3fa50769 ),
	NORM( 0x3a7c39e2, 0xbf662446, 0x3ee03d15 ),
	VERT( 0x43070278, 0xc2c02009, 0x3fa50769 ),
	NORM( 0x3f1a3908, 0xbee4b447, 0xbf295634 ),
	VERT( 0x43070278, 0xc2b0171a, 0xc0840d13 ),
	NORM( 0x3f194806, 0xbecd1a95, 0xbf318cc0 ),
	VERT( 0x43084335, 0xc2af141d, 0xc045ba09 ),
	NORM( 0x3f558a2c, 0xbe8d7941, 0xbef466e9 ),
	VERT( 0x43084335, 0xc2bf1d0d, 0x4014e3a4 ),
	NORM( 0x3a7c39e2, 0xbf662446, 0x3ee03d15 ),
	VERT( 0x43084335, 0xc2bf1d0d, 0x4014e3a4 ),
	NORM( 0x3f58fdcb, 0xbe9811be, 0xbee11e14 ),
	VERT( 0x43086e0c, 0xc2b6276c, 0x41382de5 ),
	NORM( 0x35811838, 0xbf661765, 0x3ee07211 ),
	VERT( 0x43086e0c, 0xc2b6276c, 0x41382de5 ),
	NORM( 0x3f6b2479, 0x3e3176fc, 0x3eb5f0fb ),
	VERT( 0x43086e2e, 0xc2a4ef34, 0x40e9ea2b ),
	NORM( 0x3f6b1c4a, 0x3e318d90, 0x3eb615be ),
	VERT( 0x43084130, 0xc213636a, 0xc1aa2ac4 ),
	NORM( 0x3f592a0d, 0x3ef3d79d, 0xbe6d0320 ),
	VERT( 0x43089638, 0xc216f877, 0xc1a6ac37 ),
	NORM( 0x3f7cec39, 0x3e0eae56, 0xbd891b1e ),
	VERT( 0x43084130, 0xc211bbe6, 0xc1a36219 ),
	NORM( 0x3f59098c, 0x3ef40a73, 0xbe6e0da0 ),
	VERT( 0x43089638, 0xc21550f3, 0xc19fe38c ),
	NORM( 0x3f7cb1ab, 0x3e136f3c, 0xbd8fd137 ),
	VERT( 0x43079600, 0xc2146f5b, 0xc15dfe67 ),
	NORM( 0x3f0c6ddd, 0x3ebb11d9, 0x3f408712 ),
	VERT( 0x43070283, 0xc2142604, 0xc15a95ad ),
	NORM( 0x3e3dfc3b, 0x3edc1643, 0x3f623584 ),
	VERT( 0x43030bfa, 0xc200490c, 0xc189a7f2 ),
	NORM( 0x3e9a01c4, 0x3f72bc9f, 0xbdd16d99 ),
	VERT( 0x43030bfa, 0xc200490c, 0xc189a7f2 ),
	NORM( 0xbf7ffff5, 0x3a87f8c2, 0xba04a2c3 ),
	VERT( 0x43030bfa, 0xc2025f39, 0xc17d25ec ),
	NORM( 0x3e27a9a2, 0x3f4d3c10, 0x3f132a7e ),
	VERT( 0x42f935d4, 0xc219e886, 0xc1f7a05a ),
	NORM( 0x3de2bc69, 0x3e9cbfb8, 0xbf720dd8 ),
	VERT( 0x43024ddf, 0xc21e00c2, 0xc1f3a1d6 ),
	NORM( 0x3e0ca8cb, 0x3e9c3910, 0xbf713e21 ),
	VERT( 0x42ef5b0d, 0xc217dc68, 0xc1f99f9b ),
	NORM( 0x3d592ce1, 0x3e9d7f46, 0xbf733567 ),
	VERT( 0x42e5437c, 0xc2173b25, 0xc1fa3cea ),
	NORM( 0x3cc6177b, 0x3e9dac42, 0xbf737adf ),
	VERT( 0x43031434, 0xc2a3fedc, 0x41045b5d ),
	NORM( 0x39af0876, 0x3ee078fa, 0x3f6615b5 ),
	VERT( 0x43031675, 0xc2b53780, 0x41478d45 ),
	NORM( 0x35811838, 0xbf661765, 0x3ee07211 ),
	VERT( 0x43031675, 0xc2b53780, 0x41478d45 ),
	NORM( 0x00000000, 0x3ee076b7, 0x3f661643 ),
	VERT( 0x430315a9, 0xc2b22f19, 0xc0c8bc4a ),
	NORM( 0xbf7fff99, 0xbb072fc7, 0xbb395586 ),
	VERT( 0x430315a9, 0xc2b22f19, 0xc0c8bc4a ),
	NORM( 0x3f04f305, 0xbeda2c1a, 0xbf3da211 ),
	VERT( 0x430317c5, 0xc2c2382f, 0xbf5b9343 ),
	NORM( 0x3a7c39e3, 0xbf662446, 0x3ee03d16 ),
	VERT( 0x430317c5, 0xc2c2382f, 0xbf5b9343 ),
	NORM( 0xbf7fff53, 0xbad579eb, 0xbb8ad44b ),
	VERT( 0x430317c5, 0xc2c2382f, 0xbf5b9343 ),
	NORM( 0x3f04570d, 0xbef53a13, 0xbf35a04c ),
	VERT( 0x43089275, 0xc2ae4367, 0xc0103caf ),
	NORM( 0x3f7c639b, 0xbdac6c32, 0xbe141eca ),
	VERT( 0x43089275, 0xc2be4c56, 0x404a6132 ),
	NORM( 0x3a7c39e4, 0xbf662446, 0x3ee03d15 ),
	VERT( 0x43089275, 0xc2be4c56, 0x404a6132 ),
	NORM( 0x3f7d33e4, 0xbda9025c, 0xbdfa31b1 ),
	VERT( 0x43089275, 0xc21fe990, 0xc19dce62 ),
	NORM( 0xbc70cca3, 0x3ee37163, 0x3f6552d2 ),
	VERT( 0x43089275, 0xc21fe990, 0xc19dce62 ),
	NORM( 0x3f7fffb1, 0xbb12e0c5, 0x3b08cf36 ),
	VERT( 0x43089275, 0xc21fe990, 0xc19dce62 ),
	NORM( 0x3a634c69, 0x3ee07226, 0x3f661759 ),
	VERT( 0x43089083, 0xc2a91dd1, 0x404171ce ),
	NORM( 0xbf7f2677, 0xbd10941b, 0xbd963dea ),
	VERT( 0x43089083, 0xc2a91dd1, 0x404171ce ),
	NORM( 0xbf7ccd73, 0xbd8c80e9, 0xbe113d7d ),
	VERT( 0x43089083, 0xc2a91dd1, 0x404171ce ),
	NORM( 0x3f7fe25b, 0x3c55c736, 0x3cddfb31 ),
	VERT( 0x4303086f, 0xc214161b, 0xc15a9fec ),
	NORM( 0xbf7ffffc, 0x39e99b74, 0x3a09ef64 ),
	VERT( 0x4303086f, 0xc214161b, 0xc15a9fec ),
	NORM( 0x39f76a43, 0x3ee00c18, 0x3f66303a ),
	VERT( 0x43088f6b, 0xc2ba562d, 0x40e725eb ),
	NORM( 0x3f7fe6d6, 0x3c464c2b, 0x3ccc31fc ),
	VERT( 0x43088f6b, 0xc2ba562d, 0x40e725eb ),
	NORM( 0xbf7f2677, 0xbd10941b, 0xbd963dea ),
	VERT( 0x43088f6b, 0xc2ba562d, 0x40e725eb ),
	NORM( 0x35811838, 0xbf661765, 0x3ee07211 ),
	VERT( 0x43030aa6, 0xc230681b, 0xc1e1b2a1 ),
	NORM( 0xbf7fffe7, 0xb76eab41, 0x3ae12778 ),
	VERT( 0x43030aa6, 0xc230681b, 0xc1e1b2a1 ),
	NORM( 0x3f04719a, 0xbec01481, 0xbf44e747 ),
	VERT( 0x43030543, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x00000000, 0xbee0722f, 0xbf66175e ),
	VERT( 0x43030543, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0x00000000, 0xbf0015db, 0xbf5da737 ),
	VERT( 0x43025629, 0xc2b19cc6, 0xc0b5fc2b ),
	NORM( 0x00000000, 0xbf0015db, 0xbf5da737 ),
	VERT( 0x43025629, 0xc21ccf39, 0xc1ef0b23 ),
	NORM( 0x00000000, 0xbee0722f, 0xbf66175e ),
	VERT( 0x43025629, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x00000000, 0xbf0f511c, 0xbf541f8f ),
	VERT( 0x43030543, 0xc2c1a324, 0xbe8c1426 ),
	NORM( 0x00000000, 0xbf0f511c, 0xbf541f8f ),
	VERT( 0x43024833, 0xc2b06a40, 0xc0d70c7f ),
	NORM( 0x3a12f24a, 0xbeef21ab, 0xbf625cd1 ),
	VERT( 0x43024833, 0xc2b2324e, 0xc0c92592 ),
	NORM( 0x3b745fd1, 0xbefde1d7, 0xbf5e4ef7 ),
	VERT( 0x42e53f0d, 0xc2b1657d, 0xc0cf63e5 ),
	NORM( 0x3a12517d, 0xbeef11ba, 0xbf626106 ),
	VERT( 0x42e54d25, 0xc2c23753, 0xbf5fa937 ),
	NORM( 0x3be56f87, 0xbf0eea34, 0xbf546302 ),
	VERT( 0x43024833, 0xc2c23b8d, 0xbf5ea17f ),
	NORM( 0x3b98fd71, 0xbf11b871, 0xbf5279d6 ),
	VERT( 0x43024833, 0xc2a240fb, 0x40f981e1 ),
	NORM( 0x3ddd4d7c, 0x3edf2164, 0x3f64be8d ),
	VERT( 0x42f93879, 0xc2a25c14, 0x41082423 ),
	NORM( 0x3d954c23, 0x3edfd90a, 0x3f657ab5 ),
	VERT( 0x42f93879, 0xc2a37eac, 0x410c91fc ),
	NORM( 0x3d11f8ad, 0x3ee04db9, 0x3f65f1f1 ),
	VERT( 0x42f93879, 0xc2a37eac, 0x410c91fc ),
	NORM( 0x3d933da4, 0x3edfdd3b, 0x3f657f00 ),
	VERT( 0x42f93879, 0xc2b4b7a0, 0x414fc51b ),
	NORM( 0x3d956beb, 0x3ee0b035, 0x3f6545cb ),
	VERT( 0x42ef5b54, 0xc2b49026, 0x41524c93 ),
	NORM( 0x3cd34009, 0x3ee26e06, 0x3f65828b ),
	VERT( 0x42e54d5a, 0xc2b179ff, 0xc0cfba53 ),
	NORM( 0xba6081fe, 0xbee07287, 0xbf661741 ),
	VERT( 0x43025b63, 0xc2307854, 0xc1e20932 ),
	NORM( 0xba6081ff, 0xbee07288, 0xbf661741 ),
	VERT( 0x4302899a, 0xc2b080c4, 0xc0d7533c ),
	NORM( 0xba6081fe, 0xbee07287, 0xbf661741 ),
	VERT( 0x4302436d, 0xc27de1a3, 0xc19666d1 ),
	NORM( 0xba438a4a, 0x3ea6c0e6, 0xbf720aba ),
	VERT( 0x4302436d, 0xc27de1a3, 0xc19666d1 ),
	NORM( 0x3f800000, 0xb5c87e0b, 0xb4ffdec1 ),
	VERT( 0x4302436d, 0xc2af5833, 0xc0dfe05c ),
	NORM( 0xb9600261, 0xbee0722b, 0xbf66175e ),
	VERT( 0x4302436d, 0xc2af5833, 0xc0dfe05c ),
	NORM( 0x3f800000, 0xb5c87e0b, 0xb4ffdec1 ),
	VERT( 0x42e531d8, 0xc2801615, 0xc189b1dd ),
	NORM( 0x3b47fc2a, 0xbf661769, 0x3ee0709e ),
	VERT( 0x4300f81e, 0xc280020e, 0xc189d8f0 ),
	NORM( 0x3b47fc29, 0xbf661769, 0x3ee0709d ),
	VERT( 0x4300f821, 0xc265d4ac, 0xc073c64b ),
	NORM( 0x3b47fc2b, 0xbf661769, 0x3ee0709e ),
	VERT( 0x42ee1636, 0xc201f907, 0xc1b3089f ),
	NORM( 0x3da17c58, 0x3f6566c0, 0xbedfa378 ),
	VERT( 0x42ea515a, 0xc2b4883d, 0x4152ce57 ),
	NORM( 0xbe980463, 0xbd099eda, 0x3f744df7 ),
	VERT( 0x42ea515a, 0xc2b4883d, 0x4152ce57 ),
	NORM( 0x3c5d09c9, 0x3ee1c810, 0x3f65bd0a ),
	VERT( 0x42eb73b2, 0xc2b5a93f, 0x41554f99 ),
	NORM( 0xbea83bde, 0x3db6c605, 0x3f70b433 ),
	VERT( 0x42e89ef4, 0xc2b37d74, 0x414eed6c ),
	NORM( 0xbe4dfae8, 0x3d9b591c, 0x3f7a03ae ),
	VERT( 0x42e89ef4, 0xc2b37d74, 0x414eed6c ),
	NORM( 0x3c606e77, 0x3ee0671b, 0x3f66133a ),
	VERT( 0x42ebce18, 0xc2b591d8, 0x4156cf6f ),
	NORM( 0x3c64a55d, 0x3ee6c8b5, 0x3f647d93 ),
	VERT( 0x42ebce18, 0xc2b591d8, 0x4156cf6f ),
	NORM( 0xbef24d03, 0x3cb8b929, 0x3f6171cf ),
	VERT( 0x42ef472f, 0xc2bb67d7, 0x416df9fb ),
	NORM( 0xba481fe9, 0x3ee3f3eb, 0x3f653a4b ),
	VERT( 0x42ef472f, 0xc2bb67d7, 0x416df9fb ),
	NORM( 0x3d070b5a, 0x3ee352e8, 0x3f653a82 ),
	VERT( 0x42ef472f, 0xc2bb67d7, 0x416df9fb ),
	NORM( 0x3e6282f4, 0xbf606432, 0x3edae2da ),
	VERT( 0x42ef472f, 0xc2bb67d7, 0x416df9fb ),
	NORM( 0x3dc9faf1, 0xbf64f801, 0x3edf5ae2 ),
	VERT( 0x42edd99a, 0xc2b8a807, 0x416307e5 ),
	NORM( 0x3c5d42ca, 0x3ee6ead2, 0x3f64756a ),
	VERT( 0x42edd99a, 0xc2b8a807, 0x416307e5 ),
	NORM( 0xbef02e1f, 0x3e7e0796, 0x3f58fb63 ),
	VERT( 0x42ee4dc7, 0xc2bb7e0e, 0x416e50a5 ),
	NORM( 0xbe87a893, 0x3ec78191, 0x3f61cc2a ),
	VERT( 0x42ee4dc7, 0xc2bb7e0e, 0x416e50a5 ),
	NORM( 0x3dc9f634, 0xbf64f707, 0x3edf5f2a ),
	VERT( 0x42e7d65f, 0xc2b397c6, 0x414d3da9 ),
	NORM( 0xbe117030, 0xbd9015a7, 0x3f7cc391 ),
	VERT( 0x42e6aa2c, 0xc2b3a11b, 0x414ca487 ),
	NORM( 0xbd3e9c3d, 0x3df35c42, 0x3f7de829 ),
	VERT( 0x42ea0110, 0xc2b5c311, 0x4153a819 ),
	NORM( 0xbe08727e, 0x3e8db51b, 0x3f739f79 ),
	VERT( 0x42e7d65f, 0xc2b5d452, 0x41528d17 ),
	NORM( 0xbd42f32e, 0x3eab5acd, 0x3f70ede7 ),
	VERT( 0x42e54cc4, 0xc2b5da61, 0x415229b7 ),
	NORM( 0x3845384b, 0x3eb08cca, 0x3f704c80 ),
	VERT( 0x42ed57f3, 0xc2b8cb00, 0x4160ca5b ),
	NORM( 0xbeb57bac, 0x3e8ead23, 0x3f648054 ),
	VERT( 0x42eb73b2, 0xc2b8ecbc, 0x415ea0f9 ),
	NORM( 0xbdf0612e, 0x3ec21bf0, 0x3f6af9c5 ),
	VERT( 0x42e89ef4, 0xc2b90347, 0x415d2f2d ),
	NORM( 0xbcb6899f, 0x3ed73e71, 0x3f68357b ),
	VERT( 0x42e89ef4, 0xc2b90347, 0x415d2f2d ),
	NORM( 0xbd66bd7f, 0x3ec6e2ac, 0x3f6b748b ),
	VERT( 0x42e8df35, 0xc2bc5f25, 0x4169b7ab ),
	NORM( 0xbcb6899e, 0x3ed73e71, 0x3f68357b ),
	VERT( 0x42e8df35, 0xc2bc5f25, 0x4169b7ab ),
	NORM( 0xbd90edc2, 0x3ed5a7c2, 0x3f67f05d ),
	VERT( 0x42ebe0df, 0xc2bc01e7, 0x416a4105 ),
	NORM( 0x3dc9f9de, 0xbf64f836, 0x3edf5a1a ),
	VERT( 0x42ebe0df, 0xc2bc01e7, 0x416a4105 ),
	NORM( 0xbdeaac0f, 0x3ed235e3, 0x3f6793fc ),
	VERT( 0x4306ea03, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0x00000000, 0xbee0723f, 0xbf66175a ),
	VERT( 0x4306ea03, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0x00000000, 0xbf66176d, 0x3ee071ef ),
	VERT( 0x4306ea03, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4306ea03, 0xc2bab74e, 0x40bd4c1b ),
	NORM( 0x00000000, 0xbee0723f, 0xbf66175a ),
	VERT( 0x4306ea03, 0xc2bab74e, 0x40bd4c1b ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4306ea03, 0xc2b9602b, 0x40e944b7 ),
	NORM( 0x3f3504fd, 0x3e9eb516, 0x3f22b2ec ),
	VERT( 0x4306ea03, 0xc2bf96d3, 0x410ce0e3 ),
	NORM( 0x3f3504e9, 0x3e9eb528, 0x3f22b2fe ),
	VERT( 0x4306ea03, 0xc2bf96d3, 0x410ce0e3 ),
	NORM( 0x00000000, 0xbf66176d, 0x3ee071ef ),
	VERT( 0x42e54c73, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0x00000000, 0xbee0723f, 0xbf66175a ),
	VERT( 0x42e54c73, 0xc2c0edf6, 0x40edc929 ),
	NORM( 0x00000000, 0xbf66176d, 0x3ee071ef ),
	VERT( 0x42e54c73, 0xc2bab74e, 0x40bd4c1b ),
	NORM( 0x00000000, 0xbee0723f, 0xbf66175a ),
	VERT( 0x42e54c73, 0xc2b9602b, 0x40e944b7 ),
	NORM( 0x00000000, 0x3ee07241, 0x3f661759 ),
	VERT( 0x42e54c73, 0xc2bf96d3, 0x410ce0e3 ),
	NORM( 0x00000000, 0xbf66176d, 0x3ee071ef ),
	VERT( 0x42e54c73, 0xc2bf96d3, 0x410ce0e3 ),
	NORM( 0x00000000, 0x3ee07241, 0x3f661759 ),
	VERT( 0x43081943, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x43081943, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43081943, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43081943, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x43081943, 0xc2b701f7, 0x412a3866 ),
	NORM( 0x3f660035, 0x3e451b43, 0x3eca1052 ),
	VERT( 0x43081943, 0xc2beb0f7, 0x4148335f ),
	NORM( 0x3f66002e, 0x3e451b5d, 0x3eca106e ),
	VERT( 0x4306f09a, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x4306f09a, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x4306f09a, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07227, 0xbf661760 ),
	VERT( 0x4306f09a, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x4306f09a, 0xc2b6376e, 0x41373273 ),
	NORM( 0x3ebb3a81, 0x3ed0e6af, 0x3f5627bb ),
	VERT( 0x4306f09a, 0xc2bde66f, 0x41552d6d ),
	NORM( 0x3ebb3a7f, 0x3ed0e6b0, 0x3f5627bc ),
	VERT( 0x43006a0d, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x43006a0d, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x43006a0d, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x43006a0d, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x43006a0d, 0xc2b5b783, 0x413f6492 ),
	NORM( 0x3d9dac81, 0x3edfc7a9, 0x3f656888 ),
	VERT( 0x43006a0d, 0xc2bd6684, 0x415d5f8d ),
	NORM( 0x3d9dac81, 0x3edfc7a9, 0x3f656888 ),
	VERT( 0x42f85631, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x42f85631, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x00000000, 0xbee07226, 0xbf661760 ),
	VERT( 0x42f85631, 0xc2b5778d, 0x41437db0 ),
	NORM( 0x3d65d072, 0x3ee017a7, 0x3f65ba96 ),
	VERT( 0x42f85631, 0xc2bd268f, 0x416178ab ),
	NORM( 0x3d65d071, 0x3ee017a8, 0x3f65ba95 ),
	VERT( 0x42edd9a4, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x336ae52d, 0xbee07226, 0xbf661760 ),
	VERT( 0x42edd9a4, 0xc2ba4c15, 0x40e8871f ),
	NORM( 0x336b0e3c, 0xbee07227, 0xbf661760 ),
	VERT( 0x42edd9a4, 0xc2b54242, 0x4146e7e1 ),
	NORM( 0x3ce6c1f8, 0x3ee05b5a, 0x3f660000 ),
	VERT( 0x42edd9a4, 0xc2bcf143, 0x4164e2db ),
	NORM( 0x3ce6da6e, 0x3ee05b55, 0x3f65fffb ),
	VERT( 0x42e54cd1, 0xc2c1fb16, 0x41123e88 ),
	NORM( 0x33eae52d, 0xbee07226, 0xbf661760 ),
	VERT( 0x42e54cd1, 0xc2ba47dc, 0x40e86629 ),
	NORM( 0x33eae52d, 0xbee07226, 0xbf661760 ),
	VERT( 0x42e54cd1, 0xc2b5335f, 0x41478645 ),
	NORM( 0x3c360abc, 0x3ee06ea3, 0x3f6613bb ),
	VERT( 0x42e54cd1, 0xc2bce699, 0x416591bb ),
	NORM( 0x3c360abc, 0x3ee06ea3, 0x3f6613bb ),
	VERT( 0x43081943, 0xc2c54664, 0x40b86ca3 ),
	NORM( 0x3f668a78, 0xbe73e082, 0xbeba38ce ),
	VERT( 0x43081943, 0xc2be10df, 0x4059cade ),
	NORM( 0x3f5e4e02, 0xbe8b1716, 0xbed46a63 ),
	VERT( 0x43081943, 0xc2bb2143, 0x40cd35d5 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43081943, 0xc2bb2143, 0x40cd35d5 ),
	NORM( 0xb4a39585, 0x3ee07228, 0x3f661760 ),
	VERT( 0x43081943, 0xc2c2d044, 0x410495e3 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x43081943, 0xc2c2d044, 0x410495e3 ),
	NORM( 0xb4a39586, 0x3ee07228, 0x3f661760 ),
	VERT( 0x4303bab3, 0xc2c7dac1, 0x4040abc2 ),
	NORM( 0x3ea1307d, 0xbf051bb0, 0xbf4b47a7 ),
	VERT( 0x4303bab3, 0xc2c0a53d, 0x3f2675a5 ),
	NORM( 0x3e99b451, 0xbf05c550, 0xbf4c4ab2 ),
	VERT( 0x4303bab3, 0xc2bb0b69, 0x40cc8b47 ),
	NORM( 0xb4a39586, 0x3ee07228, 0x3f66175f ),
	VERT( 0x4303bab3, 0xc2bb0b69, 0x40cc8b47 ),
	NORM( 0x32c5a696, 0x3ee07246, 0x3f661758 ),
	VERT( 0x4303bab3, 0xc2c2ba69, 0x4104409d ),
	NORM( 0x32c5a697, 0x3ee07247, 0x3f661758 ),
	VERT( 0x4303bab3, 0xc2c2ba69, 0x4104409d ),
	NORM( 0xb4a39585, 0x3ee07227, 0x3f661760 ),
	VERT( 0x42e54cd1, 0xc2c845e4, 0x402c25e8 ),
	NORM( 0x3cb79f5b, 0xbf0c343e, 0xbf561dd6 ),
	VERT( 0x42e54de2, 0xc2c1105f, 0x3ea8bc2a ),
	NORM( 0x3cb79f5c, 0xbf0c343e, 0xbf561dd6 ),
	VERT( 0x42e54cd1, 0xc2bb1d0a, 0x40cd14dd ),
	NORM( 0x32c5a696, 0x3ee07247, 0x3f661758 ),
	VERT( 0x42e54cd1, 0xc2c2d044, 0x410495e3 ),
	NORM( 0x32c5a696, 0x3ee07248, 0x3f661758 ),
	VERT( 0x42f92c0b, 0xc2c69d84, 0x3f527f6d ),
	NORM( 0x3c2ece18, 0xbf19b0c4, 0xbf4cb6c1 ),
	VERT( 0x42f92c0b, 0xc2c20945, 0xbf6589db ),
	NORM( 0x3bf625d0, 0xbf19b1e5, 0xbf4cb842 ),
	VERT( 0x42f92c0b, 0xc2b994a8, 0x4162f487 ),
	NORM( 0x3d86c2b3, 0x3ee1acad, 0x3f652c23 ),
	VERT( 0x43024833, 0xc2b541fd, 0x4146e789 ),
	NORM( 0x3ddd4ce9, 0x3ee0aa66, 0x3f645e4f ),
	VERT( 0x42ef472f, 0xc2c8a1e1, 0x3fa835e9 ),
	NORM( 0x3c5586c8, 0xbf13aa2d, 0xbf5117e0 ),
	VERT( 0x42ef472f, 0xc2c20945, 0xbf6589db ),
	NORM( 0x3c61775a, 0xbf1430a5, 0xbf50b7df ),
	VERT( 0x42e54f87, 0xc2c902cf, 0x3fb40795 ),
	NORM( 0x3bc44221, 0xbf0e89fc, 0xbf54a426 ),
	VERT( 0x42f93748, 0xc220193e, 0xc19df6a9 ),
	NORM( 0x32458b1a, 0xbee0722e, 0xbf66175e ),
	VERT( 0x42f93748, 0xc2096460, 0xc1b41ce9 ),
	NORM( 0x32458b1a, 0xbee0722e, 0xbf66175e ),
	VERT( 0x4302479b, 0xc20f5464, 0xc1ae5230 ),
	NORM( 0x32458b1a, 0xbee0722e, 0xbf66175e ),
	VERT( 0x430252bc, 0xc220193e, 0xc19df6a9 ),
	NORM( 0x32458b1a, 0xbee0722d, 0xbf66175e ),
	VERT( 0x43070283, 0xc20f0224, 0xc1ae7086 ),
	NORM( 0x3f046bc1, 0x3f45001e, 0xbebfbeae ),
	VERT( 0x43030bfa, 0xc20a5c72, 0xc1b2f909 ),
	NORM( 0x3e9ec4c2, 0x3f5abfc6, 0xbed561c3 ),
	VERT( 0x43030bfa, 0xc20a5c72, 0xc1b2f909 ),
	NORM( 0xbf7fff88, 0x3b5e9e1c, 0xbad927d3 ),
	VERT( 0x43030bfa, 0xc22ec3ab, 0xc1daf693 ),
	NORM( 0xbf7fffa2, 0x3b3ee30d, 0x3ad98656 ),
	VERT( 0x43070283, 0xc20d5aa0, 0xc1a7a7dc ),
	NORM( 0x3f04b4c7, 0x3f44c31c, 0xbebfef47 ),
	VERT( 0x43030bfa, 0xc208b4ee, 0xc1ac305e ),
	NORM( 0x3e9ec4c2, 0x3f5abfc0, 0xbed561dc ),
	VERT( 0x43030bfa, 0xc208b4ee, 0xc1ac305e ),
	NORM( 0xbf7ffff5, 0x3a87f8c2, 0xba04a2c3 ),
	VERT( 0x42f935d4, 0xc23059a6, 0xc1e1bc2e ),
	NORM( 0xbab11a5d, 0xbedea816, 0xbf668677 ),
	VERT( 0x42f935d4, 0xc219e886, 0xc1f7a05a ),
	NORM( 0xbab11a5d, 0xbedea815, 0xbf668677 ),
	VERT( 0x43024ddf, 0xc21e00c2, 0xc1f3a1d6 ),
	NORM( 0xbab11a5d, 0xbedea815, 0xbf668677 ),
	VERT( 0x43024833, 0xc2307aef, 0xc1e1c90d ),
	NORM( 0xb9e94168, 0xbedfdb75, 0xbf663c0e ),
	VERT( 0x42f935d4, 0xc2096835, 0xc1b3f617 ),
	NORM( 0x342ef2d1, 0x3ee0722c, 0x3f66175f ),
	VERT( 0x42f935d4, 0xc21fd956, 0xc19e11ec ),
	NORM( 0x342ef2d1, 0x3ee0722d, 0x3f66175e ),
	VERT( 0x43024ddf, 0xc21fd956, 0xc19e11ec ),
	NORM( 0x342ef2d1, 0x3ee0722d, 0x3f66175e ),
	VERT( 0x43024ddf, 0xc20d8071, 0xc1aff794 ),
	NORM( 0x342ef2d1, 0x3ee0722d, 0x3f66175e ),
	VERT( 0x42e5437c, 0xc2173b25, 0xc1fa3cea ),
	NORM( 0x3b01d5c7, 0xbee0720e, 0xbf661741 ),
	VERT( 0x42ef5b0d, 0xc217dc68, 0xc1f99f9b ),
	NORM( 0x3b01d5c7, 0xbee0720e, 0xbf661741 ),
	VERT( 0x42ef5b0d, 0xc23059a6, 0xc1e1bc2e ),
	NORM( 0x3b01d5c7, 0xbee0720f, 0xbf661741 ),
	VERT( 0x43024833, 0xc27fe433, 0xc194528f ),
	NORM( 0x3171daf7, 0xbedc343e, 0xbf671d1b ),
	VERT( 0x43031675, 0xc2ba5072, 0x40e7e1df ),
	NORM( 0x35811838, 0xbf661765, 0x3ee07211 ),
	VERT( 0x4302436d, 0xc280534a, 0xc193b344 ),
	NORM( 0xb305d714, 0xbed9d624, 0xbf67ac87 ),
	VERT( 0x4302436d, 0xc2810a1e, 0xc1924e95 ),
	NORM( 0xb389b047, 0xbee07228, 0xbf66175f ),
	VERT( 0x42e531d8, 0xc2811e25, 0xc1922782 ),
	NORM( 0xb389b047, 0xbee07228, 0xbf66175f ),
	VERT( 0x42e531d8, 0xc2ae3c1c, 0xc0bea615 ),
	NORM( 0x3b467924, 0x3f66171a, 0xbee071e5 ),
	VERT( 0x42e531d8, 0xc2a12464, 0x40eeda85 ),
	NORM( 0xb28b7fe6, 0x3ee07294, 0x3f661745 ),
	VERT( 0x42e531d8, 0xc2a12464, 0x40eeda85 ),
	NORM( 0xb79b0c0a, 0x3f661736, 0xbee072d3 ),
	VERT( 0x4300f821, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0x3b467923, 0x3f66171a, 0xbee071e5 ),
	VERT( 0x4300f81e, 0xc2ae5023, 0xc0be09c8 ),
	NORM( 0x3b467923, 0x3f66171a, 0xbee071e5 ),
	VERT( 0x4300f368, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0xbf3504e6, 0x3e9eb51f, 0x3f22b304 ),
	VERT( 0x4300f368, 0xc261a213, 0xc08a4416 ),
	NORM( 0xbf13cd3a, 0x3f45a2a0, 0x3e881a3f ),
	VERT( 0x4300f368, 0xc2652c45, 0xc0c453e4 ),
	NORM( 0xbf3504f3, 0x3f22b2f8, 0xbe9eb513 ),
	VERT( 0x4300f368, 0xc2a2fd84, 0x40b56705 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0x4302436f, 0xc2a1386c, 0x40ef76d5 ),
	NORM( 0x00000000, 0x3ee07230, 0x3f66175e ),
	VERT( 0x4302436f, 0xc261a213, 0xc08a4416 ),
	NORM( 0x00000000, 0x3f720d68, 0x3ea6b175 ),
	VERT( 0x4302436d, 0xc2652c45, 0xc0c453e4 ),
	NORM( 0x00000000, 0x3f66175e, 0xbee07230 ),
	VERT( 0x4302436f, 0xc265300b, 0xc0c491ca ),
	NORM( 0x3f800000, 0xb5c87e0b, 0xb4ffdec2 ),
	VERT( 0x4302436f, 0xc265300b, 0xc0c491ca ),
	NORM( 0xba24862f, 0x3f66175a, 0xbee0722f ),
	VERT( 0x4302436d, 0xc2a2fd84, 0x40b56705 ),
	NORM( 0x3f800000, 0xb5c87e0b, 0xb4ffdec3 ),
	VERT( 0x42e531d8, 0xc265300b, 0xc0c491ca ),
	NORM( 0xba24862f, 0x3f66175a, 0xbee0722f ),
	VERT( 0x42e531d8, 0xc2b00f07, 0xc0da4d9f ),
	NORM( 0x3a1fee3e, 0xbef06ad2, 0xbf620595 ),
	VERT( 0x4302436d, 0xc2b00f07, 0xc0da4d9f ),
	NORM( 0x3a181f25, 0xbeefa4d2, 0xbf623a21 ),
	VERT( 0x42e53941, 0xc216316e, 0xc1a7a042 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e53941, 0xc2145ad4, 0xc1a01685 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e55738, 0xc2148de4, 0xc1a0e878 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e56172, 0xc2145ad4, 0xc1a01685 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e56172, 0xc216316e, 0xc1a7a042 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e55738, 0xc2162a68, 0xc1a78406 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e5437c, 0xc2162a68, 0xc1a78406 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42e5437c, 0xc2148de4, 0xc1a0e878 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42b81c0c, 0xc228e529, 0xc1773065 ),
	NORM( 0xbf6406b1, 0x3e4c122c, 0x3ed129ac ),
	VERT( 0x42b81c0c, 0xc22b3f87, 0xc173f8ce ),
	NORM( 0xbf64300a, 0x3dbd0b36, 0x3ee33a0a ),
	VERT( 0x42b979c4, 0xc22a9447, 0xc164c626 ),
	NORM( 0xbf50e343, 0x3dedf29a, 0x3f10f925 ),
	VERT( 0x42b979c4, 0xc22737bf, 0xc1695eb5 ),
	NORM( 0xbf509915, 0x3e8214ee, 0x3f056388 ),
	VERT( 0x42b81c0c, 0xc22db61b, 0xc1733169 ),
	NORM( 0xbf649b40, 0xbcad24c1, 0x3ee62e52 ),
	VERT( 0x42b979c4, 0xc22e191b, 0xc163a94a ),
	NORM( 0xbf51a0c9, 0xbcf2e195, 0x3f12bf0b ),
	VERT( 0x42b81c0c, 0xc2301df0, 0xc174e7cf ),
	NORM( 0xbf652e8a, 0xbe08f29f, 0x3ed99e8a ),
	VERT( 0x42b979c4, 0xc23188db, 0xc1661b8b ),
	NORM( 0xbf52a3f1, 0xbe31d1ca, 0x3f0a8786 ),
	VERT( 0x42b81c0c, 0xc2324d09, 0xc178fe12 ),
	NORM( 0xbf65c5b1, 0xbe738f10, 0x3ebe15fd ),
	VERT( 0x42b979c4, 0xc234a791, 0xc16bf237 ),
	NORM( 0xbf53ae0c, 0xbe9c9ff0, 0x3ef19e31 ),
	VERT( 0x42b81c0c, 0xc2341d4c, 0xc17f2cf0 ),
	NORM( 0xbf663b5b, 0xbea6e01e, 0x3e953b02 ),
	VERT( 0x42b979c4, 0xc2373ed1, 0xc174c784 ),
	NORM( 0xbf547fd1, 0xbed589a8, 0x3ebd87d8 ),
	VERT( 0x42b81c0c, 0xc2356f1b, 0xc1838448 ),
	NORM( 0xbf6672fe, 0xbec85969, 0x3e43b90e ),
	VERT( 0x42b979c4, 0xc2392165, 0xc180009c ),
	NORM( 0xbf54ea38, 0xbeff968f, 0x3e78e61e ),
	VERT( 0x42b81c0c, 0xc2362b6e, 0xc18803e9 ),
	NORM( 0xbf666149, 0xbedbb04d, 0x3d9f0d07 ),
	VERT( 0x42b979c4, 0xc23a2e6a, 0xc1866dc8 ),
	NORM( 0xbf54dac7, 0xbf0beba9, 0x3dcc2475 ),
	VERT( 0x42b81c0c, 0xc236456d, 0xc18cc6db ),
	NORM( 0xbf660f7a, 0xbedf9d05, 0xbd25da5b ),
	VERT( 0x42b979c4, 0xc23a538f, 0xc18d3b24 ),
	NORM( 0xbf546025, 0xbf0e5fc4, 0xbd4bcba4 ),
	VERT( 0x42b81c0c, 0xc235bb55, 0xc1917a15 ),
	NORM( 0xbf6597b4, 0xbed42784, 0xbe1e8977 ),
	VERT( 0x42b979c4, 0xc2398e46, 0xc193f20a ),
	NORM( 0xbf53a444, 0xbf071d8d, 0xbe478128 ),
	VERT( 0x42b81c0c, 0xc234968c, 0xc195cb98 ),
	NORM( 0xbf651d28, 0xbeba7852, 0xbe83e8f3 ),
	VERT( 0x42b979c4, 0xc237ec04, 0xc19a1d52 ),
	NORM( 0xbf52e03b, 0xbeed9266, 0xbea6d203 ),
	VERT( 0x42b81c0c, 0xc232eb0a, 0xc1997006 ),
	NORM( 0xbf64c1d2, 0xbe948e6a, 0xbeaf5f88 ),
	VERT( 0x42b979c4, 0xc235894b, 0xc19f515c ),
	NORM( 0xbf524c2a, 0xbebd2d6d, 0xbede62eb ),
	VERT( 0x42b81c0c, 0xc230d5f1, 0xc19c27d6 ),
	NORM( 0xbf649e06, 0xbe49f6bb, 0xbecf1527 ),
	VERT( 0x42b979c4, 0xc2328fb7, 0xc1a33364 ),
	NORM( 0xbf5210ac, 0xbe804f3d, 0xbf03808c ),
	VERT( 0x42b81c0c, 0xc22e7b91, 0xc19dc3a4 ),
	NORM( 0xbf64baab, 0xbdbae677, 0xbee12676 ),
	VERT( 0x42b979c4, 0xc22f3332, 0xc1a57faa ),
	NORM( 0xbf523cec, 0xbdeb7715, 0xbf0f1282 ),
	VERT( 0x42b81c0c, 0xc22c04fe, 0xc19e2755 ),
	NORM( 0xbf650f71, 0x3cae5cc0, 0xbee45d88 ),
	VERT( 0x42b979c4, 0xc22bae5b, 0xc1a60e19 ),
	NORM( 0xbf52c31f, 0x3cec5ba9, 0xbf111f8a ),
	VERT( 0x42b81c0c, 0xc2299d2a, 0xc19d4c22 ),
	NORM( 0xbf65847a, 0x3e0888bc, 0xbed843d1 ),
	VERT( 0x42b979c4, 0xc2283e9c, 0xc1a4d4f8 ),
	NORM( 0xbf537ba1, 0x3e2fbbcf, 0xbf096853 ),
	VERT( 0x42b81c0c, 0xc2276e10, 0xc19b4101 ),
	NORM( 0xbf65f80a, 0x3e7319cf, 0xbebd478a ),
	VERT( 0x42b979c4, 0xc2251fe5, 0xc1a1e9a2 ),
	NORM( 0xbf542ee9, 0x3e9b84af, 0xbef09070 ),
	VERT( 0x42b81c0c, 0xc2259dca, 0xc1982994 ),
	NORM( 0xbf66473f, 0x3ea6e7ec, 0xbe94e8d1 ),
	VERT( 0x42b979c4, 0xc22288a8, 0xc19d7f02 ),
	NORM( 0xbf54a433, 0x3ed4f7fd, 0xbebd8888 ),
	VERT( 0x42b81c0c, 0xc2244bfb, 0xc1943bc5 ),
	NORM( 0xbf6657fc, 0x3ec8dae3, 0xbe43a2f1 ),
	VERT( 0x42b979c4, 0xc220a613, 0xc197e22a ),
	NORM( 0xbf54b19c, 0x3f00023c, 0xbe7a27e2 ),
	VERT( 0x42b81c0c, 0xc2238faa, 0xc18fbc22 ),
	NORM( 0xbf662115, 0x3edcbf61, 0xbd9ed414 ),
	VERT( 0x42b979c4, 0xc21f990e, 0xc19174fd ),
	NORM( 0xbf544892, 0x3f0cb9f5, 0xbdcebc43 ),
	VERT( 0x42b81c0c, 0xc22375ac, 0xc18af92f ),
	NORM( 0xbf65ade8, 0x3ee1247c, 0x3d28a9d6 ),
	VERT( 0x42b979c4, 0xc21f73e8, 0xc18aa79a ),
	NORM( 0xbf537bb4, 0x3f0fb2ed, 0x3d4b4fab ),
	VERT( 0x42b81c0c, 0xc223ffc5, 0xc18645f6 ),
	NORM( 0xbf651ad4, 0x3ed5f100, 0x3e20368c ),
	VERT( 0x42b979c4, 0xc2203931, 0xc183f0b4 ),
	NORM( 0xbf5279f2, 0x3f08bf2c, 0x3e496f98 ),
	VERT( 0x42b81c0c, 0xc225248d, 0xc181f471 ),
	NORM( 0xbf648d24, 0x3ebc3e68, 0x3e85497d ),
	VERT( 0x42b979c4, 0xc221db72, 0xc17b8ad8 ),
	NORM( 0xbf518277, 0x3ef0ddcd, 0x3ea8f7d6 ),
	VERT( 0x42b81c0c, 0xc226d00c, 0xc17ca00b ),
	NORM( 0xbf6428a5, 0x3e960f7f, 0x3eb1336c ),
	VERT( 0x42b979c4, 0xc2243e2d, 0xc17122c1 ),
	NORM( 0xbf50d352, 0x3ebfecc6, 0x3ee18ee9 ),
	VERT( 0x42b77c4e, 0xc22aa440, 0xc182c3c5 ),
	NORM( 0xbf7c969a, 0x3d921866, 0x3e15c151 ),
	VERT( 0x42b77c4e, 0xc22bf596, 0xc181dd2d ),
	NORM( 0xbf7c9b3d, 0x3d082a69, 0x3e22a836 ),
	VERT( 0x42b77c4e, 0xc22d56b3, 0xc181a557 ),
	NORM( 0xbf7ca780, 0xbbec7e08, 0x3e24d8a0 ),
	VERT( 0x42b77c4e, 0xc22eaf91, 0xc1822016 ),
	NORM( 0xbf7cb857, 0xbd429aeb, 0x3e1bfb29 ),
	VERT( 0x42b77c4e, 0xc22fe8aa, 0xc183450c ),
	NORM( 0xbf7cc94e, 0xbdadf13b, 0x3e085ef9 ),
	VERT( 0x42b77c4e, 0xc230eca7, 0xc185003c ),
	NORM( 0xbf7cd5b8, 0xbdef1f9f, 0x3dd63b0d ),
	VERT( 0x42b77c4e, 0xc231a9d2, 0xc187337b ),
	NORM( 0xbf7cda1f, 0xbe0fe4ea, 0x3d8c57af ),
	VERT( 0x42b77c4e, 0xc2321347, 0xc189b862 ),
	NORM( 0xbf7cd52d, 0xbe1e12dd, 0x3ce212e2 ),
	VERT( 0x42b77c4e, 0xc23221d8, 0xc18c6305 ),
	NORM( 0xbf7cc82b, 0xbe211d80, 0xbc773d3c ),
	VERT( 0x42b77c4e, 0xc231d482, 0xc18f04d3 ),
	NORM( 0xbf7cb6c0, 0xbe190185, 0xbd670c5c ),
	VERT( 0x42b77c4e, 0xc231308e, 0xc1916fea ),
	NORM( 0xbf7ca57e, 0xbe0699b8, 0xbdbf92af ),
	VERT( 0x42b77c4e, 0xc2304126, 0xc1937a10 ),
	NORM( 0xbf7c98fd, 0xbdd6b3ca, 0xbdfe4447 ),
	VERT( 0x42b77c4e, 0xc22f169c, 0xc194ffbd ),
	NORM( 0xbf7c9444, 0xbd924417, 0xbe15f59f ),
	VERT( 0x42b77c4e, 0xc22dc548, 0xc195e652 ),
	NORM( 0xbf7c98a1, 0xbd0856d2, 0xbe22e69c ),
	VERT( 0x42b77c4e, 0xc22c642a, 0xc1961e2a ),
	NORM( 0xbf7ca4c9, 0x3becea23, 0xbe251b00 ),
	VERT( 0x42b77c4e, 0xc22b0b4c, 0xc195a36a ),
	NORM( 0xbf7cb5be, 0x3d42e1f0, 0xbe1c38d9 ),
	VERT( 0x42b77c4e, 0xc229d232, 0xc1947e76 ),
	NORM( 0xbf7cc6f6, 0x3dae2a90, 0xbe08921e ),
	VERT( 0x42b77c4e, 0xc228ce34, 0xc192c33e ),
	NORM( 0xbf7cd3d9, 0x3def5fa5, 0xbdd680c7 ),
	VERT( 0x42b77c4e, 0xc2281108, 0xc1908fff ),
	NORM( 0xbf7cd8c2, 0x3e1001b6, 0xbd8c7edd ),
	VERT( 0x42b77c4e, 0xc227a793, 0xc18e0b17 ),
	NORM( 0xbf7cd467, 0x3e1e2519, 0xbce25957 ),
	VERT( 0x42b77c4e, 0xc2279905, 0xc18b607d ),
	NORM( 0xbf7cc817, 0x3e212011, 0x3c76e121 ),
	VERT( 0x42b77c4e, 0xc227e65c, 0xc188bead ),
	NORM( 0xbf7cb75b, 0x3e18f5b4, 0x3d66e004 ),
	VERT( 0x42b77c4e, 0xc2288a51, 0xc1865395 ),
	NORM( 0xbf7ca6c8, 0x3e06837a, 0x3dbf6456 ),
	VERT( 0x42b77c4e, 0xc22979b7, 0xc1844972 ),
	NORM( 0xbf7c9ade, 0x3dd6801b, 0x3dfdf861 ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_VM_forR[]
START
VList      vertex_Racing_Cont_VM_forR,
PList      strip_Racing_Cont_VM_forR,
Center      114.651085F, -66.746819F, -8.192528F,
Radius      43.508205F,
END

CNKOBJECT  object_Racing_Cont_VM_forR[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Racing_Cont_VM_forR,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_S_button[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 70, 0 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 132, _NB( UFO_0, 7 ),
	StripR(16),  2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 
                   7, 23, 8, 24, 9, 25, 
	StripL(28),  9, 10, 25, 26, 41, 42, 57, 58, 56, 59, 
                   55, 60, 54, 61, 53, 62, 52, 63, 51, 48, 
                   50, 49, 34, 33, 18, 17, 2, 1, 
	StripR(16),  10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 
                   15, 31, 0, 16, 1, 17, 
	StripR(16),  41, 25, 40, 24, 39, 23, 38, 22, 37, 21, 
                   36, 20, 35, 19, 34, 18, 
	StripR(16),  26, 42, 27, 43, 28, 44, 29, 45, 30, 46, 
                   31, 47, 16, 32, 17, 33, 
	StripR(16),  57, 41, 56, 40, 55, 39, 54, 38, 53, 37, 
                   52, 36, 51, 35, 50, 34, 
	StripR(16),  42, 58, 43, 59, 44, 60, 45, 61, 46, 62, 
                   47, 63, 32, 48, 33, 49, 
	CnkEnd()
END

VLIST      vertex_Racing_Cont_S_button[]
START
	CnkV_VN(0x0, 385),
	OffnbIdx(0, 64),
	VERT( 0xc1b1fe2f, 0xc13df36d, 0x42ab946f ),
	NORM( 0xb9e2106b, 0xbf3504f5, 0x3f3504ef ),
	VERT( 0xc19c842b, 0xc13a1580, 0x42aa8e5c ),
	NORM( 0x3eca9bf9, 0xbf263e2e, 0x3f263e29 ),
	VERT( 0xc18a377b, 0xc12f1266, 0x42a7a406 ),
	NORM( 0x3f395132, 0xbef9c62d, 0x3ef9c627 ),
	VERT( 0xc17bc295, 0xc11e9750, 0x42a3470e ),
	NORM( 0x3f6f526c, 0xbe8089b4, 0x3e8089b6 ),
	VERT( 0xc172c4d5, 0xc10b268a, 0x429e2181 ),
	NORM( 0x3f7fddc7, 0x3cbb2e54, 0xbcbb2e23 ),
	VERT( 0xc17ad425, 0xc0ef6bac, 0x4298fbf4 ),
	NORM( 0x3f694813, 0x3e951a26, 0xbe951a23 ),
	VERT( 0xc1895b33, 0xc0ce7580, 0x42949efc ),
	NORM( 0x3f301c0a, 0x3f03614d, 0xbf036149 ),
	VERT( 0xc19b645b, 0xc0b86f4c, 0x4291b4a6 ),
	NORM( 0x3ebc638d, 0x3f2851fe, 0xbf2851f9 ),
	VERT( 0xc1b0c6a7, 0xc0b0b35c, 0x4290ae92 ),
	NORM( 0x39cecd5b, 0x3f3504f5, 0xbf3504f0 ),
	VERT( 0xc1c640ab, 0xc0b86f4c, 0x4291b4a6 ),
	NORM( 0xbebacbfe, 0x3f288abb, 0xbf288ab7 ),
	VERT( 0xc1d88d5b, 0xc0ce7580, 0x42949efc ),
	NORM( 0xbf2e44b9, 0x3f049a15, 0xbf049a12 ),
	VERT( 0xc1e4e38b, 0xc0ef6bac, 0x4298fbf4 ),
	NORM( 0xbf6771c5, 0x3e9ab8e3, 0xbe9ab8e3 ),
	VERT( 0xc1e9626b, 0xc10b268a, 0x429e2181 ),
	NORM( 0xbf7fa314, 0x3d1a2d87, 0xbd1a2da7 ),
	VERT( 0xc1e55ac3, 0xc11e9750, 0x42a3470e ),
	NORM( 0xbf70fdbf, 0xbe744858, 0x3e744853 ),
	VERT( 0xc1d969a3, 0xc12f1266, 0x42a7a406 ),
	NORM( 0xbf3b6322, 0xbef6aa79, 0x3ef6aa73 ),
	VERT( 0xc1c7607b, 0xc13a1580, 0x42aa8e5c ),
	NORM( 0xbecc8e3b, 0xbf25f1d7, 0x3f25f1d2 ),
	VERT( 0xc1b1fe2f, 0xc0ce0f80, 0x42b671e5 ),
	NORM( 0xba177ded, 0xbec5b74e, 0x3f6c245e ),
	VERT( 0xc19c842b, 0xc0c653a4, 0x42b56bd2 ),
	NORM( 0x3ecabebf, 0xbea9f0c8, 0x3f5b2df5 ),
	VERT( 0xc18a377b, 0xc0b04d70, 0x42b2817c ),
	NORM( 0x3f36aafb, 0xbe3a0dca, 0x3f2d3827 ),
	VERT( 0xc17bc295, 0xc08f5744, 0x42ae2484 ),
	NORM( 0x3f677209, 0x3d047276, 0x3eda2dbd ),
	VERT( 0xc172c4d5, 0xc050eb70, 0x42a8fef6 ),
	NORM( 0x3f734b4b, 0x3e8b8990, 0x3e19b0d4 ),
	VERT( 0xc17ad425, 0xc00328a0, 0x42a3d96a ),
	NORM( 0x3f5b69c5, 0x3f00c403, 0xbde4247b ),
	VERT( 0xc1895b33, 0xbf82788f, 0x429f7c72 ),
	NORM( 0x3f24f0f7, 0x3f313d47, 0xbea65500 ),
	VERT( 0xc19b645b, 0xbea97efe, 0x429c921c ),
	NORM( 0x3eb07cab, 0x3f50df41, 0xbeedab0b ),
	VERT( 0xc1b0c6a7, 0xbdb6fff8, 0x429b8c08 ),
	NORM( 0x3a325207, 0x3f5bc133, 0xbf0350da ),
	VERT( 0xc1c640ab, 0xbea97efe, 0x429c921c ),
	NORM( 0xbeaec69c, 0x3f50de25, 0xbeeef1c8 ),
	VERT( 0xc1d88d5b, 0xbf82788f, 0x429f7c72 ),
	NORM( 0xbf2348bf, 0x3f31e155, 0xbeaa17d4 ),
	VERT( 0xc1e4e38b, 0xc00328a0, 0x42a3d96a ),
	NORM( 0xbf59e975, 0x3f0283bc, 0xbdff09ed ),
	VERT( 0xc1e9626b, 0xc050eb70, 0x42a8fef6 ),
	NORM( 0xbf732bbd, 0x3e908065, 0x3e099f98 ),
	VERT( 0xc1e55ac3, 0xc08f5744, 0x42ae2484 ),
	NORM( 0xbf68d6d0, 0x3d28638e, 0x3ed3c40b ),
	VERT( 0xc1d969a3, 0xc0b04d70, 0x42b2817c ),
	NORM( 0xbf38680c, 0xbe34dd15, 0x3f2bb6da ),
	VERT( 0xc1c7607b, 0xc0c653a4, 0x42b56bd2 ),
	NORM( 0xbecc8910, 0xbea917c8, 0x3f5aed6b ),
	VERT( 0xc1b1f8b3, 0xc0ae8dec, 0x42b6737e ),
	NORM( 0xb79e6a71, 0x3e93d28b, 0x3f751924 ),
	VERT( 0xc19ea47f, 0xc0a797f8, 0x42b5879f ),
	NORM( 0x3e935685, 0x3ea5c9db, 0x3f66bb7c ),
	VERT( 0xc18e2c43, 0xc093c5a4, 0x42b2e7ec ),
	NORM( 0x3f0242c7, 0x3ed61d5e, 0x3f40a19f ),
	VERT( 0xc18311e7, 0xc06c3690, 0x42aefaa7 ),
	NORM( 0x3f20be37, 0x3f0c236e, 0x3f0da125 ),
	VERT( 0xc17e0c35, 0xc0263a38, 0x42aa58db ),
	NORM( 0x3f24147d, 0x3f2f783e, 0x3eb0e87e ),
	VERT( 0xc182a69b, 0xbfc07bff, 0x42a5b70e ),
	NORM( 0x3f0ffa34, 0x3f4fae83, 0x3e23b2f0 ),
	VERT( 0xc18d6603, 0xbf13a4ff, 0x42a1c9c9 ),
	NORM( 0x3ed3ebc7, 0x3f69020a, 0x3c7d44b2 ),
	VERT( 0xc19da177, 0x3d2ee611, 0x429f2a14 ),
	NORM( 0x3e5fe5cf, 0x3f790a61, 0xbd9c4aa5 ),
	VERT( 0xc1b0e053, 0x3e853a82, 0x429e3e36 ),
	NORM( 0x38cfd63a, 0x3f7e77ab, 0xbddfc273 ),
	VERT( 0xc1c4348b, 0x3d2ee611, 0x429f2a14 ),
	NORM( 0xbe5fa03c, 0x3f78f370, 0xbda6a468 ),
	VERT( 0xc1d4acc3, 0xbf13a4ff, 0x42a1c9c9 ),
	NORM( 0xbed3f993, 0x3f69065b, 0x3bb92071 ),
	VERT( 0xc1dfc723, 0xbfc07bff, 0x42a5b70e ),
	NORM( 0xbf107117, 0x3f4ffe9a, 0x3e163ec9 ),
	VERT( 0xc1e3d2eb, 0xc0263a38, 0x42aa58db ),
	NORM( 0xbf254511, 0x3f300d3e, 0x3eaa0815 ),
	VERT( 0xc1e0326f, 0xc06c3690, 0x42aefaa7 ),
	NORM( 0xbf2276c4, 0x3f0cb7b7, 0x3f0b1183 ),
	VERT( 0xc1d57303, 0xc093c5a4, 0x42b2e7ec ),
	NORM( 0xbf03bc36, 0x3ed6b5a1, 0x3f3f75ab ),
	VERT( 0xc1c53793, 0xc0a797f8, 0x42b5879f ),
	NORM( 0xbe947242, 0x3ea5db07, 0x3f668aea ),
	VERT( 0xc1b20943, 0xc07bf770, 0x42b42b84 ),
	NORM( 0xb9a63f25, 0x3f416c65, 0x3f27b344 ),
	VERT( 0xc1a46db7, 0xc0722aa0, 0x42b38578 ),
	NORM( 0x3dd8cbd0, 0x3f442d07, 0x3f22395a ),
	VERT( 0xc198d57f, 0xc05641c0, 0x42b1ac97 ),
	NORM( 0x3e4073fc, 0x3f4b5e7b, 0x3f13dbc7 ),
	VERT( 0xc191047b, 0xc02c7cf8, 0x42aee8e2 ),
	NORM( 0x3e6f8e2d, 0x3f552d2e, 0x3f0078e4 ),
	VERT( 0xc18e2b47, 0xbff66fbf, 0x42aba614 ),
	NORM( 0x3e77ece1, 0x3f5fc733, 0x3ed79211 ),
	VERT( 0xc190b8ef, 0xbf93e58f, 0x42a86346 ),
	NORM( 0x3e5d4884, 0x3f69b708, 0x3eb13bc0 ),
	VERT( 0xc19849ef, 0xbf00b83f, 0x42a59f91 ),
	NORM( 0x3e259975, 0x3f71d629, 0x3e921c81 ),
	VERT( 0xc1a3b75b, 0xbd88a5f8, 0x42a3c6af ),
	NORM( 0x3db0daa8, 0x3f77340f, 0x3e7b01df ),
	VERT( 0xc1b143df, 0x3db0f408, 0x42a320a3 ),
	NORM( 0xba1225c0, 0x3f792006, 0x3e6bb7a0 ),
	VERT( 0xc1bedf6b, 0xbd88a5f8, 0x42a3c6af ),
	NORM( 0xbdb3c6f3, 0x3f7756af, 0x3e785793 ),
	VERT( 0xc1ca77a3, 0xbf00b83f, 0x42a59f91 ),
	NORM( 0xbe281c43, 0x3f721830, 0x3e8faa5d ),
	VERT( 0xc1d248ab, 0xbf93e58f, 0x42a86346 ),
	NORM( 0xbe61756a, 0x3f6a0776, 0x3eae3bf2 ),
	VERT( 0xc1d521db, 0xbff66fbf, 0x42aba614 ),
	NORM( 0xbe7dad51, 0x3f6006b8, 0x3ed4d97f ),
	VERT( 0xc1d29433, 0xc02c7cf8, 0x42aee8e2 ),
	NORM( 0xbe75b530, 0x3f553df8, 0x3eff44d6 ),
	VERT( 0xc1cb0337, 0xc05641c0, 0x42b1ac97 ),
	NORM( 0xbe4519b2, 0x3f4b3e5c, 0x3f13a5f4 ),
	VERT( 0xc1bf95c7, 0xc0722aa0, 0x42b38578 ),
	NORM( 0xbddcd477, 0x3f44040b, 0x3f22551f ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_S_button[]
START
VList      vertex_Racing_Cont_S_button,
PList      strip_Racing_Cont_S_button,
Center      -22.173056F, -5.805859F, 81.783264F,
Radius      11.754027F,
END

CNKOBJECT  object_Racing_Cont_S_button[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Racing_Cont_S_button,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_P_button[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 70, 0 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 124, _NB( UFO_0, 4 ),
	StripL(34),  16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 
                   21, 6, 22, 7, 23, 8, 24, 9, 25, 10, 
                   26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 
                   31, 0, 16, 1, 
	StripL(34),  16, 47, 31, 46, 30, 45, 29, 44, 28, 43, 
                   27, 42, 26, 41, 25, 40, 24, 39, 23, 38, 
                   22, 37, 21, 36, 20, 35, 19, 34, 18, 33, 
                   17, 32, 16, 47, 
	StripL(34),  47, 62, 46, 61, 45, 60, 44, 59, 43, 58, 
                   42, 57, 41, 56, 40, 55, 39, 54, 38, 53, 
                   37, 52, 36, 51, 35, 50, 34, 49, 33, 48, 
                   32, 63, 47, 62, 
	StripL(16),  49, 50, 48, 51, 63, 52, 62, 53, 61, 54, 
                   60, 55, 59, 56, 58, 57, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_Racing_Cont_P_button[]
START
	CnkV_VN(0x0, 385),
	OffnbIdx(0, 64),
	VERT( 0x42991fcd, 0x429a653d, 0x419e42c8 ),
	NORM( 0x3f680b35, 0x3e98ea8a, 0xbe98ea90 ),
	VERT( 0x4294a83f, 0x429f2ff2, 0x4188ee9d ),
	NORM( 0x3f440979, 0x3ee8d521, 0xbee8d520 ),
	VERT( 0x428f0026, 0x42a21ef5, 0x416e1596 ),
	NORM( 0x3f0628f2, 0x3f1a2bac, 0xbf1a2ba5 ),
	VERT( 0x428903f9, 0x42a2bfef, 0x4156a11a ),
	NORM( 0x3dc94e73, 0x3f34248a, 0xbf34248a ),
	VERT( 0x42839cf8, 0x42a0fa61, 0x414f11e2 ),
	NORM( 0xbef1241d, 0x3f1faf69, 0xbf1faf6d ),
	VERT( 0x427f3b65, 0x429d1354, 0x41588e98 ),
	NORM( 0xbf5d8190, 0x3eb57fe2, 0xbeb57fe5 ),
	VERT( 0x427b43dc, 0x4297a2e3, 0x4171a572 ),
	NORM( 0xbf7e5fd8, 0x3da2f089, 0xbda2f08e ),
	VERT( 0x427bedf5, 0x42917d0c, 0x418b424f ),
	NORM( 0xbf7b8558, 0xbe06db0b, 0x3e06db02 ),
	VERT( 0x42808fe5, 0x428b9167, 0x41a0c78d ),
	NORM( 0xbf680aca, 0xbe98ebd3, 0x3e98ebd4 ),
	VERT( 0x42850772, 0x4286c6b2, 0x41b61bb6 ),
	NORM( 0xbf469dbe, 0xbee46b42, 0x3ee46b42 ),
	VERT( 0x428aaf8a, 0x4283d7b0, 0x41c7ff88 ),
	NORM( 0xbf0f79e6, 0xbf15eaed, 0x3f15eae6 ),
	VERT( 0x4290abb9, 0x428336b6, 0x41d3b9c6 ),
	NORM( 0xbe4640f7, 0xbf319826, 0x3f319821 ),
	VERT( 0x429612b9, 0x4284fc44, 0x41d78163 ),
	NORM( 0x3eafa2cf, 0xbf2a0909, 0x3f2a0909 ),
	VERT( 0x429a1200, 0x4288e350, 0x41d2c308 ),
	NORM( 0x3f4f7823, 0xbed418c2, 0x3ed418bc ),
	VERT( 0x429c0dc3, 0x428e53c0, 0x41c6379d ),
	NORM( 0x3f7ccdf0, 0xbde4194b, 0x3de4195d ),
	VERT( 0x429bb8b7, 0x42947998, 0x41b3c807 ),
	NORM( 0x3f7c4345, 0x3df68b2e, 0xbdf68b31 ),
	VERT( 0x42991fcd, 0x42a542b3, 0x41c9b89f ),
	NORM( 0x3f577dd8, 0x3f0a2611, 0xbc722d33 ),
	VERT( 0x4294a83f, 0x42aa0d69, 0x41b46477 ),
	NORM( 0x3f2ebc5a, 0x3f3618cb, 0xbe2bc64a ),
	VERT( 0x428f0026, 0x42acfc6b, 0x41a280a5 ),
	NORM( 0x3ed3a716, 0x3f5dbc9d, 0xbe8fccbb ),
	VERT( 0x428903f9, 0x42ad9d65, 0x4196c667 ),
	NORM( 0x3ba30be2, 0x3f70881a, 0xbeaf423b ),
	VERT( 0x42839cf8, 0x42abd7d7, 0x4192fec8 ),
	NORM( 0xbef4cc8d, 0x3f542748, 0xbe94eee6 ),
	VERT( 0x427f3b65, 0x42a7f0ca, 0x4197bd23 ),
	NORM( 0xbf54ff99, 0x3f0c0c2e, 0xbdbc5b2a ),
	VERT( 0x427b43dc, 0x42a28059, 0x41a44890 ),
	NORM( 0xbf74cc82, 0x3e854bfb, 0x3e08acee ),
	VERT( 0x427bedf5, 0x429c5a81, 0x41b6b825 ),
	NORM( 0xbf72f26e, 0x3d36f266, 0x3e9fc66f ),
	VERT( 0x42808fe5, 0x42966edc, 0x41cc3d64 ),
	NORM( 0xbf6122cf, 0xbdf169ce, 0x3eec20e3 ),
	VERT( 0x42850772, 0x4291a428, 0x41e1918c ),
	NORM( 0xbf41d4e3, 0xbe7fe8a4, 0x3f1a81a5 ),
	VERT( 0x428aaf8a, 0x428eb525, 0x41f3755e ),
	NORM( 0xbf0de3f0, 0xbeb92794, 0x3f3feb0a ),
	VERT( 0x4290abb9, 0x428e142b, 0x41ff2f9d ),
	NORM( 0xbe55f107, 0xbedc7ea2, 0x3f60c4b7 ),
	VERT( 0x429612b9, 0x428fd9ba, 0x42017b9d ),
	NORM( 0x3e8cbcdc, 0xbeb90731, 0x3f641739 ),
	VERT( 0x429a1200, 0x4293c0c6, 0x41fe38e2 ),
	NORM( 0x3f2f53da, 0xbdfebef4, 0x3f37ccad ),
	VERT( 0x429c0dc3, 0x42993137, 0x41f1ad76 ),
	NORM( 0x3f625a91, 0x3e1066de, 0x3ee401a0 ),
	VERT( 0x429bb8b7, 0x429f570e, 0x41df3de1 ),
	NORM( 0x3f6a3940, 0x3eb6f250, 0x3e4029eb ),
	VERT( 0x4297e9be, 0x42a5dafc, 0x41cf3e4b ),
	NORM( 0x3edc8da3, 0x3f43a49c, 0x3ef5c147 ),
	VERT( 0x4293e48b, 0x42aa2b04, 0x41bc0c25 ),
	NORM( 0x3e9d0cc7, 0x3f5f986b, 0x3ec1a604 ),
	VERT( 0x428ecd42, 0x42acceed, 0x41abf24f ),
	NORM( 0x3dcaa6cb, 0x3f715ad1, 0x3ea2ffdb ),
	VERT( 0x42896a4d, 0x42ad5fce, 0x41a16447 ),
	NORM( 0xbe370dd5, 0x3f6f7cf4, 0x3e9c0a5a ),
	VERT( 0x42848d99, 0x42abc79b, 0x419dfd6e ),
	NORM( 0xbeecbd96, 0x3f5127b1, 0x3eb064ac ),
	VERT( 0x4280f4a6, 0x42a84476, 0x41a2425d ),
	NORM( 0xbf2741c9, 0x3f20e77e, 0x3ed81068 ),
	VERT( 0x427e5753, 0x42a35f43, 0x41ad8ca4 ),
	NORM( 0xbf3c7d22, 0x3ee655c7, 0x3f016674 ),
	VERT( 0x427ef069, 0x429dd6cf, 0x41be2443 ),
	NORM( 0xbf3fc431, 0x3e9d5dfd, 0x3f163c28 ),
	VERT( 0x4281cea1, 0x429882ba, 0x41d18293 ),
	NORM( 0xbf36c126, 0x3e4d2e8e, 0x3f2bc599 ),
	VERT( 0x4285d3d3, 0x429432b1, 0x41e4b4bc ),
	NORM( 0xbf22d246, 0x3e025cdd, 0x3f42d751 ),
	VERT( 0x428aeb1c, 0x42918ec9, 0x41f4ce8f ),
	NORM( 0xbf027e32, 0x3db731ec, 0x3f5b0cfa ),
	VERT( 0x42904e12, 0x4290fde8, 0x41ff5c97 ),
	NORM( 0xbea2fa89, 0x3dc29278, 0x3f71764d ),
	VERT( 0x42952ac7, 0x4292961b, 0x420161b7 ),
	NORM( 0xbd5a111f, 0x3e2a47e9, 0x3f7c1147 ),
	VERT( 0x4298c3b9, 0x4296193f, 0x41fe7e82 ),
	NORM( 0x3e611adc, 0x3e9ecdc0, 0x3f6cc772 ),
	VERT( 0x429a8cb5, 0x429afe71, 0x41f3343d ),
	NORM( 0x3ecd1763, 0x3ef4e28d, 0x3f48120f ),
	VERT( 0x429a402a, 0x42a086e6, 0x41e29c9d ),
	NORM( 0x3eee789c, 0x3f21b3cb, 0x3f1ea78c ),
	VERT( 0x4294a717, 0x42a52351, 0x41d5219a ),
	NORM( 0xbd9e5106, 0x3f2dc846, 0x3f3aeef0 ),
	VERT( 0x4291d288, 0x42a82c8f, 0x41c79e0c ),
	NORM( 0xbdeffa53, 0x3f35f480, 0x3f31900e ),
	VERT( 0x428e3d06, 0x42aa0865, 0x41bc4845 ),
	NORM( 0xbe3e6568, 0x3f397d38, 0x3f29e4f8 ),
	VERT( 0x428a723c, 0x42aa6e65, 0x41b4da10 ),
	NORM( 0xbe8eed5f, 0x3f3607f2, 0x3f253539 ),
	VERT( 0x428705f6, 0x42a94f04, 0x41b274fb ),
	NORM( 0xbec1c25f, 0x3f29d88b, 0x3f253c40 ),
	VERT( 0x42847d9e, 0x42a6d606, 0x41b57667 ),
	NORM( 0xbee724a1, 0x3f180980, 0x3f2a7b43 ),
	VERT( 0x42833be5, 0x42a363c5, 0x41bd6928 ),
	NORM( 0xbef90068, 0x3f075116, 0x3f321d6d ),
	VERT( 0x428371c7, 0x429f7e95, 0x41c9177a ),
	NORM( 0xbefccb62, 0x3ef4602c, 0x3f3a174e ),
	VERT( 0x42851712, 0x429bbe45, 0x41d6ba22 ),
	NORM( 0xbef6d826, 0x3ee0e6c4, 0x3f420e62 ),
	VERT( 0x4287eba0, 0x4298b508, 0x41e43daf ),
	NORM( 0xbee86290, 0x3ed350ac, 0x3f4a2aef ),
	VERT( 0x428b8124, 0x4296d931, 0x41ef9378 ),
	NORM( 0xbecff746, 0x3ecc1df9, 0x3f527e63 ),
	VERT( 0x428f4bee, 0x42967333, 0x41f701b1 ),
	NORM( 0xbeaab301, 0x3ece5bd8, 0x3f5a2fcf ),
	VERT( 0x4292b833, 0x42979292, 0x41f966c4 ),
	NORM( 0xbe727c1e, 0x3edfda81, 0x3f5e1c84 ),
	VERT( 0x4295408c, 0x429a0b92, 0x41f6655c ),
	NORM( 0xbe138ff5, 0x3f004044, 0x3f5a76ed ),
	VERT( 0x42968244, 0x429d7dd0, 0x41ee7297 ),
	NORM( 0xbdae48c5, 0x3f1258e0, 0x3f50e946 ),
	VERT( 0x42964c60, 0x42a16300, 0x41e2c447 ),
	NORM( 0xbd84f94b, 0x3f21f508, 0x3f458f22 ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_P_button[]
START
VList      vertex_Racing_Cont_P_button,
PList      strip_Racing_Cont_P_button,
Center      70.421570F, 76.207138F, 22.656292F,
Radius      14.378314F,
END

CNKOBJECT  object_Racing_Cont_P_button[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Racing_Cont_P_button,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Racing_Cont_S_button,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_M_button[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 70, 0 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 132, _NB( UFO_0, 7 ),
	StripR(16),  2, 0, 3, 30, 31, 28, 29, 26, 27, 24, 
                   25, 22, 23, 20, 21, 18, 
	StripR(16),  19, 16, 17, 14, 15, 12, 13, 10, 11, 8, 
                   9, 6, 7, 4, 5, 1, 
	StripL(28),  21, 19, 18, 16, 40, 39, 55, 54, 56, 53, 
                   57, 52, 58, 51, 59, 50, 60, 49, 61, 48, 
                   62, 63, 47, 32, 0, 1, 2, 5, 
	StripR(16),  16, 39, 14, 38, 12, 37, 10, 36, 8, 35, 
                   6, 34, 4, 33, 1, 32, 
	StripR(16),  40, 18, 41, 20, 42, 22, 43, 24, 44, 26, 
                   45, 28, 46, 30, 47, 0, 
	StripR(16),  55, 40, 56, 41, 57, 42, 58, 43, 59, 44, 
                   60, 45, 61, 46, 62, 47, 
	StripR(16),  63, 32, 48, 33, 49, 34, 50, 35, 51, 36, 
                   52, 37, 53, 38, 54, 39, 
	CnkEnd()
END

VLIST      vertex_Racing_Cont_M_button[]
START
	CnkV_VN(0x0, 385),
	OffnbIdx(0, 64),
	VERT( 0xc2f1ff8d, 0x42a542b3, 0x41c9b89f ),
	NORM( 0xbf577dda, 0x3f0a260d, 0xbc722f64 ),
	VERT( 0xc2ed87ff, 0x42aa0d69, 0x41b46477 ),
	NORM( 0xbf2ebc5f, 0x3f3618c6, 0xbe2bc64e ),
	VERT( 0xc2ed87ff, 0x429f2ff2, 0x4188ee9d ),
	NORM( 0xbf44097c, 0x3ee8d51a, 0xbee8d51d ),
	VERT( 0xc2f1ff8d, 0x429a653d, 0x419e42c8 ),
	NORM( 0xbf680b34, 0x3e98ea8e, 0xbe98ea91 ),
	VERT( 0xc2e7dfe6, 0x42acfc6b, 0x41a280a5 ),
	NORM( 0xbed3a70b, 0x3f5dbca2, 0xbe8fccad ),
	VERT( 0xc2e7dfe6, 0x42a21ef5, 0x416e1596 ),
	NORM( 0xbf0628f5, 0x3f1a2ba9, 0xbf1a2ba5 ),
	VERT( 0xc2e1e3b9, 0x42ad9d65, 0x4196c667 ),
	NORM( 0xbba30a01, 0x3f70881a, 0xbeaf4239 ),
	VERT( 0xc2e1e3b9, 0x42a2bfef, 0x4156a11a ),
	NORM( 0xbdc94e30, 0x3f34248d, 0xbf342488 ),
	VERT( 0xc2dc7cb8, 0x42abd7d7, 0x4192fec8 ),
	NORM( 0x3ef4ccb2, 0x3f542744, 0xbe94eec2 ),
	VERT( 0xc2dc7cb8, 0x42a0fa61, 0x414f11e2 ),
	NORM( 0x3ef1243a, 0x3f1faf66, 0xbf1faf66 ),
	VERT( 0xc2d87d73, 0x42a7f0ca, 0x4197bd23 ),
	NORM( 0x3f54ff9d, 0x3f0c0c28, 0xbdbc5b38 ),
	VERT( 0xc2d87d73, 0x429d1354, 0x41588e98 ),
	NORM( 0x3f5d818e, 0x3eb57fe8, 0xbeb57feb ),
	VERT( 0xc2d681ae, 0x42a28059, 0x41a44890 ),
	NORM( 0x3f74cc81, 0x3e854c08, 0x3e08acc9 ),
	VERT( 0xc2d681ae, 0x4297a2e3, 0x4171a572 ),
	NORM( 0x3f7e5fd9, 0x3da2f081, 0xbda2f085 ),
	VERT( 0xc2d6d6bb, 0x429c5a81, 0x41b6b825 ),
	NORM( 0x3f72f26a, 0x3d36f277, 0x3e9fc683 ),
	VERT( 0xc2d6d6bb, 0x42917d0c, 0x418b424f ),
	NORM( 0x3f7b8557, 0xbe06db0b, 0x3e06db05 ),
	VERT( 0xc2d96fa5, 0x42966edc, 0x41cc3d64 ),
	NORM( 0x3f6122d1, 0xbdf16980, 0x3eec20e2 ),
	VERT( 0xc2d96fa5, 0x428b9167, 0x41a0c78d ),
	NORM( 0x3f680ace, 0xbe98ebca, 0x3e98ebc4 ),
	VERT( 0xc2dde732, 0x4291a428, 0x41e1918c ),
	NORM( 0x3f41d4e2, 0xbe7fe8ac, 0x3f1a81a6 ),
	VERT( 0xc2dde732, 0x4286c6b2, 0x41b61bb6 ),
	NORM( 0x3f469dbd, 0xbee46b43, 0x3ee46b43 ),
	VERT( 0xc2e38f4a, 0x428eb525, 0x41f3755e ),
	NORM( 0x3f0de3ef, 0xbeb9278e, 0x3f3feb0c ),
	VERT( 0xc2e38f4a, 0x4283d7b0, 0x41c7ff88 ),
	NORM( 0x3f0f79e1, 0xbf15eaee, 0x3f15eaea ),
	VERT( 0xc2e98b79, 0x428e142b, 0x41ff2f9d ),
	NORM( 0x3e55f107, 0xbedc7ea5, 0x3f60c4b6 ),
	VERT( 0xc2e98b79, 0x428336b6, 0x41d3b9c6 ),
	NORM( 0x3e464106, 0xbf319828, 0x3f31981e ),
	VERT( 0xc2eef279, 0x428fd9ba, 0x42017b9d ),
	NORM( 0xbe8cbcd7, 0xbeb9075f, 0x3f641731 ),
	VERT( 0xc2eef279, 0x4284fc44, 0x41d78163 ),
	NORM( 0xbeafa2c4, 0xbf2a090b, 0x3f2a0909 ),
	VERT( 0xc2f2f1c0, 0x4293c0c6, 0x41fe38e2 ),
	NORM( 0xbf2f53d9, 0xbdfebf72, 0x3f37ccab ),
	VERT( 0xc2f2f1c0, 0x4288e350, 0x41d2c308 ),
	NORM( 0xbf4f7824, 0xbed418bc, 0x3ed418bc ),
	VERT( 0xc2f4ed83, 0x42993137, 0x41f1ad76 ),
	NORM( 0xbf625a90, 0x3e1066e5, 0x3ee401a3 ),
	VERT( 0xc2f4ed83, 0x428e53c0, 0x41c6379d ),
	NORM( 0xbf7ccdf0, 0xbde41964, 0x3de41967 ),
	VERT( 0xc2f49877, 0x429f570e, 0x41df3de1 ),
	NORM( 0xbf6a3939, 0x3eb6f269, 0x3e402a18 ),
	VERT( 0xc2f49877, 0x42947998, 0x41b3c807 ),
	NORM( 0xbf7c4345, 0x3df68b35, 0xbdf68b32 ),
	VERT( 0xc2f0c97e, 0x42a5dafc, 0x41cf3e4b ),
	NORM( 0xbedc8dad, 0x3f43a49c, 0x3ef5c13d ),
	VERT( 0xc2ecc44b, 0x42aa2b04, 0x41bc0c25 ),
	NORM( 0xbe9d0d02, 0x3f5f9868, 0x3ec1a5e2 ),
	VERT( 0xc2e7ad02, 0x42acceed, 0x41abf24f ),
	NORM( 0xbdcaa59e, 0x3f715acb, 0x3ea30016 ),
	VERT( 0xc2e24a0d, 0x42ad5fce, 0x41a16447 ),
	NORM( 0x3e370de1, 0x3f6f7cf4, 0x3e9c0a56 ),
	VERT( 0xc2dd6d59, 0x42abc79b, 0x419dfd6e ),
	NORM( 0x3eecbd91, 0x3f5127ae, 0x3eb064c1 ),
	VERT( 0xc2d9d466, 0x42a84476, 0x41a2425d ),
	NORM( 0x3f2741d4, 0x3f20e773, 0x3ed81066 ),
	VERT( 0xc2d80b6a, 0x42a35f43, 0x41ad8ca4 ),
	NORM( 0x3f3c7d23, 0x3ee655c9, 0x3f016670 ),
	VERT( 0xc2d857f5, 0x429dd6cf, 0x41be2443 ),
	NORM( 0x3f3fc431, 0x3e9d5dff, 0x3f163c28 ),
	VERT( 0xc2daae61, 0x429882ba, 0x41d18293 ),
	NORM( 0x3f36c129, 0x3e4d2ea6, 0x3f2bc593 ),
	VERT( 0xc2deb393, 0x429432b1, 0x41e4b4bc ),
	NORM( 0x3f22d245, 0x3e025cdd, 0x3f42d752 ),
	VERT( 0xc2e3cadc, 0x42918ec9, 0x41f4ce8f ),
	NORM( 0x3f027e33, 0x3db731ff, 0x3f5b0cfa ),
	VERT( 0xc2e92dd2, 0x4290fde8, 0x41ff5c97 ),
	NORM( 0x3ea2fa80, 0x3dc2927b, 0x3f71764f ),
	VERT( 0xc2ee0a87, 0x4292961b, 0x420161b7 ),
	NORM( 0x3d5a10cf, 0x3e2a479d, 0x3f7c114b ),
	VERT( 0xc2f1a379, 0x4296193f, 0x41fe7e82 ),
	NORM( 0xbe611af3, 0x3e9ecdb3, 0x3f6cc772 ),
	VERT( 0xc2f36c75, 0x429afe71, 0x41f3343d ),
	NORM( 0xbecd1766, 0x3ef4e271, 0x3f481217 ),
	VERT( 0xc2f31fea, 0x42a086e6, 0x41e29c9d ),
	NORM( 0xbeee7864, 0x3f21b3d8, 0x3f1ea793 ),
	VERT( 0xc2ed86d7, 0x42a52351, 0x41d5219a ),
	NORM( 0x3d9e5112, 0x3f2dc841, 0x3f3aeef5 ),
	VERT( 0xc2eab248, 0x42a82c8f, 0x41c79e0c ),
	NORM( 0x3deffa4c, 0x3f35f47f, 0x3f31900f ),
	VERT( 0xc2e71cc6, 0x42aa0865, 0x41bc4845 ),
	NORM( 0x3e3e6549, 0x3f397d34, 0x3f29e500 ),
	VERT( 0xc2e351fc, 0x42aa6e65, 0x41b4da10 ),
	NORM( 0x3e8eed81, 0x3f3607e4, 0x3f253542 ),
	VERT( 0xc2dfe5b6, 0x42a94f04, 0x41b274fb ),
	NORM( 0x3ec1c247, 0x3f29d894, 0x3f253c3d ),
	VERT( 0xc2dd5d5e, 0x42a6d606, 0x41b57667 ),
	NORM( 0x3ee724a2, 0x3f180976, 0x3f2a7b4b ),
	VERT( 0xc2dc1ba5, 0x42a363c5, 0x41bd6928 ),
	NORM( 0x3ef90071, 0x3f07510e, 0x3f321d6f ),
	VERT( 0xc2dc5187, 0x429f7e95, 0x41c9177a ),
	NORM( 0x3efccb6b, 0x3ef46028, 0x3f3a174c ),
	VERT( 0xc2ddf6d2, 0x429bbe45, 0x41d6ba22 ),
	NORM( 0x3ef6d835, 0x3ee0e6bb, 0x3f420e61 ),
	VERT( 0xc2e0cb60, 0x4298b508, 0x41e43daf ),
	NORM( 0x3ee86292, 0x3ed350a8, 0x3f4a2af0 ),
	VERT( 0xc2e460e4, 0x4296d931, 0x41ef9378 ),
	NORM( 0x3ecff735, 0x3ecc1df6, 0x3f527e68 ),
	VERT( 0xc2e82bae, 0x42967333, 0x41f701b1 ),
	NORM( 0x3eaab2fa, 0x3ece5bd3, 0x3f5a2fd1 ),
	VERT( 0xc2eb97f3, 0x42979292, 0x41f966c4 ),
	NORM( 0x3e727bfd, 0x3edfda97, 0x3f5e1c80 ),
	VERT( 0xc2ee204c, 0x429a0b92, 0x41f6655c ),
	NORM( 0x3e138fbf, 0x3f004036, 0x3f5a76f7 ),
	VERT( 0xc2ef6204, 0x429d7dd0, 0x41ee7297 ),
	NORM( 0x3dae48ca, 0x3f1258d8, 0x3f50e94b ),
	VERT( 0xc2ef2c20, 0x42a16300, 0x41e2c447 ),
	NORM( 0x3d84f90d, 0x3f21f507, 0x3f458f23 ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_M_button[]
START
VList      vertex_Racing_Cont_M_button,
PList      strip_Racing_Cont_M_button,
Center      -114.858582F, 76.207138F, 22.656292F,
Radius      14.378314F,
END

CNKOBJECT  object_Racing_Cont_M_button[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Racing_Cont_M_button,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Racing_Cont_P_button,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_R_Lever[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 41, 41, 41 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 554, _NB( UFO_0, 54 ),
	StripL(3),  207, 193, 184, 
	StripL(3),  198, 170, 181, 
	StripR(7),  106, 170, 120, 181, 139, 177, 145, 
	StripL(7),  129, 113, 184, 173, 207, 202, 193, 
	StripL(3),  184, 189, 129, 
	StripL(7),  116, 126, 135, 142, 148, 158, 165, 
	StripL(30),  126, 145, 142, 161, 158, 153, 165, 139, 148, 120, 
                   135, 106, 116, 108, 126, 129, 145, 189, 177, 184, 
                   181, 193, 198, 202, 170, 173, 106, 113, 108, 129, 
                   
	StripL(3),  204, 192, 187, 
	StripL(3),  197, 169, 182, 
	StripL(7),  128, 114, 187, 174, 204, 201, 192, 
	StripL(7),  146, 176, 137, 182, 122, 169, 107, 
	StripL(3),  187, 188, 128, 
	StripR(30),  128, 146, 188, 176, 187, 182, 192, 197, 201, 169, 
                   174, 107, 114, 109, 128, 124, 146, 141, 162, 157, 
                   152, 164, 137, 150, 122, 132, 107, 117, 109, 124, 
                   
	StripL(7),  117, 124, 132, 141, 150, 157, 164, 
	StripL(3),  205, 195, 185, 
	StripL(3),  199, 168, 183, 
	StripR(7),  105, 168, 123, 183, 136, 178, 144, 
	StripL(7),  130, 115, 185, 175, 205, 203, 195, 
	StripL(3),  185, 190, 130, 
	StripL(30),  125, 144, 140, 160, 159, 154, 167, 136, 151, 123, 
                   134, 105, 118, 111, 125, 130, 144, 190, 178, 185, 
                   183, 195, 199, 203, 168, 175, 105, 115, 111, 130, 
                   
	StripL(3),  206, 194, 186, 
	StripL(3),  196, 171, 180, 
	StripR(7),  104, 171, 121, 180, 138, 179, 147, 
	StripL(7),  131, 112, 186, 172, 206, 200, 194, 
	StripL(3),  186, 191, 131, 
	StripL(7),  119, 127, 133, 143, 149, 156, 166, 
	StripL(30),  127, 147, 143, 163, 156, 155, 166, 138, 149, 121, 
                   133, 104, 119, 110, 127, 131, 147, 191, 179, 186, 
                   180, 194, 196, 200, 171, 172, 104, 112, 110, 131, 
                   
	StripL(3),  27, 12, 13, 
	StripL(19),  86, 83, 84, 71, 85, 70, 82, 69, 81, 66, 
                   78, 64, 77, 62, 74, 60, 73, 58, 59, 
	StripL(8),  55, 61, 59, 72, 73, 87, 74, 77, 
	StripL(10),  63, 53, 50, 7, 9, 20, 22, 34, 36, 43, 
	StripL(7),  61, 75, 72, 86, 87, 84, 85, 
	StripL(12),  76, 63, 65, 50, 49, 9, 10, 22, 24, 36, 
                   38, 43, 
	StripR(13),  76, 79, 65, 67, 49, 46, 10, 13, 24, 27, 
                   38, 40, 43, 
	StripL(23),  86, 80, 83, 68, 71, 45, 70, 44, 69, 47, 
                   66, 48, 64, 51, 62, 52, 60, 54, 58, 57, 
                   59, 56, 55, 
	StripL(8),  53, 4, 7, 19, 20, 33, 34, 43, 
	StripR(58),  55, 3, 56, 1, 0, 15, 2, 17, 5, 18, 
                   6, 21, 8, 23, 11, 25, 12, 26, 27, 41, 
                   40, 42, 43, 28, 29, 14, 16, 3, 4, 55, 
                   53, 61, 63, 75, 76, 86, 79, 80, 67, 68, 
                   46, 45, 13, 44, 12, 47, 11, 48, 8, 51, 
                   6, 52, 5, 54, 2, 57, 0, 56, 
	StripL(3),  19, 4, 16, 
	StripL(5),  33, 19, 30, 16, 29, 
	StripL(4),  33, 30, 43, 29, 
	StripL(16),  92, 94, 90, 89, 99, 98, 103, 102, 100, 101, 
                   96, 97, 88, 91, 95, 93, 
	StripL(8),  94, 93, 89, 91, 98, 97, 102, 101, 
	StripL(3),  78, 77, 87, 
	StripR(5),  78, 81, 87, 82, 85, 
	StripR(17),  41, 26, 39, 25, 37, 23, 35, 21, 32, 18, 
                   31, 17, 28, 15, 14, 1, 3, 
	StripL(3),  28, 31, 42, 
	StripR(5),  37, 35, 42, 32, 31, 
	StripL(4),  37, 39, 42, 41, 
	StripL(4),  139, 153, 145, 161, 
	StripL(4),  137, 152, 146, 162, 
	StripL(4),  136, 154, 144, 160, 
	StripL(4),  138, 155, 147, 163, 
	StripR(7),  167, 159, 151, 140, 134, 125, 118, 
	StripL(8),  95, 92, 88, 90, 96, 99, 100, 103, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_Racing_Cont_R_Lever[]
START
	CnkV_VN(0x0, 1249),
	OffnbIdx(0, 208),
	VERT( 0x42cc7a01, 0xbe81b8be, 0x4185027a ),
	NORM( 0xbf1e5746, 0x3ee9fb53, 0x3f23a33f ),
	VERT( 0x42cd8add, 0xbe8552fe, 0x41854ac9 ),
	NORM( 0x3f42ca50, 0x3f0e18b4, 0x3eac0fe0 ),
	VERT( 0x42cb5149, 0xc020fe00, 0x416995d2 ),
	NORM( 0xbf5dd84c, 0x3e59c00f, 0x3ee725fa ),
	VERT( 0x42cc412d, 0xc0318770, 0x41668bdd ),
	NORM( 0x3f5df349, 0xbe5d15c7, 0xbee5f2f0 ),
	VERT( 0x42c8bc73, 0xc08d970c, 0x41578c4c ),
	NORM( 0x3f0049b9, 0xbf114e4e, 0xbf2739bf ),
	VERT( 0x42c826a2, 0xc08009fc, 0x415c1636 ),
	NORM( 0xbf00179b, 0x3f10c7a5, 0x3f27d4af ),
	VERT( 0x42c3d342, 0xc09bb6c8, 0x415c484d ),
	NORM( 0xbcad388e, 0x3f41d5b4, 0x3f272313 ),
	VERT( 0x42c3ee09, 0xc0ac5708, 0x4157c3f4 ),
	NORM( 0x3cb47c25, 0xbf42592f, 0xbf268830 ),
	VERT( 0x42bf7fe3, 0xc09c1af8, 0x416a1eb3 ),
	NORM( 0x3eea8802, 0x3f428751, 0x3eec2a14 ),
	VERT( 0x42bf1f9e, 0xc0acc65c, 0x416723f4 ),
	NORM( 0xbeea0426, 0xbf430abc, 0xbeeafa8c ),
	VERT( 0x42bb9ae5, 0xc08ec734, 0x4180c6ce ),
	NORM( 0xbf52988f, 0xbf0ef964, 0xbdda2c2a ),
	VERT( 0x42bc553b, 0xc0811bc4, 0x4180f21a ),
	NORM( 0x3f52e9fb, 0x3f0e72b5, 0x3ddc8546 ),
	VERT( 0x42bb2c83, 0xc0007b00, 0x41930af8 ),
	NORM( 0x3f17a8b9, 0x3f342447, 0x3ec8d7d8 ),
	VERT( 0x42ba5134, 0xc00d67a0, 0x4194e270 ),
	NORM( 0xbf3a2d0d, 0x3e81d07b, 0x3f23489f ),
	VERT( 0x42ce8315, 0xc04b28a8, 0x419c9a91 ),
	NORM( 0x3f4c07df, 0x3ea33766, 0x3f035478 ),
	VERT( 0x42cd6fe9, 0xc03eff50, 0x419adb82 ),
	NORM( 0xbf1156ca, 0x3f249f20, 0x3f039384 ),
	VERT( 0x42cd6590, 0xc0addf64, 0x418c56f0 ),
	NORM( 0x3f620d7c, 0xbee25bf8, 0xbe215294 ),
	VERT( 0x42cc6ef1, 0xc0a09004, 0x418c383e ),
	NORM( 0xbf62b23b, 0x3edf2239, 0x3e24cf97 ),
	VERT( 0x42c9b0e6, 0xc0c9bc6c, 0x41865fe9 ),
	NORM( 0xbf0d78ec, 0x3f42420f, 0x3eb0783e ),
	VERT( 0x42ca5983, 0xc0db9ef4, 0x4185d858 ),
	NORM( 0x3f0d817e, 0xbf4297c2, 0xbeaee13c ),
	VERT( 0x42c62ff0, 0xc0f64048, 0x4185f075 ),
	NORM( 0x3df69cfc, 0xbf6ed978, 0xbeada0af ),
	VERT( 0x42c5f1e2, 0xc0e1b402, 0x4186759c ),
	NORM( 0xbdf4e669, 0x3f6e9643, 0x3eaf373c ),
	VERT( 0x42c2065e, 0xc0f6a0b8, 0x418c98c9 ),
	NORM( 0xbe9fb486, 0xbf6f79b1, 0xbe2a3aa3 ),
	VERT( 0x42c232de, 0xc0e20ad2, 0x418c7382 ),
	NORM( 0x3ea07e9e, 0x3f6f36c2, 0x3e2d1dd9 ),
	VERT( 0x42befa51, 0xc0dca65c, 0x419808ae ),
	NORM( 0xbf246809, 0xbf405951, 0x3e1b5ac6 ),
	VERT( 0x42bf74d2, 0xc0caa97c, 0x4196be9c ),
	NORM( 0x3f24a854, 0x3f400764, 0xbe1d6b81 ),
	VERT( 0x42be73da, 0xc0901c6c, 0x41a702b2 ),
	NORM( 0x3edb1efd, 0x3f599454, 0x3e9d5fe9 ),
	VERT( 0x42bddccc, 0xc09b97d4, 0x41aa1b72 ),
	NORM( 0xbf1a6196, 0x3d0f6b70, 0x3f4c03d4 ),
	VERT( 0x42cb2db5, 0xc08d9908, 0x41a661d9 ),
	NORM( 0xbeea8838, 0x3f5944a5, 0x3e87570b ),
	VERT( 0x42cc00a2, 0xc098ccf8, 0x41a968ba ),
	NORM( 0x3f13434e, 0x3d938913, 0x3f5096e2 ),
	VERT( 0x42cb5bca, 0xc0cadbec, 0x419df05f ),
	NORM( 0x3f2dab13, 0xbf29aa88, 0x3ea25791 ),
	VERT( 0x42ca9959, 0xc0baa67c, 0x419c0f21 ),
	NORM( 0xbf2e834b, 0x3f28d4ca, 0xbea23371 ),
	VERT( 0x42c90405, 0xc0d26bfc, 0x4198af3c ),
	NORM( 0xbef62552, 0x3f5919e4, 0xbe64404d ),
	VERT( 0x42c9996d, 0xc0e54596, 0x419a307c ),
	NORM( 0x3ef62559, 0xbf5919e5, 0x3e644019 ),
	VERT( 0x42c73238, 0xc0f4a594, 0x419a3e66 ),
	NORM( 0x3e7340b7, 0xbf71c701, 0x3e6899ef ),
	VERT( 0x42c6da55, 0xc0e04262, 0x4198bbc2 ),
	NORM( 0xbe7340b1, 0x3f71c6ff, 0xbe689a1e ),
	VERT( 0x42c4cb02, 0xc0f4dd3e, 0x419e1666 ),
	NORM( 0xbbd1f090, 0xbf726351, 0x3ea4b2cc ),
	VERT( 0x42c4b0a5, 0xc0e07478, 0x419c315b ),
	NORM( 0x3bd1ecae, 0x3f72634d, 0xbea4b2e0 ),
	VERT( 0x42c308a6, 0xc0e5ddae, 0x41a4b0d0 ),
	NORM( 0xbe5526aa, 0xbf57af08, 0x3efe6095 ),
	VERT( 0x42c31b51, 0xc0d2f4e0, 0x41a222ba ),
	NORM( 0x3e52927c, 0x3f5750e6, 0xbf0013b8 ),
	VERT( 0x42c263cd, 0xc0b7fc48, 0x41b1348e ),
	NORM( 0xbe5691bc, 0xbdb22c9e, 0x3f7952f3 ),
	VERT( 0x42c286f5, 0xc0a9aa04, 0x41ad6618 ),
	NORM( 0x3e26c323, 0x3f7a42b6, 0x3e08ad3e ),
	VERT( 0x42c72f6a, 0xc0a8be88, 0x41ad2b3a ),
	NORM( 0xbe2c8616, 0x3f79a1b6, 0x3e137fb6 ),
	VERT( 0x42c790c1, 0xc0b6f6a4, 0x41b0f325 ),
	NORM( 0x3e5daf19, 0xbdc5270f, 0x3f78b607 ),
	VERT( 0x429c82ca, 0x420f32bd, 0xc19b69e1 ),
	NORM( 0x3f1e1412, 0x3f230ca6, 0x3eec529f ),
	VERT( 0x429b71cc, 0x420f6cb8, 0xc19ba3f3 ),
	NORM( 0xbf432c21, 0x3eaddb14, 0x3f0d05b4 ),
	VERT( 0x429cbb7d, 0x42066a4c, 0xc1afbf97 ),
	NORM( 0xbf5e63f0, 0xbee3428a, 0xbe611875 ),
	VERT( 0x429dab82, 0x420716f4, 0xc1ad82bf ),
	NORM( 0x3f5e1955, 0x3ee4e5fc, 0x3e5f0caa ),
	VERT( 0x42a0d62a, 0x4203b70e, 0xc1b9657f ),
	NORM( 0x3f0075c7, 0x3f26b037, 0x3f11c538 ),
	VERT( 0x42a04036, 0x4202aa67, 0xc1bcf46b ),
	NORM( 0xbf00a4ac, 0xbf261cbb, 0xbf124401 ),
	VERT( 0x42a50ea0, 0x4202b852, 0xc1c4a46b ),
	NORM( 0xbcc1c688, 0xbf256b3a, 0xbf4348c4 ),
	VERT( 0x42a52989, 0x4203c394, 0xc1c050b3 ),
	NORM( 0x3cbae901, 0x3f25feb1, 0x3f42cd28 ),
	VERT( 0x42a97ce9, 0x4207392e, 0xc1c069bf ),
	NORM( 0xbee98e8a, 0x3ee9ed81, 0x3f437eb2 ),
	VERT( 0x42a9dd0b, 0x42069052, 0xc1c4c03f ),
	NORM( 0x3ee91083, 0xbee8cd0d, 0xbf43fa3a ),
	VERT( 0x42aca791, 0x420d2a8d, 0xc1b9a9f1 ),
	NORM( 0xbf525754, 0x3dd6242e, 0x3f0f7198 ),
	VERT( 0x42ad61c5, 0x420d2abb, 0xc1bd4075 ),
	NORM( 0x3f523ce7, 0xbdd1a03c, 0xbf0fb2f5 ),
	VERT( 0x42aeab75, 0x4217388c, 0xc1ab3b9b ),
	NORM( 0x3f3a1762, 0x3f23b1a6, 0x3e80392e ),
	VERT( 0x42add049, 0x421636fb, 0xc1a9725f ),
	NORM( 0xbf16d01c, 0x3ec8e709, 0x3f34d58f ),
	VERT( 0x42aab1ee, 0x421f68b3, 0xc1bbd5cd ),
	NORM( 0xbeda9fb5, 0x3e9da947, 0x3f59a70e ),
	VERT( 0x42ab48dd, 0x42210add, 0xc1bee03d ),
	NORM( 0x3f1a4c8c, 0x3f4c076b, 0x3d1ffe8e ),
	VERT( 0x42a9b0f6, 0x421746a6, 0xc1ca790f ),
	NORM( 0xbf23edf5, 0xbe1d7ae5, 0x3f40a5cc ),
	VERT( 0x42aa2b57, 0x4218017a, 0xc1cf23dd ),
	NORM( 0x3f245fe9, 0x3e2053b4, 0xbf401ef1 ),
	VERT( 0x42a6f2eb, 0x4212211a, 0xc1d05167 ),
	NORM( 0xbe9f00b6, 0x3e27aa69, 0x3f6fb483 ),
	VERT( 0x42a71f4b, 0x42124987, 0xc1d5a273 ),
	NORM( 0x3e9e3fd3, 0xbe24eb5a, 0xbf6ff2e0 ),
	VERT( 0x42a333e7, 0x420f2227, 0xc1d03bb1 ),
	NORM( 0x3df821f8, 0x3eac379b, 0x3f6f147f ),
	VERT( 0x42a2f5b8, 0x420ef55e, 0xc1d58a57 ),
	NORM( 0xbdf9c12c, 0xbeaab444, 0xbf6f5328 ),
	VERT( 0x429f74e3, 0x420f174d, 0xc1ca3dcd ),
	NORM( 0x3f0d88c2, 0x3ead77b3, 0x3f42e352 ),
	VERT( 0x429ecc26, 0x420ee950, 0xc1cee205 ),
	NORM( 0xbf0d9035, 0xbeabf3ce, 0xbf4333c8 ),
	VERT( 0x429bc018, 0x4212289b, 0xc1c3721f ),
	NORM( 0xbf62070b, 0xbe175803, 0xbee42ce9 ),
	VERT( 0x429cb6d7, 0x42120378, 0xc1bff2b1 ),
	NORM( 0x3f61f598, 0x3e1ebc22, 0x3ee33012 ),
	VERT( 0x429bb5e0, 0x4219551a, 0xc1afae9b ),
	NORM( 0x3f10e683, 0x3f024522, 0x3f260a78 ),
	VERT( 0x429aa294, 0x421a4a6c, 0xc1b15f5b ),
	NORM( 0xbf4aa29c, 0x3f05eb5d, 0x3ea1bf64 ),
	VERT( 0x42a6c1db, 0x4224976a, 0xc1c5f959 ),
	NORM( 0x3e5be67b, 0x3f791f00, 0xbdaa294f ),
	VERT( 0x42a69ed3, 0x42229a65, 0xc1c23933 ),
	NORM( 0xbe28ea35, 0x3e0d3454, 0x3f7a035d ),
	VERT( 0x42a60a78, 0x421cf8b5, 0xc1cc8be9 ),
	NORM( 0xbe552771, 0xbefe606d, 0x3f57af07 ),
	VERT( 0x42a61d03, 0x421e558b, 0xc1d171b3 ),
	NORM( 0x3e595f66, 0x3eff0199, 0xbf573bf7 ),
	VERT( 0x42a45aa6, 0x421b0856, 0xc1d53195 ),
	NORM( 0x3bd1f3eb, 0x3ea4b2ce, 0xbf726350 ),
	VERT( 0x42a47523, 0x421a0006, 0xc1cfebcf ),
	NORM( 0xbbd1e6b3, 0xbea4b2fd, 0x3f726348 ),
	VERT( 0x42a24b74, 0x42184539, 0xc1cfdf49 ),
	NORM( 0x3e7340a7, 0xbe6899a0, 0x3f71c707 ),
	VERT( 0x42a1f370, 0x42191c57, 0xc1d523ad ),
	NORM( 0xbe7340a1, 0x3e689a41, 0xbf71c6fe ),
	VERT( 0x429f8c3b, 0x42191561, 0xc1d14bab ),
	NORM( 0xbef62575, 0x3e644021, 0xbf5919dd ),
	VERT( 0x42a021c4, 0x42183ef7, 0xc1cc69b1 ),
	NORM( 0x3ef62520, 0xbe644025, 0x3f5919f5 ),
	VERT( 0x429e8c6f, 0x4219eeea, 0xc1c67851 ),
	NORM( 0x3f2dab1e, 0xbea25784, 0x3f29aa80 ),
	VERT( 0x429dc9df, 0x421af554, 0xc1cab143 ),
	NORM( 0xbf2d50f7, 0x3ea4860f, 0xbf298028 ),
	VERT( 0x429d2506, 0x4220b181, 0xc1be2d85 ),
	NORM( 0xbf124c06, 0x3f51456d, 0x3d933e62 ),
	VERT( 0x429df814, 0x421f1845, 0xc1bb34f3 ),
	NORM( 0x3ee89692, 0x3e86d69d, 0x3f59de23 ),
	VERT( 0x42a194e7, 0x422476b5, 0xc1c5b7ed ),
	NORM( 0xbe5dcded, 0x3f78b116, 0xbdc62ab0 ),
	VERT( 0x42a1f65e, 0x42227cf6, 0xc1c1fe55 ),
	NORM( 0x3e2c6ac4, 0x3e1438c4, 0x3f799c0a ),
	VERT( 0x4299d84b, 0xc066ab18, 0x4196332a ),
	NORM( 0x3ce781a2, 0xbf7f3496, 0x3d967d4e ),
	VERT( 0x427e1c11, 0x41f03e7c, 0xc15a769f ),
	NORM( 0xbec6178a, 0x3f6c0e1e, 0x3bfbb49c ),
	VERT( 0x4299d84b, 0xc0401580, 0x419b05dc ),
	NORM( 0x3c767668, 0xbd8a82b2, 0x3f7f6283 ),
	VERT( 0x427e1c11, 0x41eb6bca, 0xc1641c03 ),
	NORM( 0xbec15aa4, 0x3b31b943, 0xbf6d0ad7 ),
	VERT( 0x42b870f8, 0xbf00991f, 0x417ac520 ),
	NORM( 0x3e47953a, 0xbf7b0a9f, 0xbc9eaa40 ),
	VERT( 0x429da6b6, 0x4204878b, 0xc1860be9 ),
	NORM( 0xbe479534, 0x3f7b0a9f, 0x3c9eab99 ),
	VERT( 0x42b870f8, 0x3dcdea08, 0x41823542 ),
	NORM( 0x3e479523, 0x3c9eae07, 0x3f7b0aa0 ),
	VERT( 0x429da6b6, 0x42021e32, 0xc18ade9d ),
	NORM( 0xbe479530, 0xbc9eac80, 0xbf7b0a9f ),
	VERT( 0x427c8580, 0xbfd7f5af, 0x41825695 ),
	NORM( 0x3dde0fd4, 0xbf7dc668, 0xbd98938c ),
	VERT( 0x4255f19c, 0x41b0c40a, 0xc0efb341 ),
	NORM( 0xbe80f56b, 0xbdd4e10e, 0xbf765040 ),
	VERT( 0x4255f19c, 0x41b596be, 0xc0dc6879 ),
	NORM( 0xbecc4e5d, 0x3f659752, 0x3e437f1f ),
	VERT( 0x427c8580, 0xbf8aca8f, 0x41872948 ),
	NORM( 0xbd965e4a, 0x3dc20f9d, 0x3f7e276f ),
	VERT( 0x41c03213, 0xc178e61a, 0x4192407d ),
	NORM( 0xbeafe326, 0xbf703f62, 0x3d11c70e ),
	VERT( 0x41661491, 0x4103a0b2, 0xc0b00ba1 ),
	NORM( 0xbf280477, 0xbe2b266e, 0xbf3c595c ),
	VERT( 0x41661491, 0x410d4616, 0xc09cc0d9 ),
	NORM( 0xbf43c246, 0x3f239923, 0x3da9b926 ),
	VERT( 0x41c03213, 0xc16f40b5, 0x41971330 ),
	NORM( 0xbee15249, 0xbe254740, 0x3f62221e ),
	VERT( 0x429d3e03, 0x4106fb38, 0x40e69c05 ),
	NORM( 0x3e4acae7, 0xbf7ae266, 0xbc9890ed ),
	VERT( 0x4294660b, 0x419ab928, 0xc06ca452 ),
	NORM( 0x3e4acae5, 0xbf7ae266, 0xbc9890dc ),
	VERT( 0x429a8721, 0x413c87b0, 0x40770626 ),
	NORM( 0x3e4acaea, 0xbf7ae266, 0xbc98905c ),
	VERT( 0x42978d00, 0x417742cc, 0x3e419bdf ),
	NORM( 0x3e4acae6, 0xbf7ae266, 0xbc9890dd ),
	VERT( 0x42bc0dca, 0x418397d6, 0xbf4e6728 ),
	NORM( 0x3ecaac2c, 0x3dc611be, 0xbf69c829 ),
	VERT( 0x42b913a9, 0x41a0f562, 0xc08f4311 ),
	NORM( 0x3ecaac2c, 0x3dc611dc, 0xbf69c829 ),
	VERT( 0x42bec4ac, 0x4151a330, 0x40229826 ),
	NORM( 0x3ecaac61, 0x3dc611ac, 0xbf69c81e ),
	VERT( 0x42b5ecb4, 0x41c00d24, 0xc105d10d ),
	NORM( 0x3ecaac2c, 0x3dc611cf, 0xbf69c829 ),
	VERT( 0x429c4ae8, 0x4119b720, 0x40c12437 ),
	NORM( 0xbe44e941, 0xbc8f064e, 0xbf7b2eb8 ),
	VERT( 0x42999406, 0x414f4398, 0x402c1686 ),
	NORM( 0xbe44e943, 0xbc8f06f2, 0xbf7b2eb8 ),
	VERT( 0x429699e6, 0x4184ff5a, 0xbf7b5788 ),
	NORM( 0xbe44e944, 0xbc8f0680, 0xbf7b2eb8 ),
	VERT( 0x429372f0, 0x41a4171c, 0xc09bc9f9 ),
	NORM( 0xbe44e941, 0xbc8f0690, 0xbf7b2eb8 ),
	VERT( 0x42bd00e5, 0x417473c4, 0x3ebaaeef ),
	NORM( 0x3f36d0dc, 0xbf302ac9, 0xbe036c69 ),
	VERT( 0x42ba06c4, 0x4197976e, 0xc0539682 ),
	NORM( 0x3f36d0da, 0xbf302ac9, 0xbe036c83 ),
	VERT( 0x42b6dfcf, 0x41b6af30, 0xc0e62a49 ),
	NORM( 0x3f36d0db, 0xbf302ac9, 0xbe036c7e ),
	VERT( 0x42bfb7c6, 0x413ee748, 0x406d87c6 ),
	NORM( 0x3f36d0ca, 0xbf302adc, 0xbe036c4b ),
	VERT( 0x429a8721, 0x4174d280, 0x40ec18b3 ),
	NORM( 0x3e8d2056, 0xbf2e01c6, 0x3f2e01c9 ),
	VERT( 0x429d3e03, 0x413f4608, 0x412b98d3 ),
	NORM( 0x3e8d2056, 0xbf2e01c7, 0x3f2e01c9 ),
	VERT( 0x42978d00, 0x4197c6ce, 0x406d44fe ),
	NORM( 0x3e8d2055, 0xbf2e01c8, 0x3f2e01c8 ),
	VERT( 0x4294660b, 0x41b6de90, 0xbe379121 ),
	NORM( 0x3e8d2056, 0xbf2e01c8, 0x3f2e01c8 ),
	VERT( 0x42b913a9, 0x41bd1aca, 0xbf756b88 ),
	NORM( 0x3f01dd8c, 0x3f285b60, 0xbf0e928f ),
	VERT( 0x42b5ecb4, 0x41dc328c, 0xc09b0c79 ),
	NORM( 0x3f01dd8f, 0x3f285b61, 0xbf0e928c ),
	VERT( 0x42bc0dca, 0x419fbd3e, 0x402d917e ),
	NORM( 0x3f01dd8d, 0x3f285b62, 0xbf0e928c ),
	VERT( 0x42bec4ac, 0x4184f700, 0x40c1e1b3 ),
	NORM( 0x3f01ddac, 0x3f285b54, 0xbf0e927f ),
	VERT( 0x429699e6, 0x41a124c2, 0x4022555e ),
	NORM( 0xbe8d2053, 0x3f2e01c8, 0xbf2e01c8 ),
	VERT( 0x42999406, 0x4183c734, 0x40c6a0e3 ),
	NORM( 0xbe8d205a, 0x3f2e01c7, 0xbf2e01c7 ),
	VERT( 0x429372f0, 0x41c03c84, 0xbfacd164 ),
	NORM( 0xbe8d2055, 0x3f2e01c8, 0xbf2e01c8 ),
	VERT( 0x429c4ae8, 0x415201f0, 0x4118dcec ),
	NORM( 0xbe8d2051, 0x3f2e01c7, 0xbf2e01ca ),
	VERT( 0x42ba06c4, 0x41b3bcd6, 0x3e594bdf ),
	NORM( 0x3f62a3f8, 0xbe8c9316, 0x3ec024bb ),
	VERT( 0x42bfb7c6, 0x41773218, 0x40e75985 ),
	NORM( 0x3f62a3e7, 0xbe8c9343, 0x3ec024ea ),
	VERT( 0x42b6dfcf, 0x41d2d498, 0xc06b2952 ),
	NORM( 0x3f62a3f8, 0xbe8c9312, 0x3ec024c1 ),
	VERT( 0x42bd00e5, 0x41965f4a, 0x4078811e ),
	NORM( 0x3f62a3f8, 0xbe8c9310, 0x3ec024c0 ),
	VERT( 0x4294660b, 0x41df982a, 0x409d29e3 ),
	NORM( 0xbdd9957b, 0xbec1d0d5, 0x3f6b6209 ),
	VERT( 0x42978d00, 0x41c08068, 0x410cc475 ),
	NORM( 0xbdd995bc, 0xbec1d0af, 0x3f6b6210 ),
	VERT( 0x429d3e03, 0x41885c9e, 0x417d0c09 ),
	NORM( 0xbdd99562, 0xbec1d0da, 0x3f6b6208 ),
	VERT( 0x429a8721, 0x41a322dc, 0x41477f8f ),
	NORM( 0xbdd9959e, 0xbec1d0d0, 0x3f6b620a ),
	VERT( 0x42b32d27, 0x420158c6, 0x3f0622d8 ),
	NORM( 0x3ef54dc3, 0x3f4a27d6, 0xbec43876 ),
	VERT( 0x42b6541d, 0x41e399ca, 0x408d2363 ),
	NORM( 0x3ef54de1, 0x3f4a27d0, 0xbec4386a ),
	VERT( 0x42b94e3d, 0x41c63c3e, 0x41014ccb ),
	NORM( 0x3ef54dc5, 0x3f4a27d6, 0xbec43874 ),
	VERT( 0x42bc051f, 0x41ab7602, 0x4136d943 ),
	NORM( 0x3ef54dfb, 0x3f4a27cc, 0xbec4385b ),
	VERT( 0x429372f0, 0x41e8f61e, 0x406f6426 ),
	NORM( 0xbf1393e8, 0x3f47f210, 0xbe75e16e ),
	VERT( 0x42999406, 0x41ac80d0, 0x4134c3a6 ),
	NORM( 0xbf1393e9, 0x3f47f20f, 0xbe75e177 ),
	VERT( 0x429699e6, 0x41c9de5c, 0x40f4111b ),
	NORM( 0xbf1393e6, 0x3f47f20b, 0xbe75e1c9 ),
	VERT( 0x429c4ae8, 0x4191ba92, 0x416a5022 ),
	NORM( 0xbf1393eb, 0x3f47f20d, 0xbe75e173 ),
	VERT( 0x42ba4158, 0x41bcde4a, 0x411408b3 ),
	NORM( 0x3f5886ff, 0xbdeab483, 0x3f056234 ),
	VERT( 0x42bcf839, 0x41a2180e, 0x4149952b ),
	NORM( 0x3f5886f4, 0xbdeab549, 0x3f056242 ),
	VERT( 0x42b74737, 0x41da3bd6, 0x40b29b33 ),
	NORM( 0x3f5886fb, 0xbdeab4d8, 0x3f056239 ),
	VERT( 0x42b42042, 0x41f95398, 0x3fd8f0ac ),
	NORM( 0x3f5886ff, 0xbdeab484, 0x3f056234 ),
	VERT( 0x429d0c1a, 0x4202f8d1, 0x4182e908 ),
	NORM( 0xbe489858, 0x3d7b5013, 0x3f7a8c55 ),
	VERT( 0x42a0063a, 0x41e89414, 0x41a04695 ),
	NORM( 0xbe489863, 0x3d7b4d3b, 0x3f7a8c58 ),
	VERT( 0x4299e524, 0x421284b2, 0x4147a28c ),
	NORM( 0xbe489858, 0x3d7b4d3d, 0x3f7a8c58 ),
	VERT( 0x42a2bd1c, 0x41cdcdd8, 0x41bb0cd1 ),
	NORM( 0xbe489823, 0x3d7b4e73, 0x3f7a8c5a ),
	VERT( 0x42b1a344, 0x41d04210, 0x41910ff0 ),
	NORM( 0x3e92a03b, 0x3f735cf6, 0xbdf4b35c ),
	VERT( 0x42abf242, 0x420432ec, 0x4131d84e ),
	NORM( 0x3e92a049, 0x3f735cf3, 0xbdf4b386 ),
	VERT( 0x42aeec62, 0x41eb084c, 0x416c9365 ),
	NORM( 0x3e92a02e, 0x3f735cf6, 0xbdf4b3d1 ),
	VERT( 0x42a8cb4c, 0x4213becd, 0x40e75195 ),
	NORM( 0x3e92a02e, 0x3f735cf6, 0xbdf4b3bc ),
	VERT( 0x4298f20a, 0x421733ac, 0x4134e6a4 ),
	NORM( 0xbf028691, 0x3f55ea2e, 0x3e515cb2 ),
	VERT( 0x429f1320, 0x41f1f208, 0x4196e8a1 ),
	NORM( 0xbf028691, 0x3f55ea2e, 0x3e515ca8 ),
	VERT( 0x429c18ff, 0x4207a7cb, 0x41731628 ),
	NORM( 0xbf0286a9, 0x3f55ea2a, 0x3e515bff ),
	VERT( 0x42a1ca01, 0x41d72bcc, 0x41b1aedd ),
	NORM( 0xbf0286ad, 0x3f55ea21, 0x3e515c74 ),
	VERT( 0x42ace55c, 0x41ff07e4, 0x41449436 ),
	NORM( 0x3f24d326, 0x3d8d931a, 0x3f431416 ),
	VERT( 0x42afdf7d, 0x41e1aa58, 0x417f4f50 ),
	NORM( 0x3f24d32d, 0x3d8d938e, 0x3f43140f ),
	VERT( 0x42b2965f, 0x41c6e41c, 0x419a6de4 ),
	NORM( 0x3f24d32d, 0x3d8d9327, 0x3f431410 ),
	VERT( 0x42a9be67, 0x420f0fd3, 0x410664b3 ),
	NORM( 0x3f24d32e, 0x3d8d937b, 0x3f43140f ),
	VERT( 0x42609eba, 0x41791c6c, 0xbe1ad1a1 ),
	NORM( 0x3e8b788b, 0xbf765184, 0x3ae7210d ),
	VERT( 0x4266eca5, 0x413aece8, 0x406f10f6 ),
	NORM( 0x3e8b788c, 0xbf765184, 0x3ae71cac ),
	VERT( 0x426ce0e6, 0x410031ce, 0x40ecfeb1 ),
	NORM( 0x3e8b788b, 0xbf765184, 0x3ae72019 ),
	VERT( 0x42724eaa, 0x40954aa8, 0x412c0bd1 ),
	NORM( 0x3e8b7889, 0xbf765184, 0x3ae71da8 ),
	VERT( 0x42706874, 0x40bac278, 0x41194fe9 ),
	NORM( 0xbe054fdd, 0x3cfaab72, 0xbf7db34c ),
	VERT( 0x426afab1, 0x4112edb8, 0x40c786df ),
	NORM( 0xbe054fe7, 0x3cfaab74, 0xbf7db34c ),
	VERT( 0x42650670, 0x414da8d0, 0x40242156 ),
	NORM( 0xbe054fe5, 0x3cfaab20, 0xbf7db34c ),
	VERT( 0x425eb885, 0x4185ec2a, 0xbfa93974 ),
	NORM( 0xbe054fe5, 0x3cfaaadb, 0xbf7db34c ),
	VERT( 0x4283f39f, 0x41a6b8f6, 0x4118cab7 ),
	NORM( 0xbda397f7, 0xbc4f4f17, 0x3f7f2951 ),
	VERT( 0x4286edc0, 0x41895b68, 0x415385d1 ),
	NORM( 0xbda397fc, 0xbc4f4fa0, 0x3f7f2951 ),
	VERT( 0x4280ccaa, 0x41c5d0b8, 0x40b53667 ),
	NORM( 0xbda397f9, 0xbc4f4ebf, 0x3f7f2951 ),
	VERT( 0x4289a4a1, 0x415d2a58, 0x41848924 ),
	NORM( 0xbda397fc, 0xbc4f4f66, 0x3f7f2951 ),
	VERT( 0x42724eaa, 0x4102f026, 0x416456a2 ),
	NORM( 0xbd15d61e, 0xbe03dde9, 0x3f7db218 ),
	VERT( 0x426ce0e6, 0x41387ca0, 0x412eca28 ),
	NORM( 0xbd15d5ea, 0xbe03ddd8, 0x3f7db219 ),
	VERT( 0x4266eca5, 0x417337b8, 0x40e81e1d ),
	NORM( 0xbd15d5df, 0xbe03dde9, 0x3f7db218 ),
	VERT( 0x42609eba, 0x4198b39e, 0x40577e2e ),
	NORM( 0xbd15d60c, 0xbe03ddd0, 0x3f7db219 ),
	VERT( 0x426afab1, 0x414b3888, 0x411c0e40 ),
	NORM( 0xbee6b6b3, 0x3f64683e, 0xbcf5b417 ),
	VERT( 0x425eb885, 0x41a21192, 0x400c8e86 ),
	NORM( 0xbee6b6b6, 0x3f64683d, 0xbcf5b4d8 ),
	VERT( 0x42706874, 0x4115ac0c, 0x41519ab9 ),
	NORM( 0xbee6b6b0, 0x3f64683f, 0xbcf5b469 ),
	VERT( 0x42650670, 0x4182f9d0, 0x40c2a64d ),
	NORM( 0xbee6b6b7, 0x3f64683d, 0xbcf5b41f ),
	VERT( 0x42830084, 0x41b016ea, 0x41060ece ),
	NORM( 0xbee4558f, 0x3f63dddc, 0x3dc07182 ),
	VERT( 0x4285faa5, 0x4192b95c, 0x4140c9e8 ),
	NORM( 0xbee45597, 0x3f63ddda, 0x3dc071b3 ),
	VERT( 0x427fb31e, 0x41cf2eac, 0x408fbe97 ),
	NORM( 0xbee45592, 0x3f63dddc, 0x3dc0719c ),
	VERT( 0x4288b186, 0x416fe640, 0x41765661 ),
	NORM( 0xbee4558f, 0x3f63dddc, 0x3dc07198 ),
	VERT( 0x41962836, 0x3f9e4401, 0x41116b19 ),
	NORM( 0xbee1d030, 0xbe26e9e5, 0x3f61ef7b ),
	VERT( 0x41a210b9, 0xc01bca60, 0x414c2631 ),
	NORM( 0xbee1d036, 0xbe26e9cc, 0x3f61ef7b ),
	VERT( 0x41acec3f, 0xc0b8fe24, 0x4180d956 ),
	NORM( 0xbee1d032, 0xbe26e9ce, 0x3f61ef7b ),
	VERT( 0x41898c60, 0x40a3f008, 0x40a6772b ),
	NORM( 0xbee1d03e, 0xbe26e9d2, 0x3f61ef78 ),
	VERT( 0x41acec3f, 0xc114c9e3, 0x414967da ),
	NORM( 0xbeaf3191, 0xbf706347, 0x3d0bf2c2 ),
	VERT( 0x41962836, 0xc0120940, 0x40b24091 ),
	NORM( 0xbeaf318b, 0xbf706348, 0x3d0bf2dd ),
	VERT( 0x41a210b9, 0xc0be7ad4, 0x4113db61 ),
	NORM( 0xbeaf3192, 0xbf706346, 0x3d0bf2c4 ),
	VERT( 0x41898c60, 0x3fcd69a1, 0x3fd7862c ),
	NORM( 0xbeaf319b, 0xbf706345, 0x3d0bf307 ),
	VERT( 0x41a91fd4, 0xc1020dfa, 0x4136abf2 ),
	NORM( 0xbf27a3b5, 0xbe2c04e5, 0xbf3ca2da ),
	VERT( 0x41925bcb, 0xbf8e333f, 0x408cc8c3 ),
	NORM( 0xbf27a3b7, 0xbe2c04f5, 0xbf3ca2d8 ),
	VERT( 0x419e444e, 0xc0990300, 0x41011f78 ),
	NORM( 0xbf27a3b4, 0xbe2c04e0, 0xbf3ca2db ),
	VERT( 0x4185bff6, 0x4031a468, 0x3f034dd8 ),
	NORM( 0xbf27a3ae, 0xbe2c04f2, 0xbf3ca2e0 ),
	VERT( 0x41925bcb, 0x401a11a0, 0x40fd5e63 ),
	NORM( 0xbf440be6, 0x3f234ace, 0x3da751af ),
	VERT( 0x4185bff6, 0x40c967d4, 0x4080ff5f ),
	NORM( 0xbf440be5, 0x3f234ad0, 0x3da75182 ),
	VERT( 0x41a91fd4, 0xc0938654, 0x416ef6c3 ),
	NORM( 0xbf440be7, 0x3f234ace, 0x3da7518e ),
	VERT( 0x419e444e, 0xbfa1b57f, 0x41396a49 ),
	NORM( 0xbf440be5, 0x3f234acf, 0x3da7519f ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_R_Lever[]
START
VList      vertex_Racing_Cont_R_Lever,
PList      strip_Racing_Cont_R_Lever,
Center      58.818020F, 12.795844F, -1.661531F,
Radius      51.008598F,
END

CNKOBJECT  object_Racing_Cont_R_Lever[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Racing_Cont_R_Lever,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Racing_Cont_M_button,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_L_Lever[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 41, 41, 41 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 574, _NB( UFO_0, 61 ),
	StripL(3),  2, 3, 0, 
	StripL(3),  4, 5, 1, 
	StripR(7),  11, 10, 0, 6, 3, 7, 2, 
	StripR(5),  13, 1, 8, 4, 9, 
	StripL(6),  1, 14, 13, 12, 22, 23, 
	StripL(30),  11, 12, 15, 14, 0, 1, 2, 5, 7, 4, 
                   6, 9, 10, 17, 11, 18, 12, 20, 23, 24, 
                   22, 25, 13, 21, 8, 19, 9, 16, 17, 18, 
                   
	StripL(3),  15, 0, 11, 
	StripR(7),  16, 18, 19, 20, 21, 24, 25, 
	StripR(7),  28, 27, 26, 40, 41, 38, 37, 
	StripL(3),  28, 29, 26, 
	StripR(18),  35, 34, 30, 27, 31, 28, 33, 29, 32, 26, 
                   36, 37, 43, 44, 42, 45, 35, 34, 
	StripL(3),  34, 27, 39, 
	StripL(6),  27, 40, 39, 38, 48, 49, 
	StripL(3),  41, 26, 37, 
	StripL(3),  42, 43, 35, 
	StripL(7),  43, 36, 35, 32, 30, 33, 31, 
	StripL(6),  44, 45, 46, 47, 50, 51, 
	StripL(12),  45, 34, 47, 39, 51, 48, 50, 49, 46, 38, 
                   44, 37, 
	StripR(5),  54, 53, 52, 66, 67, 
	StripL(3),  54, 55, 52, 
	StripL(18),  62, 52, 58, 55, 59, 54, 57, 53, 56, 60, 
                   61, 71, 68, 70, 69, 63, 62, 52, 
	StripL(8),  60, 53, 65, 66, 64, 67, 63, 52, 
	StripL(3),  68, 69, 61, 
	StripL(7),  69, 62, 61, 58, 56, 59, 57, 
	StripL(6),  70, 71, 72, 73, 76, 77, 
	StripL(12),  71, 60, 73, 65, 77, 74, 76, 75, 72, 64, 
                   70, 63, 
	StripL(4),  65, 64, 74, 75, 
	StripL(4),  79, 80, 78, 81, 
	StripL(18),  82, 86, 87, 97, 94, 96, 95, 89, 88, 78, 
                   84, 81, 85, 80, 83, 79, 82, 86, 
	StripL(4),  93, 90, 92, 91, 
	StripL(14),  89, 93, 78, 92, 79, 91, 86, 99, 97, 98, 
                   96, 90, 89, 93, 
	StripL(3),  94, 95, 87, 
	StripL(7),  95, 88, 87, 84, 82, 85, 83, 
	StripR(10),  103, 99, 102, 98, 101, 90, 100, 91, 103, 99, 
	StripL(4),  103, 100, 102, 101, 
	StripL(3),  106, 107, 104, 
	StripL(7),  109, 105, 108, 113, 114, 179, 178, 
	StripR(5),  105, 113, 112, 176, 177, 
	StripL(6),  115, 104, 110, 107, 111, 106, 
	StripL(20),  120, 117, 116, 118, 119, 122, 124, 128, 203, 194, 
                   202, 195, 201, 196, 200, 197, 199, 198, 125, 127, 
                   
	StripL(3),  128, 122, 129, 
	StripR(5),  137, 136, 142, 174, 193, 
	StripL(6),  137, 143, 142, 141, 140, 138, 
	StripR(42),  159, 158, 152, 150, 153, 151, 161, 162, 167, 166, 
                   171, 170, 117, 121, 120, 123, 125, 126, 127, 132, 
                   133, 138, 139, 140, 181, 190, 183, 191, 185, 192, 
                   187, 193, 189, 174, 134, 136, 135, 137, 144, 143, 
                   159, 158, 
	StripR(20),  159, 152, 154, 155, 131, 129, 130, 128, 188, 194, 
                   186, 195, 184, 196, 182, 197, 180, 198, 133, 127, 
                   
	StripR(8),  155, 160, 129, 169, 122, 145, 118, 117, 
	StripL(10),  123, 126, 164, 132, 147, 138, 146, 141, 156, 143, 
	StripR(6),  160, 168, 169, 173, 145, 117, 
	StripL(13),  121, 123, 165, 164, 163, 147, 149, 146, 148, 156, 
                   157, 143, 158, 
	StripR(12),  121, 170, 165, 166, 163, 162, 149, 151, 148, 150, 
                   157, 158, 
	StripL(4),  168, 173, 172, 117, 
	StripL(10),  117, 171, 172, 167, 168, 161, 160, 153, 155, 152, 
	StripR(14),  177, 115, 112, 104, 105, 106, 109, 111, 108, 110, 
                   114, 115, 178, 177, 
	StripL(3),  113, 176, 179, 
	StripR(19),  133, 139, 180, 181, 182, 183, 184, 185, 186, 187, 
                   188, 189, 130, 134, 131, 135, 154, 144, 159, 
	StripL(3),  140, 190, 142, 
	StripR(5),  193, 192, 142, 191, 190, 
	StripL(14),  119, 124, 175, 203, 207, 202, 206, 201, 205, 200, 
                   204, 199, 120, 125, 
	StripL(3),  204, 120, 116, 
	StripL(5),  207, 206, 116, 205, 204, 
	StripL(4),  207, 116, 175, 119, 
	CnkEnd()
END

VLIST      vertex_Racing_Cont_L_Lever[]
START
	CnkV_VN(0x0, 1249),
	OffnbIdx(0, 208),
	VERT( 0xc2ccae38, 0x414b3888, 0x411c0e40 ),
	NORM( 0x3ee6b6ad, 0x3f646840, 0xbcf5b344 ),
	VERT( 0xc2cda153, 0x41387ca0, 0x412eca28 ),
	NORM( 0x3d15d5ef, 0xbe03dde7, 0x3f7db218 ),
	VERT( 0xc27f6a1c, 0xc01bca60, 0x414c2631 ),
	NORM( 0x3ee1d041, 0xbe26e9cc, 0x3f61ef78 ),
	VERT( 0xc27d83e7, 0xbfa1b57f, 0x41396a49 ),
	NORM( 0x3f440be2, 0x3f234ad4, 0x3da7518d ),
	VERT( 0xc2cda153, 0x410031ce, 0x40ecfeb1 ),
	NORM( 0xbe8b7887, 0xbf765185, 0x3ae72098 ),
	VERT( 0xc27f6a1c, 0xc0be7ad4, 0x4113db61 ),
	NORM( 0x3eaf31a0, 0xbf706344, 0x3d0bf2c9 ),
	VERT( 0xc2ccae38, 0x4112edb8, 0x40c786df ),
	NORM( 0x3e054fe1, 0x3cfaaba3, 0xbf7db34c ),
	VERT( 0xc27d83e7, 0xc0990300, 0x41011f78 ),
	NORM( 0x3f27a3af, 0xbe2c04db, 0xbf3ca2e0 ),
	VERT( 0xc2f1b801, 0x4174d280, 0x40ec18b3 ),
	NORM( 0xbe8d2059, 0xbf2e01c7, 0x3f2e01c7 ),
	VERT( 0xc2f1b801, 0x413c87b0, 0x40770626 ),
	NORM( 0xbe4acae8, 0xbf7ae266, 0xbc9890a6 ),
	VERT( 0xc2f0c4e6, 0x414f4398, 0x402c1686 ),
	NORM( 0x3e44e944, 0xbc8f0698, 0xbf7b2eb8 ),
	VERT( 0xc2f0c4e6, 0x4183c734, 0x40c6a0e3 ),
	NORM( 0x3e8d2057, 0x3f2e01c9, 0xbf2e01c7 ),
	VERT( 0xc2f0c4e6, 0x41ac80d0, 0x4134c3a6 ),
	NORM( 0x3f1393e6, 0x3f47f210, 0xbe75e186 ),
	VERT( 0xc2f1b801, 0x41a322dc, 0x41477f8f ),
	NORM( 0x3dd995b1, 0xbec1d0cc, 0x3f6b620a ),
	VERT( 0xc2de1ea0, 0x41895b68, 0x415385d1 ),
	NORM( 0x3da397da, 0xbc4f5199, 0x3f7f2951 ),
	VERT( 0xc2dd2b85, 0x4192b95c, 0x4140c9e8 ),
	NORM( 0x3ee4558c, 0x3f63dddc, 0x3dc071e4 ),
	VERT( 0xc30a18e2, 0x417473c4, 0x3ebaaeef ),
	NORM( 0xbf36d0cc, 0xbf302ada, 0xbe036c45 ),
	VERT( 0xc3099f55, 0x418397d6, 0xbf4e6728 ),
	NORM( 0xbecaac5e, 0x3dc611ac, 0xbf69c81f ),
	VERT( 0xc3099f55, 0x419fbd3e, 0x402d917e ),
	NORM( 0xbf01dd9f, 0x3f285b56, 0xbf0e9289 ),
	VERT( 0xc30a18e2, 0x41965f4a, 0x4078811e ),
	NORM( 0xbf62a3f1, 0xbe8c932e, 0x3ec024cc ),
	VERT( 0xc3083f8e, 0x41c63c3e, 0x41014ccb ),
	NORM( 0xbef54dbc, 0x3f4a27d6, 0xbec4387e ),
	VERT( 0xc308b91c, 0x41bcde4a, 0x411408b3 ),
	NORM( 0xbf588702, 0xbdeab496, 0x3f056230 ),
	VERT( 0xc2f7371a, 0x41e89414, 0x41a04695 ),
	NORM( 0x3e48987d, 0x3d7b4e41, 0x3f7a8c55 ),
	VERT( 0xc2f64400, 0x41f1f208, 0x4196e8a1 ),
	NORM( 0x3f028692, 0x3f55ea31, 0x3e515c79 ),
	VERT( 0xc3030ea1, 0x41eb084c, 0x416c9365 ),
	NORM( 0xbe92a02f, 0x3f735cf5, 0xbdf4b3e7 ),
	VERT( 0xc303882e, 0x41e1aa58, 0x417f4f50 ),
	NORM( 0xbf24d325, 0x3d8d93b9, 0x3f431415 ),
	VERT( 0xc2c9b418, 0x4182f9d0, 0x40c2a64d ),
	NORM( 0x3ee6b6bc, 0x3f64683c, 0xbcf5b410 ),
	VERT( 0xc2caa732, 0x417337b8, 0x40e81e1d ),
	NORM( 0x3d15d5c7, 0xbe03dde2, 0x3f7db218 ),
	VERT( 0xc27975db, 0x3f9e4401, 0x41116b19 ),
	NORM( 0x3ee1d020, 0xbe26e9ea, 0x3f61ef7f ),
	VERT( 0xc2778fa5, 0x401a11a0, 0x40fd5e63 ),
	NORM( 0x3f440bea, 0x3f234ac9, 0x3da751d6 ),
	VERT( 0xc2caa732, 0x413aece8, 0x406f10f6 ),
	NORM( 0xbe8b788e, 0xbf765184, 0x3ae71943 ),
	VERT( 0xc27975db, 0xc0120940, 0x40b24091 ),
	NORM( 0x3eaf3181, 0xbf706349, 0x3d0bf2cb ),
	VERT( 0xc2c9b418, 0x414da8d0, 0x40242156 ),
	NORM( 0x3e054fec, 0x3cfaab54, 0xbf7db34c ),
	VERT( 0xc2778fa5, 0xbf8e333f, 0x408cc8c3 ),
	NORM( 0x3f27a3bb, 0xbe2c04f2, 0xbf3ca2d4 ),
	VERT( 0xc2eebde0, 0x4197c6ce, 0x406d44fe ),
	NORM( 0xbe8d2056, 0xbf2e01c9, 0x3f2e01c6 ),
	VERT( 0xc2eebde0, 0x417742cc, 0x3e419bdf ),
	NORM( 0xbe4acae5, 0xbf7ae266, 0xbc9890dd ),
	VERT( 0xc2edcac6, 0x4184ff5a, 0xbf7b5788 ),
	NORM( 0x3e44e945, 0xbc8f0688, 0xbf7b2eb8 ),
	VERT( 0xc2edcac6, 0x41a124c2, 0x4022555e ),
	NORM( 0x3e8d2058, 0x3f2e01c6, 0xbf2e01c9 ),
	VERT( 0xc2edcac6, 0x41c9de5c, 0x40f4111b ),
	NORM( 0x3f1393e9, 0x3f47f20a, 0xbe75e1b4 ),
	VERT( 0xc2eebde0, 0x41c08068, 0x410cc475 ),
	NORM( 0x3dd99599, 0xbec1d0ba, 0x3f6b620e ),
	VERT( 0xc2db247f, 0x41a6b8f6, 0x4118cab7 ),
	NORM( 0x3da397ff, 0xbc4f4f28, 0x3f7f2951 ),
	VERT( 0xc2da3164, 0x41b016ea, 0x41060ece ),
	NORM( 0x3ee45595, 0x3f63dddb, 0x3dc07173 ),
	VERT( 0xc3089bd2, 0x4197976e, 0xc0539682 ),
	NORM( 0xbf36d0eb, 0xbf302ab5, 0xbe036cbb ),
	VERT( 0xc3082244, 0x41a0f562, 0xc08f4311 ),
	NORM( 0xbecaabf4, 0x3dc6120c, 0xbf69c835 ),
	VERT( 0xc3082244, 0x41bd1aca, 0xbf756b88 ),
	NORM( 0xbf01dd7a, 0x3f285b6c, 0xbf0e9291 ),
	VERT( 0xc3089bd2, 0x41b3bcd6, 0x3e594bdf ),
	NORM( 0xbf62a400, 0xbe8c92f1, 0x3ec024af ),
	VERT( 0xc306c27e, 0x41e399ca, 0x408d2363 ),
	NORM( 0xbef54dd9, 0x3f4a27d5, 0xbec43861 ),
	VERT( 0xc3073c0b, 0x41da3bd6, 0x40b29b33 ),
	NORM( 0xbf5886f9, 0xbdeab4d5, 0x3f05623d ),
	VERT( 0xc2f43cfa, 0x4202f8d1, 0x4182e908 ),
	NORM( 0x3e489820, 0x3d7b4e9e, 0x3f7a8c5a ),
	VERT( 0xc2f349df, 0x4207a7cb, 0x41731628 ),
	NORM( 0x3f0286a8, 0x3f55ea24, 0x3e515c66 ),
	VERT( 0xc3019191, 0x420432ec, 0x4131d84e ),
	NORM( 0xbe92a057, 0x3f735cf2, 0xbdf4b356 ),
	VERT( 0xc3020b1e, 0x41ff07e4, 0x41449436 ),
	NORM( 0xbf24d328, 0x3d8d92f5, 0x3f431415 ),
	VERT( 0xc2c68d22, 0x41a21192, 0x400c8e86 ),
	NORM( 0x3ee6b6b1, 0x3f64683e, 0xbcf5b3ae ),
	VERT( 0xc2c7803d, 0x4198b39e, 0x40577e2e ),
	NORM( 0x3d15d5ed, 0xbe03ddf3, 0x3f7db218 ),
	VERT( 0xc27327f0, 0x40a3f008, 0x40a6772b ),
	NORM( 0x3ee1d037, 0xbe26e9d8, 0x3f61ef7a ),
	VERT( 0xc27141bb, 0x40c967d4, 0x4080ff5f ),
	NORM( 0x3f440be4, 0x3f234ad0, 0x3da751ac ),
	VERT( 0xc2c7803d, 0x41791c6c, 0xbe1ad1a1 ),
	NORM( 0xbe8b788a, 0xbf765184, 0x3ae7237d ),
	VERT( 0xc27327f0, 0x3fcd69a1, 0x3fd7862c ),
	NORM( 0x3eaf3198, 0xbf706345, 0x3d0bf34c ),
	VERT( 0xc2c68d22, 0x4185ec2a, 0xbfa93974 ),
	NORM( 0x3e054fdd, 0x3cfaaad6, 0xbf7db34c ),
	VERT( 0xc27141bb, 0x4031a468, 0x3f034dd8 ),
	NORM( 0x3f27a3af, 0xbe2c0500, 0xbf3ca2de ),
	VERT( 0xc2eb96eb, 0x41b6de90, 0xbe379121 ),
	NORM( 0xbe8d2057, 0xbf2e01ca, 0x3f2e01c6 ),
	VERT( 0xc2eb96eb, 0x419ab928, 0xc06ca452 ),
	NORM( 0xbe4acae8, 0xbf7ae266, 0xbc9890dd ),
	VERT( 0xc2eaa3d0, 0x41a4171c, 0xc09bc9f9 ),
	NORM( 0x3e44e940, 0xbc8f0670, 0xbf7b2eb8 ),
	VERT( 0xc2eaa3d0, 0x41c03c84, 0xbfacd164 ),
	NORM( 0x3e8d2055, 0x3f2e01c7, 0xbf2e01c9 ),
	VERT( 0xc2eaa3d0, 0x41e8f61e, 0x406f6426 ),
	NORM( 0x3f1393e5, 0x3f47f211, 0xbe75e17e ),
	VERT( 0xc2eb96eb, 0x41df982a, 0x409d29e3 ),
	NORM( 0x3dd99594, 0xbec1d0cb, 0x3f6b620b ),
	VERT( 0xc2d7fd8a, 0x41c5d0b8, 0x40b53667 ),
	NORM( 0x3da397de, 0xbc4f5037, 0x3f7f2951 ),
	VERT( 0xc2d70a6f, 0x41cf2eac, 0x408fbe97 ),
	NORM( 0x3ee45590, 0x3f63dddb, 0x3dc071e4 ),
	VERT( 0xc3070857, 0x41b6af30, 0xc0e62a49 ),
	NORM( 0xbf36d0cb, 0xbf302adc, 0xbe036c49 ),
	VERT( 0xc3068eca, 0x41c00d24, 0xc105d10d ),
	NORM( 0xbecaac63, 0x3dc611a5, 0xbf69c81e ),
	VERT( 0xc3068eca, 0x41dc328c, 0xc09b0c79 ),
	NORM( 0xbf01dda1, 0x3f285b54, 0xbf0e928b ),
	VERT( 0xc3070857, 0x41d2d498, 0xc06b2952 ),
	NORM( 0xbf62a3f1, 0xbe8c9333, 0x3ec024ca ),
	VERT( 0xc3052f03, 0x420158c6, 0x3f0622d8 ),
	NORM( 0xbef54dbe, 0x3f4a27d6, 0xbec4387d ),
	VERT( 0xc305a891, 0x41f95398, 0x3fd8f0ac ),
	NORM( 0xbf588702, 0xbdeab4aa, 0x3f056230 ),
	VERT( 0xc2f11604, 0x421284b2, 0x4147a28c ),
	NORM( 0x3e48986c, 0x3d7b4e1c, 0x3f7a8c56 ),
	VERT( 0xc2f022ea, 0x421733ac, 0x4134e6a4 ),
	NORM( 0x3f02868e, 0x3f55ea31, 0x3e515c93 ),
	VERT( 0xc2fffc2c, 0x4213becd, 0x40e75195 ),
	NORM( 0xbe92a036, 0x3f735cf5, 0xbdf4b3a8 ),
	VERT( 0xc30077a3, 0x420f0fd3, 0x410664b3 ),
	NORM( 0xbf24d324, 0x3d8d939d, 0x3f431417 ),
	VERT( 0xc2cf651a, 0x4115ac0c, 0x41519ab9 ),
	NORM( 0x3ee6b6b3, 0x3f64683e, 0xbcf5b3e5 ),
	VERT( 0xc2d05835, 0x4102f026, 0x416456a2 ),
	NORM( 0x3d15d60f, 0xbe03ddf3, 0x3f7db218 ),
	VERT( 0xc2826bf0, 0xc0b8fe24, 0x4180d956 ),
	NORM( 0x3ee1d025, 0xbe26e9e2, 0x3f61ef7e ),
	VERT( 0xc28178d5, 0xc0938654, 0x416ef6c3 ),
	NORM( 0x3f440bea, 0x3f234aca, 0x3da751c2 ),
	VERT( 0xc2d05835, 0x40954aa8, 0x412c0bd1 ),
	NORM( 0xbe8b7888, 0xbf765185, 0x3ae71bb4 ),
	VERT( 0xc2826bf0, 0xc114c9e3, 0x414967da ),
	NORM( 0x3eaf3181, 0xbf70634a, 0x3d0bf2c4 ),
	VERT( 0xc2cf651a, 0x40bac278, 0x41194fe9 ),
	NORM( 0x3e054fdd, 0x3cfaab89, 0xbf7db34c ),
	VERT( 0xc28178d5, 0xc1020dfa, 0x4136abf2 ),
	NORM( 0x3f27a3b9, 0xbe2c04f0, 0xbf3ca2d6 ),
	VERT( 0xc2f46ee3, 0x413f4608, 0x412b98d3 ),
	NORM( 0xbe8d2057, 0xbf2e01c6, 0x3f2e01c9 ),
	VERT( 0xc2f46ee3, 0x4106fb38, 0x40e69c05 ),
	NORM( 0xbe4acae5, 0xbf7ae266, 0xbc9890ed ),
	VERT( 0xc2f37bc8, 0x4119b720, 0x40c12437 ),
	NORM( 0x3e44e942, 0xbc8f065e, 0xbf7b2eb8 ),
	VERT( 0xc2f37bc8, 0x415201f0, 0x4118dcec ),
	NORM( 0x3e8d2055, 0x3f2e01c3, 0xbf2e01cd ),
	VERT( 0xc2f37bc8, 0x4191ba92, 0x416a5022 ),
	NORM( 0x3f1393ee, 0x3f47f20b, 0xbe75e17c ),
	VERT( 0xc2f46ee3, 0x41885c9e, 0x417d0c09 ),
	NORM( 0x3dd9955d, 0xbec1d0d6, 0x3f6b6209 ),
	VERT( 0xc2e0d581, 0x415d2a58, 0x41848924 ),
	NORM( 0x3da397fe, 0xbc4f4f3e, 0x3f7f2951 ),
	VERT( 0xc2dfe266, 0x416fe640, 0x41765661 ),
	NORM( 0x3ee45596, 0x3f63ddda, 0x3dc071a8 ),
	VERT( 0xc30b7453, 0x413ee748, 0x406d87c6 ),
	NORM( 0xbf36d0cb, 0xbf302adb, 0xbe036c4f ),
	VERT( 0xc30afac6, 0x4151a330, 0x40229826 ),
	NORM( 0xbecaac5f, 0x3dc611b0, 0xbf69c81f ),
	VERT( 0xc30afac6, 0x4184f700, 0x40c1e1b3 ),
	NORM( 0xbf01ddaf, 0x3f285b55, 0xbf0e927d ),
	VERT( 0xc30b7453, 0x41773218, 0x40e75985 ),
	NORM( 0xbf62a3e8, 0xbe8c933a, 0x3ec024ec ),
	VERT( 0xc3099aff, 0x41ab7602, 0x4136d943 ),
	NORM( 0xbef54def, 0x3f4a27cd, 0xbec43863 ),
	VERT( 0xc30a148c, 0x41a2180e, 0x4149952b ),
	NORM( 0xbf5886f3, 0xbdeab546, 0x3f056242 ),
	VERT( 0xc2f9edfc, 0x41cdcdd8, 0x41bb0cd1 ),
	NORM( 0x3e48980a, 0x3d7b4dda, 0x3f7a8c5b ),
	VERT( 0xc2f8fae1, 0x41d72bcc, 0x41b1aedd ),
	NORM( 0x3f0286aa, 0x3f55ea1e, 0x3e515cb0 ),
	VERT( 0xc3046a12, 0x41d04210, 0x41910ff0 ),
	NORM( 0xbe92a050, 0x3f735cf3, 0xbdf4b350 ),
	VERT( 0xc304e39f, 0x41c6e41c, 0x419a6de4 ),
	NORM( 0xbf24d328, 0x3d8d931c, 0x3f431415 ),
	VERT( 0xc2d573a0, 0xbf8aca8f, 0x41872948 ),
	NORM( 0x3d965e4a, 0x3dc20f7a, 0x3f7e2770 ),
	VERT( 0xc2d573a0, 0xbfd7f5af, 0x41825695 ),
	NORM( 0xbdde0fcd, 0xbf7dc668, 0xbd9893ab ),
	VERT( 0xc2873d65, 0xc178e61a, 0x4192407d ),
	NORM( 0x3eafe325, 0xbf703f62, 0x3d11c729 ),
	VERT( 0xc2873d65, 0xc16f40b5, 0x41971330 ),
	NORM( 0x3ee15248, 0xbe254739, 0x3f62221f ),
	VERT( 0xc2c229ae, 0x41b0c40a, 0xc0efb341 ),
	NORM( 0x3e80f573, 0xbdd4e107, 0xbf76503f ),
	VERT( 0xc267e6e4, 0x4103a0b2, 0xc0b00ba1 ),
	NORM( 0x3f28047e, 0xbe2b264c, 0xbf3c5957 ),
	VERT( 0xc2c229ae, 0x41b596be, 0xc0dc6879 ),
	NORM( 0x3ecc4e62, 0x3f659751, 0x3e437f29 ),
	VERT( 0xc267e6e4, 0x410d4616, 0xc09cc0d9 ),
	NORM( 0x3f43c242, 0x3f239926, 0x3da9b972 ),
	VERT( 0xc2f1092b, 0xc0401580, 0x419b05dc ),
	NORM( 0xbc7676a5, 0xbd8a82ed, 0x3f7f6282 ),
	VERT( 0xc2f1092b, 0xc066ab18, 0x4196332a ),
	NORM( 0xbce781b5, 0xbf7f3496, 0x3d967d12 ),
	VERT( 0xc2d63ee8, 0x41eb6bca, 0xc1641c03 ),
	NORM( 0x3ec15aa8, 0x3b31b98b, 0xbf6d0ad6 ),
	VERT( 0xc2d63ee8, 0x41f03e7c, 0xc15a769f ),
	NORM( 0x3ec6178c, 0x3f6c0e1d, 0x3bfbb5b8 ),
	VERT( 0xc30f3025, 0xc0a8be88, 0x41ad2b3a ),
	NORM( 0x3e2c8637, 0x3f79a1b4, 0x3e137fc0 ),
	VERT( 0xc30f60d0, 0xc0b6f6a4, 0x41b0f325 ),
	NORM( 0xbe5daef4, 0xbdc526e1, 0x3f78b60a ),
	VERT( 0xc30cca56, 0xc0b7fc48, 0x41b1348e ),
	NORM( 0x3e521919, 0xbdae4fad, 0x3f799ac2 ),
	VERT( 0xc30cdbea, 0xc0a9aa04, 0x41ad6618 ),
	NORM( 0xbe291071, 0x3f7a08c7, 0x3e0c6c9c ),
	VERT( 0xc3112f4a, 0xc08d9908, 0x41a661d9 ),
	NORM( 0x3ee8b3a4, 0x3f59e078, 0x3e869552 ),
	VERT( 0xc31198c1, 0xc098ccf8, 0x41a968ba ),
	NORM( 0xbf13e164, 0x3d9fd4c3, 0x3f500299 ),
	VERT( 0xc30a86d6, 0xc09b97d4, 0x41aa1b72 ),
	NORM( 0x3f18f291, 0x3d15a657, 0x3f4d1316 ),
	VERT( 0xc312d9fa, 0xc04b28a8, 0x419c9a91 ),
	NORM( 0xbf4be940, 0x3ea67138, 0x3f02803e ),
	VERT( 0xc30ad25d, 0xc0901c6c, 0x41a702b2 ),
	NORM( 0xbedb8e9d, 0x3f5923bd, 0x3e9f2fae ),
	VERT( 0xc3125064, 0xc03eff50, 0x419adb82 ),
	NORM( 0x3f108c01, 0x3f25a011, 0x3f03304e ),
	VERT( 0xc3125dde, 0xbe8552fe, 0x41854ac9 ),
	NORM( 0xbf42998c, 0x3f0e67a6, 0x3eabe780 ),
	VERT( 0xc311d570, 0xbe81b8be, 0x4185027a ),
	NORM( 0x3f1e38ce, 0x3eea8757, 0x3f238e9b ),
	VERT( 0xc3092eb1, 0xc0007b00, 0x41930af8 ),
	NORM( 0xbf179602, 0x3f340e30, 0x3ec95f67 ),
	VERT( 0xc308c10a, 0xc00d67a0, 0x4194e270 ),
	NORM( 0x3f39ed3b, 0x3e81c9a6, 0x3f2392a2 ),
	VERT( 0xc2f3b3aa, 0x420f32bd, 0xc19b69e1 ),
	NORM( 0xbf1e45c4, 0x3f22d403, 0x3eec69c7 ),
	VERT( 0xc2f2a2ac, 0x420f6cb8, 0xc19ba3f3 ),
	NORM( 0x3f434515, 0x3ead1aab, 0x3f0d1e53 ),
	VERT( 0xc302ee2a, 0x4217388c, 0xc1ab3b9b ),
	NORM( 0xbf3a0e22, 0x3f23dc1c, 0x3e7f2b0a ),
	VERT( 0xc3028094, 0x421636fb, 0xc1a9725f ),
	NORM( 0x3f171746, 0x3ec8e174, 0x3f349bab ),
	VERT( 0xc2f2e6c0, 0x4219551a, 0xc1afae9b ),
	NORM( 0xbf1137ca, 0x3f015d6e, 0x3f267879 ),
	VERT( 0xc2f1d374, 0x421a4a6c, 0xc1b15f5b ),
	NORM( 0x3f4b9ab7, 0x3f045f07, 0x3ea1fa19 ),
	VERT( 0xc2f528f4, 0x421f1845, 0xc1bb34f3 ),
	NORM( 0xbee87be8, 0x3e84b5ba, 0x3f5a38d2 ),
	VERT( 0xc2f455e6, 0x4220b181, 0xc1be2d85 ),
	NORM( 0x3f1351fd, 0x3f508e71, 0x3d92da2f ),
	VERT( 0xc3013cde, 0x42210add, 0xc1bee03d ),
	NORM( 0xbf196ebd, 0x3f4cbf6c, 0x3d088591 ),
	VERT( 0xc300f167, 0x421f68b3, 0xc1bbd5cd ),
	NORM( 0x3edd2e58, 0x3e9d92ff, 0x3f590581 ),
	VERT( 0xc2fdcfb3, 0x42229a65, 0xc1c23933 ),
	NORM( 0x3e2d8080, 0x3e0d0c3e, 0x3f79d280 ),
	VERT( 0xc2fdf2bb, 0x4224976a, 0xc1c5f959 ),
	NORM( 0xbe56a2f9, 0x3f794ebf, 0xbdb35125 ),
	VERT( 0xc2f9273e, 0x42227cf6, 0xc1c1fe55 ),
	NORM( 0xbe2c6ac4, 0x3e1438c4, 0x3f799c0a ),
	VERT( 0xc2f8c5c7, 0x422476b5, 0xc1c5b7ed ),
	NORM( 0x3e5dcded, 0x3f78b116, 0xbdc62ab0 ),
	VERT( 0xc2f4fabf, 0x421af554, 0xc1cab143 ),
	NORM( 0x3f2daafd, 0x3ea257ba, 0xbf29aa95 ),
	VERT( 0xc30d1cc3, 0xc0e5ddae, 0x41a4b0d0 ),
	NORM( 0x3e52924a, 0xbf5750e5, 0x3f0013be ),
	VERT( 0xc300ae1b, 0x4218017a, 0xc1cf23dd ),
	NORM( 0xbf236ac0, 0x3e1fc165, 0xbf40f73a ),
	VERT( 0xc3024952, 0x420d2abb, 0xc1bd4075 ),
	NORM( 0xbf521128, 0xbdd1d420, 0xbf0ff1b1 ),
	VERT( 0xc2fe502b, 0x42124987, 0xc1d5a273 ),
	NORM( 0xbe9e3fed, 0xbe24eb61, 0xbf6ff2db ),
	VERT( 0xc30086f5, 0x42069052, 0xc1c4c03f ),
	NORM( 0xbee91088, 0xbee8cd0f, 0xbf43fa38 ),
	VERT( 0xc2fa2698, 0x420ef55e, 0xc1d58a57 ),
	NORM( 0x3df9c109, 0xbeaab448, 0xbf6f5328 ),
	VERT( 0xc2fc3f80, 0x4202b852, 0xc1c4a46b ),
	NORM( 0x3cc1c5bb, 0xbf256b3b, 0xbf4348c4 ),
	VERT( 0xc2f5fd06, 0x420ee950, 0xc1cee205 ),
	NORM( 0x3f0d9034, 0xbeabf3cf, 0xbf4333c8 ),
	VERT( 0xc2f77116, 0x4202aa67, 0xc1bcf46b ),
	NORM( 0x3f00a4b8, 0xbf261cb3, 0xbf124401 ),
	VERT( 0xc2f2f0f8, 0x4212289b, 0xc1c3721f ),
	NORM( 0x3f61db6d, 0xbe1bf5e1, 0xbee412b3 ),
	VERT( 0xc2f3ec5d, 0x42066a4c, 0xc1afbf97 ),
	NORM( 0x3f5e418d, 0xbee3c5be, 0xbe612566 ),
	VERT( 0xc2fd4de3, 0x421e558b, 0xc1d171b3 ),
	NORM( 0xbe5526c2, 0x3efe6075, 0xbf57af10 ),
	VERT( 0xc2fb8b86, 0x421b0856, 0xc1d53195 ),
	NORM( 0xbbd1f609, 0x3ea4b2db, 0xbf72634e ),
	VERT( 0xc2f92450, 0x42191c57, 0xc1d523ad ),
	NORM( 0x3e7340a1, 0x3e689a27, 0xbf71c6ff ),
	VERT( 0xc2f6bd1b, 0x42191561, 0xc1d14bab ),
	NORM( 0x3ef62561, 0x3e643ff4, 0xbf5919e5 ),
	VERT( 0xc30965e2, 0xc08ec734, 0x4180c6ce ),
	NORM( 0x3f52a001, 0xbf0efc07, 0xbdd7ee9d ),
	VERT( 0xc30b283f, 0xc0acc65c, 0x416723f4 ),
	NORM( 0x3eea0418, 0xbf430abd, 0xbeeafa98 ),
	VERT( 0xc30d8f74, 0xc0ac5708, 0x4157c3f4 ),
	NORM( 0xbcb47bc2, 0xbf42592e, 0xbf268830 ),
	VERT( 0xc30ff6a9, 0xc08d970c, 0x41578c4c ),
	NORM( 0xbf0049b8, 0xbf114e4d, 0xbf2739c1 ),
	VERT( 0xc311b906, 0xc0318770, 0x41668bdd ),
	NORM( 0xbf5e03a6, 0xbe5bf34b, 0xbee5f966 ),
	VERT( 0xc3124b38, 0xc0addf64, 0x418c56f0 ),
	NORM( 0xbf6298ac, 0xbee010de, 0xbe21ec75 ),
	VERT( 0xc310c531, 0xc0db9ef4, 0x4185d858 ),
	NORM( 0xbf0d8176, 0xbf4297c6, 0xbeaee146 ),
	VERT( 0xc30eb068, 0xc0f64048, 0x4185f075 ),
	NORM( 0xbdf69d36, 0xbf6ed976, 0xbeada0b4 ),
	VERT( 0xc30c9b9f, 0xc0f6a0b8, 0x418c98c9 ),
	NORM( 0x3e9fb46f, 0xbf6f79b4, 0xbe2a3ab0 ),
	VERT( 0xc30b1598, 0xc0dca65c, 0x419808ae ),
	NORM( 0x3f241d34, 0xbf405e84, 0x3e1fd541 ),
	VERT( 0xc3114655, 0xc0cadbec, 0x419df05f ),
	NORM( 0xbf2e8339, 0xbf28d4dc, 0x3ea23371 ),
	VERT( 0xc3106526, 0xc0e54596, 0x419a307c ),
	NORM( 0xbef6254a, 0xbf5919ea, 0x3e644011 ),
	VERT( 0xc30f318c, 0xc0f4a594, 0x419a3e66 ),
	NORM( 0xbe7340ff, 0xbf71c6fd, 0x3e6899f0 ),
	VERT( 0xc30dfdf1, 0xc0f4dd3e, 0x419e1666 ),
	NORM( 0x3bd1ede6, 0xbf72634f, 0x3ea4b2d6 ),
	VERT( 0xc2f5bd4f, 0x4219eeea, 0xc1c67851 ),
	NORM( 0xbf2d510f, 0xbea485e4, 0x3f29801b ),
	VERT( 0xc30d2618, 0xc0d2f4e0, 0x41a222ba ),
	NORM( 0xbe552712, 0x3f57af08, 0xbefe607f ),
	VERT( 0xc307d0ec, 0xbf00991f, 0x417ac520 ),
	NORM( 0xbe47953d, 0xbf7b0a9f, 0xbc9eaa40 ),
	VERT( 0xc307d0ec, 0x3dcdea08, 0x41823542 ),
	NORM( 0xbe479524, 0x3c9eae09, 0x3f7b0aa0 ),
	VERT( 0xc2f4d796, 0x4204878b, 0xc1860be9 ),
	NORM( 0x3e47952b, 0x3f7b0aa0, 0x3c9ead33 ),
	VERT( 0xc2f4d796, 0x42021e32, 0xc18ade9d ),
	NORM( 0x3e479537, 0xbc9eab16, 0xbf7b0a9f ),
	VERT( 0xc301ec38, 0x420d2a8d, 0xc1b9a9f1 ),
	NORM( 0x3f52825f, 0x3dd5e74f, 0x3f0f33d2 ),
	VERT( 0xc30070eb, 0x421746a6, 0xc1ca790f ),
	NORM( 0x3f24e1c4, 0xbe1e11ef, 0x3f3fcd86 ),
	VERT( 0xc30056e4, 0x4207392e, 0xc1c069bf ),
	NORM( 0x3ee98ea8, 0x3ee9ed7a, 0x3f437eab ),
	VERT( 0xc2fe23cb, 0x4212211a, 0xc1d05167 ),
	NORM( 0x3e9f00b8, 0x3e27aa71, 0x3f6fb482 ),
	VERT( 0xc2fc5a69, 0x4203c394, 0xc1c050b3 ),
	NORM( 0xbcbae82d, 0x3f25feb0, 0x3f42cd29 ),
	VERT( 0xc2fa64c7, 0x420f2227, 0xc1d03bb1 ),
	NORM( 0xbdf821a6, 0x3eac37a6, 0x3f6f147f ),
	VERT( 0xc2f8070a, 0x4203b70e, 0xc1b9657f ),
	NORM( 0xbf0075c4, 0x3f26b037, 0x3f11c53b ),
	VERT( 0xc2f6a5c3, 0x420f174d, 0xc1ca3dcd ),
	NORM( 0xbf0d88ba, 0x3ead77c4, 0x3f42e354 ),
	VERT( 0xc2f4dc62, 0x420716f4, 0xc1ad82bf ),
	NORM( 0xbf5e3ba2, 0x3ee46521, 0x3e5efa61 ),
	VERT( 0xc2f3e7b7, 0x42120378, 0xc1bff2b1 ),
	NORM( 0xbf622264, 0x3e1a2447, 0x3ee34834 ),
	VERT( 0xc2fd3b58, 0x421cf8b5, 0xc1cc8be9 ),
	NORM( 0x3e596020, 0xbeff0192, 0x3f573bed ),
	VERT( 0xc2fba603, 0x421a0006, 0xc1cfebcf ),
	NORM( 0x3bd1e0e0, 0xbea4b2f2, 0x3f72634a ),
	VERT( 0xc2f97c54, 0x42184539, 0xc1cfdf49 ),
	NORM( 0xbe734086, 0xbe68999c, 0x3f71c70a ),
	VERT( 0xc2f752a4, 0x42183ef7, 0xc1cc69b1 ),
	NORM( 0xbef62519, 0xbe643fec, 0x3f5919fa ),
	VERT( 0xc309c30d, 0xc0811bc4, 0x4180f21a ),
	NORM( 0xbf52e1a3, 0x3f0e7159, 0x3ddeb97a ),
	VERT( 0xc30b5861, 0xc09c1af8, 0x416a1eb3 ),
	NORM( 0xbeea87fd, 0x3f428754, 0x3eec2a0f ),
	VERT( 0xc30d8211, 0xc09bb6c8, 0x415c484d ),
	NORM( 0x3cad3949, 0x3f41d5b4, 0x3f272312 ),
	VERT( 0xc30fabc1, 0xc08009fc, 0x415c1636 ),
	NORM( 0x3f0017ab, 0x3f10c79b, 0x3f27d4ac ),
	VERT( 0xc3114114, 0xc020fe00, 0x416995d2 ),
	NORM( 0x3f5dc7bf, 0x3e5add42, 0x3ee7222b ),
	VERT( 0xc311cfe8, 0xc0a09004, 0x418c383e ),
	NORM( 0x3f6227d1, 0x3ee16c21, 0x3e243ca9 ),
	VERT( 0xc31070e3, 0xc0c9bc6c, 0x41865fe9 ),
	NORM( 0x3f0d7901, 0x3f424205, 0x3eb07826 ),
	VERT( 0xc30e9161, 0xc0e1b402, 0x4186759c ),
	NORM( 0x3df4e6a1, 0x3f6e9643, 0x3eaf3734 ),
	VERT( 0xc30cb1df, 0xc0e20ad2, 0x418c7382 ),
	NORM( 0xbea07e8c, 0x3f6f36c4, 0x3e2d1de0 ),
	VERT( 0xc30b52d9, 0xc0caa97c, 0x4196be9c ),
	NORM( 0xbf24f11b, 0x3f4002a4, 0xbe18f4e6 ),
	VERT( 0xc310e51c, 0xc0baa67c, 0x419c0f21 ),
	NORM( 0x3f2dab24, 0x3f29aa77, 0xbea25790 ),
	VERT( 0xc3101a72, 0xc0d26bfc, 0x4198af3c ),
	NORM( 0x3ef62569, 0x3f5919db, 0xbe644071 ),
	VERT( 0xc30f059a, 0xc0e04262, 0x4198bbc2 ),
	NORM( 0x3e7340a2, 0x3f71c701, 0xbe689a12 ),
	VERT( 0xc30df0c2, 0xc0e07478, 0x419c315b ),
	NORM( 0xbbd1eed3, 0x3f72634d, 0xbea4b2de ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_L_Lever[]
START
VList      vertex_Racing_Cont_L_Lever,
PList      strip_Racing_Cont_L_Lever,
Center      -102.413475F, 12.795844F, -1.661531F,
Radius      51.008595F,
END

CNKOBJECT  object_Racing_Cont_L_Lever[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Racing_Cont_L_Lever,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Racing_Cont_R_Lever,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_B_button[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 70, 0 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 124, _NB( UFO_0, 4 ),
	StripR(34),  5, 1, 2, 0, 3, 30, 31, 28, 29, 26, 
                   27, 24, 25, 22, 23, 20, 21, 18, 19, 16, 
                   17, 14, 15, 12, 13, 10, 11, 8, 9, 6, 
                   7, 4, 5, 1, 
	StripR(34),  32, 1, 33, 4, 34, 6, 35, 8, 36, 10, 
                   37, 12, 38, 14, 39, 16, 40, 18, 41, 20, 
                   42, 22, 43, 24, 44, 26, 45, 28, 46, 30, 
                   47, 0, 32, 1, 
	StripR(34),  47, 62, 46, 61, 45, 60, 44, 59, 43, 58, 
                   42, 57, 41, 56, 40, 55, 39, 54, 38, 53, 
                   37, 52, 36, 51, 35, 50, 34, 49, 33, 48, 
                   32, 63, 47, 62, 
	StripL(16),  55, 54, 56, 53, 57, 52, 58, 51, 59, 50, 
                   60, 49, 61, 48, 62, 63, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_Racing_Cont_B_button[]
START
	CnkV_VN(0x0, 385),
	OffnbIdx(0, 64),
	VERT( 0xc2becf37, 0x422a6c32, 0x423226ff ),
	NORM( 0xbf6ce173, 0x3e891356, 0x3e897e65 ),
	VERT( 0xc2bdbe66, 0x423179b4, 0x422a04d2 ),
	NORM( 0xbf5710f5, 0x3f0ac93b, 0xbc9271e4 ),
	VERT( 0xc2bdbe66, 0x421bbec9, 0x421449e7 ),
	NORM( 0xbf6b1a53, 0x3e8f443f, 0xbe8f443f ),
	VERT( 0xc2becf37, 0x4214b147, 0x421c6c14 ),
	NORM( 0xbf7ffffe, 0xb99feb49, 0x399feb49 ),
	VERT( 0xc2bab57c, 0x4236680c, 0x42220296 ),
	NORM( 0xbf1b5fe0, 0x3f4084d2, 0xbe839fe7 ),
	VERT( 0xc2bab57c, 0x4220ad21, 0x420c47ab ),
	NORM( 0xbf309df4, 0x3f0309fb, 0xbf0309fc ),
	VERT( 0xc2b62ac0, 0x4238770e, 0x421b586a ),
	NORM( 0xbe8e9185, 0x3f5e572c, 0xbed1f1fe ),
	VERT( 0xc2b62ac0, 0x4222bc22, 0x42059d7f ),
	NORM( 0xbeb5c7ad, 0x3f2939e5, 0xbf2939eb ),
	VERT( 0xc2b0cf37, 0x4237567e, 0x42170a10 ),
	NORM( 0x3db1519f, 0x3f622170, 0xbeebe0e3 ),
	VERT( 0xc2b0cf37, 0x42219b92, 0x42014f25 ),
	NORM( 0x3d045b5a, 0x3f34ecbc, 0xbf34ecc4 ),
	VERT( 0xc2ab73ad, 0x42333248, 0x4215bf59 ),
	NORM( 0x3ede6ea2, 0x3f4d45c7, 0xbed20c90 ),
	VERT( 0xc2ab73ad, 0x421d775c, 0x4200046e ),
	NORM( 0x3ed2dc96, 0x3f24f47c, 0xbf24f481 ),
	VERT( 0xc2a6e8f1, 0x422cabd8, 0x4217aa9f ),
	NORM( 0x3f382267, 0x3f23ab01, 0xbe8b3020 ),
	VERT( 0xc2a6e8f1, 0x4216f0ec, 0x4201efb3 ),
	NORM( 0x3f39cca8, 0x3ef90e74, 0xbef90e7a ),
	VERT( 0xc2a3e007, 0x4224c17c, 0x421c8116 ),
	NORM( 0x3f67b936, 0x3ed6d514, 0xbd8b0624 ),
	VERT( 0xc2a3e007, 0x420f0690, 0x4206c62b ),
	NORM( 0x3f6e0a82, 0x3e8535c5, 0xbe8535c7 ),
	VERT( 0xc2a2cf37, 0x421ca7b1, 0x42238636 ),
	NORM( 0x3f783e8a, 0x3e315ef2, 0x3e3062c1 ),
	VERT( 0xc2a2cf37, 0x4206ecc6, 0x420dcb4a ),
	NORM( 0x3f7fffff, 0x399231e1, 0xb99235ac ),
	VERT( 0xc2a3e007, 0x42159a30, 0x422ba862 ),
	NORM( 0x3f682be8, 0xbd88c0b7, 0x3ed4fb07 ),
	VERT( 0xc2a3e007, 0x41ffbe88, 0x4215ed76 ),
	NORM( 0x3f6e5ac0, 0xbe841599, 0x3e841598 ),
	VERT( 0xc2a6e8f1, 0x4210abd8, 0x4233aa9e ),
	NORM( 0x3f39eadc, 0xbe8a15b0, 0x3f21e047 ),
	VERT( 0xc2a6e8f1, 0x41f5e1da, 0x421defb3 ),
	NORM( 0x3f3b870a, 0xbef673db, 0x3ef673de ),
	VERT( 0xc2ab73ad, 0x420e9cd7, 0x423a54ca ),
	NORM( 0x3ee5a8ee, 0xbed18a22, 0x3f4b678b ),
	VERT( 0xc2ab73ad, 0x41f1c3d6, 0x422499df ),
	NORM( 0x3edacf53, 0xbf23a7ed, 0x3f23a7f0 ),
	VERT( 0xc2b0cf37, 0x420fbd68, 0x423ea325 ),
	NORM( 0x3dd61493, 0xbeed3d3a, 0x3f6146ab ),
	VERT( 0xc2b0cf37, 0x41f404fa, 0x4228e83a ),
	NORM( 0x3d5a08c7, 0xbf34c33f, 0x3f34c340 ),
	VERT( 0xc2b62ac0, 0x4213e19b, 0x423feddc ),
	NORM( 0xbe86db68, 0xbed4e06e, 0x3f5ed88a ),
	VERT( 0xc2b62ac0, 0x41fc4d60, 0x422a32f0 ),
	NORM( 0xbeacbbdc, 0xbf2a6814, 0x3f2a680e ),
	VERT( 0xc2bab57c, 0x421a680c, 0x423e0296 ),
	NORM( 0xbf196492, 0xbe864a92, 0x3f41a4ee ),
	VERT( 0xc2bab57c, 0x4204ad21, 0x422847aa ),
	NORM( 0xbf2e6b54, 0xbf0480b3, 0x3f0480ae ),
	VERT( 0xc2bdbe66, 0x42225269, 0x42392c1e ),
	NORM( 0xbf56968e, 0xbca3f234, 0x3f0b8154 ),
	VERT( 0xc2bdbe66, 0x420c977d, 0x42237132 ),
	NORM( 0xbf6aae5d, 0xbe90a495, 0x3e90a492 ),
	VERT( 0xc2bd6be3, 0x422c67d4, 0x42341ec1 ),
	NORM( 0xbef21817, 0x3f1f805e, 0x3f1f8221 ),
	VERT( 0xc2bc765a, 0x4232c0ca, 0x422ccccc ),
	NORM( 0xbed112fb, 0x3f50e7bc, 0x3ed17175 ),
	VERT( 0xc2b9bb21, 0x423730e6, 0x42259795 ),
	NORM( 0xbe720978, 0x3f71f3e6, 0x3e66f237 ),
	VERT( 0xc2b5a4ac, 0x42390b34, 0x421f9808 ),
	NORM( 0xbb86ecea, 0x3f7e8be0, 0x3dd9c639 ),
	VERT( 0xc2b0d24a, 0x42380780, 0x421bb7ea ),
	NORM( 0x3e761e57, 0x3f77fbe1, 0x3d7f0b1d ),
	VERT( 0xc2abffe7, 0x42344d4e, 0x421a8e46 ),
	NORM( 0x3eebd462, 0x3f621c54, 0x3db3f7e8 ),
	VERT( 0xc2a7e971, 0x422e6dea, 0x421c486b ),
	NORM( 0x3f21f690, 0x3f416872, 0x3e2e3b56 ),
	VERT( 0xc2a52e38, 0x42274e30, 0x4220a309 ),
	NORM( 0x3f3de9a1, 0x3f1a54ea, 0x3e965865 ),
	VERT( 0xc2a438b0, 0x422003c7, 0x4226f472 ),
	NORM( 0x3f47b695, 0x3ee288ae, 0x3ee27635 ),
	VERT( 0xc2a52e38, 0x4219aad3, 0x422e4667 ),
	NORM( 0x3f3ec391, 0x3e950ee2, 0x3f199795 ),
	VERT( 0xc2a7e971, 0x42153ab7, 0x42357b9e ),
	NORM( 0x3f23c038, 0x3e292a60, 0x3f402e0b ),
	VERT( 0xc2abffe7, 0x42136068, 0x423b7b2c ),
	NORM( 0x3ef10748, 0x3da52308, 0x3f60e9f0 ),
	VERT( 0xc2b0d24a, 0x4214641e, 0x423f5b4b ),
	NORM( 0x3e80be8f, 0x3d5ab98b, 0x3f7765ab ),
	VERT( 0xc2b5a4ac, 0x42181e4d, 0x424084ef ),
	NORM( 0x3b95531b, 0x3dc81cb7, 0x3f7ec5b7 ),
	VERT( 0xc2b9bb21, 0x421dfdb2, 0x423ecac9 ),
	NORM( 0xbe6de207, 0x3e6106b2, 0x3f728ee0 ),
	VERT( 0xc2bc765a, 0x42251d6c, 0x423a702a ),
	NORM( 0xbed0c210, 0x3ed080eb, 0x3f51380f ),
	VERT( 0xc2b9a971, 0x422d2324, 0x4234e5c5 ),
	NORM( 0x3d9181c7, 0x3f348125, 0x3f349e89 ),
	VERT( 0xc2b8fc95, 0x42319b1c, 0x422fbe81 ),
	NORM( 0x3dc01065, 0x3f465cb1, 0x3f2009ae ),
	VERT( 0xc2b71055, 0x4234baee, 0x422aab7a ),
	NORM( 0x3e1d01f7, 0x3f51a28e, 0x3f0d97b5 ),
	VERT( 0xc2b42fa0, 0x423608d8, 0x42267274 ),
	NORM( 0x3e6f945a, 0x3f552c14, 0x3f007a00 ),
	VERT( 0xc2b0ca9e, 0x42355202, 0x4223b7ff ),
	NORM( 0x3ea409d9, 0x3f519bed, 0x3ef3e8a7 ),
	VERT( 0xc2ad659d, 0x4232b242, 0x4222e675 ),
	NORM( 0x3ecd3314, 0x3f484893, 0x3ef418c9 ),
	VERT( 0xc2aa84e7, 0x422e8fde, 0x42241dba ),
	NORM( 0x3eeeb134, 0x3f3ab862, 0x3f002c07 ),
	VERT( 0xc2a898a6, 0x42298bf8, 0x42272e6b ),
	NORM( 0x3f026d46, 0x3f2a9bfa, 0x3f0b5893 ),
	VERT( 0xc2a7ebcc, 0x42246a04, 0x422ba114 ),
	NORM( 0x3f067d1b, 0x3f19ed25, 0x3f1a20cb ),
	VERT( 0xc2a898a6, 0x421ff20c, 0x4230c857 ),
	NORM( 0x3f02fe65, 0x3f0ad26f, 0x3f2a9a26 ),
	VERT( 0xc2aa84e7, 0x421cd23a, 0x4235db5f ),
	NORM( 0x3ef0c957, 0x3efe7dd3, 0x3f3aae77 ),
	VERT( 0xc2ad659d, 0x421b8451, 0x423a1467 ),
	NORM( 0x3ecfc3ac, 0x3ef16f5f, 0x3f486dd1 ),
	VERT( 0xc2b0ca9e, 0x421c3b27, 0x423ccedb ),
	NORM( 0x3ea6502f, 0x3ef0c33e, 0x3f5211dd ),
	VERT( 0xc2b42fa0, 0x421edae6, 0x423da065 ),
	NORM( 0x3e72229c, 0x3efe018d, 0x3f55dfa0 ),
	VERT( 0xc2b71055, 0x4222fd49, 0x423c691f ),
	NORM( 0x3e1d3f3f, 0x3f0c9a6e, 0x3f5249e5 ),
	VERT( 0xc2b8fc95, 0x42280130, 0x4239586d ),
	NORM( 0x3dbe8ac6, 0x3f1fa7c6, 0x3f46b164 ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_B_button[]
START
VList      vertex_Racing_Cont_B_button,
PList      strip_Racing_Cont_B_button,
Center      -88.404716F, 38.240784F, 40.067070F,
Radius      11.372371F,
END

CNKOBJECT  object_Racing_Cont_B_button[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Racing_Cont_B_button,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Racing_Cont_L_Lever,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_A_button[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 70, 0 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 132, _NB( UFO_0, 7 ),
	StripR(16),  2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 
                   7, 23, 8, 24, 9, 25, 
	StripL(28),  9, 10, 25, 26, 41, 42, 57, 58, 56, 59, 
                   55, 60, 54, 61, 53, 62, 52, 63, 51, 48, 
                   50, 49, 34, 33, 18, 17, 2, 1, 
	StripR(16),  10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 
                   15, 31, 0, 16, 1, 17, 
	StripR(16),  41, 25, 40, 24, 39, 23, 38, 22, 37, 21, 
                   36, 20, 35, 19, 34, 18, 
	StripR(16),  26, 42, 27, 43, 28, 44, 29, 45, 30, 46, 
                   31, 47, 16, 32, 17, 33, 
	StripR(16),  57, 41, 56, 40, 55, 39, 54, 38, 53, 37, 
                   52, 36, 51, 35, 50, 34, 
	StripR(16),  42, 58, 43, 59, 44, 60, 45, 61, 46, 62, 
                   47, 63, 32, 48, 33, 49, 
	CnkEnd()
END

VLIST      vertex_Racing_Cont_A_button[]
START
	CnkV_VN(0x0, 385),
	OffnbIdx(0, 64),
	VERT( 0x424bdeed, 0x4214b147, 0x421c6c14 ),
	NORM( 0x3f7ffffe, 0xb99feb49, 0x399feb49 ),
	VERT( 0x4249bd4b, 0x421bbec9, 0x421449e7 ),
	NORM( 0x3f6b1a53, 0x3e8f443f, 0xbe8f443f ),
	VERT( 0x4243ab77, 0x4220ad21, 0x420c47ab ),
	NORM( 0x3f309dfc, 0x3f0309f3, 0xbf0309f8 ),
	VERT( 0x423a9600, 0x4222bc22, 0x42059d7f ),
	NORM( 0x3eb5c7b8, 0x3f2939e2, 0xbf2939eb ),
	VERT( 0x422fdeed, 0x42219b92, 0x42014f25 ),
	NORM( 0xbd045ba0, 0x3f34ecbc, 0xbf34ecc4 ),
	VERT( 0x422527da, 0x421d775c, 0x4200046e ),
	NORM( 0xbed2dca3, 0x3f24f47b, 0xbf24f47e ),
	VERT( 0x421c1262, 0x4216f0ec, 0x4201efb3 ),
	NORM( 0xbf39cca7, 0x3ef90e75, 0xbef90e7a ),
	VERT( 0x4216008e, 0x420f0690, 0x4206c62b ),
	NORM( 0xbf6e0a7d, 0x3e8535d7, 0xbe8535d9 ),
	VERT( 0x4213deed, 0x4206ecc6, 0x420dcb4a ),
	NORM( 0xbf7fffff, 0x3992298a, 0xb99222b6 ),
	VERT( 0x4216008e, 0x41ffbe88, 0x4215ed76 ),
	NORM( 0xbf6e5abb, 0xbe8415aa, 0x3e8415aa ),
	VERT( 0x421c1262, 0x41f5e1da, 0x421defb3 ),
	NORM( 0xbf3b8708, 0xbef673dc, 0x3ef673e2 ),
	VERT( 0x422527da, 0x41f1c3d6, 0x422499df ),
	NORM( 0xbedacf57, 0xbf23a7ec, 0x3f23a7f0 ),
	VERT( 0x422fdeed, 0x41f404fa, 0x4228e83a ),
	NORM( 0xbd5a0985, 0xbf34c341, 0x3f34c33e ),
	VERT( 0x423a9600, 0x41fc4d60, 0x422a32f0 ),
	NORM( 0x3eacbbd8, 0xbf2a6815, 0x3f2a680e ),
	VERT( 0x4243ab77, 0x4204ad21, 0x422847aa ),
	NORM( 0x3f2e6b5b, 0xbf0480ae, 0x3f0480aa ),
	VERT( 0x4249bd4b, 0x420c977d, 0x42237132 ),
	NORM( 0x3f6aae5e, 0xbe90a48f, 0x3e90a48f ),
	VERT( 0x424bdeed, 0x422a6c32, 0x423226ff ),
	NORM( 0x3f6ce17d, 0x3e891330, 0x3e897e43 ),
	VERT( 0x4249bd4b, 0x423179b4, 0x422a04d2 ),
	NORM( 0x3f5710fe, 0x3f0ac92c, 0xbc9273c4 ),
	VERT( 0x4243ab77, 0x4236680c, 0x42220296 ),
	NORM( 0x3f1b5fe2, 0x3f4084d1, 0xbe839fe6 ),
	VERT( 0x423a9600, 0x4238770e, 0x421b586a ),
	NORM( 0x3e8e919d, 0x3f5e5728, 0xbed1f201 ),
	VERT( 0x422fdeed, 0x4237567e, 0x42170a10 ),
	NORM( 0xbdb151d5, 0x3f622173, 0xbeebe0d5 ),
	VERT( 0x422527da, 0x42333248, 0x4215bf59 ),
	NORM( 0xbede6ead, 0x3f4d45c6, 0xbed20c8b ),
	VERT( 0x421c1262, 0x422cabd8, 0x4217aa9f ),
	NORM( 0xbf382266, 0x3f23ab01, 0xbe8b301e ),
	VERT( 0x4216008e, 0x4224c17c, 0x421c8116 ),
	NORM( 0xbf67b931, 0x3ed6d52c, 0xbd8b060c ),
	VERT( 0x4213deed, 0x421ca7b1, 0x42238636 ),
	NORM( 0xbf783e88, 0x3e315f00, 0x3e3062d4 ),
	VERT( 0x4216008e, 0x42159a30, 0x422ba862 ),
	NORM( 0xbf682be7, 0xbd88c0f6, 0x3ed4fb0a ),
	VERT( 0x421c1262, 0x4210abd8, 0x4233aa9e ),
	NORM( 0xbf39eadc, 0xbe8a15b6, 0x3f21e045 ),
	VERT( 0x422527da, 0x420e9cd7, 0x423a54ca ),
	NORM( 0xbee5a8f6, 0xbed18a22, 0x3f4b6789 ),
	VERT( 0x422fdeed, 0x420fbd68, 0x423ea325 ),
	NORM( 0xbdd614d6, 0xbeed3d2f, 0x3f6146ad ),
	VERT( 0x423a9600, 0x4213e19b, 0x423feddc ),
	NORM( 0x3e86db76, 0xbed4e05a, 0x3f5ed88c ),
	VERT( 0x4243ab77, 0x421a680c, 0x423e0296 ),
	NORM( 0x3f196497, 0xbe864a8e, 0x3f41a4ea ),
	VERT( 0x4249bd4b, 0x42225269, 0x42392c1e ),
	NORM( 0x3f569695, 0xbca3f3e7, 0x3f0b8148 ),
	VERT( 0x42491846, 0x422c67d4, 0x42341ec1 ),
	NORM( 0x3ef21848, 0x3f1f8053, 0x3f1f821a ),
	VERT( 0x42472d34, 0x4232c0ca, 0x422ccccc ),
	NORM( 0x3ed11326, 0x3f50e7b7, 0x3ed1715e ),
	VERT( 0x4241b6c2, 0x423730e6, 0x42259795 ),
	NORM( 0x3e7209b7, 0x3f71f3e3, 0x3e66f226 ),
	VERT( 0x423989d7, 0x42390b34, 0x421f9808 ),
	NORM( 0x3b86eab0, 0x3f7e8bdf, 0x3dd9c662 ),
	VERT( 0x422fe513, 0x42380780, 0x421bb7ea ),
	NORM( 0xbe761e76, 0x3f77fbdf, 0x3d7f0b56 ),
	VERT( 0x4226404e, 0x42344d4e, 0x421a8e46 ),
	NORM( 0xbeebd470, 0x3f621c4f, 0x3db3f818 ),
	VERT( 0x421e1362, 0x422e6dea, 0x421c486b ),
	NORM( 0xbf21f68f, 0x3f416874, 0x3e2e3b35 ),
	VERT( 0x42189cf0, 0x42274e30, 0x4220a309 ),
	NORM( 0xbf3de99c, 0x3f1a54f0, 0x3e965864 ),
	VERT( 0x4216b1e0, 0x422003c7, 0x4226f472 ),
	NORM( 0xbf47b692, 0x3ee288b2, 0x3ee2763c ),
	VERT( 0x42189cf0, 0x4219aad3, 0x422e4667 ),
	NORM( 0xbf3ec393, 0x3e950ed5, 0x3f199796 ),
	VERT( 0x421e1362, 0x42153ab7, 0x42357b9e ),
	NORM( 0xbf23c03b, 0x3e292a4d, 0x3f402e09 ),
	VERT( 0x4226404e, 0x42136068, 0x423b7b2c ),
	NORM( 0xbef10752, 0x3da522ef, 0x3f60e9ee ),
	VERT( 0x422fe513, 0x4214641e, 0x423f5b4b ),
	NORM( 0xbe80be99, 0x3d5aba0f, 0x3f7765a9 ),
	VERT( 0x423989d7, 0x42181e4d, 0x424084ef ),
	NORM( 0xbb95545b, 0x3dc81d33, 0x3f7ec5b6 ),
	VERT( 0x4241b6c2, 0x421dfdb2, 0x423ecac9 ),
	NORM( 0x3e6de237, 0x3e6106c1, 0x3f728edc ),
	VERT( 0x42472d34, 0x42251d6c, 0x423a702a ),
	NORM( 0x3ed0c237, 0x3ed080d7, 0x3f51380a ),
	VERT( 0x42419361, 0x422d2324, 0x4234e5c5 ),
	NORM( 0xbd91820f, 0x3f348125, 0x3f349e87 ),
	VERT( 0x424039aa, 0x42319b1c, 0x422fbe81 ),
	NORM( 0xbdc0105a, 0x3f465cb5, 0x3f2009aa ),
	VERT( 0x423c6129, 0x4234baee, 0x422aab7a ),
	NORM( 0xbe1d01d4, 0x3f51a290, 0x3f0d97b3 ),
	VERT( 0x42369fbf, 0x423608d8, 0x42267274 ),
	NORM( 0xbe6f9457, 0x3f552c13, 0x3f007a02 ),
	VERT( 0x422fd5bc, 0x42355202, 0x4223b7ff ),
	NORM( 0xbea409eb, 0x3f519be8, 0x3ef3e8ac ),
	VERT( 0x42290bb9, 0x4232b242, 0x4222e675 ),
	NORM( 0xbecd3319, 0x3f484894, 0x3ef418bf ),
	VERT( 0x42234a4e, 0x422e8fde, 0x42241dba ),
	NORM( 0xbeeeb137, 0x3f3ab866, 0x3f002c01 ),
	VERT( 0x421f71cc, 0x42298bf8, 0x42272e6b ),
	NORM( 0xbf026d49, 0x3f2a9c01, 0x3f0b5889 ),
	VERT( 0x421e1817, 0x42246a04, 0x422ba114 ),
	NORM( 0xbf067d21, 0x3f19ed23, 0x3f1a20c8 ),
	VERT( 0x421f71cc, 0x421ff20c, 0x4230c857 ),
	NORM( 0xbf02fe61, 0x3f0ad270, 0x3f2a9a29 ),
	VERT( 0x42234a4e, 0x421cd23a, 0x4235db5f ),
	NORM( 0xbef0c958, 0x3efe7dd3, 0x3f3aae77 ),
	VERT( 0x42290bb9, 0x421b8451, 0x423a1467 ),
	NORM( 0xbecfc3b9, 0x3ef16f5b, 0x3f486dcf ),
	VERT( 0x422fd5bc, 0x421c3b27, 0x423ccedb ),
	NORM( 0xbea65033, 0x3ef0c341, 0x3f5211dc ),
	VERT( 0x42369fbf, 0x421edae6, 0x423da065 ),
	NORM( 0xbe72229a, 0x3efe0199, 0x3f55df9d ),
	VERT( 0x423c6129, 0x4222fd49, 0x423c691f ),
	NORM( 0xbe1d3f4c, 0x3f0c9a76, 0x3f5249df ),
	VERT( 0x424039aa, 0x42280130, 0x4239586d ),
	NORM( 0xbdbe8a9a, 0x3f1fa7c8, 0x3f46b162 ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_A_button[]
START
VList      vertex_Racing_Cont_A_button,
PList      strip_Racing_Cont_A_button,
Center      43.967701F, 38.240784F, 40.067070F,
Radius      11.372371F,
END

CNKOBJECT  object_Racing_Cont_A_button[]
START
EvalFlags ( 0x00000037 ),
CNKModel   model_Racing_Cont_A_button,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     object_Racing_Cont_B_button,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_Handle[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 41, 41, 41 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 5884, _NB( UFO_0, 556 ),
	StripL(12),  1736, 1772, 1773, 1777, 1774, 1910, 1775, 1911, 1906, 1912, 
                   1907, 1913, 
	StripL(3),  1773, 1737, 1736, 
	StripL(5),  478, 2606, 484, 2607, 134, 
	StripL(5),  145, 472, 470, 463, 462, 
	StripL(8),  145, 168, 472, 473, 463, 464, 448, 451, 
	StripL(3),  168, 479, 473, 
	StripL(5),  1715, 1902, 1900, 1775, 1906, 
	StripL(7),  1900, 1779, 1715, 1717, 2133, 1719, 2134, 
	StripL(5),  1779, 1900, 1901, 1906, 1907, 
	StripR(7),  1901, 1779, 1467, 1778, 1715, 1736, 1720, 
	StripL(3),  2606, 476, 134, 
	StripL(8),  145, 471, 478, 469, 2606, 468, 476, 467, 
	StripL(3),  471, 462, 469, 
	StripR(7),  468, 460, 469, 447, 462, 448, 463, 
	StripR(33),  478, 145, 484, 134, 480, 133, 157, 132, 156, 131, 
                   155, 130, 154, 129, 153, 152, 175, 151, 174, 150, 
                   173, 149, 172, 148, 171, 147, 170, 146, 169, 145, 
                   168, 480, 479, 
	StripL(4),  1771, 1715, 1770, 1720, 
	StripL(7),  1775, 1771, 1774, 1770, 1773, 1720, 1737, 
	StripL(3),  1772, 1776, 1777, 
	StripL(3),  1904, 1909, 1776, 
	StripR(11),  143, 142, 165, 141, 164, 140, 163, 139, 162, 138, 
                   161, 
	StripL(20),  2460, 2461, 2458, 2480, 2493, 2492, 2482, 2491, 2483, 2490, 
                   2484, 2489, 2485, 2488, 2486, 2487, 2468, 2470, 2471, 2473, 
                   
	StripR(12),  2471, 2468, 2469, 2466, 2467, 2464, 2465, 2462, 2463, 2459, 
                   2460, 2458, 
	StripR(12),  2470, 2473, 2472, 2475, 2474, 2477, 2476, 2479, 2478, 2481, 
                   2480, 2461, 
	StripR(12),  2480, 2492, 2478, 2491, 2476, 2490, 2474, 2489, 2472, 2488, 
                   2470, 2487, 
	StripR(12),  2493, 2458, 2482, 2459, 2483, 2462, 2484, 2464, 2485, 2466, 
                   2486, 2468, 
	StripR(12),  2509, 2508, 2507, 2506, 2505, 2504, 2503, 2502, 2501, 2500, 
                   2499, 2498, 
	StripL(20),  2508, 2510, 2509, 2511, 2525, 2526, 2524, 2527, 2523, 2528, 
                   2522, 2529, 2521, 2518, 2520, 2519, 2499, 2497, 2498, 2496, 
                   
	StripR(12),  2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2495, 2494, 
                   2496, 2497, 
	StripR(12),  2525, 2509, 2524, 2507, 2523, 2505, 2522, 2503, 2521, 2501, 
                   2520, 2499, 
	StripR(12),  2511, 2526, 2513, 2527, 2515, 2528, 2517, 2529, 2494, 2518, 
                   2497, 2519, 
	StripL(26),  2531, 2553, 2552, 2551, 2550, 2549, 2548, 2547, 2546, 2545, 
                   2544, 2543, 2542, 2541, 2540, 2539, 2538, 2537, 2536, 2535, 
                   2534, 2533, 2532, 2530, 2531, 2553, 
	StripL(26),  2537, 2556, 2535, 2555, 2533, 2554, 2530, 2565, 2553, 2564, 
                   2551, 2563, 2549, 2562, 2547, 2561, 2545, 2560, 2543, 2559, 
                   2541, 2558, 2539, 2557, 2537, 2556, 
	StripL(12),  2561, 2562, 2560, 2563, 2559, 2564, 2558, 2565, 2557, 2554, 
                   2556, 2555, 
	StripL(26),  2444, 2443, 2442, 2441, 2440, 2439, 2438, 2437, 2436, 2435, 
                   2434, 2433, 2432, 2431, 2430, 2429, 2428, 2427, 2426, 2425, 
                   2424, 2422, 2423, 2445, 2444, 2443, 
	StripL(26),  2449, 2431, 2450, 2433, 2451, 2435, 2452, 2437, 2453, 2439, 
                   2454, 2441, 2455, 2443, 2456, 2445, 2457, 2422, 2446, 2425, 
                   2447, 2427, 2448, 2429, 2449, 2431, 
	StripL(12),  2453, 2454, 2452, 2455, 2451, 2456, 2450, 2457, 2449, 2446, 
                   2448, 2447, 
	StripL(20),  2322, 2325, 2315, 2382, 2420, 2417, 2386, 2413, 2389, 2412, 
                   2392, 2408, 2396, 2404, 2398, 2403, 2344, 2352, 2353, 2361, 
                   
	StripR(12),  2353, 2344, 2347, 2339, 2342, 2333, 2337, 2326, 2330, 2319, 
                   2322, 2315, 
	StripR(12),  2352, 2361, 2357, 2367, 2362, 2373, 2368, 2377, 2376, 2385, 
                   2382, 2325, 
	StripR(12),  2403, 2352, 2404, 2357, 2408, 2362, 2412, 2368, 2413, 2376, 
                   2417, 2382, 
	StripR(12),  2420, 2315, 2386, 2319, 2389, 2326, 2392, 2333, 2396, 2339, 
                   2398, 2344, 
	StripL(20),  2320, 2323, 2316, 2381, 2421, 2418, 2388, 2415, 2390, 2410, 
                   2393, 2407, 2395, 2405, 2399, 2401, 2345, 2350, 2354, 2359, 
                   
	StripR(12),  2354, 2345, 2349, 2338, 2343, 2332, 2336, 2328, 2331, 2317, 
                   2320, 2316, 
	StripR(12),  2350, 2359, 2358, 2365, 2363, 2371, 2370, 2378, 2375, 2384, 
                   2381, 2323, 
	StripR(12),  2381, 2418, 2375, 2415, 2370, 2410, 2363, 2407, 2358, 2405, 
                   2350, 2401, 
	StripR(12),  2421, 2316, 2388, 2317, 2390, 2328, 2393, 2332, 2395, 2338, 
                   2399, 2345, 
	StripR(26),  2324, 2380, 2383, 2374, 2379, 2369, 2372, 2364, 2366, 2356, 
                   2360, 2351, 2355, 2346, 2348, 2340, 2341, 2334, 2335, 2327, 
                   2329, 2318, 2321, 2314, 2324, 2380, 
	StripR(26),  2397, 2340, 2400, 2346, 2402, 2351, 2406, 2356, 2409, 2364, 
                   2411, 2369, 2414, 2374, 2416, 2380, 2419, 2314, 2387, 2318, 
                   2391, 2327, 2394, 2334, 2397, 2340, 
	StripL(12),  2419, 2416, 2387, 2414, 2391, 2411, 2394, 2409, 2397, 2406, 
                   2400, 2402, 
	StripL(26),  2289, 2300, 2288, 2299, 2287, 2298, 2286, 2297, 2285, 2296, 
                   2284, 2295, 2283, 2294, 2282, 2293, 2281, 2292, 2280, 2291, 
                   2279, 2290, 2278, 2301, 2289, 2300, 
	StripL(26),  2293, 2304, 2292, 2303, 2291, 2302, 2290, 2313, 2301, 2312, 
                   2300, 2311, 2299, 2310, 2298, 2309, 2297, 2308, 2296, 2307, 
                   2295, 2306, 2294, 2305, 2293, 2304, 
	StripL(12),  2309, 2310, 2308, 2311, 2307, 2312, 2306, 2313, 2305, 2302, 
                   2304, 2303, 
	StripR(11),  615, 612, 616, 611, 617, 610, 618, 609, 606, 608, 
                   607, 
	StripL(13),  1941, 1939, 1920, 1937, 1921, 1935, 1923, 1933, 1925, 613, 
                   1927, 614, 1929, 
	StripR(26),  1930, 1929, 1928, 1927, 1926, 1925, 1924, 1923, 1922, 1921, 
                   1918, 1920, 1919, 1941, 1940, 1939, 1938, 1937, 1936, 1935, 
                   1934, 1933, 1931, 613, 1932, 631, 
	StripR(24),  583, 1979, 1978, 1981, 1980, 1983, 1982, 1985, 1984, 1987, 
                   1986, 1968, 1965, 1967, 1966, 1970, 1969, 1972, 1971, 1974, 
                   1973, 1976, 1975, 2001, 
	StripL(28),  1979, 559, 583, 562, 585, 563, 586, 565, 588, 567, 
                   591, 569, 593, 547, 571, 549, 573, 552, 575, 554, 
                   577, 555, 579, 558, 582, 2001, 1977, 1975, 
	StripL(3),  614, 613, 631, 
	StripL(27),  631, 633, 614, 615, 1929, 612, 1930, 611, 630, 610, 
                   627, 609, 626, 608, 623, 607, 621, 606, 620, 618, 
                   640, 617, 637, 616, 635, 615, 633, 
	StripR(30),  628, 629, 599, 1954, 1977, 1952, 2018, 1950, 2017, 1948, 
                   2016, 1946, 2015, 1942, 2013, 1943, 2014, 1963, 2023, 1961, 
                   2022, 1959, 2021, 1957, 2020, 1955, 2019, 600, 583, 584, 
                   
	StripL(22),  1932, 601, 632, 602, 634, 603, 636, 604, 638, 605, 
                   639, 594, 619, 595, 622, 596, 624, 597, 625, 598, 
                   628, 599, 
	StripR(28),  601, 600, 1932, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 
                   1962, 1963, 1964, 1943, 1944, 1942, 1945, 1946, 1947, 1948, 
                   1949, 1950, 1951, 1952, 1953, 1954, 1930, 629, 
	StripL(24),  1977, 599, 581, 598, 580, 597, 578, 596, 576, 595, 
                   574, 594, 572, 605, 592, 604, 590, 603, 589, 602, 
                   587, 601, 584, 600, 
	StripR(24),  560, 2004, 2003, 2006, 2005, 2008, 2007, 2010, 2009, 2012, 
                   2011, 1991, 1988, 1990, 1989, 1993, 1992, 1995, 1994, 1997, 
                   1996, 1999, 1998, 2002, 
	StripL(28),  2004, 541, 560, 542, 561, 543, 564, 544, 566, 545, 
                   568, 546, 570, 535, 548, 536, 550, 537, 551, 538, 
                   553, 539, 556, 540, 557, 2002, 2000, 1998, 
	StripL(4),  2152, 2147, 2151, 2148, 
	StripL(6),  2158, 2161, 2156, 2162, 2154, 2164, 
	StripL(5),  2164, 379, 515, 425, 428, 
	StripR(9),  2186, 2184, 2188, 2183, 2148, 2181, 2147, 2179, 2176, 
	StripL(7),  2190, 2176, 515, 2147, 2164, 2152, 2154, 
	StripL(10),  425, 381, 428, 382, 430, 385, 365, 387, 390, 388, 
	StripL(9),  430, 366, 428, 369, 424, 371, 376, 373, 374, 
	StripL(4),  428, 424, 515, 2190, 
	StripL(26),  517, 1210, 1209, 1211, 2196, 2197, 2226, 2198, 2227, 2087, 
                   2086, 2085, 2224, 2069, 2221, 2219, 2222, 2220, 2242, 2110, 
                   2193, 2109, 2169, 2106, 2168, 2259, 
	StripL(10),  1227, 1228, 1222, 1225, 1226, 1294, 1292, 1339, 1337, 1338, 
	StripL(11),  1228, 1229, 1225, 1293, 1294, 1296, 1339, 1340, 1338, 1387, 
                   1385, 
	StripL(3),  1231, 1234, 1232, 
	StripL(6),  1236, 1237, 1234, 1235, 1232, 1299, 
	StripL(3),  1237, 1238, 1235, 
	StripL(6),  1249, 1248, 1251, 7, 2116, 26, 
	StripR(7),  1258, 1260, 1257, 2118, 2117, 24, 25, 
	StripL(31),  1259, 1258, 1261, 1260, 1263, 2119, 6, 22, 21, 1200, 
                   1201, 44, 43, 1177, 1178, 68, 67, 1153, 1154, 92, 
                   91, 1130, 1131, 115, 114, 961, 113, 963, 112, 965, 
                   968, 
	StripL(5),  1263, 1264, 1261, 1262, 1259, 
	StripL(4),  1266, 1268, 1265, 1321, 
	StripR(6),  1289, 1291, 1287, 1290, 1288, 2124, 
	StripL(7),  1223, 1291, 1224, 1290, 2111, 2124, 14, 
	StripR(5),  1296, 1295, 1293, 1297, 1229, 
	StripR(23),  1295, 1298, 1297, 1299, 1229, 1232, 1228, 1231, 1227, 1230, 
                   12, 2114, 33, 32, 1189, 31, 1190, 1191, 54, 53, 
                   1167, 1168, 77, 
	StripL(3),  1305, 1306, 1304, 
	StripL(4),  1247, 1309, 1307, 1308, 
	StripR(8),  1311, 1310, 1312, 1357, 1359, 1358, 1360, 1405, 
	StripR(5),  1316, 1318, 1315, 1317, 1256, 
	StripR(5),  1317, 1318, 1319, 1320, 1322, 
	StripR(9),  1323, 1325, 1271, 1274, 1269, 1272, 1270, 1273, 5, 
	StripL(4),  1329, 1327, 1274, 1325, 
	StripR(10),  1329, 1277, 1274, 1276, 1272, 1275, 1273, 2121, 5, 19, 
	StripL(16),  1334, 1331, 1333, 1280, 1283, 1279, 1281, 1278, 1282, 4, 
                   3, 17, 16, 1205, 1206, 40, 
	StripL(12),  1335, 1286, 1289, 1285, 1287, 1284, 1288, 2123, 2124, 15, 
                   14, 1207, 
	StripR(12),  1304, 1302, 1349, 1347, 1348, 1346, 1393, 1389, 1391, 1392, 
                   1747, 1769, 
	StripR(5),  1308, 1353, 1355, 1354, 1356, 
	StripL(4),  1314, 1363, 1361, 1362, 
	StripR(7),  1365, 1363, 1364, 1362, 1409, 1407, 1408, 
	StripL(11),  1367, 1365, 1318, 1363, 1316, 1314, 1315, 1313, 1256, 1253, 
                   1255, 
	StripR(6),  1324, 1322, 1369, 1320, 1367, 1318, 
	StripL(3),  1372, 1370, 1371, 
	StripR(18),  1328, 1326, 1373, 1324, 1371, 1369, 1370, 1367, 1368, 1365, 
                   1366, 1364, 1411, 1409, 1410, 1408, 1756, 1755, 
	StripR(14),  1330, 1328, 1377, 1375, 1378, 1376, 1425, 1423, 1424, 1421, 
                   1422, 1420, 1762, 1761, 
	StripL(4),  1380, 1379, 1381, 1332, 
	StripR(13),  1383, 1336, 1381, 1334, 1332, 1331, 1329, 1280, 1277, 1279, 
                   1276, 1278, 1275, 
	StripL(3),  1387, 1340, 1296, 
	StripL(3),  1392, 1390, 1389, 
	StripR(5),  1346, 1343, 1389, 1344, 1390, 
	StripL(7),  1348, 1395, 1393, 1394, 1391, 1746, 1747, 
	StripR(7),  1397, 1399, 1350, 1352, 1351, 1354, 1353, 
	StripL(3),  1352, 1354, 1399, 
	StripL(3),  1358, 1405, 1403, 
	StripL(9),  1405, 1406, 1403, 1404, 1401, 1402, 1400, 1751, 1750, 
	StripL(12),  1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 
                   1760, 1761, 
	StripL(6),  1411, 1366, 1413, 1368, 1415, 1370, 
	StripR(8),  1415, 1417, 1370, 1419, 1372, 1374, 1371, 1373, 
	StripR(6),  1423, 1374, 1421, 1419, 1420, 1417, 
	StripR(6),  1423, 1376, 1374, 1375, 1373, 1328, 
	StripL(4),  1425, 1426, 1424, 1764, 
	StripL(40),  1429, 1382, 1431, 1384, 1386, 1385, 1388, 1387, 1342, 1296, 
                   1341, 1295, 1345, 1298, 1300, 1299, 1301, 1235, 1303, 1238, 
                   1241, 1237, 1240, 1236, 1239, 2115, 10, 30, 29, 1191, 
                   1192, 53, 52, 1168, 1169, 77, 76, 1145, 75, 1146, 
                   
	StripL(4),  1431, 1386, 1433, 1388, 
	StripL(8),  1388, 1435, 1433, 1434, 1431, 1432, 1429, 1430, 
	StripL(8),  1435, 1436, 1434, 1768, 1432, 1767, 1430, 1766, 
	StripL(4),  1439, 1440, 1437, 1444, 
	StripR(5),  1438, 1442, 1441, 1853, 1852, 
	StripR(11),  1451, 1450, 1448, 1447, 1445, 1444, 1441, 1437, 1438, 1439, 
                   1507, 
	StripL(4),  1455, 1453, 1452, 1449, 
	StripL(8),  1457, 1456, 1460, 1459, 1463, 1462, 1466, 1465, 
	StripR(5),  1472, 1474, 1471, 1473, 1470, 
	StripL(3),  1473, 1476, 1474, 
	StripR(10),  1491, 1492, 1494, 1495, 1497, 1498, 1500, 1502, 1504, 1505, 
	StripL(5),  1497, 1501, 1500, 1503, 1504, 
	StripL(7),  1502, 1499, 1498, 1496, 1495, 1493, 1492, 
	StripR(12),  1507, 1503, 1506, 1504, 1508, 1505, 1874, 1502, 1873, 1499, 
                   1872, 1871, 
	StripL(8),  1509, 1510, 1511, 1578, 1579, 1575, 1899, 1898, 
	StripR(9),  1515, 1519, 1518, 1522, 1521, 1525, 1524, 1528, 1527, 
	StripL(8),  1519, 1516, 1515, 1509, 1512, 1511, 1876, 1877, 
	StripL(3),  1528, 1529, 1525, 
	StripL(3),  1535, 1532, 1531, 
	StripL(5),  1534, 1533, 1536, 1884, 1885, 
	StripR(8),  1534, 1537, 1536, 1540, 1539, 1542, 1887, 1888, 
	StripL(7),  1537, 1540, 1541, 1543, 1544, 1547, 1600, 
	StripL(9),  1553, 1552, 1555, 1554, 1557, 1892, 1561, 1893, 1894, 
	StripR(7),  1560, 1558, 1562, 1559, 1610, 1608, 1609, 
	StripR(5),  1563, 1560, 1564, 1562, 1565, 
	StripR(6),  1569, 1571, 1574, 1620, 1577, 1622, 
	StripL(8),  1585, 1586, 1581, 1583, 1582, 1584, 1624, 1625, 
	StripR(6),  1589, 1591, 1588, 1590, 1523, 1526, 
	StripL(23),  1, 1591, 1592, 1590, 1529, 1526, 1525, 1523, 1522, 1520, 
                   1519, 1517, 1516, 1513, 1509, 1514, 1510, 1580, 1578, 1576, 
                   1575, 1573, 1572, 
	StripL(21),  1529, 1593, 1592, 1594, 1, 1047, 1591, 1046, 1045, 267, 
                   1044, 268, 1043, 269, 270, 1067, 1066, 245, 246, 809, 
                   807, 
	StripL(4),  1593, 1595, 1594, 1596, 
	StripL(3),  1538, 1597, 1535, 
	StripL(12),  1599, 1597, 1541, 1538, 1537, 1535, 1534, 1531, 1533, 1530, 
                   1884, 1883, 
	StripL(4),  1600, 1599, 1544, 1541, 
	StripR(7),  1603, 1605, 1604, 1606, 1553, 1556, 1555, 
	StripL(3),  1607, 1605, 1606, 
	StripR(16),  1616, 1615, 1617, 1060, 1061, 251, 1062, 250, 249, 1087, 
                   248, 1088, 1065, 223, 1066, 246, 
	StripL(10),  1616, 1571, 1618, 1620, 1619, 1621, 1062, 1063, 249, 248, 
	StripL(12),  1620, 1622, 1621, 1623, 1063, 1064, 248, 1041, 247, 1042, 
                   270, 1043, 
	StripL(8),  1624, 1580, 1582, 1514, 1581, 1513, 1585, 1517, 
	StripR(21),  1643, 1642, 1640, 1639, 1637, 1636, 1634, 1633, 1627, 1626, 
                   1628, 1629, 1696, 1695, 1694, 1692, 1689, 1691, 1686, 1688, 
                   1685, 
	StripR(6),  1643, 1645, 1642, 1644, 1641, 1646, 
	StripR(16),  1645, 1648, 1644, 1647, 1649, 1650, 1652, 1653, 1655, 1656, 
                   1658, 1659, 1661, 1662, 1664, 1665, 
	StripL(3),  1646, 1649, 1644, 
	StripL(3),  1647, 1650, 1648, 
	StripR(8),  1657, 1660, 1659, 1663, 1662, 1666, 1665, 1670, 
	StripR(8),  1659, 1656, 1657, 1653, 1654, 1650, 1651, 1648, 
	StripL(6),  1666, 1670, 1668, 1673, 1671, 1674, 
	StripR(8),  1669, 1672, 1671, 1676, 1674, 1677, 1679, 1682, 
	StripL(6),  1671, 1669, 1668, 1667, 1666, 1663, 
	StripL(4),  1673, 1675, 1674, 1679, 
	StripL(6),  1676, 1677, 1678, 1680, 1681, 1683, 
	StripL(8),  1677, 1682, 1680, 1685, 1684, 1686, 1683, 1687, 
	StripL(3),  1680, 1684, 1683, 
	StripL(17),  1691, 1693, 1692, 1697, 1695, 1631, 1629, 1630, 1626, 1632, 
                   1633, 1635, 1636, 1638, 1639, 1641, 1642, 
	StripL(5),  1694, 1690, 1689, 1687, 1686, 
	StripL(12),  1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 
                   2131, 2132, 
	StripL(3),  1712, 1713, 1710, 
	StripL(6),  1715, 1714, 1717, 1716, 1719, 1718, 
	StripR(18),  1720, 1718, 1721, 1719, 2135, 2134, 1467, 1464, 1468, 1465, 
                   1469, 1466, 1861, 1463, 1860, 1460, 1859, 1858, 
	StripL(7),  1721, 1720, 1723, 1722, 1725, 1724, 1726, 
	StripL(6),  1730, 1729, 1728, 1727, 1726, 1725, 
	StripL(10),  1728, 1731, 1730, 1732, 1733, 1734, 1735, 1736, 2142, 1778, 
	StripL(4),  1734, 1737, 1736, 1720, 
	StripR(10),  1736, 1739, 1738, 1740, 1741, 1742, 1743, 1744, 1745, 1701, 
	StripL(3),  1736, 1737, 1738, 
	StripL(8),  1744, 1701, 1700, 1698, 1699, 1702, 1703, 1705, 
	StripR(29),  1746, 1748, 1394, 1396, 1395, 1397, 1348, 1350, 1349, 1351, 
                   1304, 1353, 1306, 1308, 1305, 1307, 1244, 1247, 1243, 1246, 
                   1242, 1245, 9, 8, 28, 27, 1194, 26, 1195, 
	StripR(23),  1748, 1749, 1396, 1398, 1397, 1400, 1399, 1401, 1354, 1403, 
                   1356, 1358, 1355, 1357, 1308, 1310, 1309, 1311, 1247, 1250, 
                   1249, 1252, 1251, 
	StripL(4),  1400, 1750, 1398, 1749, 
	StripL(3),  1408, 1755, 1754, 
	StripL(7),  1412, 1414, 1758, 1416, 1759, 1418, 1760, 
	StripR(5),  1758, 1412, 1757, 1410, 1756, 
	StripR(5),  1422, 1762, 1424, 1763, 1764, 
	StripL(56),  1765, 1764, 1428, 1426, 1427, 1425, 1380, 1378, 1379, 1377, 
                   1332, 1330, 1329, 1328, 1327, 1326, 1325, 1324, 1323, 1322, 
                   1321, 1319, 1262, 1317, 1259, 1256, 1258, 1255, 1257, 1254, 
                   2117, 2116, 25, 26, 1196, 1195, 50, 51, 1171, 1170, 
                   74, 75, 1147, 1146, 98, 99, 1122, 1121, 120, 121, 
                   941, 122, 940, 123, 938, 936, 
	StripL(7),  1766, 1765, 1430, 1428, 1429, 1427, 1380, 
	StripR(25),  1768, 1769, 1436, 1392, 1435, 1390, 1388, 1344, 1342, 1343, 
                   1341, 1346, 1345, 1347, 1300, 1302, 1301, 1304, 1303, 1305, 
                   1241, 1244, 1240, 1243, 1242, 
	StripL(12),  1778, 1486, 1467, 1901, 1903, 1907, 1908, 2089, 2090, 2097, 
                   2098, 2107, 
	StripL(4),  1793, 1795, 1796, 1799, 
	StripR(8),  1797, 1798, 1800, 1801, 1803, 1804, 1806, 1808, 
	StripL(20),  1806, 1807, 1808, 1812, 1810, 1813, 1814, 1816, 1817, 1819, 
                   1820, 1824, 1822, 1827, 1825, 1830, 1828, 1831, 1829, 1833, 
                   
	StripL(26),  1811, 1809, 1808, 1805, 1804, 1802, 1801, 1799, 1798, 1795, 
                   1797, 1793, 1792, 1790, 1789, 1787, 1786, 1780, 1784, 1783, 
                   1785, 1849, 1851, 1846, 1848, 1845, 
	StripR(15),  1829, 1828, 1826, 1825, 1823, 1822, 1821, 1820, 1818, 1817, 
                   1815, 1814, 1811, 1810, 1808, 
	StripR(6),  1833, 1835, 1834, 1839, 1838, 1840, 
	StripL(3),  1833, 1831, 1834, 
	StripR(7),  1838, 1837, 1834, 1836, 1831, 1832, 1830, 
	StripL(22),  1837, 1842, 1838, 1841, 1840, 1843, 1844, 1846, 1847, 1849, 
                   1850, 1783, 1782, 1780, 1781, 1787, 1788, 1790, 1791, 1793, 
                   1794, 1796, 
	StripL(5),  1846, 1843, 1845, 1841, 1842, 
	StripL(7),  1441, 1445, 1854, 1448, 1855, 1451, 1856, 
	StripL(3),  1854, 1852, 1441, 
	StripL(12),  1857, 1856, 1454, 1451, 1453, 1450, 1449, 1447, 1446, 1444, 
                   1443, 1440, 
	StripR(13),  1857, 1858, 1454, 1457, 1453, 1456, 1455, 1459, 1458, 1462, 
                   1461, 1465, 1464, 
	StripL(3),  1457, 1460, 1858, 
	StripR(8),  1861, 1862, 1469, 1472, 1468, 1471, 1467, 1470, 
	StripR(14),  1862, 1863, 1472, 1475, 1474, 1477, 1476, 1479, 1480, 1482, 
                   1483, 1485, 1486, 1488, 
	StripR(11),  1863, 1864, 1475, 1478, 1477, 1481, 1479, 1484, 1482, 1487, 
                   1485, 
	StripL(10),  1864, 1478, 1865, 1481, 1866, 1484, 1867, 1487, 1868, 1869, 
	StripR(6),  1869, 1490, 1487, 1489, 1485, 1488, 
	StripL(8),  1870, 1869, 1493, 1490, 1492, 1489, 1491, 1488, 
	StripR(5),  1493, 1870, 1496, 1871, 1499, 
	StripL(3),  1875, 1874, 1508, 
	StripR(7),  1875, 1853, 1508, 1442, 1506, 1438, 1507, 
	StripR(12),  1527, 1882, 1524, 1881, 1521, 1880, 1518, 1879, 1515, 1878, 
                   1512, 1876, 
	StripL(17),  1882, 1883, 1527, 1530, 1528, 1531, 1529, 1532, 1593, 1535, 
                   1595, 1597, 1598, 1599, 0, 1600, 1601, 
	StripR(5),  1885, 1536, 1886, 1539, 1887, 
	StripR(6),  1889, 1888, 1545, 1542, 1543, 1540, 
	StripR(7),  1890, 1889, 1548, 1545, 1546, 1543, 1547, 
	StripR(28),  1891, 1890, 1551, 1548, 1549, 1546, 1550, 1547, 1602, 1600, 
                   1603, 1601, 1052, 0, 1051, 1598, 1050, 1049, 263, 1048, 
                   264, 265, 1072, 1071, 240, 241, 820, 817, 
	StripR(11),  1892, 1891, 1554, 1551, 1552, 1549, 1553, 1550, 1604, 1602, 
                   1603, 
	StripR(5),  1896, 1572, 1897, 1575, 1898, 
	StripL(4),  1511, 1579, 1877, 1899, 
	StripR(6),  1909, 1908, 1904, 1903, 1778, 1486, 
	StripL(9),  1908, 1914, 1909, 1915, 1776, 1916, 1777, 1917, 1910, 
	StripL(3),  2024, 2027, 2028, 
	StripL(5),  2029, 2025, 2024, 2026, 2027, 
	StripL(3),  2032, 2033, 2031, 
	StripL(6),  2033, 2034, 2031, 2029, 2030, 2024, 
	StripR(14),  2036, 316, 2035, 416, 531, 318, 534, 533, 529, 532, 
                   525, 2041, 522, 2042, 
	StripR(10),  301, 2040, 2039, 2044, 2045, 2043, 2046, 2037, 2038, 521, 
	StripR(6),  2039, 2045, 2047, 2046, 2048, 2038, 
	StripR(8),  2047, 2042, 2039, 2041, 301, 532, 409, 302, 
	StripR(10),  2043, 2036, 2037, 2035, 521, 531, 524, 534, 527, 529, 
	StripR(10),  2049, 521, 485, 523, 488, 489, 27, 18, 28, 490, 
	StripR(8),  485, 2050, 2049, 2055, 2056, 2054, 2057, 2053, 
	StripL(3),  2065, 2066, 2064, 
	StripR(13),  2064, 2068, 2066, 2067, 2069, 2072, 2070, 2071, 2073, 2079, 
                   2076, 2077, 2230, 
	StripL(3),  2079, 2077, 2063, 
	StripL(3),  2081, 2082, 2080, 
	StripL(5),  2096, 2092, 2095, 2109, 2110, 
	StripL(17),  2096, 2093, 2092, 2091, 2106, 2105, 2250, 2241, 2249, 2239, 
                   2248, 2237, 2247, 2234, 2246, 2231, 2211, 
	StripR(30),  2090, 2100, 2098, 2099, 2107, 2108, 2192, 2167, 2065, 2081, 
                   2064, 2082, 2083, 2080, 2084, 2059, 2060, 2058, 2061, 2062, 
                   2063, 2078, 2077, 2233, 2230, 2229, 2201, 2231, 2200, 2211, 
                   
	StripL(9),  2100, 2099, 2102, 2101, 2104, 2103, 2094, 2091, 2093, 
	StripL(6),  2091, 2103, 2105, 2101, 2108, 2099, 
	StripL(3),  2106, 2109, 2092, 
	StripL(25),  2116, 1254, 1251, 1255, 1252, 1253, 1250, 1313, 1311, 1314, 
                   1312, 1361, 1359, 1362, 1360, 1407, 1405, 1408, 1406, 1754, 
                   1404, 1753, 1402, 1752, 1751, 
	StripL(3),  2118, 2119, 1260, 
	StripL(5),  4, 1278, 2122, 1275, 2121, 
	StripR(11),  3, 1282, 1284, 1281, 1285, 1283, 1286, 1333, 1335, 1334, 
                   1336, 
	StripR(27),  2131, 1711, 2130, 1709, 2129, 1707, 2128, 1705, 2127, 1703, 
                   2126, 1699, 2125, 1700, 2146, 1744, 2145, 1742, 2144, 1740, 
                   2143, 1739, 1778, 1736, 1904, 1905, 1776, 
	StripL(6),  1779, 2132, 1715, 1713, 1714, 1712, 
	StripR(16),  2142, 1735, 2141, 1733, 2140, 1730, 2139, 1729, 2138, 1727, 
                   2137, 1725, 2136, 1723, 2135, 1721, 
	StripL(48),  1467, 2135, 1470, 2136, 1473, 2137, 1476, 2138, 1480, 2139, 
                   1483, 2140, 1486, 2141, 1488, 2142, 1491, 1778, 1494, 2143, 
                   1497, 2144, 1501, 2145, 1503, 2146, 1507, 2125, 1439, 2126, 
                   1440, 2127, 1443, 2128, 1446, 2129, 1449, 2130, 1452, 2131, 
                   1455, 2132, 1458, 1779, 1461, 2133, 1464, 2134, 
	StripL(3),  2108, 2167, 2105, 
	StripR(16),  2170, 2171, 2173, 2195, 2189, 2269, 2187, 2270, 2185, 2271, 
                   2182, 2272, 2180, 2216, 2178, 2177, 
	StripR(18),  2149, 2150, 2172, 2153, 2277, 2155, 2276, 2157, 2275, 2159, 
                   2274, 2160, 2273, 2163, 2218, 2217, 2215, 2214, 
	StripL(3),  2174, 2175, 2074, 
	StripR(18),  2171, 2194, 2195, 2260, 2269, 2261, 2270, 2262, 2271, 2263, 
                   2272, 2213, 2216, 1219, 2177, 1220, 2191, 423, 
	StripR(17),  2189, 2149, 2173, 2172, 2170, 2277, 2268, 2276, 2267, 2275, 
                   2266, 2274, 2265, 2273, 2264, 2218, 2215, 
	StripR(7),  1211, 2197, 1212, 2198, 1213, 2087, 2085, 
	StripR(16),  2200, 2199, 2201, 2202, 2204, 2205, 2075, 2074, 2073, 2174, 
                   1213, 516, 1212, 518, 1211, 1210, 
	StripL(5),  2199, 2202, 301, 2203, 410, 
	StripL(4),  1248, 1275, 1245, 1278, 
	StripL(4),  2213, 1219, 1218, 1220, 
	StripR(22),  2165, 378, 520, 426, 422, 380, 358, 359, 346, 347, 
                   333, 334, 321, 322, 307, 308, 403, 404, 293, 280, 
                   504, 513, 
	StripR(37),  2163, 2165, 2217, 520, 2214, 344, 2208, 420, 418, 331, 
                   317, 319, 304, 305, 400, 401, 290, 291, 278, 279, 
                   413, 427, 2174, 412, 516, 407, 518, 406, 1210, 405, 
                   517, 414, 1215, 417, 519, 1217, 1216, 
	StripL(9),  2219, 2192, 2220, 2107, 2110, 2097, 2095, 2089, 2096, 
	StripR(5),  2069, 2219, 2066, 2192, 2065, 
	StripR(5),  2224, 2223, 2221, 2225, 2222, 
	StripL(3),  2223, 2225, 2228, 
	StripL(6),  2201, 2230, 2204, 2076, 2075, 2073, 
	StripR(13),  2229, 2233, 2232, 2236, 2235, 2058, 2238, 2059, 2240, 2080, 
                   2166, 2081, 2167, 
	StripR(13),  2231, 2229, 2234, 2232, 2237, 2235, 2239, 2238, 2241, 2240, 
                   2105, 2166, 2167, 
	StripL(5),  2069, 2085, 2070, 1213, 2073, 
	StripL(7),  2086, 2224, 2227, 2223, 2226, 2228, 2196, 
	StripR(5),  2233, 2078, 2236, 2062, 2058, 
	StripR(13),  2242, 2222, 2243, 2225, 2244, 2228, 2245, 2196, 2206, 1209, 
                   1214, 517, 1215, 
	StripR(15),  2193, 2242, 2251, 2243, 2252, 2244, 2253, 2245, 2254, 2206, 
                   2207, 1214, 1216, 1215, 519, 
	StripR(16),  2106, 2259, 2250, 2258, 2249, 2257, 2248, 2256, 2247, 2255, 
                   2246, 2212, 2211, 2209, 2210, 316, 
	StripL(3),  419, 417, 1217, 
	StripL(6),  1186, 36, 59, 1161, 1162, 60, 
	StripR(5),  34, 1188, 1187, 57, 58, 
	StripL(10),  1191, 30, 31, 2115, 11, 1236, 1233, 1234, 1230, 1231, 
	StripL(3),  55, 54, 1190, 
	StripL(7),  29, 1192, 1193, 52, 1194, 51, 1195, 
	StripR(9),  1194, 1193, 28, 29, 9, 10, 1242, 1239, 1240, 
	StripR(16),  50, 1196, 49, 1197, 48, 1198, 47, 1199, 46, 1200, 
                   45, 44, 1176, 1177, 69, 68, 
	StripL(9),  25, 1196, 24, 1197, 23, 1198, 22, 1199, 1200, 
	StripL(3),  17, 490, 1205, 
	StripL(19),  40, 1205, 1204, 490, 1203, 18, 1202, 19, 20, 5, 
                   2120, 1270, 1267, 1269, 1266, 1271, 1268, 1323, 1321, 
	StripR(19),  40, 41, 1204, 42, 1203, 43, 1202, 1201, 20, 21, 
                   2120, 6, 1267, 1263, 1266, 1264, 1265, 1262, 1321, 
	StripL(6),  1207, 15, 16, 2123, 3, 1284, 
	StripL(3),  16, 1206, 1207, 
	StripL(7),  1208, 1185, 13, 35, 2112, 2113, 1221, 
	StripL(6),  1162, 58, 59, 1187, 1186, 34, 
	StripR(8),  1163, 82, 83, 1139, 1138, 106, 107, 1114, 
	StripR(10),  1163, 1164, 82, 81, 1139, 1140, 106, 105, 1115, 1116, 
	StripL(15),  56, 1165, 1166, 79, 1167, 78, 77, 1143, 1144, 102, 
                   101, 1120, 100, 1121, 99, 
	StripL(7),  1167, 54, 1166, 55, 56, 1190, 1189, 
	StripL(5),  51, 52, 1170, 1169, 76, 
	StripL(3),  75, 1170, 76, 
	StripL(3),  49, 50, 1171, 
	StripL(7),  47, 48, 1173, 49, 1172, 1171, 74, 
	StripL(7),  72, 71, 1174, 70, 1175, 1176, 45, 
	StripL(13),  45, 46, 1175, 47, 1174, 1173, 72, 1172, 73, 74, 
                   1148, 1147, 98, 
	StripR(14),  1176, 69, 70, 1151, 71, 1150, 72, 1149, 1148, 97, 
                   98, 1123, 1122, 120, 
	StripL(5),  42, 43, 1179, 1178, 67, 
	StripL(3),  67, 66, 1179, 
	StripL(3),  42, 1179, 41, 
	StripL(10),  1181, 1180, 64, 65, 1157, 1156, 89, 90, 1131, 91, 
	StripL(3),  39, 1182, 38, 
	StripL(8),  37, 1183, 1184, 62, 61, 1160, 60, 1137, 
	StripL(6),  36, 37, 1161, 1184, 60, 61, 
	StripL(6),  78, 79, 1143, 1142, 102, 103, 
	StripR(5),  77, 1145, 1144, 100, 101, 
	StripL(4),  99, 1146, 100, 1145, 
	StripL(3),  72, 73, 1148, 
	StripR(17),  68, 1153, 69, 1152, 1151, 94, 1150, 95, 1149, 96, 
                   97, 1124, 1123, 482, 120, 945, 943, 
	StripL(3),  1153, 1152, 92, 
	StripR(22),  1154, 67, 1155, 66, 65, 1179, 1180, 41, 1181, 40, 
                   39, 1206, 38, 1207, 1208, 14, 13, 2111, 2112, 1224, 
                   1221, 1223, 
	StripR(6),  65, 1156, 1155, 90, 1154, 91, 
	StripR(7),  1158, 1157, 63, 64, 1182, 1181, 39, 
	StripR(6),  1159, 86, 87, 1134, 88, 1133, 
	StripR(9),  62, 1160, 1159, 85, 86, 1135, 1134, 110, 111, 
	StripL(4),  84, 1137, 85, 1160, 
	StripL(3),  1115, 106, 1114, 
	StripL(3),  1116, 1117, 105, 
	StripR(10),  124, 125, 1117, 126, 1116, 127, 1115, 128, 1114, 108, 
	StripR(41),  122, 123, 1119, 124, 1118, 1117, 104, 105, 1141, 1140, 
                   80, 81, 1165, 1164, 56, 57, 1189, 1188, 33, 34, 
                   12, 2113, 1227, 1221, 1222, 1223, 1226, 1291, 1292, 1289, 
                   1337, 1335, 1338, 1336, 1385, 1383, 1384, 1381, 1382, 1380, 
                   1429, 
	StripR(13),  121, 122, 1120, 1119, 102, 1118, 103, 104, 1142, 1141, 
                   79, 80, 1165, 
	StripL(3),  121, 1121, 1120, 
	StripR(5),  1124, 483, 482, 948, 945, 
	StripL(13),  96, 1124, 1125, 483, 119, 950, 118, 951, 117, 953, 
                   116, 955, 957, 
	StripL(6),  96, 1125, 95, 1126, 94, 1127, 
	StripL(7),  1125, 119, 1126, 118, 1127, 117, 116, 
	StripL(5),  93, 94, 1128, 1127, 116, 
	StripR(5),  92, 1130, 1129, 115, 481, 
	StripL(4),  89, 1131, 1132, 114, 
	StripR(5),  1134, 111, 1133, 112, 113, 
	StripR(6),  110, 1135, 1136, 85, 1113, 84, 
	StripL(9),  219, 1093, 220, 1092, 221, 1091, 222, 1090, 1089, 
	StripR(5),  195, 194, 1094, 193, 1095, 
	StripL(4),  218, 217, 1094, 1095, 
	StripL(6),  216, 215, 1096, 1097, 192, 191, 
	StripL(6),  215, 214, 1097, 1098, 191, 190, 
	StripL(12),  479, 190, 1099, 1098, 213, 214, 871, 215, 869, 216, 
                   867, 866, 
	StripL(5),  212, 1101, 1100, 188, 189, 
	StripL(3),  187, 188, 1101, 
	StripR(9),  1105, 207, 1104, 208, 1103, 209, 1102, 210, 211, 
	StripR(10),  205, 206, 1107, 1106, 182, 183, 158, 159, 135, 136, 
	StripR(13),  204, 205, 1108, 1107, 181, 182, 480, 158, 134, 135, 
                   1008, 136, 1006, 
	StripR(5),  181, 180, 1108, 1109, 204, 
	StripL(16),  204, 203, 1109, 202, 1110, 1111, 178, 1112, 177, 1089, 
                   176, 1090, 198, 1091, 197, 196, 
	StripL(5),  178, 179, 1110, 180, 1109, 
	StripL(3),  202, 201, 1111, 
	StripR(6),  1112, 1089, 199, 222, 855, 853, 
	StripL(3),  1112, 200, 199, 
	StripL(5),  245, 1067, 1068, 269, 268, 
	StripR(8),  267, 268, 1069, 1068, 244, 245, 811, 809, 
	StripL(3),  1070, 242, 243, 
	StripL(7),  266, 265, 1070, 1071, 242, 241, 817, 
	StripL(3),  264, 263, 1072, 
	StripL(28),  239, 1073, 238, 1074, 1075, 261, 1076, 260, 259, 1052, 
                   1053, 1603, 1054, 1605, 1055, 1607, 1609, 1606, 1608, 1556, 
                   1559, 1555, 1558, 1557, 1560, 1561, 1563, 1894, 
	StripR(6),  1077, 1078, 258, 257, 1054, 1055, 
	StripR(7),  254, 1081, 1082, 231, 230, 837, 839, 
	StripR(8),  253, 254, 1083, 1082, 229, 230, 842, 839, 
	StripR(5),  1085, 227, 226, 845, 848, 
	StripR(9),  250, 1086, 1087, 225, 1088, 224, 223, 806, 807, 
	StripR(5),  248, 1065, 247, 1066, 270, 
	StripL(21),  1044, 1043, 1586, 1042, 1583, 1041, 1584, 1064, 1625, 1623, 
                   1624, 1622, 1580, 1577, 1576, 1574, 1573, 1569, 1572, 1570, 
                   1896, 
	StripL(8),  1045, 1044, 2, 1586, 1587, 1585, 1520, 1517, 
	StripL(8),  1591, 1045, 1589, 2, 1588, 1587, 1523, 1520, 
	StripL(3),  1050, 262, 263, 
	StripR(12),  1051, 1050, 261, 262, 1074, 263, 1073, 1072, 239, 240, 
                   821, 820, 
	StripL(4),  1052, 260, 1051, 261, 
	StripR(6),  1054, 1053, 258, 259, 1077, 1076, 
	StripL(5),  1609, 1056, 1055, 256, 257, 
	StripL(6),  1062, 1061, 1619, 1617, 1618, 1616, 
	StripR(14),  1022, 982, 1021, 979, 1020, 977, 1019, 973, 1017, 975, 
                   1018, 1015, 1040, 1013, 
	StripL(3),  1023, 937, 935, 
	StripL(6),  988, 1023, 985, 1022, 983, 982, 
	StripL(3),  1024, 1025, 939, 
	StripR(6),  939, 942, 1025, 1026, 992, 994, 
	StripR(8),  992, 989, 1025, 988, 1024, 1023, 939, 937, 
	StripR(8),  996, 484, 1028, 994, 1027, 1026, 944, 942, 
	StripL(8),  952, 949, 1029, 947, 1028, 946, 1027, 944, 
	StripR(10),  1004, 1001, 1032, 999, 1031, 998, 1030, 996, 1029, 1028, 
	StripL(3),  1036, 1035, 2607, 
	StripR(14),  2607, 1007, 1035, 1005, 1034, 1004, 1033, 1032, 956, 1031, 
                   954, 1030, 952, 1029, 
	StripR(12),  1010, 2607, 1037, 1036, 964, 1035, 962, 1034, 959, 1033, 
                   958, 956, 
	StripL(3),  966, 964, 1037, 
	StripR(6),  1012, 1010, 1038, 1037, 967, 966, 
	StripR(7),  1012, 1038, 1013, 1039, 1040, 972, 925, 
	StripL(5),  972, 970, 1039, 967, 1038, 
	StripR(14),  1040, 925, 1018, 928, 1017, 929, 1019, 931, 1020, 934, 
                   1021, 935, 1022, 1023, 
	StripR(10),  146, 147, 986, 148, 984, 149, 981, 150, 980, 978, 
	StripL(14),  146, 145, 990, 144, 991, 143, 993, 142, 484, 141, 
                   995, 140, 997, 1000, 
	StripL(4),  990, 987, 146, 986, 
	StripR(8),  140, 1000, 139, 1002, 138, 137, 161, 160, 
	StripL(3),  1003, 1002, 137, 
	StripR(20),  1003, 1006, 137, 136, 160, 159, 184, 183, 1105, 1106, 
                   207, 206, 887, 205, 890, 204, 891, 203, 893, 896, 
                   
	StripL(4),  1008, 134, 2607, 2606, 
	StripL(3),  2607, 134, 1009, 
	StripL(10),  134, 133, 1009, 132, 1011, 131, 1014, 130, 1016, 976, 
	StripR(8),  130, 976, 129, 974, 152, 978, 151, 150, 
	StripR(16),  123, 936, 124, 933, 125, 932, 126, 930, 127, 927, 
                   128, 926, 108, 971, 109, 969, 
	StripL(3),  943, 120, 941, 
	StripL(3),  948, 950, 483, 
	StripR(12),  961, 960, 115, 957, 481, 116, 1129, 1128, 92, 93, 
                   1152, 94, 
	StripL(21),  112, 968, 111, 969, 110, 109, 1136, 108, 1113, 1114, 
                   84, 107, 1137, 1138, 60, 83, 1162, 1163, 58, 1164, 
                   57, 
	StripL(4),  905, 816, 906, 818, 
	StripL(10),  863, 907, 865, 908, 868, 909, 870, 910, 872, 873, 
	StripR(26),  825, 823, 910, 822, 909, 819, 908, 818, 907, 906, 
                   863, 905, 862, 904, 860, 903, 858, 901, 854, 902, 
                   856, 924, 900, 923, 898, 895, 
	StripR(12),  916, 834, 915, 832, 914, 829, 913, 827, 912, 825, 
                   911, 910, 
	StripR(14),  886, 916, 884, 915, 881, 914, 879, 913, 878, 912, 
                   876, 911, 873, 910, 
	StripR(6),  919, 840, 918, 838, 917, 836, 
	StripL(8),  889, 888, 918, 886, 917, 916, 836, 834, 
	StripL(5),  920, 892, 919, 889, 918, 
	StripL(6),  846, 920, 843, 919, 841, 840, 
	StripR(22),  892, 894, 920, 921, 846, 922, 847, 923, 850, 924, 
                   851, 902, 805, 901, 808, 903, 810, 904, 812, 905, 
                   813, 816, 
	StripL(5),  894, 921, 895, 922, 923, 
	StripL(3),  853, 857, 222, 
	StripR(7),  222, 221, 857, 220, 859, 219, 861, 
	StripL(10),  861, 864, 218, 866, 217, 216, 1095, 1096, 193, 192, 
	StripL(9),  861, 218, 219, 1094, 1093, 195, 1092, 196, 1091, 
	StripL(8),  871, 874, 213, 212, 1099, 1100, 479, 189, 
	StripL(13),  874, 875, 212, 211, 1101, 1102, 187, 1103, 186, 1104, 
                   185, 1105, 184, 
	StripR(12),  875, 211, 877, 210, 880, 209, 882, 208, 883, 207, 
                   885, 887, 
	StripL(8),  203, 896, 202, 897, 201, 200, 1111, 1112, 
	StripR(5),  199, 855, 200, 899, 897, 
	StripL(3),  223, 246, 807, 
	StripR(17),  811, 814, 244, 243, 1069, 1070, 267, 266, 1046, 265, 
                   1047, 1048, 1594, 1049, 1596, 1598, 1595, 
	StripR(5),  817, 242, 815, 243, 814, 
	StripR(5),  239, 821, 238, 824, 826, 
	StripL(10),  826, 238, 237, 1075, 236, 1076, 235, 1077, 234, 1078, 
	StripL(8),  234, 831, 235, 830, 236, 828, 237, 826, 
	StripR(26),  831, 833, 234, 233, 1078, 1079, 257, 1080, 256, 255, 
                   1056, 1057, 1609, 1611, 1610, 1612, 1562, 1614, 1565, 1568, 
                   1564, 1566, 1563, 1567, 1894, 1895, 
	StripR(6),  833, 835, 233, 232, 1079, 1080, 
	StripR(24),  835, 837, 232, 231, 1080, 1081, 255, 254, 1057, 1058, 
                   1611, 1613, 1612, 1615, 1614, 1616, 1568, 1571, 1566, 1569, 
                   1567, 1570, 1895, 1896, 
	StripL(11),  844, 842, 228, 229, 1084, 1083, 252, 253, 1059, 254, 
                   1058, 
	StripL(13),  845, 844, 227, 228, 1085, 1084, 251, 252, 1060, 1059, 
                   1615, 1058, 1613, 
	StripL(8),  849, 848, 225, 226, 1086, 1085, 250, 251, 
	StripR(5),  806, 224, 852, 225, 849, 
	StripR(6),  184, 474, 480, 475, 134, 477, 
	StripR(6),  474, 465, 475, 466, 477, 467, 
	StripR(9),  465, 452, 466, 454, 467, 457, 468, 459, 460, 
	StripL(3),  497, 512, 495, 
	StripL(5),  512, 505, 495, 503, 508, 
	StripR(6),  495, 511, 508, 498, 501, 491, 
	StripL(3),  498, 491, 507, 
	StripL(4),  318, 533, 302, 532, 
	StripR(6),  526, 522, 2051, 2053, 2052, 2054, 
	StripR(6),  523, 528, 489, 486, 18, 490, 
	StripL(3),  509, 502, 292, 
	StripL(17),  500, 509, 279, 292, 291, 402, 401, 306, 305, 320, 
                   319, 332, 331, 345, 420, 422, 520, 
	StripL(7),  282, 281, 496, 432, 493, 280, 513, 
	StripL(26),  496, 494, 282, 510, 283, 499, 271, 506, 272, 492, 
                   273, 427, 274, 412, 286, 407, 392, 406, 300, 405, 
                   315, 414, 330, 417, 343, 419, 
	StripL(4),  279, 427, 500, 492, 
	StripL(3),  275, 277, 276, 
	StripR(16),  504, 502, 293, 292, 403, 402, 307, 306, 321, 320, 
                   333, 332, 346, 345, 358, 422, 
	StripL(3),  496, 493, 513, 
	StripR(18),  28, 514, 485, 1245, 2050, 1248, 2055, 1275, 2054, 1278, 
                   2052, 2088, 2051, 487, 526, 486, 530, 528, 
	StripL(4),  485, 28, 488, 27, 
	StripL(4),  486, 490, 487, 2088, 
	StripR(20),  446, 461, 445, 444, 294, 443, 433, 442, 295, 441, 
                   440, 453, 450, 465, 464, 474, 473, 184, 479, 480, 
                   
	StripR(7),  440, 450, 439, 449, 438, 446, 445, 
	StripL(9),  461, 444, 458, 443, 456, 442, 455, 441, 453, 
	StripR(7),  295, 440, 310, 439, 434, 438, 309, 
	StripR(23),  2113, 34, 35, 1186, 1185, 36, 1208, 37, 38, 1183, 
                   1182, 62, 63, 1159, 1158, 87, 1157, 88, 89, 1133, 
                   1132, 113, 114, 
	StripR(6),  31, 32, 11, 2114, 1233, 1230, 
	StripR(9),  26, 27, 7, 8, 1248, 1245, 1249, 1246, 1247, 
	StripR(5),  24, 2118, 23, 2119, 22, 
	StripR(7),  19, 2121, 18, 2122, 490, 4, 17, 
	StripL(7),  145, 168, 144, 167, 143, 166, 165, 
	StripL(44),  184, 160, 185, 161, 186, 162, 187, 163, 188, 164, 
                   189, 165, 479, 166, 190, 167, 191, 168, 192, 169, 
                   193, 170, 194, 171, 195, 172, 196, 173, 197, 174, 
                   198, 175, 176, 153, 177, 154, 178, 155, 179, 156, 
                   180, 157, 181, 480, 
	StripR(10),  309, 435, 434, 325, 310, 311, 296, 297, 396, 397, 
	StripL(6),  2174, 413, 2175, 287, 2074, 2205, 
	StripR(14),  436, 338, 325, 326, 311, 312, 297, 298, 397, 398, 
                   284, 285, 273, 274, 
	StripL(3),  436, 435, 325, 
	StripL(5),  301, 410, 408, 393, 303, 
	StripL(6),  2203, 411, 410, 288, 393, 289, 
	StripL(3),  520, 344, 420, 
	StripR(6),  1220, 421, 423, 357, 377, 375, 
	StripL(3),  395, 396, 296, 
	StripL(12),  284, 397, 283, 396, 282, 395, 281, 431, 432, 394, 
                   280, 404, 
	StripL(19),  286, 392, 399, 300, 299, 314, 313, 328, 327, 340, 
                   339, 353, 352, 367, 437, 429, 351, 364, 391, 
	StripL(3),  308, 404, 294, 
	StripL(9),  404, 394, 294, 431, 433, 395, 295, 296, 310, 
	StripR(5),  271, 283, 272, 284, 273, 
	StripL(21),  274, 286, 285, 399, 398, 299, 298, 313, 312, 327, 
                   326, 339, 338, 352, 436, 437, 337, 351, 363, 391, 
                   389, 
	StripL(6),  277, 289, 276, 288, 275, 411, 
	StripL(3),  300, 315, 314, 
	StripL(16),  317, 303, 304, 393, 400, 289, 290, 277, 278, 275, 
                   413, 411, 287, 2203, 2205, 2202, 
	StripL(7),  322, 308, 323, 294, 309, 445, 438, 
	StripR(5),  330, 315, 329, 314, 328, 
	StripL(10),  334, 322, 335, 323, 336, 309, 324, 435, 337, 436, 
	StripR(7),  343, 330, 342, 329, 341, 328, 340, 
	StripR(9),  337, 324, 350, 336, 349, 335, 348, 334, 347, 
	StripL(8),  353, 340, 354, 341, 355, 342, 356, 343, 
	StripL(10),  359, 347, 360, 348, 361, 349, 362, 350, 363, 337, 
	StripL(8),  367, 353, 368, 354, 370, 355, 372, 356, 
	StripR(46),  372, 375, 356, 357, 343, 421, 419, 1220, 1217, 1218, 
                   1216, 2213, 2207, 2263, 2254, 2262, 2253, 2261, 2252, 2260, 
                   2251, 2194, 2193, 2171, 2169, 2170, 2168, 2268, 2259, 2267, 
                   2258, 2266, 2257, 2265, 2256, 2264, 2255, 2215, 2212, 2214, 
                   2209, 2208, 316, 418, 415, 317, 
	StripL(10),  363, 389, 362, 386, 361, 384, 360, 383, 359, 380, 
	StripR(7),  2568, 2567, 2566, 2570, 2571, 2572, 2569, 
	StripL(3),  2572, 2573, 2570, 
	StripL(4),  2571, 2566, 2569, 2568, 
	StripL(8),  2575, 2576, 2574, 2577, 2579, 2580, 2578, 2581, 
	StripL(4),  2575, 2574, 2578, 2579, 
	StripR(7),  2584, 2583, 2582, 2586, 2587, 2588, 2585, 
	StripL(3),  2588, 2589, 2586, 
	StripL(4),  2587, 2582, 2585, 2584, 
	StripL(3),  2596, 2597, 2594, 
	StripL(4),  2595, 2590, 2593, 2592, 
	StripL(7),  2593, 2596, 2595, 2594, 2590, 2591, 2592, 
	StripR(7),  2600, 2599, 2598, 2602, 2603, 2604, 2601, 
	StripL(3),  2604, 2605, 2602, 
	StripL(4),  2603, 2598, 2601, 2600, 
	StripL(8),  646, 671, 657, 677, 642, 662, 651, 669, 
	StripL(8),  649, 675, 659, 676, 641, 661, 654, 666, 
	StripL(8),  668, 652, 664, 643, 680, 658, 672, 650, 
	StripL(8),  648, 673, 656, 679, 645, 665, 655, 670, 
	StripL(8),  667, 653, 663, 644, 678, 660, 674, 647, 
	StripL(34),  802, 771, 803, 741, 773, 743, 775, 746, 778, 747, 
                   780, 749, 782, 751, 783, 754, 786, 756, 788, 757, 
                   790, 759, 791, 762, 793, 764, 795, 765, 798, 767, 
                   799, 770, 802, 771, 
	StripL(10),  718, 720, 721, 725, 740, 737, 732, 733, 729, 736, 
	StripL(3),  721, 724, 718, 
	StripR(5),  740, 721, 732, 724, 729, 
	StripL(4),  737, 725, 728, 720, 
	StripL(7),  684, 681, 683, 682, 685, 686, 691, 
	StripL(6),  690, 687, 689, 688, 691, 692, 
	StripL(7),  687, 684, 688, 683, 692, 685, 691, 
	StripL(10),  693, 694, 695, 697, 704, 703, 700, 701, 699, 702, 
	StripL(5),  693, 695, 696, 700, 699, 
	StripL(3),  700, 695, 704, 
	StripL(4),  703, 697, 698, 694, 
	StripL(10),  705, 706, 707, 709, 716, 715, 712, 713, 711, 714, 
	StripL(3),  707, 708, 705, 
	StripR(5),  716, 707, 712, 708, 711, 
	StripL(4),  715, 709, 710, 706, 
	StripL(10),  717, 719, 722, 726, 739, 738, 731, 734, 730, 735, 
	StripL(3),  722, 723, 717, 
	StripR(5),  739, 722, 731, 723, 730, 
	StripL(4),  738, 726, 727, 719, 
	StripL(34),  777, 748, 779, 750, 781, 752, 784, 753, 785, 755, 
                   787, 758, 789, 760, 792, 761, 794, 763, 796, 766, 
                   797, 768, 800, 769, 801, 772, 804, 742, 774, 744, 
                   776, 745, 777, 748, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_Racing_Cont_Handle[]
START
	CnkV_VN(0x0, 15649),
	OffnbIdx(0, 2608),
	VERT( 0xc1b02df0, 0x42e64c86, 0xc18812a5 ),
	NORM( 0xb932f416, 0x3a1cb905, 0x3f7ffffd ),
	VERT( 0xc1b00f24, 0x42ff0859, 0xc1c1315e ),
	NORM( 0x3920306f, 0x3f5ea2c3, 0x3efcbd4a ),
	VERT( 0xc1b02bc3, 0x4300f160, 0xc20bf0ad ),
	NORM( 0x38dd2eba, 0x3f76e8f0, 0xbe8739c7 ),
	VERT( 0xc1afe1d6, 0xc2699e39, 0x42f98d11 ),
	NORM( 0x39819355, 0xbf780e6e, 0xbe7d1c1f ),
	VERT( 0xc1afe1d6, 0xc2641dc4, 0x42f2c3e3 ),
	NORM( 0x3a02dc2e, 0xbf5f384b, 0xbefaab87 ),
	VERT( 0xc1b01c01, 0xc2413a67, 0x42e55b29 ),
	NORM( 0xb8cc7644, 0xbe8959f1, 0xbf769dcd ),
	VERT( 0xc1b01c01, 0xc223a920, 0x42e55b29 ),
	NORM( 0x39eecab2, 0x3e7a3103, 0xbf783dc7 ),
	VERT( 0xc1b01c01, 0xc1f2a61e, 0x430078b1 ),
	NORM( 0xb8603839, 0x3f7ffddd, 0x3c044a0b ),
	VERT( 0xc1b01c01, 0xc1f68a9e, 0x43042ada ),
	NORM( 0x394972a4, 0x3f769c8a, 0x3e8962fb ),
	VERT( 0xc1afc84a, 0xc200fa20, 0x43079c88 ),
	NORM( 0xb8a82ef4, 0x3f5c4a5b, 0x3f026a49 ),
	VERT( 0xc1af4dcc, 0xc20a0df4, 0x430a91a6 ),
	NORM( 0x38483bf1, 0x3f332b64, 0x3f36d9b8 ),
	VERT( 0xc1afe1d6, 0xc223a91f, 0x430e43cf ),
	NORM( 0xb7b712fb, 0x3e7d1f36, 0x3f780e3c ),
	VERT( 0xc1afe1d6, 0xc2410610, 0x430e36b9 ),
	NORM( 0xb8ee642f, 0xbe89df06, 0x3f768b3c ),
	VERT( 0x4122c20b, 0xc257b1ec, 0x43048ea8 ),
	NORM( 0x3e5c3bed, 0xbf5984a2, 0x3ef67fbe ),
	VERT( 0x411cd9af, 0xc25d89f2, 0x430125c8 ),
	NORM( 0x3e45f4e7, 0xbf72af91, 0x3e817789 ),
	VERT( 0x411373e5, 0xc25fb42e, 0x42fb033c ),
	NORM( 0x3e22327b, 0xbf7cc49e, 0xba8c3a93 ),
	VERT( 0x41073499, 0xc25e0ae9, 0x42f3c368 ),
	NORM( 0x3de61eb4, 0xbf75a76c, 0xbe8419f5 ),
	VERT( 0x40f1e2ee, 0xc258ab0c, 0x42ed0a87 ),
	NORM( 0x3d6f1401, 0xbf5d9174, 0xbefeb7b7 ),
	VERT( 0x40b4aa56, 0xc2447925, 0x42e2f193 ),
	NORM( 0x3ecc0231, 0xbeb2577f, 0xbf593576 ),
	VERT( 0x40982412, 0xc2370765, 0x42e041a8 ),
	NORM( 0xbddc5832, 0xbe8ac257, 0xbf74e00c ),
	VERT( 0x407f4af5, 0xc22887b8, 0x42df6d02 ),
	NORM( 0xbe1b578f, 0xbc6f3a7f, 0xbf7d0272 ),
	VERT( 0x4059b3c5, 0xc219f711, 0x42e08222 ),
	NORM( 0xbe3cf666, 0x3e72d38b, 0xbf742b8b ),
	VERT( 0x40421265, 0xc20c538a, 0x42e36e24 ),
	NORM( 0xbe52bf9c, 0x3ef7c4e7, 0xbf59be99 ),
	VERT( 0x403a030d, 0xc2008b19, 0x42e7fe0e ),
	NORM( 0xbe5a6d12, 0x3f3229d7, 0xbf2f8883 ),
	VERT( 0x40421265, 0xc1eed686, 0x42ede248 ),
	NORM( 0xbe53a890, 0x3f59d4bb, 0xbef74552 ),
	VERT( 0x4059b3c5, 0xc1e3267f, 0x42f4b40b ),
	NORM( 0xbe3df4db, 0x3f73c79b, 0xbe7843fa ),
	VERT( 0x407f4af5, 0xc1ded1ff, 0x42fbfc5d ),
	NORM( 0xbe1b5f88, 0x3f7d0169, 0x3c7b397c ),
	VERT( 0x40982412, 0xc1e2249c, 0x43019e19 ),
	NORM( 0x3e9906e1, 0x3f7379e0, 0x3da0382f ),
	VERT( 0x40b4aa56, 0xc1ece443, 0x4304fa89 ),
	NORM( 0x3e1286a3, 0x3f640b33, 0x3edcd17d ),
	VERT( 0x40d346a2, 0xc1fe558d, 0x4307d8dc ),
	NORM( 0x3ab012fc, 0x3f33d9c7, 0x3f362e1f ),
	VERT( 0x40f1e2ee, 0xc20aa40b, 0x430a0704 ),
	NORM( 0x3d70ae15, 0x3efe3747, 0x3f5db496 ),
	VERT( 0x41073499, 0xc21815cd, 0x430b5ef9 ),
	NORM( 0x3de5ab2f, 0x3e849125, 0x3f75990e ),
	VERT( 0x411373e5, 0xc2269575, 0x430bc94b ),
	NORM( 0x3e21f38a, 0x3b0917c0, 0x3f7cc708 ),
	VERT( 0x411cd9af, 0xc235261d, 0x430b3ebc ),
	NORM( 0x3e4592ec, 0xbe81060b, 0x3f72c3aa ),
	VERT( 0x4122c20b, 0xc242c9a4, 0x4309c8ba ),
	NORM( 0x3e5c1400, 0xbef62ca1, 0x3f599eaf ),
	VERT( 0x4124c5df, 0xc24e9218, 0x430780c7 ),
	NORM( 0x3e648e7d, 0xbf306669, 0x3f30815f ),
	VERT( 0x4222faa3, 0xc233e095, 0x42f734a7 ),
	NORM( 0x3ef4ce74, 0xbf467f43, 0x3ed33596 ),
	VERT( 0x4220203b, 0xc23a1fc8, 0x42f0967e ),
	NORM( 0x3edbe509, 0xbf626afd, 0x3e3ade89 ),
	VERT( 0x421b9651, 0xc23cee31, 0x42e9a03e ),
	NORM( 0x3eb44065, 0xbf6f1e5e, 0xbd759a94 ),
	VERT( 0x4215ac16, 0xc23c1ad3, 0x42e2cb5f ),
	NORM( 0x3e801b29, 0xbf6bb08e, 0xbe9968b9 ),
	VERT( 0x420ec8b9, 0xc237b41c, 0x42dc8f0f ),
	NORM( 0x3e050d4a, 0xbf580c17, 0xbf053db4 ),
	VERT( 0x42076468, 0xc23006d2, 0x42d7581a ),
	NORM( 0x3a7c1d2b, 0xbf3585f4, 0xbf34838c ),
	VERT( 0x42000016, 0xc22598e8, 0x42d38173 ),
	NORM( 0xbe021f9f, 0xbf06a231, 0xbf574b4a ),
	VERT( 0x41f23974, 0xc2192049, 0x42d14e1a ),
	NORM( 0xbe7d7924, 0xbe9c4e53, 0xbf6b6614 ),
	VERT( 0x41e664fc, 0xc20b7689, 0x42d0e469 ),
	NORM( 0xbeb3d732, 0xbd8237b4, 0xbf6f227a ),
	VERT( 0x41dd512a, 0xc1fb1414, 0x42d24b9e ),
	NORM( 0xbedbe22a, 0x3e387662, 0xbf628b41 ),
	VERT( 0x41d79c58, 0xc1e09b69, 0x42d56b39 ),
	NORM( 0xbef4e667, 0x3ed25dea, 0xbf46b11c ),
	VERT( 0x41d5aa18, 0xc1c950e4, 0x42da0cbb ),
	NORM( 0xbefd815f, 0x3f1d3a7f, 0xbf1d516a ),
	VERT( 0x41d79c58, 0xc1b6cada, 0x42dfdf5d ),
	NORM( 0xbef4e7f7, 0x3f469443, 0xbed2c8f0 ),
	VERT( 0x41dd512a, 0xc1aa4c6d, 0x42e67d88 ),
	NORM( 0xbedbb0fa, 0x3f629477, 0xbe38abce ),
	VERT( 0x41e664fc, 0xc1a4afa4, 0x42ed73c5 ),
	NORM( 0xbeb36d89, 0x3f6f3557, 0x3d82aa26 ),
	VERT( 0x41f23974, 0xc1a6565e, 0x42f448a7 ),
	NORM( 0xbe7d9386, 0x3f6b7f5f, 0x3e9baae7 ),
	VERT( 0x42000016, 0xc1af23c9, 0x42fa84f6 ),
	NORM( 0xbe025777, 0x3f576a38, 0x3f066d4c ),
	VERT( 0x42076468, 0xc1be7e56, 0x42ffbbec ),
	NORM( 0x3ae74932, 0x3f347274, 0x3f3596d7 ),
	VERT( 0x420ec8b9, 0xc1d35a38, 0x4301c947 ),
	NORM( 0x3e056046, 0x3f0544a5, 0x3f58049c ),
	VERT( 0x4215ac16, 0xc1ec4b73, 0x4302e2f4 ),
	NORM( 0x3e7fcc97, 0x3e998011, 0x3f6bb3ef ),
	VERT( 0x421b9651, 0xc203cf7a, 0x430317cc ),
	NORM( 0x3eb41866, 0x3d744efd, 0x3f6f273a ),
	VERT( 0x4220203b, 0xc211bbf7, 0x43026432 ),
	NORM( 0x3edbdfe2, 0xbe3aff17, 0x3f626a8f ),
	VERT( 0x4222faa3, 0xc21ef84d, 0x4300d466 ),
	NORM( 0x3ef4ce67, 0xbed338d1, 0x3f467e6b ),
	VERT( 0x4223f3c4, 0xc22a9d8b, 0x42fd0749 ),
	NORM( 0x3efd4935, 0xbf1d5293, 0x3f1d4ff5 ),
	VERT( 0x4285fee9, 0xc1f5cc7d, 0x42dab77e ),
	NORM( 0x3f2f0bbe, 0xbf2a12de, 0x3e9a87b2 ),
	VERT( 0x4283fa6f, 0xc201c99a, 0x42d46b65 ),
	NORM( 0x3f1d32de, 0xbf48eff0, 0x3da97a18 ),
	VERT( 0x4280c4d6, 0xc2059d24, 0x42cdf7b9 ),
	NORM( 0x3f00acea, 0xbf5a496d, 0xbe11d95b ),
	VERT( 0x42792c3c, 0xc2061e1a, 0x42c7cd00 ),
	NORM( 0x3eb6f877, 0xbf5cd3c4, 0xbeb75292 ),
	VERT( 0x426f6e76, 0xc20343b0, 0x42c256d9 ),
	NORM( 0x3e3f2e09, 0xbf505527, 0xbf0ce316 ),
	VERT( 0x4264fa52, 0xc1fa7f60, 0x42bdf486 ),
	NORM( 0x3b2a4ef3, 0xbf3580ec, 0xbf348855 ),
	VERT( 0x425a862c, 0xc1e8f618, 0x42baf287 ),
	NORM( 0xbe39e264, 0xbf0e349f, 0xbf4fbc47 ),
	VERT( 0x4250c868, 0xc1d31d7b, 0x42b98554 ),
	NORM( 0xbeb4ebf7, 0xbeba4c2d, 0xbf5ca06f ),
	VERT( 0x42486af4, 0xc1ba72a0, 0x42b9c5cd ),
	NORM( 0xbf0034c5, 0xbe17113d, 0xbf5a5755 ),
	VERT( 0x4241ffc4, 0xc1a0a3e8, 0x42bbaf94 ),
	NORM( 0xbf1d2087, 0x3da0bcb6, 0xbf491afe ),
	VERT( 0x423df6d0, 0xc187738d, 0x42bf2142 ),
	NORM( 0xbf2f5815, 0x3e9926ac, 0xbf2a140f ),
	VERT( 0x423c967e, 0xc161320a, 0x42c3dec3 ),
	NORM( 0xbf358031, 0x3eff3b2a, 0xbeff6753 ),
	VERT( 0x423df6d0, 0xc13b45f6, 0x42c99565 ),
	NORM( 0xbf2f5bfb, 0x3f2a121e, 0xbe991d6f ),
	VERT( 0x4241ffc4, 0xc11fb88a, 0x42cfe17b ),
	NORM( 0xbf1d4881, 0x3f48f3a4, 0xbda33efd ),
	VERT( 0x42486af4, 0xc1106a65, 0x42d65528 ),
	NORM( 0xbf00738f, 0x3f5a457a, 0x3e15562b ),
	VERT( 0x4250c868, 0xc10e668f, 0x42dc7fe0 ),
	NORM( 0xbeb54570, 0x3f5ca3bb, 0x3eb9e576 ),
	VERT( 0x425a862c, 0xc119d031, 0x42e1f607 ),
	NORM( 0xbe3a6844, 0x3f4fce1d, 0x3f0e0f96 ),
	VERT( 0x4264fa52, 0xc131e021, 0x42e6585a ),
	NORM( 0x3b271c63, 0x3f3493ef, 0x3f357564 ),
	VERT( 0x426f6e76, 0xc154f2bb, 0x42e95a58 ),
	NORM( 0x3e3f78a4, 0x3f0cc56d, 0x3f5064eb ),
	VERT( 0x42792c3c, 0xc1805201, 0x42eac78e ),
	NORM( 0x3eb6fdb7, 0x3eb741f6, 0x3f5cd620 ),
	VERT( 0x4280c4d6, 0xc198fcde, 0x42ea8713 ),
	NORM( 0x3f00c171, 0x3e119ac5, 0x3f5a3fee ),
	VERT( 0x4283fa6f, 0xc1b2cb90, 0x42e89d4e ),
	NORM( 0x3f1d3d94, 0xbdaaa345, 0x3f48e3a0 ),
	VERT( 0x4285fee9, 0xc1cbfbee, 0x42e52ba2 ),
	NORM( 0x3f2f06eb, 0xbe9a9e16, 0x3f2a12bd ),
	VERT( 0x4286af12, 0xc1e2d67a, 0x42e06e21 ),
	NORM( 0x3f3510e3, 0xbf000868, 0x3effcd67 ),
	VERT( 0x42ae4902, 0xc14293eb, 0x42b596da ),
	NORM( 0x3f56b66d, 0xbf05692d, 0x3e21cadb ),
	VERT( 0x42abd075, 0xc161790a, 0x42afb5bb ),
	NORM( 0x3f40f258, 0xbf27d797, 0xbd3b00c4 ),
	VERT( 0x42a7e236, 0xc1761877, 0x42a9ec36 ),
	NORM( 0x3f1e2a4e, 0xbf3f1d84, 0xbe7cd081 ),
	VERT( 0x42a2c2d9, 0xc17f0a51, 0x42a49f41 ),
	NORM( 0x3ee0c121, 0xbf499c24, 0xbedd7500 ),
	VERT( 0x429ccbbc, 0xc17bb29c, 0x42a02b54 ),
	NORM( 0x3e6b5210, 0xbf46594f, 0xbf16c619 ),
	VERT( 0x429664f0, 0xc16c4b98, 0x429cde22 ),
	NORM( 0x3b8c11b2, 0xbf357794, 0xbf349131 ),
	VERT( 0x428ffe23, 0xc151e210, 0x429af143 ),
	NORM( 0xbe6327fb, 0xbf1814f7, 0xbf45f1d7 ),
	VERT( 0x428a0706, 0xc12e42b1, 0x429a864a ),
	NORM( 0xbedd556a, 0xbee09512, 0xbf49b115 ),
	VERT( 0x4284e7a8, 0xc103db0f, 0x429ba486 ),
	NORM( 0xbf1dc423, 0xbe80473e, 0xbf3f222c ),
	VERT( 0x4280f96a, 0xc0ab1daa, 0x429e3874 ),
	NORM( 0xbf4135c1, 0xbd40580e, 0xbf2783ee ),
	VERT( 0x427d01ba, 0xc01a1780, 0x42a21519 ),
	NORM( 0xbf56caf1, 0x3e1f02d4, 0xbf057da5 ),
	VERT( 0x427b523a, 0x3ec16bdc, 0x42a6f717 ),
	NORM( 0xbf5e6757, 0x3eb3693a, 0xbeb32bae ),
	VERT( 0x427d01ba, 0x40346d03, 0x42ac893d ),
	NORM( 0xbf56bf7e, 0x3f0584bb, 0xbe1f9ad7 ),
	VERT( 0x4280f96a, 0x409800e2, 0x42b26a5d ),
	NORM( 0xbf40b6d2, 0x3f280826, 0x3d4c0013 ),
	VERT( 0x4284e7a8, 0x40c13f99, 0x42b833e2 ),
	NORM( 0xbf1d599f, 0x3f3f2162, 0x3e825316 ),
	VERT( 0x428a0706, 0x40d32366, 0x42bd80d7 ),
	NORM( 0xbeddc814, 0x3f4977c0, 0x3ee0f1b5 ),
	VERT( 0x428ffe23, 0x40cc73de, 0x42c1f4c3 ),
	NORM( 0xbe631bf5, 0x3f45f3ca, 0x3f18138d ),
	VERT( 0x429664f0, 0x40ada609, 0x42c541f4 ),
	NORM( 0x3b98f075, 0x3f348491, 0x3f3583f9 ),
	VERT( 0x429ccbbc, 0x4071a597, 0x42c72ed4 ),
	NORM( 0x3e6b4c75, 0x3f16ca02, 0x3f4656c0 ),
	VERT( 0x42a2c2d9, 0x3fc65080, 0x42c799cc ),
	NORM( 0x3ee0ded2, 0x3edd45d0, 0x3f49a0d1 ),
	VERT( 0x42a7e236, 0xbf8cecf1, 0x42c67b91 ),
	NORM( 0x3f1e3bb4, 0x3e7bd92c, 0x3f3f2386 ),
	VERT( 0x42abd075, 0xc07fa6fa, 0x42c3e7a3 ),
	NORM( 0x3f40fcc4, 0x3d385511, 0x3f27ce90 ),
	VERT( 0x42ae4902, 0xc0dde57d, 0x42c00afe ),
	NORM( 0x3f56be72, 0xbe220d09, 0x3f05573d ),
	VERT( 0x42af20c2, 0xc11b83f5, 0x42bb2901 ),
	NORM( 0x3f5e2bf2, 0xbeb3d18b, 0x3eb3e974 ),
	VERT( 0x42c79cb9, 0x41174f33, 0x428a5a76 ),
	NORM( 0x3f6d36e2, 0xbec06934, 0x3c48cb66 ),
	VERT( 0x42c4db33, 0x40e90b0b, 0x4284f5e7 ),
	NORM( 0x3f54f193, 0xbf06a498, 0xbe35a630 ),
	VERT( 0x42c078e1, 0x40b369c4, 0x427fe513 ),
	NORM( 0x3f2e3138, 0xbf2412d3, 0xbeb5e94c ),
	VERT( 0x42bac23f, 0x40916231, 0x42774fa2 ),
	NORM( 0x3ef7328f, 0xbf365e60, 0xbf026353 ),
	VERT( 0x42b41af8, 0x40854614, 0x4270c13f ),
	NORM( 0x3e80cc77, 0xbf3c3c8b, 0xbf211b9e ),
	VERT( 0x42acf721, 0x408fe898, 0x426cac49 ),
	NORM( 0x3b35c64f, 0xbf352da7, 0xbf34dbdb ),
	VERT( 0x42a5d34a, 0x40b09041, 0x426b57f9 ),
	NORM( 0xbe7be0d3, 0xbf21a60d, 0xbf3c41b2 ),
	VERT( 0x429f2c03, 0x40e50354, 0x426cdb7d ),
	NORM( 0xbef527db, 0xbf02dcbe, 0xbf36b7b7 ),
	VERT( 0x4295130f, 0x413cf261, 0x4277d097 ),
	NORM( 0xbf5677d6, 0xbe2a03ae, 0xbf052a34 ),
	VERT( 0x42925189, 0x416816db, 0x42804182 ),
	NORM( 0xbf6ceb49, 0x3c5a7c06, 0xbec1d798 ),
	VERT( 0x429160e5, 0x4189aa16, 0x42854dfc ),
	NORM( 0xbf7539fe, 0x3e4fb9d8, 0xbe4ff6d8 ),
	VERT( 0x42925189, 0x419ddc01, 0x428ab5a7 ),
	NORM( 0xbf6c24d1, 0x3ec5af70, 0xbbbf0957 ),
	VERT( 0x429f2c03, 0x41c52b07, 0x4299684c ),
	NORM( 0xbeeaa19b, 0x3f37f94d, 0x3f05e3f9 ),
	VERT( 0x42a5d34a, 0x41c83211, 0x429caf7d ),
	NORM( 0xbe7c3210, 0x3f3c386a, 0x3f21a8f1 ),
	VERT( 0x42acf721, 0x41c58973, 0x429eb9f8 ),
	NORM( 0x3b364f91, 0x3f34dbd6, 0x3f352dab ),
	VERT( 0x42b41af8, 0x41bd5f87, 0x429f641f ),
	NORM( 0x3e80eb3c, 0x3f2114de, 0x3f3c3d0e ),
	VERT( 0x42bac23f, 0x41b042be, 0x429ea25e ),
	NORM( 0x3ef73037, 0x3f026e27, 0x3f36576c ),
	VERT( 0x42c078e1, 0x419f17df, 0x429c81e4 ),
	NORM( 0x3f2e3e60, 0x3eb5df2b, 0x3f2407a9 ),
	VERT( 0x42c4db33, 0x418b0a68, 0x429927d1 ),
	NORM( 0x3f54fd1f, 0x3e353c16, 0x3f069b45 ),
	VERT( 0x42c79cb9, 0x416af056, 0x4294ce9b ),
	NORM( 0x3f6d3709, 0xbc4b30e1, 0x3ec067d0 ),
	VERT( 0x42c88d5c, 0x413fb309, 0x428fc220 ),
	NORM( 0x3f75764c, 0xbe4db1ff, 0x3e4d8592 ),
	VERT( 0x42d04032, 0x42029f7d, 0x4237e93e ),
	NORM( 0x3f776852, 0xbe2e7870, 0xbe44e5b6 ),
	VERT( 0x42cd65ca, 0x41f1c372, 0x422e2b79 ),
	NORM( 0x3f5e54cc, 0xbeae429d, 0xbeb8889c ),
	VERT( 0x42c8dbe1, 0x41e1088b, 0x4225ce06 ),
	NORM( 0x3f365c3f, 0xbef9b5da, 0xbf013275 ),
	VERT( 0x42c2f1a5, 0x41d43229, 0x421f62d6 ),
	NORM( 0x3f01f6e9, 0xbf1a5816, 0xbf1d8db8 ),
	VERT( 0x42bc0e48, 0x41cc2042, 0x421b59e2 ),
	NORM( 0x3e89294b, 0xbf2d6027, 0xbf2f6c8f ),
	VERT( 0x42b4a9f7, 0x41c95f9d, 0x4219f98e ),
	NORM( 0xbe42d96a, 0xbf2f414b, 0xbf3422ac ),
	VERT( 0x42ad45a5, 0x41cc2042, 0x421b59e2 ),
	NORM( 0xbe801e71, 0xbf2ff5ec, 0xbf2e8eaa ),
	VERT( 0x42a66249, 0x41d43229, 0x421f62d6 ),
	NORM( 0xbefc6838, 0xbf1f3f9f, 0xbf1bb834 ),
	VERT( 0x42a0780d, 0x41e1088b, 0x4225ce06 ),
	NORM( 0xbf34418e, 0xbf031b7a, 0xbefbd48a ),
	VERT( 0x429bee24, 0x41f1c372, 0x422e2b79 ),
	NORM( 0xbf5d831a, 0xbebbe0c6, 0xbeaedbb4 ),
	VERT( 0x429913bb, 0x42029f7d, 0x4237e93e ),
	NORM( 0xbf7710ec, 0xbe4be384, 0xbe2e2e36 ),
	VERT( 0x42981a9a, 0x420d13a1, 0x42425d61 ),
	NORM( 0xbf7ff100, 0xbc798a79, 0x3c7625ac ),
	VERT( 0x429913bb, 0x421787c6, 0x424cd187 ),
	NORM( 0xbf76d879, 0x3e3049e8, 0x3e4e55e5 ),
	VERT( 0x429bee24, 0x42214589, 0x42568f4b ),
	NORM( 0xbf5e222f, 0x3ead0671, 0x3ebaa2df ),
	VERT( 0x42a0780d, 0x4229a2fc, 0x425eecbc ),
	NORM( 0xbf347f29, 0x3efc0b9d, 0x3f02ac14 ),
	VERT( 0x42a66249, 0x42300e2e, 0x426557ee ),
	NORM( 0xbef9f212, 0x3f1c7a9d, 0x3f1f797d ),
	VERT( 0x42ad45a5, 0x42341720, 0x426960e2 ),
	NORM( 0xbf00413b, 0x3f1fcb23, 0x3f197812 ),
	VERT( 0x42b4a9f7, 0x42357774, 0x426ac136 ),
	NORM( 0x3c178c5d, 0x3f34fdbd, 0x3f350832 ),
	VERT( 0x42bc0e48, 0x42341720, 0x426960e2 ),
	NORM( 0x3e8963d3, 0x3f2f4088, 0x3f2d8114 ),
	VERT( 0x42c2f1a5, 0x42300e2e, 0x426557ee ),
	NORM( 0x3f02221e, 0x3f1d7308, 0x3f1a4eea ),
	VERT( 0x42c8dbe1, 0x4229a2fc, 0x425eecbc ),
	NORM( 0x3f3683af, 0x3f010d3a, 0x3ef98f98 ),
	VERT( 0x42cd65ca, 0x42214589, 0x42568f4b ),
	NORM( 0x3f5e6c82, 0x3eb84901, 0x3eae0cd9 ),
	VERT( 0x42d04032, 0x421787c6, 0x424cd187 ),
	NORM( 0x3f777131, 0x3e448c8f, 0x3e2e138a ),
	VERT( 0x42d13953, 0x420d13a1, 0x42425d61 ),
	NORM( 0x3f7ff7af, 0x3c35f001, 0xbc3b1dc3 ),
	VERT( 0x42c79cba, 0x425f6b2c, 0x41b63b20 ),
	NORM( 0x3f6f0700, 0xbb8a289e, 0xbeb74fb5 ),
	VERT( 0x42c4db35, 0x4254a20d, 0x41a4d64a ),
	NORM( 0x3f56ce96, 0xbe43e157, 0xbf025e4a ),
	VERT( 0x42c078e2, 0x424a9b51, 0x41976df7 ),
	NORM( 0x3f302c95, 0xbebb4a18, 0xbf206757 ),
	VERT( 0x42bac241, 0x424205e0, 0x418eec12 ),
	NORM( 0x3efb4400, 0xbf041ca3, 0xbf33b804 ),
	VERT( 0x42b41afa, 0x423b777e, 0x418be509 ),
	NORM( 0x3e7ed05f, 0xbf229a49, 0xbf3b2f5e ),
	VERT( 0x42a5d34c, 0x42360e35, 0x4196b798 ),
	NORM( 0xbe6a86ff, 0xbf3943de, 0xbf26a8a6 ),
	VERT( 0x429f2c05, 0x423791bc, 0x41a3d45b ),
	NORM( 0xbef1ca43, 0xbf354e21, 0xbf06588c ),
	VERT( 0x42997562, 0x423bd2ac, 0x41b4ff39 ),
	NORM( 0xbf2bb5c7, 0xbf2566d3, 0xbeba7b8e ),
	VERT( 0x42951310, 0x424286d6, 0x41c90cb9 ),
	NORM( 0xbf52aafc, 0xbf0a4488, 0xbe348939 ),
	VERT( 0x4292518b, 0x424b3942, 0x41de9eef ),
	NORM( 0xbf6b1ff6, 0xbeca2768, 0x3cbf5893 ),
	VERT( 0x429160e7, 0x42555235, 0x41f43d97 ),
	NORM( 0xbf737576, 0xbe5fd84f, 0x3e5fdcae ),
	VERT( 0x4292518b, 0x4260218c, 0x420437c0 ),
	NORM( 0xbf6b2116, 0xbcbeca18, 0x3eca22b1 ),
	VERT( 0x42951310, 0x426aeaa8, 0x420cea2f ),
	NORM( 0xbf528fb7, 0x3e337f8a, 0x3f0a83a1 ),
	VERT( 0x42997562, 0x4274f163, 0x42139e55 ),
	NORM( 0xbf2b916d, 0x3eb91435, 0x3f25f13a ),
	VERT( 0x429f2c05, 0x427d86d5, 0x4217df46 ),
	NORM( 0xbef3c0cf, 0x3f054b8f, 0x3f356c6d ),
	VERT( 0x42a5ff18, 0x42825833, 0x42197cdc ),
	NORM( 0xbef87a49, 0x3efdf3d8, 0x3f38549d ),
	VERT( 0x42acf723, 0x42841518, 0x42180e7a ),
	NORM( 0x3c6feca0, 0x3f377d67, 0x3f3279ab ),
	VERT( 0x42b41afa, 0x4284bf40, 0x4213f988 ),
	NORM( 0x3e849fa1, 0x3f3b702d, 0x3f214343 ),
	VERT( 0x42bac241, 0x4283fd7d, 0x420d6b22 ),
	NORM( 0x3efb4422, 0x3f33b803, 0x3f041c95 ),
	VERT( 0x42c078e2, 0x4281dd03, 0x4204d5b1 ),
	NORM( 0x3f302c95, 0x3f206758, 0x3ebb4a17 ),
	VERT( 0x42c4db35, 0x427d05df, 0x41f59dea ),
	NORM( 0x3f56ce8f, 0x3f025e52, 0x3e43e16f ),
	VERT( 0x42c79cba, 0x42745373, 0x41e00baf ),
	NORM( 0x3f6f0700, 0x3eb74fb8, 0x3b8a29d8 ),
	VERT( 0x42c88d5d, 0x426a3a82, 0x41ca6d09 ),
	NORM( 0x3f7746ea, 0x3e3b67b3, 0xbe3b67a9 ),
	VERT( 0x42ae4905, 0x429af1f9, 0x3f949932 ),
	NORM( 0x3f5b1ad5, 0x3e0bdb08, 0xbeff6509 ),
	VERT( 0x42abd078, 0x429510da, 0xbf452044 ),
	NORM( 0x3f44f561, 0xbd85ab2e, 0xbf22ad99 ),
	VERT( 0x42a7e239, 0x428f4754, 0xc003c5ae ),
	NORM( 0x3f219f80, 0xbe867a23, 0xbf3acbee ),
	VERT( 0x42a2c2dc, 0x4289fa5e, 0xc0278d3b ),
	NORM( 0x3ee65efd, 0xbee30592, 0xbf4673f5 ),
	VERT( 0x429ccbbf, 0x42858674, 0xc01a2e59 ),
	NORM( 0x3e55c4df, 0xbf1cc8fa, 0xbf433023 ),
	VERT( 0x4296625f, 0x428338ff, 0xbf726948 ),
	NORM( 0xbc2d2216, 0xbf369566, 0xbf336bca ),
	VERT( 0x428e61df, 0x4281434f, 0x3f2fc8a1 ),
	NORM( 0xbe511ac9, 0xbf43864b, 0xbf1cc245 ),
	VERT( 0x4286ecfa, 0x4280be86, 0x40373528 ),
	NORM( 0xbedbe12a, 0xbf4672be, 0xbeed36a5 ),
	VERT( 0x428085c5, 0x4281b3ad, 0x40add8a3 ),
	NORM( 0xbf4202ff, 0xbf1320cc, 0xbe9e1935 ),
	VERT( 0x427737ef, 0x42841212, 0x41038c2e ),
	NORM( 0xbf431bdc, 0xbf23a9ec, 0xbdd10803 ),
	VERT( 0x42710a8e, 0x4287b05e, 0x4130a271 ),
	NORM( 0xbf5c60bb, 0xbefe7a8f, 0x3ddf6438 ),
	VERT( 0x426eef2e, 0x428c4f75, 0x415b1c6d ),
	NORM( 0xbf650a8c, 0xbea0c19e, 0x3ea2abd5 ),
	VERT( 0x42710a8e, 0x42919eb4, 0x41800a8f ),
	NORM( 0xbf5b65c9, 0xbdd4e26a, 0x3f013322 ),
	VERT( 0x427737ef, 0x4297417b, 0x418e83c1 ),
	NORM( 0xbf43dc09, 0x3dbd2ba8, 0x3f2324d1 ),
	VERT( 0x4286ecfa, 0x42a1f957, 0x419bd1ec ),
	NORM( 0xbed1da00, 0x3ef8a5ca, 0x3f45a969 ),
	VERT( 0x428e61df, 0x42a65370, 0x4199bec6 ),
	NORM( 0xbe558bea, 0x3f1d102b, 0x3f42fac5 ),
	VERT( 0x4296625f, 0x42a997d5, 0x4191e80e ),
	NORM( 0xbc34878d, 0x3f32c9b7, 0x3f3733ab ),
	VERT( 0x429ccbbf, 0x42ac89f3, 0x4188c837 ),
	NORM( 0x3e570b0a, 0x3f426c91, 0x3f1d9f86 ),
	VERT( 0x42a2c2dc, 0x42acf4ea, 0x416df113 ),
	NORM( 0x3ee5efa3, 0x3f467469, 0x3ee374c4 ),
	VERT( 0x42a7e239, 0x42abd6af, 0x41438967 ),
	NORM( 0x3f216b28, 0x3f3ae08e, 0x3e8702b9 ),
	VERT( 0x42abd078, 0x42a942c1, 0x41153d44 ),
	NORM( 0x3f44cd9f, 0x3f22d884, 0x3d873c00 ),
	VERT( 0x42ae4905, 0x42a5661d, 0x40cc6893 ),
	NORM( 0x3f5b10dd, 0x3eff9254, 0xbe0b89d9 ),
	VERT( 0x42af20c5, 0x42a0841f, 0x40668c4d ),
	NORM( 0x3f62a2b4, 0x3ea85bd7, 0xbea85bcd ),
	VERT( 0x4285feed, 0x42c0129c, 0xc18b38fd ),
	NORM( 0x3f2c9906, 0x3e9def65, 0xbf2bc900 ),
	VERT( 0x4283fa74, 0x42b9c684, 0xc198ffb5 ),
	NORM( 0x3f1b07ff, 0x3db777b9, 0xbf4a6c7a ),
	VERT( 0x4280c4db, 0x42b352d7, 0xc1a0a6c7 ),
	NORM( 0x3efdd78f, 0xbe0c050d, 0xbf5b8c84 ),
	VERT( 0x42792c44, 0x42ad2821, 0xc1a1a8b0 ),
	NORM( 0x3eb43aca, 0xbeb57405, 0xbf5dc651 ),
	VERT( 0x426f6e7e, 0x42a7b1fa, 0xc19bf3e5 ),
	NORM( 0x3e3eb194, 0xbf0c9527, 0xbf5090e5 ),
	VERT( 0x4264fa5a, 0x42a34fa8, 0xc18febe3 ),
	NORM( 0x3c15bf25, 0xbf35705a, 0xbf34956b ),
	VERT( 0x425a8636, 0x42a04da8, 0xc17cc53b ),
	NORM( 0xbe2fb879, 0xbf5119b5, 0xbf0d01f6 ),
	VERT( 0x4250c870, 0x429ee074, 0xc15113f3 ),
	NORM( 0xbeb17a43, 0xbf5d66ab, 0xbeb9ef7f ),
	VERT( 0x42486afe, 0x429f20ee, 0xc11fbe4b ),
	NORM( 0xbeffa85e, 0xbf5a0a68, 0xbe22ae43 ),
	VERT( 0x4241ffce, 0x42a10ab3, 0xc0d841a5 ),
	NORM( 0xbf1f1a90, 0xbf480a75, 0x3d657325 ),
	VERT( 0x423df6da, 0x42a47c62, 0xc0670094 ),
	NORM( 0xbf33d3a4, 0xbf27cc34, 0x3e8e04a6 ),
	VERT( 0x423c9686, 0x42a939e3, 0xbf40b07a ),
	NORM( 0xbf3ae006, 0xbef691e0, 0x3ef84f7e ),
	VERT( 0x423df6da, 0x42aef085, 0x3fcf0821 ),
	NORM( 0xbf32f1d5, 0xbe8b1059, 0x3f295a21 ),
	VERT( 0x4241ffce, 0x42b53c9d, 0x4055b9cd ),
	NORM( 0xbf1ebfe0, 0xbd648e11, 0x3f48537a ),
	VERT( 0x42486afe, 0x42bbb049, 0x40897931 ),
	NORM( 0xbefed9cf, 0x3e2e5cd7, 0x3f59b656 ),
	VERT( 0x4250c870, 0x42c1dafe, 0x408d80dc ),
	NORM( 0xbead6bed, 0x3ec2af21, 0x3f5c526c ),
	VERT( 0x425a8636, 0x42c75127, 0x406d5b30 ),
	NORM( 0xbe2c8a1b, 0x3f0e0ad9, 0x3f5090a2 ),
	VERT( 0x4264fa5a, 0x42cbb37b, 0x400d1b42 ),
	NORM( 0x3b2f7069, 0x3f32c57d, 0x3f373d06 ),
	VERT( 0x426f6e7e, 0x42ceb57a, 0x3c5109d5 ),
	NORM( 0x3e381def, 0x3f4f5449, 0x3f0ef0b0 ),
	VERT( 0x42792c44, 0x42d022ad, 0xc02df415 ),
	NORM( 0x3eb47d28, 0x3f5dcbd2, 0x3eb5170d ),
	VERT( 0x4280c4db, 0x42cfe233, 0xc0b9a571 ),
	NORM( 0x3efe11a9, 0x3f5b8088, 0x3e0b8bf3 ),
	VERT( 0x4283fa74, 0x42cdf86e, 0xc110701e ),
	NORM( 0x3f1b12ce, 0x3f4a653f, 0xbdb72dc7 ),
	VERT( 0x4285feed, 0x42ca86c1, 0xc142d0d4 ),
	NORM( 0x3f2ca0c6, 0x3f2bbda4, 0xbe9dfef1 ),
	VERT( 0x4286af16, 0x42c5c93f, 0xc17085e9 ),
	NORM( 0x3f3295b6, 0x3f01b030, 0xbf01b583 ),
	VERT( 0x4222faae, 0x42dc8fc7, 0xc1fd2dab ),
	NORM( 0x3ef46d88, 0x3ed36817, 0xbf468fae ),
	VERT( 0x42202046, 0x42d5f19d, 0xc204d60c ),
	NORM( 0x3edb8d00, 0x3e3b5b14, 0xbf6279e9 ),
	VERT( 0x421b965d, 0x42cefb5f, 0xc207a473 ),
	NORM( 0x3eb3e122, 0xbd727a33, 0xbf6f337d ),
	VERT( 0x4215ac21, 0x42c8267f, 0xc206d115 ),
	NORM( 0x3e80052d, 0xbe9872fd, 0xbf6bdb64 ),
	VERT( 0x420ec8c4, 0x42c1ea2e, 0xc2026a5f ),
	NORM( 0x3e067e66, 0xbf04892d, 0xbf586cc3 ),
	VERT( 0x42076473, 0x42bcb338, 0xc1f57a27 ),
	NORM( 0x3b5e6279, 0xbf33ea7f, 0xbf361d29 ),
	VERT( 0x42000021, 0x42b8dc93, 0xc1e09e4b ),
	NORM( 0xbdffc565, 0xbf56fbe8, 0xbf0742f9 ),
	VERT( 0x41f2398a, 0x42b6a939, 0xc1c7ad0c ),
	NORM( 0xbe7a90e0, 0xbf6b4c16, 0xbe9e1450 ),
	VERT( 0x41e66512, 0x42b63f8b, 0xc1ac5993 ),
	NORM( 0xbeb1fb31, 0xbf6f67ad, 0xbd8b0221 ),
	VERT( 0x41dd5140, 0x42b7a6be, 0xc1908097 ),
	NORM( 0xbeda6201, 0xbf630b0f, 0x3e35c09e ),
	VERT( 0x41d79c6e, 0x42bac659, 0xc16c0fdb ),
	NORM( 0xbef3c76e, 0xbf471677, 0x3ed22be8 ),
	VERT( 0x41d5aa2e, 0x42bf67dc, 0xc13d7ad1 ),
	NORM( 0xbefc703e, 0xbf1d7dee, 0x3f1d7bbd ),
	VERT( 0x41d79c6e, 0x42c53a7d, 0xc1186eba ),
	NORM( 0xbef3cd93, 0xbed233c9, 0x3f471281 ),
	VERT( 0x41dd5140, 0x42cbd8a8, 0xc0fee3c5 ),
	NORM( 0xbeda742f, 0xbe35db57, 0x3f630559 ),
	VERT( 0x41e66512, 0x42d2cee7, 0xc0e87095 ),
	NORM( 0xbeb22d90, 0x3d8a2ab5, 0x3f6f6042 ),
	VERT( 0x41f2398a, 0x42d9a3c5, 0xc0ef0b74 ),
	NORM( 0xbe7abde7, 0x3e9e07f4, 0x3f6b4b2a ),
	VERT( 0x42000021, 0x42dfe014, 0xc109209a ),
	NORM( 0xbdff927c, 0x3f074d4a, 0x3f56f65c ),
	VERT( 0x42076473, 0x42e5170d, 0xc127d5b5 ),
	NORM( 0x3b5e8024, 0x3f361d24, 0x3f33ea84 ),
	VERT( 0x420ec8c4, 0x42e8edb0, 0xc1518d79 ),
	NORM( 0x3e06b24e, 0x3f58696c, 0x3f048b55 ),
	VERT( 0x4215ac21, 0x42eb210b, 0xc181b7fa ),
	NORM( 0x3e803658, 0x3f6bd35a, 0x3e987b6a ),
	VERT( 0x421b965d, 0x42eb8abb, 0xc19d0b76 ),
	NORM( 0x3eb42169, 0x3f6f2a19, 0x3d6fcc5c ),
	VERT( 0x42202046, 0x42ea2386, 0xc1b8e46d ),
	NORM( 0x3edbba71, 0x3f6262ea, 0xbe3c422d ),
	VERT( 0x4222faae, 0x42e703eb, 0xc1d35d15 ),
	NORM( 0x3ef47afb, 0x3f46808e, 0xbed39156 ),
	VERT( 0x4223f3cf, 0x42e26269, 0xc1eaa79f ),
	NORM( 0x3efce7cf, 0x3f1d5fe8, 0xbf1d69ca ),
	VERT( 0x4122c23b, 0x42ee7873, 0xc222682f ),
	NORM( 0x3e84bfd8, 0x3ef42c47, 0xbf57002d ),
	VERT( 0x411cd9e3, 0x42e7a6b2, 0xc2284030 ),
	NORM( 0x3e6e993d, 0x3e76d774, 0xbf712f1e ),
	VERT( 0x41137415, 0x42e05e60, 0xc22a6a75 ),
	NORM( 0x3e43a72f, 0xbc3ced50, 0xbf7b442f ),
	VERT( 0x410734c9, 0x42d91e8b, 0xc228c12a ),
	NORM( 0x3e0b653f, 0xbe8796ab, 0xbf746354 ),
	VERT( 0x40f1e34e, 0x42d265aa, 0xc2236152 ),
	NORM( 0x3d92bb10, 0xbf001d3d, 0xbf5ce056 ),
	VERT( 0x40d34706, 0x42cca906, 0xc21aa8af ),
	NORM( 0x3af5bb3d, 0xbf33d595, 0xbf36322f ),
	VERT( 0x40b4aaba, 0x42c84cb3, 0xc20f2f66 ),
	NORM( 0xbd8bff62, 0xbf5b43a7, 0xbf02f820 ),
	VERT( 0x40982476, 0x42c59cca, 0xc201bda9 ),
	NORM( 0xbe095cdb, 0xbf73aa61, 0xbe8d3140 ),
	VERT( 0x407f4bbd, 0x42c4c824, 0xc1e67bf6 ),
	NORM( 0xbe435c2f, 0xbf7b3e3f, 0xbca7ea11 ),
	VERT( 0x4059b48d, 0x42c5dd44, 0xc1c95aa9 ),
	NORM( 0xbe6ffeff, 0xbf717e68, 0x3e708fcf ),
	VERT( 0x40421325, 0x42c8c945, 0xc1ae139f ),
	NORM( 0xbe860dde, 0xbf573817, 0x3ef2af95 ),
	VERT( 0x403a03d5, 0x42cd592e, 0xc19682af ),
	NORM( 0xbe8ad5f4, 0xbf2e2ff9, 0x3f2e4970 ),
	VERT( 0x40421325, 0x42d33d69, 0xc184430a ),
	NORM( 0xbe860262, 0xbef256b3, 0x3f5752e9 ),
	VERT( 0x4059b48d, 0x42da0f2b, 0xc1712606 ),
	NORM( 0xbe6ff060, 0xbe6f5841, 0x3f7192a9 ),
	VERT( 0x407f4bbd, 0x42e1577f, 0xc1687d0c ),
	NORM( 0xbe4339e2, 0x3cb5de35, 0x3f7b3d7c ),
	VERT( 0x40982476, 0x42e89753, 0xc16f2236 ),
	NORM( 0xbe095521, 0x3e8d7168, 0x3f73a159 ),
	VERT( 0x40b4aaba, 0x42ef5035, 0xc18250d0 ),
	NORM( 0xbd8c2c50, 0x3f02f10b, 0x3f5b476f ),
	VERT( 0x40d34706, 0x42f50cd8, 0xc193c20f ),
	NORM( 0x3b014d2c, 0x3f3639ee, 0x3f33cdb7 ),
	VERT( 0x40f1e34e, 0x42f9692b, 0xc1aab4a3 ),
	NORM( 0x3d9289a7, 0x3f5cd497, 0x3f00325d ),
	VERT( 0x410734c9, 0x42fc1915, 0xc1c59822 ),
	NORM( 0x3e0b77ce, 0x3f745ed4, 0x3e87b254 ),
	VERT( 0x41137415, 0x42fcedbb, 0xc1e2977c ),
	NORM( 0x3e43d52c, 0x3f7b4184, 0x3c45ea5c ),
	VERT( 0x411cd9e3, 0x42fbd899, 0xc1ffb8bb ),
	NORM( 0x3e6e97d5, 0x3f713758, 0xbe765814 ),
	VERT( 0x4122c23b, 0x42f8ec9a, 0xc20d7fe7 ),
	NORM( 0x3e84bbdd, 0x3f56fa20, 0xbef443bd ),
	VERT( 0x4124c60f, 0x42f45cb0, 0xc219485c ),
	NORM( 0x3e894e88, 0x3f2e5d3d, 0xbf2e69af ),
	VERT( 0x41c88e2a, 0x40a67d6a, 0xc1c9d19d ),
	NORM( 0x3e3f799c, 0xbcc9f4df, 0xbf7b67d2 ),
	VERT( 0x417d8319, 0x40ecafb4, 0xc1db5e2e ),
	NORM( 0x3e6a7c6f, 0xbd40f5f6, 0xbf78e7df ),
	VERT( 0x40960bcf, 0x41244a17, 0xc1f2574f ),
	NORM( 0x3e3bc7ed, 0xbc5a0b2e, 0xbf7ba2bf ),
	VERT( 0xc105cfff, 0x413e532c, 0xc1ff5bd8 ),
	NORM( 0x3d9e20e9, 0xbbb3d643, 0xbf7f3b5f ),
	VERT( 0xc0bd1c7b, 0xc28a8117, 0x4244e90f ),
	NORM( 0x3edb7da4, 0xbf67236a, 0x3d02fbd0 ),
	VERT( 0xc05a1930, 0xc28265e9, 0x4234b2b1 ),
	NORM( 0x3f1cb4e7, 0xbf43e866, 0xbe4bed80 ),
	VERT( 0x41282541, 0xc25a3ed4, 0x420a25b3 ),
	NORM( 0x3f05b6ac, 0xbf55cb2d, 0xbe309683 ),
	VERT( 0x41bbd05d, 0xc230c419, 0x41c155f1 ),
	NORM( 0x3f0874d6, 0xbf538d1d, 0xbe39fa4c ),
	VERT( 0x4216d0a2, 0xc1fe6552, 0x413c6620 ),
	NORM( 0x3f191159, 0xbf45b7dd, 0xbe5b9750 ),
	VERT( 0x4247b760, 0xc0008a8a, 0x41ac9479 ),
	NORM( 0x3f6a451a, 0xbeb6c3c1, 0x3e3ff3f8 ),
	VERT( 0x4225a73f, 0x41c1bd7e, 0xc094e958 ),
	NORM( 0x3f201bb4, 0x3efdd9a7, 0xbf1a3e9a ),
	VERT( 0x4205a8f7, 0x41c4e7b2, 0xc0a19224 ),
	NORM( 0x3e1964d7, 0x3f2bd0b3, 0xbf39dcd6 ),
	VERT( 0x41d03ad4, 0x41cde615, 0xc0c58bb2 ),
	NORM( 0x3e8b762a, 0x3f23ab0e, 0xbf38151b ),
	VERT( 0x4184ddb5, 0x41dfcc83, 0xc10692b3 ),
	NORM( 0x3ea8dc27, 0x3f1fbfae, 0xbf3559ab ),
	VERT( 0x40a6fe16, 0x41f73b3f, 0xc135702c ),
	NORM( 0x3e8380ec, 0x3f2440c5, 0xbf3905fc ),
	VERT( 0xc1018419, 0x42024138, 0xc14ffe91 ),
	NORM( 0x3ddf27a1, 0x3f2a0a11, 0xbf3d5397 ),
	VERT( 0xc1b03b12, 0xc248bade, 0x428b7e39 ),
	NORM( 0x3c0d0920, 0xbf4b4f62, 0x3f1b8d16 ),
	VERT( 0xc0b2f2b1, 0xc248d3aa, 0x428b8a9f ),
	NORM( 0x3f0b3967, 0xbf2dca59, 0x3efc952c ),
	VERT( 0xc04291c5, 0xc238f280, 0x42839a0b ),
	NORM( 0x3f5473d2, 0xbeeb4e68, 0x3ea1f596 ),
	VERT( 0x41327b2e, 0xc20b4aed, 0x42598c81 ),
	NORM( 0x3f3d5e62, 0xbf0ce63e, 0x3ec63886 ),
	VERT( 0x41c30e7b, 0xc1c39026, 0x423009a7 ),
	NORM( 0x3f40eefe, 0xbf0a84b5, 0x3ebf0d86 ),
	VERT( 0x421b930f, 0xc1401467, 0x41fc8d5c ),
	NORM( 0x3f54b25d, 0xbeee68cb, 0x3e9c07b4 ),
	VERT( 0x4231fc22, 0xc08d141d, 0x41bfc830 ),
	NORM( 0x3f3b834c, 0xbf0bcc08, 0x3ed026b1 ),
	VERT( 0x4269ac0e, 0x414fa20c, 0x4220bb25 ),
	NORM( 0x3f445cd9, 0xbf1b676f, 0x3e54b04a ),
	VERT( 0x4243966b, 0x4226e34c, 0x41370169 ),
	NORM( 0x3eaa5fe0, 0x3ee7dc92, 0xbf53c0ad ),
	VERT( 0x4222818f, 0x422380b9, 0x412b83af ),
	NORM( 0x3dda9e32, 0x3f2ab239, 0xbf3cd146 ),
	VERT( 0x41f70c9f, 0x42165b35, 0x40a0575c ),
	NORM( 0x3e91e795, 0x3f190f38, 0xbf3fcc7c ),
	VERT( 0x41a116b1, 0x421fffa9, 0x40266795 ),
	NORM( 0x3ea3f378, 0x3f1c426e, 0xbf397839 ),
	VERT( 0x40e89ee0, 0x422c9f0a, 0xbf0e3a41 ),
	NORM( 0x3e845d7d, 0x3f227b0e, 0xbf3a6de8 ),
	VERT( 0xc0e25bcf, 0x4233c61b, 0xc015ff9c ),
	NORM( 0x3de3a6fe, 0x3f2a289e, 0xbf3d22b3 ),
	VERT( 0xc1b008d4, 0xc231c121, 0x42acf8d4 ),
	NORM( 0xbc8dab9c, 0xbf7af9f8, 0x3e49160c ),
	VERT( 0xc07eda9b, 0xc2165dd2, 0x42badf0e ),
	NORM( 0x3e9d254f, 0xbf4bf5e9, 0x3f05468e ),
	VERT( 0xc07eda9b, 0xc2165dd2, 0x42badf0e ),
	NORM( 0x3f580b54, 0xbef66c0f, 0x3e72a633 ),
	VERT( 0xbfd065ea, 0xc20e0e88, 0x42a98695 ),
	NORM( 0x3f496336, 0xbf0b8421, 0x3e948449 ),
	VERT( 0x415aa487, 0xc1dd3f91, 0x428c82f5 ),
	NORM( 0x3f377eaa, 0xbf1fcc3f, 0x3e9f2067 ),
	VERT( 0x41df5297, 0xc183cdd1, 0x426c4d0a ),
	NORM( 0x3f3b9823, 0xbf1fca82, 0x3e8ab9c8 ),
	VERT( 0x422e3295, 0xc044a853, 0x4236b0a8 ),
	NORM( 0x3f4ba43a, 0xbf147236, 0x3e343775 ),
	VERT( 0x42524279, 0x4119be1b, 0x4227f21e ),
	NORM( 0x3f2ca50f, 0xbf266c0e, 0x3eb34263 ),
	VERT( 0x4269ac0e, 0x41d638fa, 0x4257ef1d ),
	NORM( 0x3f198a11, 0xbc34cd5f, 0x3f4cd376 ),
	VERT( 0x4243966b, 0x425e1746, 0x41c9e8a8 ),
	NORM( 0x3e822ca0, 0x3f70c8f1, 0xbe668e98 ),
	VERT( 0x4222818f, 0x42514beb, 0x41b1583e ),
	NORM( 0x3d3c51fa, 0x3f44e007, 0xbf2335e2 ),
	VERT( 0x41f70c9f, 0x4256242a, 0x41a7a7be ),
	NORM( 0x3e6bb139, 0x3f48cca8, 0xbf137512 ),
	VERT( 0x41a116b1, 0x425fc89c, 0x41945ed9 ),
	NORM( 0x3e9ef3fc, 0x3f46370b, 0xbf0d2cb8 ),
	VERT( 0x40e89ee0, 0x426c67fe, 0x4176402b ),
	NORM( 0x3e7f49e2, 0x3f4b15cb, 0xbf0e31b1 ),
	VERT( 0xc0e25bcf, 0x42738f0f, 0x4159a3e5 ),
	NORM( 0x3ddc48c5, 0x3f5146f9, 0xbf10d8fd ),
	VERT( 0xc1b008d4, 0xc1a55e1b, 0x42dcb850 ),
	NORM( 0xba8d73f2, 0x3f192df6, 0x3f4d1d4f ),
	VERT( 0xc07eda9b, 0xc1d082ed, 0x42d1ed3c ),
	NORM( 0x3f617dd3, 0x3ee2891f, 0x3e2c82a1 ),
	VERT( 0xc07eda9b, 0xc1d082ed, 0x42d1ed3c ),
	NORM( 0x3f4a69aa, 0xbe607013, 0x3f125847 ),
	VERT( 0xbfd065ea, 0xc1b0e1a5, 0x42c1346f ),
	NORM( 0x3f5e5a86, 0xbe6a2d0e, 0x3ee11987 ),
	VERT( 0x415aa487, 0xc13b5b54, 0x42ac676f ),
	NORM( 0x3f34e310, 0xbeaa7793, 0x3f1fd8e6 ),
	VERT( 0x41df5297, 0xbf077d2e, 0x42960aff ),
	NORM( 0x3f3dc447, 0xbe9d429f, 0x3f18c7d3 ),
	VERT( 0x422e3295, 0x414df9b7, 0x4276799b ),
	NORM( 0x3f438d1c, 0xbe92dc7c, 0x3f13ffb6 ),
	VERT( 0x42524279, 0x41a87571, 0x4255bd50 ),
	NORM( 0x3f15661e, 0xbeb5e953, 0x3f3aee38 ),
	VERT( 0x42633cdd, 0x41dea17f, 0x4258140a ),
	NORM( 0xbd5406b4, 0x3edc384a, 0x3f66bace ),
	VERT( 0x423de31f, 0x426008e0, 0x41ceb7d3 ),
	NORM( 0xbe6a6b72, 0x3f78b74f, 0x3d78cb10 ),
	VERT( 0x421d7ebd, 0x4257e863, 0x41c5e209 ),
	NORM( 0xbce27378, 0x3f7f12cf, 0xbda49f4e ),
	VERT( 0x41ee9626, 0x425ca7d4, 0x41bc6328 ),
	NORM( 0x3e310da8, 0x3f7c0b97, 0x3ce22282 ),
	VERT( 0x419a5857, 0x42661ae7, 0x41a97d01 ),
	NORM( 0x3e3da4a9, 0x3f79285a, 0x3e0b10ac ),
	VERT( 0x40d5e18a, 0x427279a9, 0x4190bf7d ),
	NORM( 0x3dc1854e, 0x3f768cb7, 0x3e810f45 ),
	VERT( 0xc0ebeb2c, 0x4277eb9d, 0x417f3333 ),
	NORM( 0x3d58f560, 0x3f7bb6dd, 0x3e32875e ),
	VERT( 0xc07c1e92, 0xc1bc0670, 0x42ce2d95 ),
	NORM( 0x3f3704d2, 0x3f1dc90a, 0x3ea90b12 ),
	VERT( 0xc0024a18, 0xc1949ee3, 0x42c424ed ),
	NORM( 0x3ebd1ae9, 0x3efb6798, 0x3f49fa21 ),
	VERT( 0x414f39eb, 0xc10c6bd1, 0x42aefa2e ),
	NORM( 0x3eb9c39e, 0x3ec0d529, 0x3f5a341f ),
	VERT( 0x41d75599, 0x400b8f3c, 0x4299103a ),
	NORM( 0x3ed9fd4d, 0x3ea6c53a, 0x3f581be1 ),
	VERT( 0x4228f3e7, 0x41750b66, 0x427d968e ),
	NORM( 0x3ef7083f, 0x3e8f1536, 0x3f548338 ),
	VERT( 0x424c4b27, 0x41baaf12, 0x425d81df ),
	NORM( 0x3defc457, 0x3ed2a8b5, 0x3f676502 ),
	VERT( 0x4254294d, 0x41d82ea0, 0x4253244d ),
	NORM( 0xbe45a1ae, 0x3f31c3b4, 0x3f3177a4 ),
	VERT( 0x423267cb, 0x4252c2fd, 0x41d8f13e ),
	NORM( 0xbe8e429e, 0x3f434595, 0x3f157bdf ),
	VERT( 0x421616d9, 0x42552938, 0x41cdde4e ),
	NORM( 0x3da5e051, 0x3f6cf39a, 0x3ebd509c ),
	VERT( 0x41e21d20, 0x425a8bb2, 0x41c63a57 ),
	NORM( 0x3e0e4285, 0x3f6ec04f, 0x3eaa844d ),
	VERT( 0x4190737e, 0x4263b4ba, 0x41b3e84a ),
	NORM( 0x3d93768e, 0x3f60fb66, 0x3ef17d5d ),
	VERT( 0x40baa846, 0x426c90e4, 0x4195a960 ),
	NORM( 0x3cc2d1e8, 0x3f5bd8ce, 0x3f030528 ),
	VERT( 0xc0f95f7a, 0x42735c68, 0x41881258 ),
	NORM( 0x3d050b52, 0x3f64a090, 0x3ee5c070 ),
	VERT( 0xc1b09acd, 0xc195e906, 0x42cfe6a0 ),
	NORM( 0x3be26777, 0x3f5fbb01, 0x3ef8d14a ),
	VERT( 0xc0cad605, 0xc1a460e7, 0x42c86494 ),
	NORM( 0x3e121441, 0x3f4ef095, 0x3f123686 ),
	VERT( 0xc027a753, 0xc18b60fc, 0x42c0e46d ),
	NORM( 0x3e163cae, 0x3f184e4d, 0x3f4a4ea8 ),
	VERT( 0x413e8b5f, 0xc0f79a01, 0x42acbd8f ),
	NORM( 0x3e0b0bb2, 0x3f1a5173, 0x3f4947a0 ),
	VERT( 0x41cb92cc, 0x401f80ad, 0x4296b6c5 ),
	NORM( 0x3e4ee7f3, 0x3f0e068b, 0x3f4e9d0a ),
	VERT( 0x42213239, 0x41800fb2, 0x427da104 ),
	NORM( 0x3e829509, 0x3f07e6bd, 0x3f4ee41c ),
	VERT( 0x42437484, 0x41bcb1c1, 0x425dbf7d ),
	NORM( 0x3de361b4, 0x3f22834e, 0x3f43bfc4 ),
	VERT( 0x42175c84, 0x41fbd9a2, 0x4256196a ),
	NORM( 0xbccfff6e, 0x3f3ca2f8, 0x3f2cf1ee ),
	VERT( 0x4201ac6c, 0x4247eb04, 0x420c1b37 ),
	NORM( 0x3c817388, 0x3f3a375e, 0x3f2f9f44 ),
	VERT( 0x41dbd15e, 0x4251fff5, 0x42020646 ),
	NORM( 0xbca13095, 0x3f5222d5, 0x3f1220d4 ),
	VERT( 0x41b0ee7c, 0x425a17b9, 0x41f3dd04 ),
	NORM( 0xbb5bc8dd, 0x3f515f24, 0x3f134e18 ),
	VERT( 0x415f4b86, 0x4263f995, 0x41e0194c ),
	NORM( 0xbd00dd87, 0x3f4f7cf5, 0x3f15bb84 ),
	VERT( 0x4036f05e, 0x426bbb04, 0x41c40fdf ),
	NORM( 0xbd38af77, 0x3f4d6ef0, 0x3f1850ad ),
	VERT( 0xc1183337, 0x4271e64f, 0x41b7b948 ),
	NORM( 0xbcf17999, 0x3f410ef3, 0x3f27f370 ),
	VERT( 0xc1166b96, 0xc1290aa9, 0x42bccbb2 ),
	NORM( 0x3e014d21, 0x3f396539, 0x3f2d8cd0 ),
	VERT( 0xc0a2f567, 0xc1159b6c, 0x42b9958b ),
	NORM( 0x3e1ecea4, 0x3f1dccc3, 0x3f45a229 ),
	VERT( 0x4105ff16, 0xbff915eb, 0x42ab8eb5 ),
	NORM( 0x3e22a37a, 0x3f180332, 0x3f49ed9e ),
	VERT( 0x41a55306, 0x40f0089e, 0x4297e0ef ),
	NORM( 0x3e0bd791, 0x3f19990a, 0x3f49cbaf ),
	VERT( 0x42054740, 0x41a050d4, 0x4281eee8 ),
	NORM( 0x3dd07e1a, 0x3f1d3635, 0x3f485a54 ),
	VERT( 0x4214e1d4, 0x41dd7b4c, 0x42654895 ),
	NORM( 0x3d1ec6d6, 0x3f277720, 0x3f415f56 ),
	VERT( 0x41012b65, 0x420044d5, 0x422ba94a ),
	NORM( 0xbe4c07fa, 0x3f2f845e, 0x3f333e25 ),
	VERT( 0x41012b65, 0x420044d5, 0x422ba94a ),
	NORM( 0x343c82fb, 0x3f3504ee, 0x3f3504f9 ),
	VERT( 0x40dd505d, 0x42121641, 0x4219d7de ),
	NORM( 0xb50ab390, 0x3f3504f1, 0x3f3504f5 ),
	VERT( 0x40dd505d, 0x42121641, 0x4219d7de ),
	NORM( 0xbe4b1798, 0x3f1deede, 0x3f42f998 ),
	VERT( 0x409c7e05, 0x42201ff2, 0x420bce2d ),
	NORM( 0xbe5ca2ee, 0x3f04e6c4, 0x3f53bb8a ),
	VERT( 0x409c7e05, 0x42201ff2, 0x420bce2d ),
	NORM( 0xb50ab390, 0x3f3504f1, 0x3f3504f5 ),
	VERT( 0x403be04d, 0x42293e38, 0x4202afe8 ),
	NORM( 0xbe60cbd1, 0x3ee2f86e, 0x3f5e7bb3 ),
	VERT( 0x403be04d, 0x42293e38, 0x4202afe8 ),
	NORM( 0xb50ab390, 0x3f3504f1, 0x3f3504f5 ),
	VERT( 0xbf0dd6b7, 0x42353254, 0x41ed7798 ),
	NORM( 0xbe6f5327, 0x3ec83433, 0x3f63e4f3 ),
	VERT( 0xbf0dd6b7, 0x42353254, 0x41ed7798 ),
	NORM( 0xb50ab390, 0x3f3504f1, 0x3f3504f5 ),
	VERT( 0xc0a74c74, 0x42401398, 0x41d7b510 ),
	NORM( 0xb50ab390, 0x3f3504f1, 0x3f3504f5 ),
	VERT( 0xc0a74c74, 0x42401398, 0x41d7b510 ),
	NORM( 0xbe4ebd12, 0x3e8db26e, 0x3f7082a1 ),
	VERT( 0xc15dae72, 0x424bbf72, 0x41c05d5e ),
	NORM( 0xb50ab391, 0x3f3504f1, 0x3f3504f5 ),
	VERT( 0xc15dae72, 0x424bbf72, 0x41c05d5e ),
	NORM( 0xbdc53eed, 0x3e1ab8fb, 0x3f7bdb5e ),
	VERT( 0xc1ae56b0, 0x410e675b, 0x42842a25 ),
	NORM( 0xbb366eb3, 0x3f51870c, 0x3f131582 ),
	VERT( 0xc1ae56b0, 0x410e675b, 0x42842a25 ),
	NORM( 0x2fb1922a, 0x3f3504f5, 0x3f3504f2 ),
	VERT( 0xc18d783b, 0x41111f72, 0x4283d322 ),
	NORM( 0xbc8f7ef5, 0x3f51aadf, 0x3f12d157 ),
	VERT( 0xc18d783b, 0x41111f72, 0x4283d322 ),
	NORM( 0x343c82fb, 0x3f3504ee, 0x3f3504f9 ),
	VERT( 0xc1576829, 0x411c1002, 0x42827510 ),
	NORM( 0x343c82fa, 0x3f3504ee, 0x3f3504f9 ),
	VERT( 0xc1576829, 0x411c1002, 0x42827510 ),
	NORM( 0xbd9bd75a, 0x3f50a20e, 0x3f131139 ),
	VERT( 0xc0cbbdac, 0x413dac8c, 0x427c82fd ),
	NORM( 0xbe09cb80, 0x3f4e7fc5, 0x3f135598 ),
	VERT( 0xc0cbbdac, 0x413dac8c, 0x427c82fd ),
	NORM( 0x343c82fb, 0x3f3504ee, 0x3f3504f8 ),
	VERT( 0x3f5620d4, 0x4181f84b, 0x426af1fa ),
	NORM( 0xbe3949b1, 0x3f48ba53, 0x3f17fb76 ),
	VERT( 0x3f5620d4, 0x4181f84b, 0x426af1fa ),
	NORM( 0x343c82fb, 0x3f3504ee, 0x3f3504f9 ),
	VERT( 0x40c48157, 0x41afd6e1, 0x425402af ),
	NORM( 0x343c82fb, 0x3f3504ee, 0x3f3504f9 ),
	VERT( 0x40c48157, 0x41afd6e1, 0x425402af ),
	NORM( 0xbe5d809e, 0x3f403ddb, 0x3f1fba1a ),
	VERT( 0x4100f66d, 0x41dea2e9, 0x423c9cab ),
	NORM( 0x343c82fb, 0x3f3504ee, 0x3f3504f9 ),
	VERT( 0x4100f66d, 0x41dea2e9, 0x423c9cab ),
	NORM( 0xbe65e5c8, 0x3f371db8, 0x3f296a0d ),
	VERT( 0xc0f8379b, 0x421d2280, 0xc0e08582 ),
	NORM( 0x3ddda5db, 0x3f24479f, 0xbf425f46 ),
	VERT( 0xc0996c60, 0xc21f1273, 0x42acecdd ),
	NORM( 0x3f078828, 0xbf4c9a21, 0x3e91ac21 ),
	VERT( 0x424f5059, 0x40b2ac65, 0x41f4c28b ),
	NORM( 0x3f4b2e14, 0xbf1bb65b, 0x3c2ff4fc ),
	VERT( 0x422c603c, 0x4201eec3, 0x406c8106 ),
	NORM( 0x3f07ca89, 0x3ec3a637, 0xbf41b819 ),
	VERT( 0x420b8f95, 0x42038e42, 0x40528901 ),
	NORM( 0x3e41192d, 0x3f1eb1f7, 0xbf42fda4 ),
	VERT( 0x41da2c37, 0x420120c6, 0xbc6f5b0c ),
	NORM( 0x3e93e02f, 0x3f176eb1, 0xbf40b5f2 ),
	VERT( 0x418cc271, 0x420a4ed5, 0xc013d055 ),
	NORM( 0x3ea8251c, 0x3f14d8f5, 0xbf3e8ec6 ),
	VERT( 0x40bcc006, 0x4216533f, 0xc0aa0b7b ),
	NORM( 0x3e825518, 0x3f1c3967, 0xbf400ce7 ),
	VERT( 0xc024a16f, 0xc225334c, 0x4293228e ),
	NORM( 0x3f4dc7ab, 0xbf0ce902, 0x3e66fedb ),
	VERT( 0x413fccba, 0xc1eeac24, 0x427867e2 ),
	NORM( 0x3f346b93, 0xbf2cb5e6, 0x3e60b313 ),
	VERT( 0x41cc6f0e, 0xc1998486, 0x424dd414 ),
	NORM( 0x3f35a938, 0xbf2e16c0, 0x3e3cd247 ),
	VERT( 0x4221c109, 0xc0cdc09e, 0x421ac9e4 ),
	NORM( 0x3f4cad46, 0xbf171b3f, 0x3de3b78b ),
	VERT( 0x42390635, 0x4047c903, 0x42043a42 ),
	NORM( 0x3f38f29b, 0xbf297a92, 0x3e4c3f28 ),
	VERT( 0xc19b5cd9, 0x42355ad7, 0xc02f4b68 ),
	NORM( 0x3d3ca78c, 0x3f2b94b1, 0xbf3d9f91 ),
	VERT( 0xc19b559e, 0x421ea0ba, 0xc0ec7756 ),
	NORM( 0x3d3a7c29, 0x3f25dd8f, 0xbf42a685 ),
	VERT( 0xc19b504c, 0x4203b44a, 0xc155cad6 ),
	NORM( 0x3d3a9fca, 0x3f2b2e35, 0xbf3dfe1b ),
	VERT( 0xc153cce6, 0xc22d4e61, 0x42afb5fd ),
	NORM( 0x3e839380, 0xbf7345e0, 0x3e340da6 ),
	VERT( 0xc153cce6, 0xc22d4e61, 0x42afb5fd ),
	NORM( 0x3def60c7, 0xbf63f822, 0x3ee120ce ),
	VERT( 0xc1785141, 0xc22f7819, 0x429efac3 ),
	NORM( 0x3dcd08aa, 0xbf6f61c1, 0x3eae130b ),
	VERT( 0xc180efbb, 0xc2489023, 0x428b68db ),
	NORM( 0x3c03cf73, 0xbf4ae25c, 0x3f1c1bb0 ),
	VERT( 0xc19b43ea, 0x4143fb6c, 0xc20117fc ),
	NORM( 0x3d0185c7, 0xbcbc26b2, 0xbf7fcdee ),
	VERT( 0xc180fa37, 0xc28a601f, 0x4244a71f ),
	NORM( 0x39cb51ae, 0xbf7ff04b, 0xbcb34e25 ),
	VERT( 0xc19b5cd9, 0x427523cb, 0x415350f6 ),
	NORM( 0x3d3afec3, 0x3f51f43f, 0xbf12025b ),
	VERT( 0xc153cce6, 0xc1a80f60, 0x42dc5f43 ),
	NORM( 0x3e888847, 0x3f751e0d, 0x3de14f66 ),
	VERT( 0xc153cce6, 0xc1a80f60, 0x42dc5f43 ),
	NORM( 0x3e8d3db9, 0x3d563fd1, 0x3f75b3b0 ),
	VERT( 0xc19b53e5, 0x42797667, 0x41790805 ),
	NORM( 0x3cd32b0f, 0x3f7afcda, 0x3e47e7b7 ),
	VERT( 0xc178a98f, 0xc19fd53e, 0x42d5e60d ),
	NORM( 0x3e30da99, 0x3f74dac9, 0x3e70e935 ),
	VERT( 0xc19b442f, 0x4274d1f8, 0x41852738 ),
	NORM( 0x3c8a1779, 0x3f6712be, 0x3edc3472 ),
	VERT( 0xc180ddf9, 0xc1967484, 0x42cf247e ),
	NORM( 0x3e1624f9, 0x3f5f052d, 0x3eefe895 ),
	VERT( 0xc19d9dd9, 0x42733456, 0x41b51d38 ),
	NORM( 0xbb99c914, 0x3f39328a, 0x3f30bd0a ),
	VERT( 0xc18a21eb, 0xc13cdf5b, 0x42bf4648 ),
	NORM( 0x3d581ad2, 0x3f4a6b37, 0x3f1c2440 ),
	VERT( 0xc19acbf7, 0x424ccd22, 0x41be41fb ),
	NORM( 0xbd24b87b, 0x3df4b844, 0x3f7df50c ),
	VERT( 0xc19acbf7, 0x424ccd22, 0x41be41fb ),
	NORM( 0xb484524a, 0x3f3504f2, 0x3f3504f4 ),
	VERT( 0xc1987c64, 0x41105c9b, 0x4283eb7d ),
	NORM( 0x33ae601f, 0x3f3504f1, 0x3f3504f5 ),
	VERT( 0xc1987c64, 0x41105c9b, 0x4283eb7d ),
	NORM( 0xbc1fb965, 0x3f51c048, 0x3f12bedb ),
	VERT( 0xc192e757, 0xc180022f, 0xc080c04f ),
	NORM( 0xb3b2d0bc, 0xbf3504f3, 0xbf3504f3 ),
	VERT( 0xc199d7cf, 0x41fb9111, 0x422e2597 ),
	NORM( 0xb39f55c6, 0x3f3504f2, 0x3f3504f5 ),
	VERT( 0x40f75d92, 0x42070714, 0x4224e70c ),
	NORM( 0xbe38711b, 0x3f2c3186, 0x3f37bca4 ),
	VERT( 0x40f75d92, 0x42070714, 0x4224e70c ),
	NORM( 0xb42a4975, 0x3f3504f0, 0x3f3504f7 ),
	VERT( 0x423f5617, 0x4184af77, 0x417ae852 ),
	NORM( 0x3f66a33c, 0xbdfaf3e5, 0xbed5267a ),
	VERT( 0x4239a9e7, 0x411ed82e, 0x411a2e21 ),
	NORM( 0x3f783442, 0x3daac6fa, 0xbe6bcbf2 ),
	VERT( 0x4256a068, 0x41b2e299, 0x41a1e9aa ),
	NORM( 0x3f2789db, 0xbed80406, 0xbf20a09c ),
	VERT( 0x4256a068, 0x4234a0ca, 0x422c2452 ),
	NORM( 0x3eb04f23, 0x3f3b0200, 0x3f16f917 ),
	VERT( 0x4252afb3, 0x4231b508, 0x422d2745 ),
	NORM( 0xbe474d7a, 0x3f20b46e, 0x3f40f1a7 ),
	VERT( 0x424479bb, 0x4224e060, 0x4223be3c ),
	NORM( 0xbe8332dd, 0x3f21a64a, 0x3f3b5b0d ),
	VERT( 0x420e19e7, 0x4219f76d, 0x4224a0ba ),
	NORM( 0xbd02e26e, 0x3f3279a1, 0x3f37588d ),
	VERT( 0x42668813, 0x42100e27, 0x4249d101 ),
	NORM( 0xbf406347, 0x3e064ad6, 0x3f258447 ),
	VERT( 0x4250d19a, 0x4255c08c, 0x42041e9d ),
	NORM( 0xbf5740ff, 0x3ec071bf, 0x3ec76e05 ),
	VERT( 0x424c3fe5, 0x4254e19b, 0x41c7cd67 ),
	NORM( 0xbebc0e99, 0x3f56039e, 0xbed0bc33 ),
	VERT( 0x424c4089, 0x4221a729, 0x4142c064 ),
	NORM( 0xbee39603, 0x3e6297bf, 0xbf5e3640 ),
	VERT( 0x4250f76f, 0x4200e5bc, 0x4140b50e ),
	NORM( 0xbf5d1e02, 0xbeb653d8, 0xbeb69039 ),
	VERT( 0x42666237, 0x41707338, 0x41e9ec64 ),
	NORM( 0xbf4e09c4, 0xbf16827a, 0xbda61b7c ),
	VERT( 0x426d6560, 0x416da5ef, 0x4216e131 ),
	NORM( 0x3d5523bf, 0xbf76145a, 0x3e8a9d0b ),
	VERT( 0x426d6eb4, 0x41dd7131, 0x424a69b8 ),
	NORM( 0x3e51abfa, 0xbebf5254, 0x3f6798f1 ),
	VERT( 0x426a6650, 0x42132aa1, 0x424efcf3 ),
	NORM( 0xbf506ece, 0x3d34b6ce, 0x3f143404 ),
	VERT( 0x426a6650, 0x42132aa1, 0x424efcf3 ),
	NORM( 0xbf0fadd2, 0x3e38786f, 0x3f4ecc5a ),
	VERT( 0x42539196, 0x425c4fd6, 0x4205d7be ),
	NORM( 0xbf34937f, 0x3f18c5ff, 0x3ec3d793 ),
	VERT( 0x42539196, 0x425c4fd6, 0x4205d7be ),
	NORM( 0xbf6ae751, 0x3e7cef49, 0x3e9f78c3 ),
	VERT( 0x424e07ef, 0x425cf061, 0x41c24bfc ),
	NORM( 0xbf53ed07, 0x3ee805f6, 0xbea94a12 ),
	VERT( 0x424e07ef, 0x425cf061, 0x41c24bfc ),
	NORM( 0xbf3802ee, 0x3f2e3d5e, 0x3e111fba ),
	VERT( 0x424e08a1, 0x4225199f, 0x41254dbd ),
	NORM( 0x3ea92ca5, 0xbc5e5354, 0xbf7198be ),
	VERT( 0x424e08a1, 0x4225199f, 0x41254dbd ),
	NORM( 0xbf63c189, 0x3e50aef4, 0xbed133cd ),
	VERT( 0x4253bad2, 0x41ffa3f3, 0x41296171 ),
	NORM( 0x3f064118, 0xbe9734d4, 0xbf4c70ca ),
	VERT( 0x4253bad2, 0x41ffa3f3, 0x41296171 ),
	NORM( 0xbf601bc3, 0xbea69de5, 0xbeb6fcd7 ),
	VERT( 0x426a3d0c, 0x415eacfc, 0x41e4fe2f ),
	NORM( 0xbf4f1aaa, 0xbf159a57, 0xbd81b2eb ),
	VERT( 0x426a3d0c, 0x415eacfc, 0x41e4fe2f ),
	NORM( 0x3f177729, 0xbf23f44b, 0xbefab466 ),
	VERT( 0x4272291b, 0x4156a146, 0x4218b707 ),
	NORM( 0xbf473e93, 0xbf0b7f08, 0x3e9fbb04 ),
	VERT( 0x4272291b, 0x4156a146, 0x4218b707 ),
	NORM( 0x3ec0040d, 0xbf6bb58a, 0x3ddc7fbe ),
	VERT( 0x42723346, 0x41db2b2d, 0x4250e2e1 ),
	NORM( 0xbe486e45, 0xbefceb82, 0x3f58df03 ),
	VERT( 0x42723346, 0x41db2b2d, 0x4250e2e1 ),
	NORM( 0xbf43c7b2, 0xbe96717d, 0x3f12cabb ),
	VERT( 0x427ce829, 0x421ff7e0, 0x4259106a ),
	NORM( 0xbf077745, 0x3e944239, 0x3f4c2e4e ),
	VERT( 0x4266136f, 0x426c0982, 0x420cfec7 ),
	NORM( 0xbf25b7fe, 0x3f0ed0c2, 0x3f04f47f ),
	VERT( 0x426089c8, 0x426fb3da, 0x41c9cdca ),
	NORM( 0xbf5d6830, 0x3ef8b481, 0xbe01b35e ),
	VERT( 0x42608a7a, 0x42374e06, 0x41321636 ),
	NORM( 0xbed43b2b, 0x3e5c51e2, 0xbf625dc4 ),
	VERT( 0x42663cab, 0x420e973e, 0x4142732d ),
	NORM( 0x3ea928f5, 0xbeb94efb, 0xbf5f2741 ),
	VERT( 0x427cbee5, 0x41872bcb, 0x41f73c4a ),
	NORM( 0x3ecd4ff7, 0xbf469957, 0xbef972d7 ),
	VERT( 0x42844670, 0x41802029, 0x4223b5a7 ),
	NORM( 0xbdb385f0, 0xbf6fae3c, 0x3eae30ed ),
	VERT( 0x42844b86, 0x41f1154d, 0x425c732e ),
	NORM( 0xbef8b175, 0xbebc604f, 0x3f4afbeb ),
	VERT( 0x428cb2f7, 0x421f600a, 0x426ab4d7 ),
	NORM( 0xbe92d08e, 0x3f21919e, 0x3f3881d3 ),
	VERT( 0x428cb2f7, 0x421f600a, 0x426ab4d7 ),
	NORM( 0xbefdb17d, 0x3e872d5e, 0x3f53d7f5 ),
	VERT( 0x427a0e4d, 0x428041d6, 0x42099135 ),
	NORM( 0xbeab26ca, 0x3f2ab514, 0x3f2a8129 ),
	VERT( 0x427000af, 0x428eb8d4, 0x41c8b391 ),
	NORM( 0xbf404b90, 0x3f1ac212, 0x3e87c59e ),
	VERT( 0x427001ac, 0x425322e5, 0x40d8b410 ),
	NORM( 0xbecc5017, 0x3cee27db, 0xbf6a9db3 ),
	VERT( 0x427a496f, 0x421f6353, 0x4127631d ),
	NORM( 0x3e3e5f64, 0xbec84f30, 0xbf66bce1 ),
	VERT( 0x428c9562, 0x417e9e69, 0x42099480 ),
	NORM( 0x3db3ec5a, 0xbf7da204, 0xbdd3be36 ),
	VERT( 0x428c9562, 0x417e9e69, 0x42099480 ),
	NORM( 0x3eb7e3f6, 0xbf19b4c4, 0xbf36e944 ),
	VERT( 0x4290798f, 0x42060e1d, 0x427c2164 ),
	NORM( 0xbf12c2de, 0x3e12cc09, 0x3f4e8500 ),
	VERT( 0x428083df, 0x429da186, 0x419af16c ),
	NORM( 0xbf3c14e3, 0x3e7c1837, 0x3f21d4c9 ),
	VERT( 0x42acd05e, 0x4237e298, 0x418fa1e1 ),
	NORM( 0xbe31ce97, 0xbf3bf2d0, 0xbf2808b1 ),
	VERT( 0x4298cab8, 0x4119b3cf, 0x42717cae ),
	NORM( 0xbf30a211, 0xbeb0bf70, 0xbf22dedc ),
	VERT( 0x4298d882, 0x41bd8d9f, 0x42952c02 ),
	NORM( 0xbf303eab, 0x3f2316d7, 0x3eb17d75 ),
	VERT( 0x429564dc, 0x41af685e, 0x4290550b ),
	NORM( 0xbf57fbe1, 0x3f035d0e, 0x3e2185ab ),
	VERT( 0x4298d5b4, 0x41d71347, 0x42866a51 ),
	NORM( 0xbf66fafb, 0xbbbb56af, 0x3edcbe53 ),
	VERT( 0xc1afee1e, 0xc1ad7c05, 0x42f1f3ec ),
	NORM( 0x3b41db6b, 0x3f713791, 0x3eab7621 ),
	VERT( 0xbfd866fe, 0xc216903e, 0x42d1fe26 ),
	NORM( 0x3f5f354c, 0xbd63ad71, 0xbef9175e ),
	VERT( 0xc1472a04, 0xc229ddcb, 0x42c87123 ),
	NORM( 0x3ea4c736, 0xbf617d1d, 0xbeb1cbd7 ),
	VERT( 0xc1472a04, 0xc1afd134, 0x42f16bbc ),
	NORM( 0x3e21ebc6, 0x3f752800, 0x3e76705f ),
	VERT( 0xbfd866fe, 0xc1dc29f4, 0x42e63bc7 ),
	NORM( 0x3f38b0e0, 0x3f2a657c, 0xbe439053 ),
	VERT( 0x40d27b7e, 0xc2501dea, 0x42e785de ),
	NORM( 0x3e4ffbbd, 0xbf2c2fb1, 0xbf362a66 ),
	VERT( 0x42062dce, 0xc133b0ce, 0xc10cb3b5 ),
	NORM( 0x3f725a4e, 0x3c38cac7, 0xbea4d642 ),
	VERT( 0x42062dce, 0xc133b0ce, 0xc10cb3b5 ),
	NORM( 0xb24fe87e, 0xbf3504f4, 0xbf3504f3 ),
	VERT( 0x42379e13, 0x3fbd17d1, 0x3fb7561c ),
	NORM( 0x3f48dc9a, 0xbe93767b, 0xbf0c8cc0 ),
	VERT( 0x4206f0e8, 0x4147145a, 0xc1822eae ),
	NORM( 0x3d8ecdb5, 0x3f2d6193, 0xbf3b800f ),
	VERT( 0x4206f0e8, 0x4147145a, 0xc1822eae ),
	NORM( 0x3f3235d5, 0xbebd5d34, 0xbf1d8501 ),
	VERT( 0x422299ed, 0x4178836d, 0xc14c1ed8 ),
	NORM( 0x3f0aca84, 0x3f0b5287, 0xbf23e5b3 ),
	VERT( 0x422299ed, 0x4178836d, 0xc14c1ed8 ),
	NORM( 0x3f0ef329, 0xbef5ac58, 0xbf2d3dbf ),
	VERT( 0x41e99e93, 0x410ae89c, 0xc1a6ad94 ),
	NORM( 0x3f6482e9, 0xbdf5f5dd, 0xbede787b ),
	VERT( 0x41e99e93, 0x410ae89c, 0xc1a6ad94 ),
	NORM( 0x3e58455d, 0x3f28d5a7, 0xbf38aead ),
	VERT( 0x421f1ab5, 0xc1e7b188, 0x410efe8d ),
	NORM( 0x3f080b06, 0xbf42bf9b, 0xbebecd3c ),
	VERT( 0x421f1ab5, 0xc1e7b188, 0x410efe8d ),
	NORM( 0x3f725a4e, 0x3c38cac6, 0xbea4d641 ),
	VERT( 0x422f41b9, 0xc181228b, 0x4144fc11 ),
	NORM( 0x3f4e222b, 0xbee2af3a, 0x3ec9f9bd ),
	VERT( 0x422f41b9, 0xc181228b, 0x4144fc11 ),
	NORM( 0x3f35203b, 0xbeb7e262, 0xbf1bcec7 ),
	VERT( 0x4245299d, 0xc12bf46a, 0x415015d0 ),
	NORM( 0x3f5ce41a, 0xbec3a5e0, 0x3ea964ff ),
	VERT( 0x4245299d, 0xc12bf46a, 0x415015d0 ),
	NORM( 0x3f0ef329, 0xbef5ac57, 0xbf2d3dbf ),
	VERT( 0x41df3956, 0x4098a06f, 0xc1c65a5d ),
	NORM( 0x3e0c5958, 0xbdb855af, 0xbf7c88fa ),
	VERT( 0x41df3956, 0x4098a06f, 0xc1c65a5d ),
	NORM( 0x3f725a4e, 0x3c38cac7, 0xbea4d642 ),
	VERT( 0x4222f71f, 0xc1c0584b, 0x413e3e09 ),
	NORM( 0x3f679b25, 0xbdc55628, 0xbed4790d ),
	VERT( 0x4222f71f, 0xc1c0584b, 0x413e3e09 ),
	NORM( 0x3f62d01c, 0xbeb54a44, 0x3e994d4b ),
	VERT( 0x4202bef6, 0x413775c2, 0xc18a33ea ),
	NORM( 0x3e3ba2b8, 0x3f29fc71, 0xbf3994b8 ),
	VERT( 0x4202bef6, 0x413775c2, 0xc18a33ea ),
	NORM( 0x3f493173, 0xbe8d623e, 0xbf0da21b ),
	VERT( 0x423c4832, 0xc02b41a6, 0x40ae69fe ),
	NORM( 0x3f0ef329, 0xbef5ac57, 0xbf2d3dbf ),
	VERT( 0x423c4832, 0xc02b41a6, 0x40ae69fe ),
	NORM( 0x3f7a3e3f, 0x3dceb03d, 0xbe3d9abe ),
	VERT( 0xc1af9869, 0xc2093737, 0x430a551d ),
	NORM( 0x3bac5a0d, 0x3f53f144, 0x3f0f93eb ),
	VERT( 0xc1ae54ed, 0x41f9fce9, 0x422eefab ),
	NORM( 0x2f1a3617, 0x3f3504f4, 0x3f3504f2 ),
	VERT( 0xc1b0548e, 0x41455edb, 0xc20170d9 ),
	NORM( 0xb9d17ca2, 0xbbf9d0f4, 0xbf7ffe17 ),
	VERT( 0xc1b0544c, 0x4235b51d, 0xc034efbd ),
	NORM( 0xb9413f40, 0x3f2bc2b0, 0xbf3dd3bd ),
	VERT( 0xc1b0544d, 0x42040bee, 0xc1572969 ),
	NORM( 0xba14d39d, 0x3f2b5c80, 0xbf3e2ffe ),
	VERT( 0xc1b045aa, 0x4279d0b6, 0x41779ecc ),
	NORM( 0xb93f0a7a, 0x3f7bcf55, 0x3e3882e8 ),
	VERT( 0xc1b11c48, 0xc13dbd55, 0x42bf6208 ),
	NORM( 0x3bba748b, 0x3f4aa89e, 0x3f1c685a ),
	VERT( 0xc1aff937, 0xc1a7e09a, 0x42e12b7d ),
	NORM( 0x395b7ff7, 0x3f7c3173, 0xbe2fefcd ),
	VERT( 0xc1b03ae5, 0xc230831a, 0x42b2e217 ),
	NORM( 0xbc4abf69, 0xbf6993b7, 0xbed1743b ),
	VERT( 0xc154b69c, 0xc1aa27ae, 0x42e0ecd8 ),
	NORM( 0x3e8cb8ff, 0x3f75bef6, 0x3d5efafb ),
	VERT( 0xc154b69c, 0xc1aa27ae, 0x42e0ecd8 ),
	NORM( 0x3de3f8ef, 0x3f6893a5, 0xbece3927 ),
	VERT( 0xc154b69c, 0xc22bf56f, 0x42b57c0c ),
	NORM( 0x3efddd2d, 0xbf2d1ac6, 0xbf0b7eec ),
	VERT( 0xc154b69c, 0xc22bf56f, 0x42b57c0c ),
	NORM( 0x3e9e851c, 0xbf7333e0, 0xbd24fdca ),
	VERT( 0xc08376d1, 0xc1d0f002, 0x42d6e7a3 ),
	NORM( 0x3edbbbcb, 0x3f50aa6f, 0xbec73cca ),
	VERT( 0xc08376d1, 0xc1d0f002, 0x42d6e7a3 ),
	NORM( 0x3f519140, 0x3f0dec77, 0xbe19a1dc ),
	VERT( 0xc08376d1, 0xc20dff8d, 0x42c423dd ),
	NORM( 0x3f6b638a, 0x3e13277b, 0xbebb58c5 ),
	VERT( 0xc08376d1, 0xc20dff8d, 0x42c423dd ),
	NORM( 0x3f6216b3, 0xbecba38a, 0xbe7ea4d3 ),
	VERT( 0xc1572a67, 0xc1b29e55, 0x42dc577e ),
	NORM( 0x3ebd784c, 0x3f54b17a, 0x3ed4d161 ),
	VERT( 0xc1572a67, 0xc2295be5, 0x42b45120 ),
	NORM( 0x3eb28055, 0xbf6fed0a, 0xbc1b072d ),
	VERT( 0xc092b809, 0xc20f2d91, 0x42c1152a ),
	NORM( 0x3f5423bc, 0xbf0ce253, 0x3dd14ca7 ),
	VERT( 0xc092b809, 0xc1d40215, 0x42d3ab6e ),
	NORM( 0x3f6a8cad, 0x3eb644e8, 0x3e3c5734 ),
	VERT( 0x40ff6a0e, 0x41f8cebb, 0x4234ff26 ),
	NORM( 0x3f67fb18, 0x3e991b6a, 0x3e991b6b ),
	VERT( 0x40deb3fc, 0x42125d85, 0x421f08ff ),
	NORM( 0x3f600f11, 0x3eee1406, 0x3e086e17 ),
	VERT( 0x407d98eb, 0x4226d485, 0x420a91fd ),
	NORM( 0x3f48d6bc, 0x3f1ea720, 0xbcac7aca ),
	VERT( 0xbf4e1b0e, 0x4238675d, 0x41f1fe4d ),
	NORM( 0x3f23eb73, 0x3f40aef7, 0xbe1cf0fb ),
	VERT( 0xc0e095f2, 0x4245e373, 0x41d70621 ),
	NORM( 0x3ee7ae45, 0x3f5aceab, 0xbe823c81 ),
	VERT( 0xc1640f4a, 0x424e5d84, 0x41c61200 ),
	NORM( 0x3e6f4876, 0x3f6b22a2, 0xbea3538a ),
	VERT( 0xc1b00c6d, 0x411ded4b, 0x4284f599 ),
	NORM( 0xb9dc87da, 0xbeac6923, 0x3f710c8c ),
	VERT( 0xc1640f4a, 0x4129c4dc, 0x42837aa6 ),
	NORM( 0x3e704e57, 0xbea27de2, 0x3f6b36f2 ),
	VERT( 0xc0e095f2, 0x414bad20, 0x427e7b3c ),
	NORM( 0x3ee7ae41, 0xbe823c7e, 0x3f5aceac ),
	VERT( 0xbf4e1b0e, 0x4180cebb, 0x4270ff25 ),
	NORM( 0x3f23eb6f, 0xbe1cf0eb, 0x3f40aefb ),
	VERT( 0x407d98eb, 0x41a3f469, 0x425f6c4f ),
	NORM( 0x3f48d6b4, 0xbcac78ee, 0x3f1ea72b ),
	VERT( 0x40deb3fc, 0x41cce26f, 0x424af54c ),
	NORM( 0x3f600f10, 0x3e086e33, 0x3eee1406 ),
	VERT( 0x40d95ded, 0x42039c17, 0x423c33e0 ),
	NORM( 0xbb4f891f, 0x3f3504b6, 0x3f3504b9 ),
	VERT( 0x40d95ded, 0x42039c17, 0x423c33e0 ),
	NORM( 0x3f67fb18, 0x3e991b67, 0x3e991b6c ),
	VERT( 0x40b9f6d1, 0x4218b15b, 0x42271e9c ),
	NORM( 0xbb4881ce, 0x3f34debd, 0x3f352ab3 ),
	VERT( 0x40b9f6d1, 0x4218b15b, 0x42271e9c ),
	NORM( 0x3f6011ac, 0x3eee0648, 0x3e088985 ),
	VERT( 0x403bcab5, 0x422c56ce, 0x4213792a ),
	NORM( 0x3f48e071, 0x3f1e9b3c, 0xbcaaffed ),
	VERT( 0x403bcab5, 0x422c56ce, 0x4213792a ),
	NORM( 0xbb33e073, 0x3f34bb50, 0x3f354e1f ),
	VERT( 0xbfd24104, 0x423d35b1, 0x42029a46 ),
	NORM( 0x3f23fed7, 0x3f40a13c, 0xbe1cba74 ),
	VERT( 0xbfd24104, 0x423d35b1, 0x42029a46 ),
	NORM( 0xbb130359, 0x3f349cd4, 0x3f356c9b ),
	VERT( 0xc0f36ee0, 0x424a27b1, 0x41eb508c ),
	NORM( 0xbad02c6c, 0x3f348552, 0x3f35841d ),
	VERT( 0xc0f36ee0, 0x424a27b1, 0x41eb508c ),
	NORM( 0x3ee7e869, 0x3f5ac2c4, 0xbe8224ff ),
	VERT( 0xc168da4d, 0x42524af5, 0x41db0a07 ),
	NORM( 0x3e6fd181, 0x3f6b1c44, 0xbea345f8 ),
	VERT( 0xc168da4d, 0x42524af5, 0x41db0a07 ),
	NORM( 0xba580671, 0x3f347665, 0x3f359309 ),
	VERT( 0xc1b00eec, 0x41489aa5, 0x4286d4a7 ),
	NORM( 0xb5f8d0fb, 0x3f359829, 0x3f347146 ),
	VERT( 0xc1b00eec, 0x41489aa5, 0x4286d4a7 ),
	NORM( 0xb9f8fa4c, 0xbeac6906, 0x3f710c91 ),
	VERT( 0xc168da4d, 0x4153b4ee, 0x4285715e ),
	NORM( 0x3e70eba8, 0xbea26f40, 0x3f6b2f6a ),
	VERT( 0xc168da4d, 0x4153b4ee, 0x4285715e ),
	NORM( 0xba57fea0, 0x3f3592ff, 0x3f347670 ),
	VERT( 0xc0f36ee0, 0x417441f9, 0x42815fbd ),
	NORM( 0xbad0312d, 0x3f35841f, 0x3f348550 ),
	VERT( 0xc0f36ee0, 0x417441f9, 0x42815fbd ),
	NORM( 0x3ee7e865, 0xbe8224fc, 0x3f5ac2c5 ),
	VERT( 0xbfd24104, 0x419404fd, 0x4275cd79 ),
	NORM( 0xbb1302ea, 0x3f356c9e, 0x3f349cd1 ),
	VERT( 0xbfd24104, 0x419404fd, 0x4275cd79 ),
	NORM( 0x3f23fed6, 0xbe1cba60, 0x3f40a13e ),
	VERT( 0x403bcab5, 0x41b5c2c2, 0x4264ee96 ),
	NORM( 0xbb33e46f, 0x3f354e22, 0x3f34bb4e ),
	VERT( 0x403bcab5, 0x41b5c2c2, 0x4264ee96 ),
	NORM( 0x3f48e06a, 0xbcaafdd2, 0x3f1e9b46 ),
	VERT( 0x40b9f6d1, 0x41dd0da9, 0x42514923 ),
	NORM( 0xbb4885b1, 0x3f352ab1, 0x3f34debe ),
	VERT( 0x40b9f6d1, 0x41dd0da9, 0x42514923 ),
	NORM( 0x3f6011aa, 0x3e08899b, 0x3eee064c ),
	VERT( 0xc04303d1, 0x42038587, 0x423c1d50 ),
	NORM( 0xbb4f8920, 0x3f3504b5, 0x3f3504ba ),
	VERT( 0xc04303d1, 0x42038587, 0x423c1d50 ),
	NORM( 0xbf004d3a, 0x3f1ca4dc, 0x3f1ca4dd ),
	VERT( 0xc06c7771, 0x42116fb9, 0x422e331e ),
	NORM( 0xbb487ee6, 0x3f34deb4, 0x3f352abb ),
	VERT( 0xc06c7771, 0x42116fb9, 0x422e331e ),
	NORM( 0xbef7bc37, 0x3f052bc8, 0x3f342970 ),
	VERT( 0xc0b2ff91, 0x421e6729, 0x42213bae ),
	NORM( 0xbb33d594, 0x3f34bb43, 0x3f354e2c ),
	VERT( 0xc0b2ff91, 0x421e6729, 0x42213bae ),
	NORM( 0xbeddc860, 0x3edecee5, 0x3f4a0f5b ),
	VERT( 0xc109d4ac, 0x422989a0, 0x42161937 ),
	NORM( 0xbb12ed94, 0x3f349cc5, 0x3f356caa ),
	VERT( 0xc109d4ac, 0x422989a0, 0x42161937 ),
	NORM( 0xbeb4a4b9, 0x3eb9bde4, 0x3f5ccd00 ),
	VERT( 0xc148d157, 0x423214dc, 0x420d8dfa ),
	NORM( 0xbacfead8, 0x3f348545, 0x3f35842a ),
	VERT( 0xc148d157, 0x423214dc, 0x420d8dfa ),
	NORM( 0xbe7e9747, 0x3e9db2cf, 0x3f6b174a ),
	VERT( 0xc1891574, 0x423773d0, 0x42082f06 ),
	NORM( 0xbe034cf0, 0x3e8c6d61, 0x3f73fc18 ),
	VERT( 0xc1891574, 0x423773d0, 0x42082f06 ),
	NORM( 0xba576436, 0x3f34765d, 0x3f359312 ),
	VERT( 0xc1b070dd, 0x419b8488, 0x4271e091 ),
	NORM( 0x3a039208, 0x3f5ad79c, 0x3f04d4ba ),
	VERT( 0xc1891574, 0x419f2e7a, 0x42700b99 ),
	NORM( 0xbe0317aa, 0x3f73f935, 0x3e8c8de4 ),
	VERT( 0xc1891574, 0x419f2e7a, 0x42700b99 ),
	NORM( 0xba575aff, 0x3f359306, 0x3f347668 ),
	VERT( 0xc148d157, 0x41a9ec62, 0x426aaca4 ),
	NORM( 0xbacfefa4, 0x3f35842c, 0x3f348543 ),
	VERT( 0xc148d157, 0x41a9ec62, 0x426aaca4 ),
	NORM( 0xbe7e9711, 0x3f6b1742, 0x3e9db314 ),
	VERT( 0xc109d4ac, 0x41bb02de, 0x42622167 ),
	NORM( 0xbb12ed23, 0x3f356cae, 0x3f349cc1 ),
	VERT( 0xc109d4ac, 0x41bb02de, 0x42622167 ),
	NORM( 0xbeb4a4a9, 0x3f5cccfe, 0x3eb9bdfc ),
	VERT( 0xc0b2ff91, 0x41d147cc, 0x4256fef0 ),
	NORM( 0xbeddc82c, 0x3f4a0f5d, 0x3edecf10 ),
	VERT( 0xc0b2ff91, 0x41d147cc, 0x4256fef0 ),
	NORM( 0xbb33d990, 0x3f354e2e, 0x3f34bb41 ),
	VERT( 0xc06c7771, 0x41eb36aa, 0x424a0780 ),
	NORM( 0xbef7bc10, 0x3f342972, 0x3f052bd7 ),
	VERT( 0xc06c7771, 0x41eb36aa, 0x424a0780 ),
	NORM( 0xbb4882cc, 0x3f352ab9, 0x3f34deb6 ),
	VERT( 0xc08b62c7, 0x420160b6, 0x4239f87e ),
	NORM( 0x3d55dca8, 0x3f34c6de, 0x3f34c49d ),
	VERT( 0xc09ea92f, 0x420e518d, 0x422d07a7 ),
	NORM( 0x3d4e0fbf, 0x3f3741b5, 0x3f324a1a ),
	VERT( 0xc0d72c1f, 0x421a60a0, 0x4220f894 ),
	NORM( 0x3d37e0e9, 0x3f398dc0, 0x3f2ffe5c ),
	VERT( 0xc11888d9, 0x4224bb8f, 0x42169da5 ),
	NORM( 0x3d14fe87, 0x3f3b8204, 0x3f2e0a5b ),
	VERT( 0xc1531cca, 0x422cadb1, 0x420eab83 ),
	NORM( 0x3ccff2ac, 0x3f3cfca2, 0x3f2c8ff2 ),
	VERT( 0xc18ba9f6, 0x4231ac66, 0x4209acce ),
	NORM( 0x3c4f3851, 0x3f3de643, 0x3f2ba665 ),
	VERT( 0xc1b04418, 0x419ec1c3, 0x426bf853 ),
	NORM( 0xb98e623e, 0x3f2b5007, 0x3f3e3b3d ),
	VERT( 0xc18ba9f6, 0x41a22a0b, 0x426a442f ),
	NORM( 0x3c519d5a, 0x3f2b967b, 0x3f3df47a ),
	VERT( 0xc1531cca, 0x41ac2777, 0x42654579 ),
	NORM( 0x3cd1f17b, 0x3f2c7d72, 0x3f3d0cf8 ),
	VERT( 0xc11888d9, 0x41bc0bba, 0x425d5357 ),
	NORM( 0x3d16276a, 0x3f2dfe8d, 0x3f3b8c0c ),
	VERT( 0xc0d72c1f, 0x41d0c197, 0x4252f869 ),
	NORM( 0x3d38e39d, 0x3f2ff95f, 0x3f39917a ),
	VERT( 0xc09ea92f, 0x41e8dfbd, 0x4246e956 ),
	NORM( 0x3d4ea55a, 0x3f324a40, 0x3f3740e7 ),
	VERT( 0xc0cc3463, 0x4208b33b, 0x42414e4e ),
	NORM( 0x3f0e2789, 0x3f168a99, 0x3f168ce3 ),
	VERT( 0xc0dd3bef, 0x42142220, 0x4235df69 ),
	NORM( 0x3f094830, 0x3f308d59, 0x3ef9268a ),
	VERT( 0xc10794bd, 0x421ec98f, 0x422b37fb ),
	NORM( 0x3ef60ec5, 0x3f48c9a1, 0x3ec8d732 ),
	VERT( 0xc12f4afc, 0x4227efa9, 0x422211e1 ),
	NORM( 0x3ec8c879, 0x3f5d94aa, 0x3e9f7e46 ),
	VERT( 0xc1630be5, 0x422ef4d1, 0x421b0cb9 ),
	NORM( 0x3e8de3dc, 0x3f6d8284, 0x3e7fdf0b ),
	VERT( 0xc18fa84a, 0x42335e8d, 0x4216a2fd ),
	NORM( 0x3e12dc5d, 0x3f777fba, 0x3e589a0b ),
	VERT( 0xc1affecd, 0x4234dfe3, 0x421521a7 ),
	NORM( 0x3a75c564, 0x3f7ae0f1, 0x3e4bcc16 ),
	VERT( 0xc1affecd, 0x41b90d28, 0x426d7af4 ),
	NORM( 0x3a7a086a, 0x3e4b1cf9, 0x3f7ae9d1 ),
	VERT( 0xc18fa84a, 0x41bc0fd2, 0x426bf99f ),
	NORM( 0x3e12fb02, 0x3e57f197, 0x3f7787ca ),
	VERT( 0xc1630be5, 0x41c4e34c, 0x42678fe2 ),
	NORM( 0x3e8df6e2, 0x3e7f7e89, 0x3f6d862b ),
	VERT( 0xc12f4afc, 0x41d2ed9c, 0x42608aba ),
	NORM( 0x3ec8de6b, 0x3e9f597a, 0x3f5d964f ),
	VERT( 0xc10794bd, 0x41e539d0, 0x425764a1 ),
	NORM( 0x3ef621cc, 0x3ec8befc, 0x3f48c9da ),
	VERT( 0xc0dd3bef, 0x41fa88ab, 0x424cbd33 ),
	NORM( 0x3f094db3, 0x3ef919b2, 0x3f308d98 ),
	VERT( 0xc0b54cab, 0x4204ab7c, 0x423d4565 ),
	NORM( 0x3f2a2b52, 0x3f073a7a, 0x3f073f32 ),
	VERT( 0xc0b54cab, 0x4204ab7c, 0x423d4565 ),
	NORM( 0x3f64c8fb, 0x3ea273f2, 0x3ea26d5f ),
	VERT( 0xc0c71f5b, 0x4210a2c3, 0x42314e1e ),
	NORM( 0x3f5cf096, 0x3ef6568d, 0x3e1d87d8 ),
	VERT( 0xc0c71f5b, 0x4210a2c3, 0x42314e1e ),
	NORM( 0x3f244efa, 0x3f265fc8, 0x3ed0682b ),
	VERT( 0xc0fb6078, 0x421bc948, 0x42262799 ),
	NORM( 0x3f45fbf7, 0x3f224a30, 0x3b036d1c ),
	VERT( 0xc0fb6078, 0x421bc948, 0x42262799 ),
	NORM( 0x3f13320a, 0x3f43687b, 0x3e96ccc9 ),
	VERT( 0xc1274031, 0x42255c83, 0x421c945e ),
	NORM( 0x3ef019d7, 0x3f5c5160, 0x3e4b543f ),
	VERT( 0xc1274031, 0x42255c83, 0x421c945e ),
	NORM( 0x3f2184a9, 0x3f43e688, 0xbe02e556 ),
	VERT( 0xc15d6a74, 0x422cb569, 0x42153b78 ),
	NORM( 0x3ee42523, 0x3f5db445, 0xbe683b3f ),
	VERT( 0xc15d6a74, 0x422cb569, 0x42153b78 ),
	NORM( 0x3ea99666, 0x3f6f6546, 0x3e00bbc6 ),
	VERT( 0xc18e3f07, 0x423153ca, 0x42109d17 ),
	NORM( 0x3e2fad74, 0x3f7b5a45, 0x3da5b078 ),
	VERT( 0xc18e3f07, 0x423153ca, 0x42109d17 ),
	NORM( 0x3e6ba0d9, 0x3f6df4c6, 0xbe938d15 ),
	VERT( 0xc18e3f07, 0x41b0065c, 0x4269edb3 ),
	NORM( 0x3e6bc652, 0xbe9429f1, 0x3f6dda14 ),
	VERT( 0xc18e3f07, 0x41b0065c, 0x4269edb3 ),
	NORM( 0x3e2fade7, 0x3da41631, 0x3f7b5e74 ),
	VERT( 0xc15d6a74, 0x41b9431f, 0x42654f52 ),
	NORM( 0x3ee44001, 0xbe68f012, 0x3f5da17f ),
	VERT( 0xc15d6a74, 0x41b9431f, 0x42654f52 ),
	NORM( 0x3ea9bfc0, 0x3dff9e7f, 0x3f6f65de ),
	VERT( 0xc1274031, 0x41c7f4ea, 0x425df66d ),
	NORM( 0x3f219427, 0xbe036cde, 0x3f43d415 ),
	VERT( 0xc1274031, 0x41c7f4ea, 0x425df66d ),
	NORM( 0x3ef049a1, 0x3e4a9dc9, 0x3f5c4edb ),
	VERT( 0xc0fb6078, 0x41db1b61, 0x42546331 ),
	NORM( 0x3f46096a, 0x3add4857, 0x3f2239d6 ),
	VERT( 0xc0fb6078, 0x41db1b61, 0x42546331 ),
	NORM( 0x3f1346bc, 0x3e96905f, 0x3f436489 ),
	VERT( 0xc0c71f5b, 0x41f1686a, 0x42493cac ),
	NORM( 0x3f245ae5, 0x3ed0488d, 0x3f265de9 ),
	VERT( 0xc0c71f5b, 0x41f1686a, 0x42493cac ),
	NORM( 0x3f5cf85e, 0x3e1d6884, 0x3ef63fa3 ),
	VERT( 0x4222da3d, 0x41a3b744, 0x40d06fe3 ),
	NORM( 0x3ef02266, 0xbf5a6516, 0xbe6a0b66 ),
	VERT( 0x423572f4, 0x410fff52, 0x418fd394 ),
	NORM( 0x3ef0226a, 0xbf5a6520, 0xbe6a0ac7 ),
	VERT( 0x4228dc51, 0x4186158c, 0x41237b62 ),
	NORM( 0x3ef02269, 0xbf5a6524, 0xbe6a0a87 ),
	VERT( 0x423bd968, 0x40aa540c, 0x41ad3e3a ),
	NORM( 0x3ef0226a, 0xbf5a6524, 0xbe6a0a86 ),
	VERT( 0x422f70e0, 0x414b42c4, 0x416463b8 ),
	NORM( 0x3ef0226a, 0xbf5a6526, 0xbe6a0a66 ),
	VERT( 0x42415dc0, 0x41f4722e, 0x4212a908 ),
	NORM( 0xbe8d2054, 0x3f2e01c3, 0xbf2e01cd ),
	VERT( 0x4247c434, 0x41d7078a, 0x42215e5b ),
	NORM( 0xbe8d2057, 0x3f2e01c7, 0xbf2e01c8 ),
	VERT( 0x423b5bac, 0x420909f3, 0x4203d82c ),
	NORM( 0xbe8d2055, 0x3f2e01c8, 0xbf2e01c8 ),
	VERT( 0x422ec508, 0x422814e6, 0x41c99a74 ),
	NORM( 0xbe8d2054, 0x3f2e01c6, 0xbf2e01ca ),
	VERT( 0x4234c71c, 0x42194409, 0x41e73c2c ),
	NORM( 0xbe8d2058, 0x3f2e01c8, 0xbf2e01c7 ),
	VERT( 0x42429c6a, 0x41ee4e8a, 0x4215bada ),
	NORM( 0x3e8d2058, 0xbf2e01c6, 0x3f2e01c9 ),
	VERT( 0x423605c7, 0x42163238, 0x41ed5fd0 ),
	NORM( 0x3e8d2059, 0xbf2e01c9, 0x3f2e01c6 ),
	VERT( 0x424902de, 0x41d0e3e6, 0x4224702d ),
	NORM( 0x3e8d205b, 0xbf2e01ca, 0x3f2e01c5 ),
	VERT( 0x423003b3, 0x42250314, 0x41cfbe17 ),
	NORM( 0x3e8d2052, 0xbf2e01c4, 0x3f2e01cc ),
	VERT( 0x423c9a56, 0x4205f822, 0x4206e9fe ),
	NORM( 0x3e8d2055, 0xbf2e01c7, 0x3f2e01c9 ),
	VERT( 0x422e3236, 0x41578a08, 0x41581c72 ),
	NORM( 0x3e27a699, 0xbdcd57d3, 0xbf7b3ce7 ),
	VERT( 0x4234344a, 0x411c4698, 0x4189aff1 ),
	NORM( 0x3e27a670, 0xbdcd5742, 0xbf7b3ceb ),
	VERT( 0x42279da6, 0x418c3930, 0x4117341b ),
	NORM( 0x3e27a68a, 0xbdcd57a8, 0xbf7b3ce9 ),
	VERT( 0x42219b92, 0x41a9dae8, 0x40b7e155 ),
	NORM( 0x3e27a624, 0xbdcd5610, 0xbf7b3cf2 ),
	VERT( 0x423a9abe, 0x40c2e29c, 0x41a71a96 ),
	NORM( 0x3e27a68a, 0xbdcd57b0, 0xbf7b3ce9 ),
	VERT( 0x42986525, 0x421b9096, 0x4128cfe9 ),
	NORM( 0x3ee6d5f8, 0xbf6354a7, 0x3db91f25 ),
	VERT( 0x42a1b180, 0x41db6992, 0x41b01f8f ),
	NORM( 0x3ee6d5fd, 0xbf6354a7, 0x3db91ee1 ),
	VERT( 0x42a4e4ba, 0x41bdfeee, 0x41cd8a34 ),
	NORM( 0x3ee6d5fb, 0xbf6354a7, 0x3db91f02 ),
	VERT( 0x429b662e, 0x420cbfbb, 0x41641357 ),
	NORM( 0x3ee6d603, 0xbf6354a8, 0x3db91e14 ),
	VERT( 0x429eb076, 0x41f90b4a, 0x41927dd8 ),
	NORM( 0x3ee6d5f5, 0xbf6354a7, 0x3db91f80 ),
	VERT( 0x42996491, 0x423ecb0e, 0x41993e91 ),
	NORM( 0x3e8d2052, 0xbf2e01c5, 0x3f2e01cc ),
	VERT( 0x42a5e427, 0x420239ee, 0x42093069 ),
	NORM( 0x3e8d205b, 0xbf2e01ca, 0x3f2e01c5 ),
	VERT( 0x429c659b, 0x422ffa32, 0x41b6e049 ),
	NORM( 0x3e8d2059, 0xbf2e01c9, 0x3f2e01c6 ),
	VERT( 0x42a2b0ed, 0x4210ef41, 0x41f4f62c ),
	NORM( 0x3e8d2058, 0xbf2e01c6, 0x3f2e01c9 ),
	VERT( 0x429fafe4, 0x421fc01d, 0x41d75474 ),
	NORM( 0x3e8d2055, 0xbf2e01c7, 0x3f2e01c9 ),
	VERT( 0x42a21198, 0x42140113, 0x41eed289 ),
	NORM( 0xbe8d2053, 0x3f2e01c3, 0xbf2e01cd ),
	VERT( 0x429bc646, 0x42330c04, 0x41b0bca6 ),
	NORM( 0xbe8d2057, 0x3f2e01c8, 0xbf2e01c7 ),
	VERT( 0x429f108e, 0x4222d1ee, 0x41d130d2 ),
	NORM( 0xbe8d2056, 0x3f2e01c8, 0xbf2e01c8 ),
	VERT( 0x42a544d2, 0x42054bc0, 0x42061e97 ),
	NORM( 0xbe8d2056, 0x3f2e01c7, 0xbf2e01c9 ),
	VERT( 0x4298c53c, 0x4241dce0, 0x41931aed ),
	NORM( 0xbe8d2054, 0x3f2e01c6, 0xbf2e01ca ),
	VERT( 0x4297c5cf, 0x421ea268, 0x411c88a2 ),
	NORM( 0x3c80d743, 0x3e3d6ef7, 0xbf7b8c95 ),
	VERT( 0x42a1122b, 0x41e18d34, 0x41a9fbed ),
	NORM( 0x3c80d6e7, 0x3e3d6f04, 0xbf7b8c94 ),
	VERT( 0x42a44565, 0x41c42290, 0x41c76691 ),
	NORM( 0x3c80d72b, 0x3e3d6ef7, 0xbf7b8c95 ),
	VERT( 0x429e1121, 0x41ff2eec, 0x418c5a34 ),
	NORM( 0x3c80d7c3, 0x3e3d6edb, 0xbf7b8c96 ),
	VERT( 0x429ac6da, 0x420fd18d, 0x4157cc10 ),
	NORM( 0x3c80d591, 0x3e3d6f5b, 0xbf7b8c91 ),
	VERT( 0xc2b06886, 0x42250314, 0x41cfbe17 ),
	NORM( 0xbe8d2050, 0xbf2e01c6, 0x3f2e01cb ),
	VERT( 0xc2f1cb3e, 0x423ecb0e, 0x41993e91 ),
	NORM( 0xbe8d2050, 0xbf2e01c7, 0x3f2e01ca ),
	VERT( 0xc2f0cbd2, 0x421b9096, 0x4128cfe9 ),
	NORM( 0xbe72db1a, 0xbf76e568, 0x3deef27a ),
	VERT( 0xc2a9d3cb, 0x41a3b744, 0x40d06fe3 ),
	NORM( 0xbef02267, 0xbf5a651d, 0xbe6a0af7 ),
	VERT( 0xc2fc1f37, 0x421a1938, 0x40fc68a7 ),
	NORM( 0xbf163c89, 0xbf493dd9, 0xbe46ab25 ),
	VERT( 0xc2fe2639, 0x4243cdb4, 0x418f3945 ),
	NORM( 0xbf624fdc, 0xbebb36bc, 0x3e9515fb ),
	VERT( 0xc2a93476, 0x41a9dae8, 0x40b7e155 ),
	NORM( 0xbe27a659, 0xbdcd56dd, 0xbf7b3ced ),
	VERT( 0xc2f02c7c, 0x421ea268, 0x411c88a2 ),
	NORM( 0x3e50deb4, 0x3dfcbaf2, 0xbf789e6c ),
	VERT( 0xc2f12be9, 0x4241dce0, 0x41931aed ),
	NORM( 0x3e8d204f, 0x3f2e01c6, 0xbf2e01cb ),
	VERT( 0xc2afc931, 0x422814e6, 0x41c99a74 ),
	NORM( 0x3e8d2055, 0x3f2e01c7, 0xbf2e01c9 ),
	VERT( 0xc2fd86e4, 0x4246df86, 0x418915a2 ),
	NORM( 0xbf00eaae, 0x3f129189, 0xbf25a1f1 ),
	VERT( 0xc2fb7fe3, 0x421d2b09, 0x40e3da1f ),
	NORM( 0xbe8d39a6, 0xbc9c6944, 0xbf760530 ),
	VERT( 0xc2b36990, 0x42163238, 0x41ed5fd0 ),
	NORM( 0xbe8d2057, 0xbf2e01c8, 0x3f2e01c8 ),
	VERT( 0xc2f4cc48, 0x422ffa32, 0x41b6e049 ),
	NORM( 0xbe8d2056, 0xbf2e01c8, 0x3f2e01c8 ),
	VERT( 0xc2f3ccdb, 0x420cbfbb, 0x41641357 ),
	NORM( 0xbe72db9e, 0xbf76e560, 0x3deef262 ),
	VERT( 0xc2acd4d5, 0x4186158c, 0x41237b62 ),
	NORM( 0xbef02268, 0xbf5a6525, 0xbe6a0a80 ),
	VERT( 0xc2ff2042, 0x420b485c, 0x413977c4 ),
	NORM( 0xbf163ccb, 0xbf493dac, 0xbe46aae2 ),
	VERT( 0xc30093a1, 0x4234fcd8, 0x41acdafe ),
	NORM( 0xbf624fe1, 0xbebb36b5, 0x3e9515e4 ),
	VERT( 0xc2ac3580, 0x418c3930, 0x4117341b ),
	NORM( 0xbe27a68a, 0xbdcd57ab, 0xbf7b3ce9 ),
	VERT( 0xc2f32d87, 0x420fd18d, 0x4157cc10 ),
	NORM( 0x3e50df37, 0x3dfcba7f, 0xbf789e67 ),
	VERT( 0xc2f42cf3, 0x42330c04, 0x41b0bca6 ),
	NORM( 0x3e8d205d, 0x3f2e01c8, 0xbf2e01c6 ),
	VERT( 0xc2b2ca3b, 0x42194409, 0x41e73c2c ),
	NORM( 0x3e8d2056, 0x3f2e01c8, 0xbf2e01c8 ),
	VERT( 0xc30043f7, 0x42380eaa, 0x41a6b75a ),
	NORM( 0xbf00ea9e, 0x3f129191, 0xbf25a1f7 ),
	VERT( 0xc2fe80ec, 0x420e5a2e, 0x412d307a ),
	NORM( 0xbe8d3934, 0xbc9c6e82, 0xbf760540 ),
	VERT( 0xc2b6b3d8, 0x4205f822, 0x4206e9fe ),
	NORM( 0xbe8d2054, 0xbf2e01c8, 0x3f2e01c8 ),
	VERT( 0xc2f81691, 0x421fc01d, 0x41d75474 ),
	NORM( 0xbe8d2057, 0xbf2e01c8, 0x3f2e01c7 ),
	VERT( 0xc2f71723, 0x41f90b4a, 0x41927dd8 ),
	NORM( 0xbe72db57, 0xbf76e563, 0x3deef2da ),
	VERT( 0xc2b01f1d, 0x414b42c4, 0x416463b8 ),
	NORM( 0xbef02269, 0xbf5a6525, 0xbe6a0a81 ),
	VERT( 0xc3013544, 0x41f61c8c, 0x417a601a ),
	NORM( 0xbf163c88, 0xbf493dd4, 0xbe46ab86 ),
	VERT( 0xc30238c5, 0x4224c2c2, 0x41cd4f28 ),
	NORM( 0xbf624fe7, 0xbebb3699, 0x3e9515e7 ),
	VERT( 0xc2af7fc8, 0x41578a08, 0x41581c72 ),
	NORM( 0xbe27a68d, 0xbdcd57a9, 0xbf7b3ce9 ),
	VERT( 0xc2f677ce, 0x41ff2eec, 0x418c5a34 ),
	NORM( 0x3e50df06, 0x3dfcba58, 0xbf789e6a ),
	VERT( 0xc2f7773b, 0x4222d1ee, 0x41d130d2 ),
	NORM( 0x3e8d2060, 0x3f2e01c7, 0xbf2e01c7 ),
	VERT( 0xc2b61483, 0x420909f3, 0x4203d82c ),
	NORM( 0x3e8d2054, 0x3f2e01c8, 0xbf2e01c8 ),
	VERT( 0xc301e91a, 0x4227d494, 0x41c72b85 ),
	NORM( 0xbf00ea92, 0x3f12919d, 0xbf25a1f6 ),
	VERT( 0xc300e59a, 0x41fc4030, 0x416e18d3 ),
	NORM( 0xbe8d398e, 0xbc9c6500, 0xbf760534 ),
	VERT( 0xc2bce81c, 0x41d3272e, 0x42234e88 ),
	NORM( 0xbe8d205b, 0xbf2e01c7, 0x3f2e01c7 ),
	VERT( 0xc2b9b4e2, 0x41ee4e8a, 0x4215bada ),
	NORM( 0xbe8d2057, 0xbf2e01c8, 0x3f2e01c7 ),
	VERT( 0xc2fe4ad4, 0x42035b92, 0x42080ec5 ),
	NORM( 0xbe8d205b, 0xbf2e01c8, 0x3f2e01c7 ),
	VERT( 0xc2fb179a, 0x4210ef41, 0x41f4f62c ),
	NORM( 0xbe8d2056, 0xbf2e01c8, 0x3f2e01c8 ),
	VERT( 0xc2fa182d, 0x41db6992, 0x41b01f8f ),
	NORM( 0xbe72db4b, 0xbf76e565, 0x3deef26c ),
	VERT( 0xc2fd4b67, 0x41c04236, 0x41cb46ec ),
	NORM( 0xbe72db4b, 0xbf76e565, 0x3deef260 ),
	VERT( 0xc2b65361, 0x40b3612c, 0x41aafaf2 ),
	NORM( 0xbef0226d, 0xbf5a6520, 0xbe6a0ab2 ),
	VERT( 0xc2b32027, 0x410fff52, 0x418fd394 ),
	NORM( 0xbef02268, 0xbf5a6521, 0xbe6a0abe ),
	VERT( 0xc302b5c9, 0x41d87ad4, 0x419ad1c5 ),
	NORM( 0xbf163c7f, 0xbf493de5, 0xbe46aada ),
	VERT( 0xc3044f66, 0x41bd5376, 0x41b5f923 ),
	NORM( 0xbf163c81, 0xbf493de5, 0xbe46aad0 ),
	VERT( 0xc30552e7, 0x42085e38, 0x42030c1f ),
	NORM( 0xbf624fcc, 0xbebb36ee, 0x3e95161e ),
	VERT( 0xc303b94a, 0x4215f1e7, 0x41eaf0e1 ),
	NORM( 0xbf624fc6, 0xbebb36fa, 0x3e951631 ),
	VERT( 0xc2b280d2, 0x411c4698, 0x4189aff1 ),
	NORM( 0xbe27a66e, 0xbdcd5745, 0xbf7b3ceb ),
	VERT( 0xc2b5b40c, 0x40cbefbc, 0x41a4d74e ),
	NORM( 0xbe27a67a, 0xbdcd575d, 0xbf7b3cea ),
	VERT( 0xc2fcac12, 0x41c665d8, 0x41c5234a ),
	NORM( 0x3e50df00, 0x3dfcbad1, 0xbf789e69 ),
	VERT( 0xc2f978d8, 0x41e18d34, 0x41a9fbed ),
	NORM( 0x3e50df0d, 0x3dfcbab5, 0xbf789e68 ),
	VERT( 0xc2fa7845, 0x42140113, 0x41eed289 ),
	NORM( 0x3e8d2063, 0x3f2e01c6, 0xbf2e01c7 ),
	VERT( 0xc2fdab7f, 0x42066d64, 0x4204fcf3 ),
	NORM( 0x3e8d2058, 0x3f2e01c7, 0xbf2e01c9 ),
	VERT( 0xc2bc48c7, 0x41d94ad2, 0x42203cb7 ),
	NORM( 0x3e8d2058, 0x3f2e01c7, 0xbf2e01c8 ),
	VERT( 0xc2b9158d, 0x41f4722e, 0x4212a908 ),
	NORM( 0x3e8d2059, 0x3f2e01c6, 0xbf2e01c9 ),
	VERT( 0xc30369a0, 0x421903b8, 0x41e4cd3d ),
	NORM( 0xbf00ead2, 0x3f129177, 0xbf25a1e6 ),
	VERT( 0xc305033d, 0x420b700a, 0x41fff49a ),
	NORM( 0xbf00eacd, 0x3f129177, 0xbf25a1e9 ),
	VERT( 0xc303ffbc, 0x41c3771a, 0x41afd580 ),
	NORM( 0xbe8d39c0, 0xbc9c6b80, 0xbf76052c ),
	VERT( 0xc302661f, 0x41de9e78, 0x4194ae22 ),
	NORM( 0xbe8d39b8, 0xbc9c6abc, 0xbf76052d ),
	VERT( 0xc0e2d8fb, 0xc2322b8b, 0xc1f2024f ),
	NORM( 0x3f800000, 0x32e8037c, 0xb2b99c63 ),
	VERT( 0xc152cb5e, 0xc1e8168b, 0xc16ff27b ),
	NORM( 0x3f800000, 0xb2399c64, 0x328b354b ),
	VERT( 0xc103b155, 0xc221ef28, 0xc2093d8b ),
	NORM( 0x3f6c835f, 0x3e8a8bd5, 0xbe8a8bd2 ),
	VERT( 0xc15d9fce, 0xc1d4d6bb, 0xc18b390e ),
	NORM( 0x3f6c835b, 0x3e8a8bde, 0xbe8a8bde ),
	VERT( 0xc17c7707, 0xc1c48523, 0xc19b8aa6 ),
	NORM( 0x3f3504f1, 0x3f000002, 0xbf000002 ),
	VERT( 0xc137b7d9, 0xc2142b8b, 0xc2170128 ),
	NORM( 0x3f3504f4, 0x3f000000, 0xbefffffe ),
	VERT( 0xc182ca35, 0xc20af924, 0xc220338f ),
	NORM( 0x3ec3ef19, 0x3f273d75, 0xbf273d73 ),
	VERT( 0xc1954f87, 0xc1b99dc1, 0xc1a67207 ),
	NORM( 0x3ec3ef1b, 0x3f273d74, 0xbf273d73 ),
	VERT( 0xc1b0b63e, 0xc207be62, 0xc2236e51 ),
	NORM( 0x32399c65, 0x3f3504f4, 0xbf3504f2 ),
	VERT( 0xc1b08881, 0xc1b5c98d, 0xc1aa463c ),
	NORM( 0xb2399c68, 0x3f3504f4, 0xbf3504f2 ),
	VERT( 0xc1dea247, 0xc20af924, 0xc220338f ),
	NORM( 0xbec3ef16, 0x3f273d75, 0xbf273d74 ),
	VERT( 0xc1cbc17b, 0xc1b99dc1, 0xc1a67207 ),
	NORM( 0xbec3ef1e, 0x3f273d73, 0xbf273d73 ),
	VERT( 0xc1e2d57e, 0xc1c48523, 0xc19b8aa6 ),
	NORM( 0xbf3504f0, 0x3f000003, 0xbf000002 ),
	VERT( 0xc202c848, 0xc2142b8b, 0xc2170128 ),
	NORM( 0xbf3504f0, 0x3f000003, 0xbf000001 ),
	VERT( 0xc1f2411b, 0xc1d4d6bb, 0xc18b390e ),
	NORM( 0xbf6c835b, 0x3e8a8be2, 0xbe8a8be1 ),
	VERT( 0xc20fc9ea, 0xc221ef28, 0xc2093d8b ),
	NORM( 0xbf6c835d, 0x3e8a8bdc, 0xbe8a8bd9 ),
	VERT( 0xc2145b20, 0xc2322b8b, 0xc1f2024f ),
	NORM( 0xbf800000, 0x32b99c63, 0xb2b99c63 ),
	VERT( 0xc1f7ab53, 0xc1e8168b, 0xc16ff27b ),
	NORM( 0xbf800000, 0x31b99c64, 0x00000000 ),
	VERT( 0xc20fc9ea, 0xc24267ee, 0xc1d18989 ),
	NORM( 0xbf6c835d, 0xbe8a8bdb, 0x3e8a8bd9 ),
	VERT( 0xc1f2411b, 0xc1fb565b, 0xc14972db ),
	NORM( 0xbf6c835b, 0xbe8a8be2, 0x3e8a8bdf ),
	VERT( 0xc1e2d57e, 0xc205d3f9, 0xc128cfab ),
	NORM( 0xbf3504f0, 0xbf000003, 0x3f000001 ),
	VERT( 0xc202c848, 0xc2502b8b, 0xc1b60250 ),
	NORM( 0xbf3504f0, 0xbf000003, 0x3f000002 ),
	VERT( 0xc1cbc17b, 0xc20b47aa, 0xc11300e7 ),
	NORM( 0xbec3ef14, 0xbf273d75, 0x3f273d74 ),
	VERT( 0xc1dea247, 0xc2595df2, 0xc1a39d80 ),
	NORM( 0xbec3ef15, 0xbf273d75, 0x3f273d74 ),
	VERT( 0xc1b0b63e, 0xc25c98b4, 0xc19d27fe ),
	NORM( 0x00000000, 0xbf3504f4, 0x3f3504f2 ),
	VERT( 0xc1b08881, 0xc20d31c4, 0xc10b5880 ),
	NORM( 0xb2399c65, 0xbf3504f3, 0x3f3504f3 ),
	VERT( 0xc182ca35, 0xc2595df2, 0xc1a39d80 ),
	NORM( 0x3ec3ef17, 0xbf273d75, 0x3f273d74 ),
	VERT( 0xc1954f87, 0xc20b47aa, 0xc11300e7 ),
	NORM( 0x3ec3ef14, 0xbf273d76, 0x3f273d74 ),
	VERT( 0xc17c7707, 0xc205d3f9, 0xc128cfab ),
	NORM( 0x3f3504f1, 0xbf000002, 0x3f000000 ),
	VERT( 0xc137b7d9, 0xc2502b8b, 0xc1b60250 ),
	NORM( 0x3f3504f4, 0xbf000000, 0x3efffffd ),
	VERT( 0xc103b155, 0xc24267ee, 0xc1d18989 ),
	NORM( 0x3f6c835e, 0xbe8a8bd5, 0x3e8a8bd4 ),
	VERT( 0xc15d9fce, 0xc1fb565b, 0xc14972db ),
	NORM( 0x3f6c835c, 0xbe8a8bdd, 0x3e8a8bdd ),
	VERT( 0xc0e2d8fb, 0xc1b4a037, 0xc10496df ),
	NORM( 0x3f800000, 0x328b354b, 0xb2399c64 ),
	VERT( 0xc152cb5e, 0xc17fd965, 0xbffcf64d ),
	NORM( 0x3f800000, 0x00000000, 0x32399c62 ),
	VERT( 0xc103b155, 0xc1942772, 0xc1458869 ),
	NORM( 0x3f6c835f, 0x3e8a8bd3, 0xbe8a8bd1 ),
	VERT( 0xc15d9fce, 0xc15959c3, 0xc08c3cd0 ),
	NORM( 0x3f6c835c, 0x3e8a8bdf, 0xbe8a8bdd ),
	VERT( 0xc17c7707, 0xc138b695, 0xc0cd8335 ),
	NORM( 0x3f3504f1, 0x3f000002, 0xbf000002 ),
	VERT( 0xc137b7d9, 0xc1714070, 0xc17c96df ),
	NORM( 0x3f3504f4, 0x3f000000, 0xbefffffe ),
	VERT( 0xc1954f87, 0xc122e7d1, 0xc0f920ba ),
	NORM( 0x3ec3ef1b, 0x3f273d74, 0xbf273d73 ),
	VERT( 0xc182ca35, 0xc14c76d2, 0xc190b03e ),
	NORM( 0x3ec3ef18, 0x3f273d75, 0xbf273d73 ),
	VERT( 0xc1b08881, 0xc11b3f69, 0xc10438c5 ),
	NORM( 0xb2399c65, 0x3f3504f4, 0xbf3504f2 ),
	VERT( 0xc1b0b63e, 0xc13f8bcc, 0xc19725c2 ),
	NORM( 0x00000000, 0x3f3504f4, 0xbf3504f2 ),
	VERT( 0xc1dea247, 0xc14c76d2, 0xc190b03e ),
	NORM( 0xbec3ef16, 0x3f273d75, 0xbf273d74 ),
	VERT( 0xc1cbc17b, 0xc122e7d1, 0xc0f920ba ),
	NORM( 0xbec3ef1e, 0x3f273d74, 0xbf273d73 ),
	VERT( 0xc1e2d57e, 0xc138b695, 0xc0cd8335 ),
	NORM( 0xbf3504f1, 0x3f000002, 0xbf000002 ),
	VERT( 0xc202c848, 0xc1714070, 0xc17c96df ),
	NORM( 0xbf3504f0, 0x3f000003, 0xbf000002 ),
	VERT( 0xc1f2411b, 0xc15959c3, 0xc08c3cd0 ),
	NORM( 0xbf6c835b, 0x3e8a8be0, 0xbe8a8be0 ),
	VERT( 0xc20fc9ea, 0xc1942772, 0xc1458869 ),
	NORM( 0xbf6c835d, 0x3e8a8bdb, 0xbe8a8bd9 ),
	VERT( 0xc1f7ab53, 0xc17fd965, 0xbffcf64d ),
	NORM( 0xbf800000, 0x328b354a, 0xb1b99c62 ),
	VERT( 0xc2145b20, 0xc1b4a037, 0xc10496df ),
	NORM( 0xbf800000, 0x32399c64, 0xb1b99c64 ),
	VERT( 0xc20fc9ea, 0xc1d518fd, 0xc0874aa6 ),
	NORM( 0xbf6c835d, 0xbe8a8bda, 0x3e8a8bd9 ),
	VERT( 0xc1f2411b, 0xc1932c82, 0x3edc1ac5 ),
	NORM( 0xbf6c835b, 0xbe8a8be2, 0x3e8a8be0 ),
	VERT( 0xc202c848, 0xc1f0a038, 0xbf496de3 ),
	NORM( 0xbf3504f0, 0xbf000003, 0x3f000002 ),
	VERT( 0xc1e2d57e, 0xc1a37e1b, 0x401e1021 ),
	NORM( 0xbf3504ef, 0xbf000004, 0x3f000002 ),
	VERT( 0xc1dea247, 0xc2018283, 0x3fc195f3 ),
	NORM( 0xbec3ef15, 0xbf273d75, 0x3f273d74 ),
	VERT( 0xc1cbc17b, 0xc1ae657c, 0x40754b29 ),
	NORM( 0xbec3ef15, 0xbf273d75, 0x3f273d75 ),
	VERT( 0xc1b08881, 0xc1b239af, 0x4089f665 ),
	NORM( 0x00000000, 0xbf3504f3, 0x3f3504f3 ),
	VERT( 0xc1b0b63e, 0xc204bd45, 0x40147715 ),
	NORM( 0x00000000, 0xbf3504f4, 0x3f3504f2 ),
	VERT( 0xc182ca35, 0xc2018283, 0x3fc195f3 ),
	NORM( 0x3ec3ef17, 0xbf273d75, 0x3f273d74 ),
	VERT( 0xc1954f87, 0xc1ae657c, 0x40754b29 ),
	NORM( 0x3ec3ef13, 0xbf273d76, 0x3f273d74 ),
	VERT( 0xc17c7707, 0xc1a37e1b, 0x401e1021 ),
	NORM( 0x3f3504f1, 0xbf000003, 0x3f000001 ),
	VERT( 0xc137b7d9, 0xc1f0a038, 0xbf496de3 ),
	NORM( 0x3f3504f3, 0xbf000001, 0x3efffffe ),
	VERT( 0xc103b155, 0xc1d518fd, 0xc0874aa6 ),
	NORM( 0x3f6c835f, 0xbe8a8bd4, 0x3e8a8bd3 ),
	VERT( 0xc15d9fce, 0xc1932c82, 0x3edc1ac5 ),
	NORM( 0x3f6c835c, 0xbe8a8bdd, 0x3e8a8bde ),
	VERT( 0x4256a529, 0x42cfec01, 0xc1ca9e93 ),
	NORM( 0x3f72d7c5, 0x3cfba05b, 0xbea14394 ),
	VERT( 0x4256a529, 0x42cfec01, 0xc1ca9e93 ),
	NORM( 0x3f0cbf5b, 0x3ec28f12, 0xbf3e6d98 ),
	VERT( 0x4257ccef, 0x42d5b1fb, 0xc1b7e5e8 ),
	NORM( 0x3f11afca, 0x3f14c7b6, 0xbf14ea67 ),
	VERT( 0x4257ccef, 0x42d5b1fb, 0xc1b7e5e8 ),
	NORM( 0x3f76fd16, 0x3e3ed59b, 0xbe3e02cc ),
	VERT( 0x4256a529, 0x42da6025, 0xc1a0cdfd ),
	NORM( 0x3f0cccc5, 0x3f3e3c74, 0xbec32849 ),
	VERT( 0x4256a529, 0x42da6025, 0xc1a0cdfd ),
	NORM( 0x3f72ea83, 0x3ea0f0bf, 0xbce77ebc ),
	VERT( 0x42534201, 0x42dda4da, 0xc186e9ba ),
	NORM( 0x3efcde73, 0x3f5b07d5, 0xbe1ecaaa ),
	VERT( 0x42534201, 0x42dda4da, 0xc186e9ba ),
	NORM( 0x3f66c827, 0x3ed048a1, 0x3e1745c7 ),
	VERT( 0x424dde8f, 0x42df4711, 0xc157f9a1 ),
	NORM( 0x3f5371a9, 0x3ee9715b, 0x3ea9bf5f ),
	VERT( 0x424dde8f, 0x42df4711, 0xc157f9a1 ),
	NORM( 0x3ecef520, 0x3f69340c, 0x3da8a3da ),
	VERT( 0x4246d8d1, 0x42df2a4b, 0xc123b9fa ),
	NORM( 0x3e92d462, 0x3f6793e0, 0x3ea17811 ),
	VERT( 0x4246d8d1, 0x42df2a4b, 0xc123b9fa ),
	NORM( 0x3f39c862, 0x3eeb3d4d, 0x3f0318c8 ),
	VERT( 0x423eab50, 0x42dd5081, 0xc0e94807 ),
	NORM( 0x3e191b50, 0x3f56033b, 0x3f072a2a ),
	VERT( 0x423eab50, 0x42dd5081, 0xc0e94807 ),
	NORM( 0x3f1a4665, 0x3ed6c393, 0x3f2dcb41 ),
	VERT( 0x4235e4b4, 0x42d9d9fc, 0xc09bda5e ),
	NORM( 0x3eee71e7, 0x3eaaf029, 0x3f51cd69 ),
	VERT( 0x4235e4b4, 0x42d9d9fc, 0xc09bda5e ),
	NORM( 0x3b08f47a, 0x3f35890d, 0x3f348045 ),
	VERT( 0x422d1e18, 0x42d50321, 0xc048e40e ),
	NORM( 0xbe13edbc, 0x3f0873cf, 0x3f556c1a ),
	VERT( 0x422d1e18, 0x42d50321, 0xc048e40e ),
	NORM( 0x3ea7279f, 0x3e51e66f, 0x3f6c36dc ),
	VERT( 0x4224f096, 0x42cf2063, 0xc00daa9f ),
	NORM( 0x3e476c3b, 0x3d2c2b49, 0x3f7ade24 ),
	VERT( 0x4224f096, 0x42cf2063, 0xc00daa9f ),
	NORM( 0xbe8fa740, 0x3ea3a6f3, 0x3f67b149 ),
	VERT( 0x421deada, 0x42c8986e, 0xc00a120f ),
	NORM( 0x3d9d6da9, 0xbe133cfd, 0x3f7c930a ),
	VERT( 0x421deada, 0x42c8986e, 0xc00a120f ),
	NORM( 0xbecb2d6c, 0x3dac2fc9, 0x3f69fe13 ),
	VERT( 0x42188768, 0x42c1dd33, 0xc03e5907 ),
	NORM( 0xbc98c775, 0xbeadb576, 0x3f70c4c3 ),
	VERT( 0x42188768, 0x42c1dd33, 0xc03e5907 ),
	NORM( 0xbef839ec, 0xbe1fbe63, 0x3f5c4faf ),
	VERT( 0x4215243f, 0x42bb6422, 0xc09377c5 ),
	NORM( 0xbda12c1d, 0xbf07de1b, 0x3f58085c ),
	VERT( 0x4215243f, 0x42bb6422, 0xc09377c5 ),
	NORM( 0xbf0a2778, 0xbec4ede2, 0x3f3fb6b5 ),
	VERT( 0x4213fc79, 0x42b59e28, 0xc0de5a57 ),
	NORM( 0xbf0eeba0, 0xbf1644b9, 0x3f1618dd ),
	VERT( 0x4213fc79, 0x42b59e28, 0xc0de5a57 ),
	NORM( 0xbdcd6bc6, 0xbf3413a3, 0x3f3422dc ),
	VERT( 0x4215243f, 0x42b0effe, 0xc11d5d03 ),
	NORM( 0xbf0a16c1, 0xbf3ff43e, 0x3ec42ca4 ),
	VERT( 0x4215243f, 0x42b0effe, 0xc11d5d03 ),
	NORM( 0xbda66969, 0xbf5811d5, 0x3f07b5c2 ),
	VERT( 0x42188767, 0x42adab4a, 0xc151258a ),
	NORM( 0xbef7cb11, 0xbf5c8f1e, 0x3e1ceffc ),
	VERT( 0x42188767, 0x42adab4a, 0xc151258a ),
	NORM( 0xbcbc827b, 0xbf70f9e2, 0x3eac6a79 ),
	VERT( 0x421deadb, 0x42ac0912, 0xc1837fb1 ),
	NORM( 0xbeca8ce1, 0xbf6a1322, 0xbdb0ca67 ),
	VERT( 0x421deadb, 0x42ac0912, 0xc1837fb1 ),
	NORM( 0x3d8df15f, 0xbf7ce7a2, 0x3e0e0157 ),
	VERT( 0x4224f097, 0x42ac25d7, 0xc19d9f83 ),
	NORM( 0xbe8f43f7, 0xbf67a469, 0xbea44698 ),
	VERT( 0x4224f097, 0x42ac25d7, 0xc19d9f83 ),
	NORM( 0x3e403684, 0xbf7b2278, 0xbd494ae7 ),
	VERT( 0x422d1e18, 0x42adffa1, 0xc1b52a82 ),
	NORM( 0x3ea5a55f, 0xbf6c2751, 0xbe57b293 ),
	VERT( 0x422d1e18, 0x42adffa1, 0xc1b52a82 ),
	NORM( 0xbe13917c, 0xbf555509, 0xbf089e19 ),
	VERT( 0x4235e4b4, 0x42b17628, 0xc1c885e7 ),
	NORM( 0x3eedebd6, 0xbf518b34, 0xbeacecdd ),
	VERT( 0x4235e4b4, 0x42b17628, 0xc1c885e7 ),
	NORM( 0x3b08bdd7, 0xbf34807f, 0xbf3588d3 ),
	VERT( 0x423eab50, 0x42b64d01, 0xc1d66004 ),
	NORM( 0x3e188095, 0xbf074b26, 0xbf55f54a ),
	VERT( 0x423eab50, 0x42b64d01, 0xc1d66004 ),
	NORM( 0x3f198437, 0xbf2d3f96, 0xbedaaa7b ),
	VERT( 0x4246d8d1, 0x42bc2fc0, 0xc1ddc72b ),
	NORM( 0x3f38c349, 0xbf023b6b, 0xbef051a6 ),
	VERT( 0x4246d8d1, 0x42bc2fc0, 0xc1ddc72b ),
	NORM( 0x3e925db7, 0xbea1f938, 0xbf67901c ),
	VERT( 0x424dde8e, 0x42c2b7b6, 0xc1de3a40 ),
	NORM( 0x3ece6f3e, 0xbdac9253, 0xbf694634 ),
	VERT( 0x424dde8e, 0x42c2b7b6, 0xc1de3a40 ),
	NORM( 0x3f5302ba, 0xbea79889, 0xbeec8b96 ),
	VERT( 0x42534201, 0x42c972ef, 0xc1d7b163 ),
	NORM( 0x3f66ad96, 0xbe134382, 0xbed17561 ),
	VERT( 0x42534201, 0x42c972ef, 0xc1d7b163 ),
	NORM( 0x3efc8363, 0x3e1c83c7, 0xbf5b3c4b ),
	VERT( 0x425ff67e, 0x42d37b1a, 0xc1af0a64 ),
	NORM( 0x3f262da3, 0x3f09bc26, 0xbf09a894 ),
	VERT( 0x425ff67e, 0x42d37b1a, 0xc1af0a64 ),
	NORM( 0xbc518668, 0x3f34fb4f, 0xbf350703 ),
	VERT( 0x425ec7c2, 0x42cdb703, 0xc1c1ca9f ),
	NORM( 0x3f20b0b2, 0x3ead6527, 0xbf337044 ),
	VERT( 0x425ec7c2, 0x42cdb703, 0xc1c1ca9f ),
	NORM( 0xbcdf3031, 0x3f0ce1d6, 0xbf55a25b ),
	VERT( 0x425ec7c1, 0x42d82b28, 0xc197fa07 ),
	NORM( 0x3f20a363, 0x3f338f49, 0xbead15f5 ),
	VERT( 0x425ec7c1, 0x42d82b28, 0xc197fa07 ),
	NORM( 0xbceda8d0, 0x3f556e57, 0xbf0d2aaf ),
	VERT( 0x425b502f, 0x42db7566, 0xc17c57d7 ),
	NORM( 0x3f104f33, 0x3f516573, 0xbdeb26c7 ),
	VERT( 0x425b502f, 0x42db7566, 0xc17c57d7 ),
	NORM( 0xbd991351, 0x3f6c5b5b, 0xbec0ed96 ),
	VERT( 0x4255cc42, 0x42dd206e, 0xc146c482 ),
	NORM( 0x3eec7e1a, 0x3f6116cf, 0x3dee7d68 ),
	VERT( 0x4255cc42, 0x42dd206e, 0xc146c482 ),
	NORM( 0xbe16ccba, 0x3f7850dd, 0xbe462633 ),
	VERT( 0x424e9c31, 0x42dd0f23, 0xc112e0b6 ),
	NORM( 0xbe7b7cb5, 0x3f782275, 0xbc610795 ),
	VERT( 0x424e9c31, 0x42dd0f23, 0xc112e0b6 ),
	NORM( 0x3ea86423, 0x3f6191a2, 0x3eadf68b ),
	VERT( 0x42463d66, 0x42db42b8, 0xc0c86b72 ),
	NORM( 0xbeb8bde4, 0x3f6b9aa3, 0x3e1aa0a8 ),
	VERT( 0x42463d66, 0x42db42b8, 0xc0c86b72 ),
	NORM( 0x3e309bcc, 0x3f52cc7d, 0x3f0a629c ),
	VERT( 0x423d41e5, 0x42d7da8c, 0xc077c6c0 ),
	NORM( 0x3b2bdc4a, 0x3f359fa5, 0x3f34696b ),
	VERT( 0x423d41e5, 0x42d7da8c, 0xc077c6c0 ),
	NORM( 0xbef67c6a, 0x3f53b005, 0x3e94cd63 ),
	VERT( 0x42344664, 0x42d3120b, 0xc00ac13e ),
	NORM( 0xbe2c3c72, 0x3f0c11cd, 0x3f51e91b ),
	VERT( 0x42344664, 0x42d3120b, 0xc00ac13e ),
	NORM( 0xbf1a4a38, 0x3f317cf1, 0x3eca45ef ),
	VERT( 0x422be798, 0x42cd3cac, 0xbfa26795 ),
	NORM( 0xbea7bc45, 0x3eb244f8, 0x3f60d96c ),
	VERT( 0x422be798, 0x42cd3cac, 0xbfa26795 ),
	NORM( 0xbf36e954, 0x3f07254a, 0x3eeb132e ),
	VERT( 0x4224b788, 0x42c6c032, 0xbf9e1550 ),
	NORM( 0xbf4fb219, 0x3eae952e, 0x3ef322ae ),
	VERT( 0x4224b788, 0x42c6c032, 0xbf9e1550 ),
	NORM( 0xbeee084c, 0x3e0123bf, 0x3f605744 ),
	VERT( 0x421f339c, 0x42c00dc8, 0xc0046b95 ),
	NORM( 0xbf123b89, 0xbdd6e1fe, 0x3f506666 ),
	VERT( 0x421f339c, 0x42c00dc8, 0xc0046b95 ),
	NORM( 0xbf6366b8, 0x3e147cf9, 0x3edf2100 ),
	VERT( 0x421bbc08, 0x42b99a40, 0xc06db350 ),
	NORM( 0xbf2367a1, 0xbea85db3, 0x3f322e11 ),
	VERT( 0x421bbc08, 0x42b99a40, 0xc06db350 ),
	NORM( 0xbf6fd42d, 0xbd36b834, 0x3eb1a033 ),
	VERT( 0x421a8d4b, 0x42b3d629, 0xc0c1da80 ),
	NORM( 0xbf7404ad, 0xbe5a56f3, 0x3e5b82e7 ),
	VERT( 0x421a8d4b, 0x42b3d629, 0xc0c1da80 ),
	NORM( 0xbf29460d, 0xbf07b2df, 0x3f07e5e9 ),
	VERT( 0x421bbc08, 0x42af261c, 0xc10f0df5 ),
	NORM( 0xbf6fb06f, 0xbeb22206, 0x3d456dfc ),
	VERT( 0x421bbc08, 0x42af261c, 0xc10f0df5 ),
	NORM( 0xbf237e9d, 0xbf31e4a2, 0x3ea93a7e ),
	VERT( 0x421f339b, 0x42abdbdf, 0xc142aa2e ),
	NORM( 0xbf128765, 0xbf5016aa, 0x3ddd308f ),
	VERT( 0x421f339b, 0x42abdbdf, 0xc142aa2e ),
	NORM( 0xbf633362, 0xbee0e457, 0xbe0ea554 ),
	VERT( 0x4224b789, 0x42aa30d7, 0xc1783d88 ),
	NORM( 0xbeeedc16, 0xbf6035be, 0xbdfd49a8 ),
	VERT( 0x4224b789, 0x42aa30d7, 0xc1783d88 ),
	NORM( 0xbf4fbcba, 0xbef4a0dd, 0xbeac48d6 ),
	VERT( 0x422be798, 0x42aa4220, 0xc19610a9 ),
	NORM( 0xbea84098, 0xbf60e2e3, 0xbeb19832 ),
	VERT( 0x422be798, 0x42aa4220, 0xc19610a9 ),
	NORM( 0xbf361287, 0xbeefb18d, 0xbf063f5f ),
	VERT( 0x42344664, 0x42ac0e8b, 0xc1ad662b ),
	NORM( 0xbf18519e, 0xbed27569, 0xbf30cf5b ),
	VERT( 0x42344664, 0x42ac0e8b, 0xc1ad662b ),
	NORM( 0xbe2c9f7b, 0xbf5205f6, 0xbf0bdee4 ),
	VERT( 0x423d41e5, 0x42af76b9, 0xc1c08825 ),
	NORM( 0x3b3a2c75, 0xbf346293, 0xbf35a662 ),
	VERT( 0x423d41e5, 0x42af76b9, 0xc1c08825 ),
	NORM( 0xbef1c585, 0xbe9ca110, 0xbf53a29c ),
	VERT( 0x42463d66, 0x42b43f38, 0xc1ce28dd ),
	NORM( 0x3e30e778, 0xbf0a4d87, 0xbf52d65c ),
	VERT( 0x42463d66, 0x42b43f38, 0xc1ce28dd ),
	NORM( 0xbeb38e1f, 0xbe27ecc6, 0xbf6c0986 ),
	VERT( 0x424e9c31, 0x42ba1497, 0xc1d55a8a ),
	NORM( 0xbe76c1bc, 0x3bebc296, 0xbf787305 ),
	VERT( 0x424e9c31, 0x42ba1497, 0xc1d55a8a ),
	NORM( 0x3ea8b939, 0xbeada91b, 0xbf6190a7 ),
	VERT( 0x4255cc42, 0x42c09112, 0xc1d59fb0 ),
	NORM( 0x3eed271b, 0xbdea4247, 0xbf60fc20 ),
	VERT( 0x4255cc42, 0x42c09112, 0xc1d59fb0 ),
	NORM( 0xbe1530c6, 0x3e429723, 0xbf788d6a ),
	VERT( 0x425b502f, 0x42c7437c, 0xc1cef394 ),
	NORM( 0x3f1084d1, 0x3deef15a, 0xbf512f46 ),
	VERT( 0x425b502f, 0x42c7437c, 0xc1cef394 ),
	NORM( 0xbd92fa6f, 0x3ebf332a, 0xbf6cc49f ),
	VERT( 0x4259885f, 0x42d3715d, 0xc1aefa41 ),
	NORM( 0x3f1a110e, 0x3f107919, 0xbf10a967 ),
	VERT( 0x42586f73, 0x42ce0373, 0xc1c09a89 ),
	NORM( 0x3f14b8a9, 0x3eb9e742, 0xbf3a7d0d ),
	VERT( 0x42586f72, 0x42d7d96e, 0xc1994296 ),
	NORM( 0x3f14c23a, 0x3f3a53f9, 0xbeba6d35 ),
	VERT( 0x425537d3, 0x42daeec7, 0xc180ee6e ),
	NORM( 0x3f051d25, 0x3f57c5c3, 0xbe0decfe ),
	VERT( 0x425019a2, 0x42dc7b9c, 0xc14f4c63 ),
	NORM( 0x3ed8b6ae, 0x3f669da3, 0x3dc5c660 ),
	VERT( 0x42496e26, 0x42dc64df, 0xc11e45f3 ),
	NORM( 0x3e96b021, 0x3f66057a, 0x3ea6ba02 ),
	VERT( 0x4241a9bf, 0x42daac23, 0xc0e44195 ),
	NORM( 0x3e1010a7, 0x3f55adb3, 0x3f084f46 ),
	VERT( 0x423953ee, 0x42d76f6e, 0xc09bbe2c ),
	NORM( 0xbcb62161, 0x3f3667bb, 0x3f338858 ),
	VERT( 0x4230fe1c, 0x42d2e737, 0xc04fe5a1 ),
	NORM( 0xbe3ba285, 0x3f0a949b, 0x3f5212e7 ),
	VERT( 0x422939b4, 0x42cd6292, 0xc018ce08 ),
	NORM( 0xbea869d8, 0x3eaaf534, 0x3f62236f ),
	VERT( 0x42228e38, 0x42c741c4, 0xc015f698 ),
	NORM( 0xbee88764, 0x3dd88ea2, 0x3f6276b6 ),
	VERT( 0x421d7007, 0x42c0efb6, 0xc0479143 ),
	NORM( 0xbf0d2961, 0xbe026539, 0x3f530f98 ),
	VERT( 0x421a3867, 0x42badaab, 0xc0951e27 ),
	NORM( 0xbf1c82fc, 0xbeb349eb, 0x3f35ab85 ),
	VERT( 0x42191f7a, 0x42b56cc1, 0xc0db9f2a ),
	NORM( 0xbf21b2f4, 0xbf0c6c5f, 0x3f0c4097 ),
	VERT( 0x421a3867, 0x42b104b0, 0xc1193eed ),
	NORM( 0xbf1c7591, 0xbf35c89d, 0x3eb302c0 ),
	VERT( 0x421d7007, 0x42adef58, 0xc149e740 ),
	NORM( 0xbf0d1626, 0xbf531d58, 0x3e024e12 ),
	VERT( 0x42228e39, 0x42ac6282, 0xc17c77b7 ),
	NORM( 0xbee975c0, 0xbf623264, 0xbdda5f40 ),
	VERT( 0x422939b4, 0x42ac793d, 0xc196bf15 ),
	NORM( 0xbea8896e, 0xbf620a9a, 0xbeab5951 ),
	VERT( 0x4230fe1c, 0x42ae31fa, 0xc1acd1ad ),
	NORM( 0xbe3700ea, 0xbf52bd73, 0xbf09f466 ),
	VERT( 0x423953ee, 0x42b16eb0, 0xc1bef283 ),
	NORM( 0xbc8c3ccd, 0xbf347365, 0xbf358882 ),
	VERT( 0x4241a9bf, 0x42b5f6e6, 0xc1cbe55c ),
	NORM( 0x3e13362e, 0xbf08fabe, 0xbf551d8b ),
	VERT( 0x42496e26, 0x42bb7b8a, 0xc1d2c84d ),
	NORM( 0x3e95b1b3, 0xbea71a4e, 0xbf661d89 ),
	VERT( 0x425019a2, 0x42c19c5a, 0xc1d3233a ),
	NORM( 0x3ed77052, 0xbdc61fa2, 0xbf66e8d7 ),
	VERT( 0x425537d3, 0x42c7ee68, 0xc1ccefea ),
	NORM( 0x3f0507a6, 0x3e0c7d78, 0xbf57e20b ),
	VERT( 0x42ca57bd, 0x415544d2, 0x42829bc2 ),
	NORM( 0x3f4e21f3, 0x3e8cc5fd, 0xbf0680c5 ),
	VERT( 0x42ca57bd, 0x415544d2, 0x42829bc2 ),
	NORM( 0x3f700241, 0xbeb1ea1f, 0xbc892e95 ),
	VERT( 0x42cb497a, 0x417dd7f4, 0x4287fd83 ),
	NORM( 0x3f786865, 0xbe2eda96, 0x3e2f363e ),
	VERT( 0x42cb497a, 0x417dd7f4, 0x4287fd83 ),
	NORM( 0x3f54247f, 0x3eca838e, 0xbecac43b ),
	VERT( 0x42ca57bd, 0x419472fc, 0x428d0fe7 ),
	NORM( 0x3f4e149a, 0x3f065024, 0xbe8dccea ),
	VERT( 0x42ca57bd, 0x419472fc, 0x428d0fe7 ),
	NORM( 0x3f6ff30e, 0x3c8eb41f, 0x3eb237b7 ),
	VERT( 0x42c792fd, 0x41a9bfe3, 0x42917a72 ),
	NORM( 0x3f3c9927, 0x3f271335, 0xbe353957 ),
	VERT( 0x42c792fd, 0x41a9bfe3, 0x42917a72 ),
	NORM( 0x3f5727f3, 0x3e51276f, 0x3f007d8c ),
	VERT( 0x42c32b89, 0x41bd5f0f, 0x4294f018 ),
	NORM( 0x3f2fbbc5, 0x3ec11208, 0x3f1f2b35 ),
	VERT( 0x42c32b89, 0x41bd5f0f, 0x4294f018 ),
	NORM( 0x3f212a8c, 0x3f45223d, 0xbdd39f36 ),
	VERT( 0x42bd6e36, 0x41cdfa32, 0x42973481 ),
	NORM( 0x3efb0045, 0x3f5e8272, 0xbd84b167 ),
	VERT( 0x42bd6e36, 0x41cdfa32, 0x42973481 ),
	NORM( 0x3ef8c6d4, 0x3f06471e, 0x3f32fa4a ),
	VERT( 0x42b6bf24, 0x41da6f94, 0x4298201c ),
	NORM( 0x3eab3331, 0x3f70d1dc, 0xbd6a5399 ),
	VERT( 0x42b6bf24, 0x41da6f94, 0x4298201c ),
	NORM( 0x3e81534b, 0x3f2303c5, 0x3f3a7f1a ),
	VERT( 0x42af92f1, 0x41e1e5e2, 0x4297a2dc ),
	NORM( 0x3e31e648, 0x3f7b2af3, 0xbdadf07a ),
	VERT( 0x42af92f1, 0x41e1e5e2, 0x4297a2dc ),
	NORM( 0x3b0ea817, 0x3f34f416, 0x3f351597 ),
	VERT( 0x42a866be, 0x41e3dae0, 0x4295c549 ),
	NORM( 0xbe7e1759, 0x3f3ad6d5, 0x3f23120a ),
	VERT( 0x42a866be, 0x41e3dae0, 0x4295c549 ),
	NORM( 0x3c916ff6, 0x3f7d349f, 0xbe15c9fa ),
	VERT( 0x42a1b7ac, 0x41e02c73, 0x4292a7f1 ),
	NORM( 0xbee89aeb, 0x3f367bff, 0x3f08c80e ),
	VERT( 0x42a1b7ac, 0x41e02c73, 0x4292a7f1 ),
	NORM( 0xbdd643f6, 0x3f783a3f, 0xbe62561e ),
	VERT( 0x429b79bc, 0x41d7e534, 0x428e8986 ),
	NORM( 0xbf3161ec, 0x3f205b3b, 0x3eb6d618 ),
	VERT( 0x429b79bc, 0x41d7e534, 0x428e8986 ),
	NORM( 0xbe6e072f, 0x3f699732, 0xbeac661c ),
	VERT( 0x4297d7d0, 0x41c987ff, 0x4289c0ef ),
	NORM( 0xbea7d2d8, 0x3f55c8f2, 0xbee23163 ),
	VERT( 0x4297d7d0, 0x41c987ff, 0x4289c0ef ),
	NORM( 0xbf5a7053, 0x3efcc426, 0x3e2bf1eb ),
	VERT( 0x4294ce25, 0x41b79a0f, 0x42844624 ),
	NORM( 0xbebc1e5d, 0x3f425e68, 0xbf098324 ),
	VERT( 0x4294ce25, 0x41b79a0f, 0x42844624 ),
	NORM( 0xbf6d8da8, 0x3ebeb458, 0x3c6105b2 ),
	VERT( 0x4293dc67, 0x41a3507d, 0x427dc8c5 ),
	NORM( 0xbf76ee96, 0x3e3f398b, 0xbe3ecb77 ),
	VERT( 0x4293dc67, 0x41a3507d, 0x427dc8c5 ),
	NORM( 0xbec6ca85, 0x3f26fa58, 0xbf26a876 ),
	VERT( 0x4294ce25, 0x418dc97b, 0x4273a3fd ),
	NORM( 0xbf6e90c0, 0xbb3fac2a, 0xbeb9b58f ),
	VERT( 0x4294ce25, 0x418dc97b, 0x4273a3fd ),
	NORM( 0xbebeaaf6, 0x3f0ac8e3, 0xbf40d65d ),
	VERT( 0x429792e5, 0x4170f925, 0x426acee6 ),
	NORM( 0xbf57ccc3, 0xbe3a39b6, 0xbf019c56 ),
	VERT( 0x429792e5, 0x4170f925, 0x426acee6 ),
	NORM( 0xbea5b944, 0x3edeec2a, 0xbf570caf ),
	VERT( 0x429b6973, 0x414d1a74, 0x42645c5f ),
	NORM( 0xbf312bcd, 0xbeb8a11c, 0xbf201385 ),
	VERT( 0x429b6973, 0x414d1a74, 0x42645c5f ),
	NORM( 0xbe79385f, 0x3ea7b523, 0xbf69b6ff ),
	VERT( 0x42a1b7ac, 0x41288482, 0x425f5ac7 ),
	NORM( 0xbe04e772, 0x3e611135, 0xbf778515 ),
	VERT( 0x42a1b7ac, 0x41288482, 0x425f5ac7 ),
	NORM( 0xbef741db, 0xbf055981, 0xbf3431a3 ),
	VERT( 0x42a866be, 0x410f99be, 0x425d8392 ),
	NORM( 0xbe7e89c2, 0xbf22fdcb, 0xbf3adec3 ),
	VERT( 0x42a866be, 0x410f99be, 0x425d8392 ),
	NORM( 0x3c0bd749, 0x3e0b0ffc, 0xbf7d9e74 ),
	VERT( 0x42af92f1, 0x4100ad28, 0x425e7e13 ),
	NORM( 0x3b0eb2c2, 0xbf3515a7, 0xbf34f406 ),
	VERT( 0x42af92f1, 0x4100ad28, 0x425e7e13 ),
	NORM( 0x3e2b8cbb, 0x3da56ee3, 0xbf7b888c ),
	VERT( 0x42b6bf24, 0x40f9864e, 0x42623937 ),
	NORM( 0x3e818a9e, 0xbf3a85d9, 0xbf22f110 ),
	VERT( 0x42b6bf24, 0x40f9864e, 0x42623937 ),
	NORM( 0x3ea99548, 0x3d580824, 0xbf712c1d ),
	VERT( 0x42bd6e36, 0x41041ffd, 0x426873e8 ),
	NORM( 0x3ef9b169, 0x3d71be4a, 0xbf5efb73 ),
	VERT( 0x42bd6e36, 0x41041ffd, 0x426873e8 ),
	NORM( 0x3ef91003, 0xbf330961, 0xbf06110a ),
	VERT( 0x42c32b89, 0x41164343, 0x4270c17b ),
	NORM( 0x3f2ff65d, 0xbf1f169e, 0xbec08037 ),
	VERT( 0x42c32b89, 0x41164343, 0x4270c17b ),
	NORM( 0x3f209483, 0x3dcf5457, 0xbf45aeb9 ),
	VERT( 0x42c792fd, 0x4131f079, 0x427a9111 ),
	NORM( 0x3f575b52, 0xbf00458e, 0xbe4ffe8e ),
	VERT( 0x42c792fd, 0x4131f079, 0x427a9111 ),
	NORM( 0x3f3c687d, 0x3e3109a4, 0xbf2791bd ),
	VERT( 0x42cc50cb, 0x418e194d, 0x4284322f ),
	NORM( 0x3eed942b, 0xbf204c04, 0x3f2067d9 ),
	VERT( 0x42cc50cb, 0x418e194d, 0x4284322f ),
	NORM( 0x3f7ec0d0, 0xbd8f6498, 0x3d8e1bf1 ),
	VERT( 0x42cb5e95, 0x41738b2a, 0x427da5ef ),
	NORM( 0x3ee26719, 0xbf3d8434, 0x3f01a24e ),
	VERT( 0x42cb5e95, 0x41738b2a, 0x427da5ef ),
	NORM( 0x3f765068, 0xbe7dc7f1, 0xbde7df0f ),
	VERT( 0x42cb5e95, 0x41a39628, 0x4289471c ),
	NORM( 0x3ee1b05a, 0xbf01a85c, 0x3f3db688 ),
	VERT( 0x42cb5e95, 0x41a39628, 0x4289471c ),
	NORM( 0x3f766275, 0x3de67ea4, 0x3e7cff96 ),
	VERT( 0x42c89872, 0x41b8c54a, 0x428db919 ),
	NORM( 0x3ebfc0dc, 0xbec7ec93, 0x3f574b1d ),
	VERT( 0x42c89872, 0x41b8c54a, 0x428db919 ),
	NORM( 0x3f5dc8a8, 0x3e9349ed, 0x3ed10a46 ),
	VERT( 0x42c42eca, 0x41cc3518, 0x42913a96 ),
	NORM( 0x3f36692b, 0x3ee37e15, 0x3f0b02d8 ),
	VERT( 0x42c42eca, 0x41cc3518, 0x42913a96 ),
	NORM( 0x3e8aab52, 0xbe92e66c, 0x3f6b3b3c ),
	VERT( 0x42be6e97, 0x41dc9285, 0x42938e6c ),
	NORM( 0x3e0db228, 0xbe50bfa4, 0x3f781bae ),
	VERT( 0x42be6e97, 0x41dc9285, 0x42938e6c ),
	NORM( 0x3f025f42, 0x3f129392, 0x3f247b7f ),
	VERT( 0x42b7bc2d, 0x41e8c008, 0x42948bff ),
	NORM( 0xbc4a2f7b, 0xbe158a42, 0x3f7d3c5f ),
	VERT( 0x42b7bc2d, 0x41e8c008, 0x42948bff ),
	NORM( 0x3e89f301, 0x3f2993e2, 0x3f32f25a ),
	VERT( 0x42b08c63, 0x41efe934, 0x42942208 ),
	NORM( 0x3c1ee9be, 0x3f34d64d, 0x3f352f33 ),
	VERT( 0x42b08c63, 0x41efe934, 0x42942208 ),
	NORM( 0xbe2ea91f, 0xbdec1dfa, 0x3f7a8415 ),
	VERT( 0x42a95c99, 0x41f19110, 0x429257bd ),
	NORM( 0xbea63706, 0xbdeac9a5, 0x3f705970 ),
	VERT( 0x42a95c99, 0x41f19110, 0x429257bd ),
	NORM( 0xbe804dd9, 0x3f336327, 0x3f2affc8 ),
	VERT( 0x42a2aa2f, 0x41ed9ac7, 0x428f4c5c ),
	NORM( 0xbef6e61d, 0x3f272253, 0x3f158a6f ),
	VERT( 0x42a2aa2f, 0x41ed9ac7, 0x428f4c5c ),
	NORM( 0xbee79fd5, 0xbe0d0bef, 0x3f6190f9 ),
	VERT( 0x429c76ca, 0x41e4fb81, 0x428b3db2 ),
	NORM( 0xbf349907, 0x3f0bd392, 0x3ee73fb8 ),
	VERT( 0x429c76ca, 0x41e4fb81, 0x428b3db2 ),
	NORM( 0xbf191326, 0xbe4e8cb5, 0x3f4696d8 ),
	VERT( 0x4295ba31, 0x41c47d88, 0x42810d46 ),
	NORM( 0xbf75cf0d, 0x3e7e58b1, 0x3e02e41b ),
	VERT( 0x4295ba31, 0x41c47d88, 0x42810d46 ),
	NORM( 0xbf39ba18, 0xbeb6f8c0, 0x3f16925e ),
	VERT( 0x4294c7fa, 0x41b029cf, 0x42775c1c ),
	NORM( 0xbf7eff89, 0x3d7f22fa, 0xbd806996 ),
	VERT( 0x4294c7fa, 0x41b029cf, 0x42775c1c ),
	NORM( 0xbf3f7598, 0xbef04d10, 0x3ef05c09 ),
	VERT( 0x4295ba31, 0x419aacf4, 0x426d3241 ),
	NORM( 0xbf3abd2a, 0xbf143aa9, 0x3eba7820 ),
	VERT( 0x4295ba31, 0x419aacf4, 0x426d3241 ),
	NORM( 0xbf763129, 0xbdfd31b4, 0xbe7a8fb0 ),
	VERT( 0x42988054, 0x41857dd0, 0x42644e47 ),
	NORM( 0xbf2d5fae, 0xbf2ec9b1, 0x3e8c61ae ),
	VERT( 0x42988054, 0x41857dd0, 0x42644e47 ),
	NORM( 0xbf5d463d, 0xbe97ecab, 0xbecfe0f6 ),
	VERT( 0x429c6833, 0x4167152c, 0x425db9fb ),
	NORM( 0xbf34c20e, 0xbee84640, 0xbf0b3167 ),
	VERT( 0x429c6833, 0x4167152c, 0x425db9fb ),
	NORM( 0xbf16cf2e, 0xbf489137, 0x3e4a98b5 ),
	VERT( 0x42a2aa2f, 0x41436126, 0x4258a39e ),
	NORM( 0xbeeea28b, 0xbf5fb735, 0x3e0d753d ),
	VERT( 0x42a2aa2f, 0x41436126, 0x4258a39e ),
	NORM( 0xbefbd88f, 0xbf153cb9, 0xbf258d78 ),
	VERT( 0x42a95c99, 0x412b061d, 0x4256a87a ),
	NORM( 0xbea62a05, 0xbf707ff4, 0x3de14fb7 ),
	VERT( 0x42a95c99, 0x412b061d, 0x4256a87a ),
	NORM( 0xbe7fa724, 0xbf2b0b73, 0xbf336dda ),
	VERT( 0x42b7bc2d, 0x4119640f, 0x425b10fd ),
	NORM( 0x3e897d52, 0xbf32f693, 0xbf29a751 ),
	VERT( 0x42b7bc2d, 0x4119640f, 0x425b10fd ),
	NORM( 0xbc1d4596, 0xbf7d7275, 0x3e0feb0a ),
	VERT( 0x42be6e97, 0x412150a3, 0x426127bf ),
	NORM( 0x3f0209c0, 0xbf248eb2, 0xbf12c9f0 ),
	VERT( 0x42be6e97, 0x412150a3, 0x426127bf ),
	NORM( 0x3e10b397, 0xbf78300c, 0x3e4d247d ),
	VERT( 0x42c42eca, 0x4133ef58, 0x42695675 ),
	NORM( 0x3e8c20dd, 0xbf6b2522, 0x3e9210e3 ),
	VERT( 0x42c42eca, 0x4133ef58, 0x42695675 ),
	NORM( 0x3f361c40, 0xbf0b2a06, 0xbee4148d ),
	VERT( 0x42c89872, 0x414ffb46, 0x42730e5e ),
	NORM( 0x3ec11961, 0xbf57185e, 0x3ec77b55 ),
	VERT( 0x42c89872, 0x414ffb46, 0x42730e5e ),
	NORM( 0x3f5d9a30, 0xbed17607, 0xbe93c868 ),
	VERT( 0x42c8e1ef, 0x4188f711, 0x428574fc ),
	NORM( 0x3f7816ba, 0xbe331bf8, 0x3e321f0a ),
	VERT( 0x42c80a6c, 0x416dc1e0, 0x4280acbf ),
	NORM( 0x3f6fb9ba, 0xbeb38707, 0xbc4c02f1 ),
	VERT( 0x42c80a6c, 0x419c1803, 0x4289fa83 ),
	NORM( 0x3f6fd9ed, 0x3c340001, 0x3eb2e11d ),
	VERT( 0x42c59290, 0x41aef614, 0x428dee74 ),
	NORM( 0x3f5796dd, 0x3e47f04f, 0x3f00ae52 ),
	VERT( 0x42c1a56c, 0x41c04814, 0x42910bd5 ),
	NORM( 0x3f30c8ef, 0x3ebb7ba3, 0x3f1fac6c ),
	VERT( 0x42bc8781, 0x41cedfdf, 0x42931c54 ),
	NORM( 0x3efb8b32, 0x3f03908c, 0x3f3405d2 ),
	VERT( 0x42b69211, 0x41d9bed6, 0x4293fbe9 ),
	NORM( 0x3e83e85b, 0x3f20120b, 0x3f3c953d ),
	VERT( 0x42b02d12, 0x41e02761, 0x42939b59 ),
	NORM( 0x3bc0a2aa, 0x3f31c06b, 0x3f383913 ),
	VERT( 0x42a9c814, 0x41e1a99d, 0x42920137 ),
	NORM( 0xbe7ec351, 0x3f37772e, 0x3f26cafe ),
	VERT( 0x42a3d2a4, 0x41de2b4b, 0x428f4979 ),
	NORM( 0xbeebb086, 0x3f31c6c0, 0x3f0d93d3 ),
	VERT( 0x429e47e8, 0x41d69049, 0x428bab96 ),
	NORM( 0xbf341efe, 0x3f1ad795, 0x3ebef575 ),
	VERT( 0x429b01e1, 0x41c9af24, 0x42876fe9 ),
	NORM( 0xbf5c16ba, 0x3ef29994, 0x3e434633 ),
	VERT( 0x42984fb8, 0x41b9a409, 0x42829783 ),
	NORM( 0xbf6fde32, 0x3eb16cc2, 0x3d360e9f ),
	VERT( 0x42977834, 0x41a78dea, 0x427b9e8c ),
	NORM( 0xbf79a00c, 0x3e20b1d7, 0xbe207778 ),
	VERT( 0x42984fb8, 0x41946cf7, 0x4272937c ),
	NORM( 0xbf712667, 0xbd04007c, 0xbeab0d0e ),
	VERT( 0x429ac795, 0x41818ee5, 0x426aab9b ),
	NORM( 0xbf59ce4c, 0xbe577d66, 0xbef687e9 ),
	VERT( 0x429e3a20, 0x41634a50, 0x4264d914 ),
	NORM( 0xbf328bc3, 0xbec5d314, 0xbf1a82de ),
	VERT( 0x42a3d2a4, 0x41434a2e, 0x42604fd9 ),
	NORM( 0xbefa5471, 0xbf0a9682, 0xbf2f1be1 ),
	VERT( 0x42a9c814, 0x412d8c37, 0x425e90af ),
	NORM( 0xbe818a64, 0xbf273f1d, 0xbf36ac46 ),
	VERT( 0x42b02d12, 0x4120bb32, 0x425f51cf ),
	NORM( 0x3b0c5b68, 0xbf381310, 0xbf31e931 ),
	VERT( 0x42b69211, 0x411db6ae, 0x42628611 ),
	NORM( 0x3e82c233, 0xbf3c7684, 0xbf207274 ),
	VERT( 0x42bc8781, 0x4124b357, 0x4267f58f ),
	NORM( 0x3efa05bd, 0xbf344229, 0xbf03f75c ),
	VERT( 0x42c1a56c, 0x4135374f, 0x426f4174 ),
	NORM( 0x3f305acc, 0xbf1fbf61, 0xbebcd8ad ),
	VERT( 0x42c59290, 0x414e2262, 0x4277ea75 ),
	NORM( 0x3f5731a4, 0xbf011d7e, 0xbe4a42d6 ),
	VERT( 0xc0b7bc20, 0x42f2aefd, 0xc22ad544 ),
	NORM( 0x3e03de39, 0x3efdf6ca, 0xbf5bd433 ),
	VERT( 0xc0b59d34, 0x42f89613, 0xc221bb23 ),
	NORM( 0x3e086da0, 0x3f3367bb, 0xbf3367ea ),
	VERT( 0xc0b7bc1b, 0x42fd2324, 0xc215ecfc ),
	NORM( 0x3e03d93f, 0x3f5bd481, 0xbefdf660 ),
	VERT( 0xc0bdf3d3, 0x43000367, 0xc20838c7 ),
	NORM( 0x3decc953, 0x3f759741, 0xbe83d5a1 ),
	VERT( 0xc0c7d7d5, 0x43008755, 0xc1f31b3b ),
	NORM( 0x3dc1e8d7, 0x3f7ed98c, 0xba893dc0 ),
	VERT( 0xc0d4bba0, 0x4300145f, 0xc1d5d6c5 ),
	NORM( 0x3d89b877, 0x3f76dac5, 0x3e832fb5 ),
	VERT( 0xc0e3be52, 0x42fd64b2, 0xc1baa2be ),
	NORM( 0x3d0fffa0, 0x3f5e0082, 0x3efe52d5 ),
	VERT( 0xc0f3da0d, 0x42f8f2c6, 0xc1a359c7 ),
	NORM( 0x3a27095c, 0x3f35e207, 0x3f3426cc ),
	VERT( 0xc101fae2, 0x42f32089, 0xc191921e ),
	NORM( 0xbd093751, 0x3f01667f, 0x3f5cb8b6 ),
	VERT( 0xc1097c3d, 0x42ec5386, 0xc18681e7 ),
	NORM( 0xbd85d8f3, 0x3e87dc1d, 0x3f764152 ),
	VERT( 0xc10fee23, 0x42e50269, 0xc182ea2d ),
	NORM( 0xbdbef66f, 0x3bc34ff4, 0x3f7ee150 ),
	VERT( 0xc114e028, 0x42ddacd1, 0xc187099c ),
	NORM( 0xbdeb0b1a, 0xbe81a5b0, 0x3f75e86c ),
	VERT( 0xc117fbff, 0x42d6d2b9, 0xc192984b ),
	NORM( 0xbe037fe9, 0xbefd0fb3, 0x3f5c1a50 ),
	VERT( 0xc1190b73, 0x42d0eba6, 0xc1a4cc8f ),
	NORM( 0xbe084dfd, 0xbf3360e9, 0x3f33703c ),
	VERT( 0xc117fbff, 0x42cc5e95, 0xc1bc68dc ),
	NORM( 0xbe038de1, 0xbf5bfbfe, 0x3efd7741 ),
	VERT( 0xc114e026, 0x42c97aea, 0xc1d7d142 ),
	NORM( 0xbdeb3f55, 0xbf75fd39, 0x3e810183 ),
	VERT( 0xc10fee22, 0x42c8730e, 0xc1f5279e ),
	NORM( 0xbdbf5f2f, 0xbf7ee05b, 0xbbab6536 ),
	VERT( 0xc1097c3c, 0x42c958fc, 0xc209360d ),
	NORM( 0xbd86603d, 0xbf766af3, 0xbe86a477 ),
	VERT( 0xc101fae4, 0x42cc1d07, 0xc216d00d ),
	NORM( 0xbd09562c, 0xbf5cb853, 0xbf016707 ),
	VERT( 0xc0f3da0b, 0x42d08ef3, 0xc222748a ),
	NORM( 0x3a23daa5, 0xbf342612, 0xbf35e2bf ),
	VERT( 0xc0e3be51, 0x42d66131, 0xc22b5860 ),
	NORM( 0x3d106576, 0xbefe7abb, 0xbf5df4d2 ),
	VERT( 0xc0d4bb9d, 0x42dd2e32, 0xc230e07c ),
	NORM( 0x3d89fa0f, 0xbe835c0b, 0xbf76d44d ),
	VERT( 0xc0c7d7d2, 0x42e47f51, 0xc232ac56 ),
	NORM( 0x3dc21c48, 0x3a86f840, 0xbf7ed8ef ),
	VERT( 0xc0bdf3d0, 0x42ebd4e5, 0xc2309c9b ),
	NORM( 0x3decf101, 0x3e83d5e9, 0xbf75969e ),
	VERT( 0x41ce30ef, 0x42e6371f, 0xc211e588 ),
	NORM( 0x3ebd77d0, 0x3ee65257, 0xbf5015d0 ),
	VERT( 0x41cf9fe6, 0x42ec135f, 0xc208b5bc ),
	NORM( 0x3ec4062e, 0x3f2737a9, 0xbf273c7c ),
	VERT( 0x41ce30ef, 0x42f0ab45, 0xc1f9fa78 ),
	NORM( 0x3ebd7d34, 0x3f500ed8, 0xbee66717 ),
	VERT( 0x41c9fd11, 0x42f3aeae, 0xc1df110f ),
	NORM( 0x3eaa46d4, 0x3f6afd63, 0xbe5d8804 ),
	VERT( 0x41c34da1, 0x42f4e90c, 0xc1c284bf ),
	NORM( 0x3e8b7f3d, 0x3f762c1c, 0x3d0630fc ),
	VERT( 0x41ba9737, 0x42f444ed, 0xc1a64785 ),
	NORM( 0x3e46176e, 0x3f70a8ef, 0x3e8fc0ff ),
	VERT( 0x41b071db, 0x42f1cd86, 0xc18c4610 ),
	NORM( 0x3dce9b37, 0x3f5aa39f, 0x3f02a2ff ),
	VERT( 0x41a58e88, 0x42edaddb, 0xc16c8c29 ),
	NORM( 0x3aae2991, 0x3f359350, 0x3f347611 ),
	VERT( 0x419aab38, 0x42e82ddc, 0xc14b8ed5 ),
	NORM( 0xbdc9a592, 0x3f03fd9c, 0x3f59e5a6 ),
	VERT( 0x419085d9, 0x42e1ad7f, 0xc137d38c ),
	NORM( 0xbe443774, 0x3e92ab84, 0x3f7050d6 ),
	VERT( 0x4187cf71, 0x42da9e31, 0xc132b2a0 ),
	NORM( 0xbe8afeb4, 0x3d1c3593, 0x3f76314d ),
	VERT( 0x41811ffc, 0x42d37b1b, 0xc13c857f ),
	NORM( 0xbeaa3e5d, 0xbe592a60, 0x3f6b4017 ),
	VERT( 0x4179d83f, 0x42ccc0c0, 0xc154a0d6 ),
	NORM( 0xbebde9dc, 0xbee531f3, 0x3f504b67 ),
	VERT( 0x4176fa56, 0x42c6e482, 0xc1796002 ),
	NORM( 0xbec4a73c, 0xbf271892, 0x3f272c49 ),
	VERT( 0x4179d841, 0x42c24c9d, 0xc19420fe ),
	NORM( 0xbebdfac7, 0xbf5036ca, 0x3ee56ecf ),
	VERT( 0x41811ffd, 0x42bf4933, 0xc1af0a67 ),
	NORM( 0xbeaa55be, 0xbf6b3024, 0x3e59f50b ),
	VERT( 0x4187cf71, 0x42be0ed6, 0xc1cb96be ),
	NORM( 0xbe8b084c, 0xbf76311d, 0xbd1a5c0f ),
	VERT( 0x419085db, 0x42beb2f4, 0xc1e7d3f8 ),
	NORM( 0xbe444b67, 0xbf7051e5, 0xbe929dea ),
	VERT( 0x419aab36, 0x42c12a5b, 0xc200eab3 ),
	NORM( 0xbdc9ebe8, 0xbf59ea4e, 0xbf03f43d ),
	VERT( 0x41a58e88, 0x42c54a08, 0xc20beab1 ),
	NORM( 0x3aa88ff2, 0xbf3478f0, 0xbf359077 ),
	VERT( 0x41b071da, 0x42caca06, 0xc2142a09 ),
	NORM( 0x3dceb9a3, 0xbf029430, 0xbf5aac05 ),
	VERT( 0x41ba9738, 0x42d14a62, 0xc21918d9 ),
	NORM( 0x3e4601e4, 0xbe8fb804, 0xbf70ab62 ),
	VERT( 0x41c34da2, 0x42d859b1, 0xc21a6117 ),
	NORM( 0x3e8b6264, 0xbd07e0e8, 0xbf762f45 ),
	VERT( 0x41c9fd13, 0x42df7cc6, 0xc217ec5d ),
	NORM( 0x3eaa313e, 0x3e5d2db4, 0xbf6b069d ),
	VERT( 0x429c6fd6, 0x42ae762a, 0xc1098e65 ),
	NORM( 0x3f446d1a, 0x3e6ff232, 0xbf18d246 ),
	VERT( 0x429d3362, 0x42b41aef, 0xc0c626d3 ),
	NORM( 0x3f4b3925, 0x3edc1b21, 0xbedc395e ),
	VERT( 0x429c6fd6, 0x42b8ea4e, 0xc057b510 ),
	NORM( 0x3f446ef2, 0x3f18ccfb, 0xbe700fef ),
	VERT( 0x429a3285, 0x42bc905d, 0xbea5f2fa ),
	NORM( 0x3f307335, 0x3f396295, 0xbcb9ec56 ),
	VERT( 0x4296a281, 0x42becd74, 0x402f4cf9 ),
	NORM( 0x3f10b40b, 0x3f4d794f, 0x3e43095c ),
	VERT( 0x4291fdf2, 0x42bf7a85, 0x40b38870 ),
	NORM( 0x3ecdded3, 0x3f53d3e5, 0x3ec8b142 ),
	VERT( 0x428c95d6, 0x42be8bc6, 0x410181e2 ),
	NORM( 0x3e3a1d39, 0x3f478a98, 0x3f197965 ),
	VERT( 0x4286c7b6, 0x42bb90aa, 0x411c5745 ),
	NORM( 0xbc8d654a, 0x3f2da5a5, 0x3f3c0d0e ),
	VERT( 0x428079b0, 0x42b771f9, 0x41326c94 ),
	NORM( 0xbe30e8b6, 0x3f14d210, 0x3f4b8cab ),
	VERT( 0x42752a7b, 0x42b24153, 0x413c5882 ),
	NORM( 0xbeb29bb0, 0x3eebd29d, 0x3f50f1b9 ),
	VERT( 0x426b077d, 0x42acc0ca, 0x413c93c5 ),
	NORM( 0xbf0c4bfd, 0x3e9004ce, 0x3f49a967 ),
	VERT( 0x4263346e, 0x42a624b0, 0x4129da8f ),
	NORM( 0xbf36759d, 0x3d71ff90, 0x3f32edf9 ),
	VERT( 0x425e48b4, 0x42a00e7c, 0x410ea3d3 ),
	NORM( 0xbf4f906a, 0xbe0bb10c, 0x3f11b7a0 ),
	VERT( 0x425c9a83, 0x429a826f, 0x40d3327d ),
	NORM( 0xbf5b3e0b, 0xbeb92af1, 0x3ebca5e4 ),
	VERT( 0x425e48b4, 0x4295e11f, 0x4074e383 ),
	NORM( 0xbf5175c5, 0xbf0e51de, 0x3e161208 ),
	VERT( 0x4263346d, 0x42927a4e, 0x3f4877b0 ),
	NORM( 0xbf3581fb, 0xbf33a19d, 0xbd8fe5e7 ),
	VERT( 0x426b03f4, 0x429087e7, 0xc0148fb2 ),
	NORM( 0xbf0ea37f, 0xbf4a6462, 0xbe820a68 ),
	VERT( 0x42752a7c, 0x42902aa4, 0xc0a8b9e8 ),
	NORM( 0xbec1f184, 0xbf533377, 0xbed6b95e ),
	VERT( 0x428079b0, 0x4291682e, 0xc0fbc38c ),
	NORM( 0xbe383690, 0xbf4c8c50, 0xbf12e288 ),
	VERT( 0x4286c7b6, 0x42942ae5, 0xc11ed6e2 ),
	NORM( 0xbadfb1b5, 0xbf389dde, 0xbf315938 ),
	VERT( 0x428c95d7, 0x42978846, 0xc1369a28 ),
	NORM( 0x3e49ab57, 0xbf150992, 0xbf49f207 ),
	VERT( 0x4291fdf2, 0x429c7ff9, 0xc13e1024 ),
	NORM( 0x3ecddd1a, 0xbec8c6ba, 0xbf53cf3a ),
	VERT( 0x4296a281, 0x42a23e19, 0xc138a79a ),
	NORM( 0x3f10a223, 0xbe4382c1, 0xbf4d7eb4 ),
	VERT( 0x429a3285, 0x42a85e74, 0xc126bede ),
	NORM( 0x3f3078ef, 0x3cb9bb1f, 0xbf395d2e ),
	VERT( 0x42bd1115, 0xbfaed1f0, 0x429fffa4 ),
	NORM( 0x3f64b8da, 0xbee25f9a, 0x3da22e38 ),
	VERT( 0x42bdf5dd, 0x3f8f3d3b, 0x42a57b8e ),
	NORM( 0x3f6ca618, 0xbe8a1fc9, 0x3e8a0a48 ),
	VERT( 0x42bd1115, 0x40771ba1, 0x42aa73c9 ),
	NORM( 0x3f64bbab, 0xbda247a5, 0x3ee25313 ),
	VERT( 0x42ba7254, 0x40d58c64, 0x42ae91a5 ),
	NORM( 0x3f4d81ea, 0x3dee4269, 0x3f15b7fb ),
	VERT( 0x42b64751, 0x4115d46f, 0x42b18d4e ),
	NORM( 0x3f285dbf, 0x3e9c1ed3, 0x3f3056c6 ),
	VERT( 0x42b0d8c3, 0x413c0292, 0x42b332bb ),
	NORM( 0x3eef3ff8, 0x3ef296e3, 0x3f3f15c1 ),
	VERT( 0x42aa856c, 0x415ab66d, 0x42b36533 ),
	NORM( 0x3e7ab205, 0x3f1c4663, 0x3f40d64a ),
	VERT( 0x42a3bba8, 0x416fd86f, 0x42b22147 ),
	NORM( 0x3bac5e7a, 0x3f349bfb, 0x3f356c67 ),
	VERT( 0x429cf1e4, 0x4179f7d1, 0x42af7d07 ),
	NORM( 0xbe7059f6, 0x3f40955b, 0x3f1d990b ),
	VERT( 0x42969e8d, 0x41786414, 0x42aba68b ),
	NORM( 0xbee7e22d, 0x3f3f51b9, 0x3ef8ebdf ),
	VERT( 0x4290e5ae, 0x416c767c, 0x42a6ddbc ),
	NORM( 0xbf28157a, 0x3f2fe41c, 0x3e9f534a ),
	VERT( 0x428d2f0d, 0x41538717, 0x42a19cac ),
	NORM( 0xbf4e13e3, 0x3f150465, 0x3deadc7f ),
	VERT( 0x428a663b, 0x41326c86, 0x429bdf16 ),
	NORM( 0xbf642137, 0x3ee52880, 0xbd98b97f ),
	VERT( 0x42898173, 0x410aaaa6, 0x4296632e ),
	NORM( 0xbf6ca27a, 0x3e8a2347, 0xbe8a1f96 ),
	VERT( 0x428a663b, 0x40bd96c0, 0x42916af1 ),
	NORM( 0xbf648669, 0x3d9db74a, 0xbee35d4b ),
	VERT( 0x428d04fc, 0x40473063, 0x428d4d16 ),
	NORM( 0xbf4e7ba4, 0xbde501ba, 0xbf149912 ),
	VERT( 0x4290d78c, 0x3f12a00e, 0x428a6c0a ),
	NORM( 0xbf292eb2, 0xbe9b11f5, 0xbf2fc9e0 ),
	VERT( 0x42969e8d, 0xbffb8295, 0x4288abfe ),
	NORM( 0xbeeb014d, 0xbef59c80, 0xbf3f6fbc ),
	VERT( 0x429cf1e4, 0xc07890ce, 0x42887987 ),
	NORM( 0xbe706470, 0xbf1d8578, 0xbf40a48d ),
	VERT( 0x42a3bba8, 0xc0a68c54, 0x4289bd74 ),
	NORM( 0x3ba3cd6f, 0xbf35668c, 0xbf34a1fd ),
	VERT( 0x42aa856c, 0xc0bacb28, 0x428c61b3 ),
	NORM( 0x3e7a8ca7, 0xbf40d98c, 0xbf1c461b ),
	VERT( 0x42b0d8c3, 0xc0b7a3a4, 0x4290382f ),
	NORM( 0x3eef7a9e, 0xbf3f0f1a, 0xbef271f9 ),
	VERT( 0x42b64751, 0xc09d4cce, 0x4294fdf3 ),
	NORM( 0x3f286384, 0xbf304f5e, 0xbe9c2766 ),
	VERT( 0x42ba7254, 0xc05b2465, 0x429a5fbc ),
	NORM( 0x3f4d7638, 0xbf15c38d, 0xbdeef65d ),
	VERT( 0x429aa12a, 0xc1b47ff5, 0x42ca645b ),
	NORM( 0x3f43948b, 0xbf199bfe, 0x3e72eef0 ),
	VERT( 0x429b622e, 0xc1a14bcb, 0x42d00b75 ),
	NORM( 0x3f4a5a76, 0xbeddc2f2, 0x3eddc305 ),
	VERT( 0x429aa129, 0xc18aaf64, 0x42d4d880 ),
	NORM( 0x3f4397f7, 0xbe7302ec, 0x3f1995a9 ),
	VERT( 0x42986b43, 0xc1646a70, 0x42d877b8 ),
	NORM( 0x3f2fbbed, 0xbccfc1a7, 0x3f3a0a95 ),
	VERT( 0x4294e70c, 0xc133109b, 0x42daa9ef ),
	NORM( 0x3f100247, 0x3e415a54, 0x3f4e0f71 ),
	VERT( 0x429051dd, 0xc104ae3a, 0x42db48d5 ),
	NORM( 0x3eccda63, 0x3ec81dd8, 0x3f5435cc ),
	VERT( 0x428afbaa, 0xc0b8d92d, 0x42da4994 ),
	NORM( 0x3e571171, 0x3f11193d, 0x3f4bf0a1 ),
	VERT( 0x4285418d, 0xc07427bb, 0x42d7bd94 ),
	NORM( 0x3bad8a42, 0x3f344cbe, 0x3f35bb23 ),
	VERT( 0x427f0ee0, 0xc022a7c0, 0x42d3d13f ),
	NORM( 0xbe4d18b8, 0x3f4b2ff1, 0x3f130b3b ),
	VERT( 0x4274627a, 0xc002bf9b, 0x42cec90a ),
	NORM( 0xbec8ce3c, 0x3f542218, 0x3ecc7f53 ),
	VERT( 0x426b381c, 0xc0169c53, 0x42c8fcbe ),
	NORM( 0xbf0eb6ba, 0x3f4e800e, 0x3e490e09 ),
	VERT( 0x42642faf, 0xc05ce327, 0x42c2d184 ),
	NORM( 0xbf2f2c4e, 0x3f3a9d07, 0xbca2ab15 ),
	VERT( 0x425fc3e3, 0xc0a86535, 0x42bcb2f9 ),
	NORM( 0xbf438b5c, 0x3f19fd3f, 0xbe6f85f8 ),
	VERT( 0x425e41da, 0xc0f535d3, 0x42b70be0 ),
	NORM( 0xbf4a819d, 0x3edd7b76, 0xbedd7b77 ),
	VERT( 0x425fc3e3, 0xc127d3bb, 0x42b23ed5 ),
	NORM( 0xbf438581, 0x3e6f6166, 0xbf1a083c ),
	VERT( 0x42642faf, 0xc158c80f, 0x42ae9f9c ),
	NORM( 0xbf2f16c1, 0x3c9b7ca5, 0xbf3ab2c7 ),
	VERT( 0x426b381c, 0xc18510f8, 0x42ac6d63 ),
	NORM( 0xbf0e98b8, 0xbe49c969, 0xbf4e895c ),
	VERT( 0x4274627b, 0xc19c4224, 0x42abce7e ),
	NORM( 0xbec8ad36, 0xbecc8856, 0xbf5427bc ),
	VERT( 0x427f0ee0, 0xc1b062f7, 0x42accdbf ),
	NORM( 0xbe4cef7b, 0xbf130cf3, 0xbf4b314b ),
	VERT( 0x4285418d, 0xc1c01447, 0x42af59c0 ),
	NORM( 0x3ba71006, 0xbf35b749, 0xbf3450b8 ),
	VERT( 0x428afbaa, 0xc1ca444c, 0x42b34615 ),
	NORM( 0x3e573d89, 0xbf4bf3d6, 0xbf1110a4 ),
	VERT( 0x429051dd, 0xc1ce414f, 0x42b84e48 ),
	NORM( 0x3ecca9d4, 0xbf543bb7, 0xbec8366c ),
	VERT( 0x4294e70c, 0xc1cbc5ba, 0x42be1a94 ),
	NORM( 0x3f0fd99f, 0xbf4e240d, 0xbe41dedc ),
	VERT( 0x42986b43, 0xc1c2fcdb, 0x42c445cf ),
	NORM( 0x3f2fb233, 0xbf3a141b, 0x3cce89b0 ),
	VERT( 0x4257d021, 0xc21beb85, 0x42eb3a20 ),
	NORM( 0x3f15c16a, 0xbf39b4a9, 0x3eb9b77a ),
	VERT( 0x4258f59c, 0xc212906d, 0x42f100b9 ),
	NORM( 0x3f1aeeb5, 0xbf101d4e, 0x3f1017f4 ),
	VERT( 0x4257d021, 0xc207033c, 0x42f5ae44 ),
	NORM( 0x3f15c29f, 0xbeb9f847, 0x3f39a379 ),
	VERT( 0x425473ad, 0xc1f41aea, 0x42f8f123 ),
	NORM( 0x3f069780, 0xbe0df447, 0x3f56da3f ),
	VERT( 0x424f1aea, 0xc1d9226a, 0x42fa9075 ),
	NORM( 0x3edc98d6, 0x3dc53737, 0x3f65b371 ),
	VERT( 0x42482319, 0xc1bef377, 0x42fa6fea ),
	NORM( 0x3e9d04fa, 0x3ea6514b, 0x3f6508db ),
	VERT( 0x424005ce, 0xc1a756e5, 0x42f891b9 ),
	NORM( 0x3e253818, 0x3f082c06, 0x3f54cec5 ),
	VERT( 0x42375099, 0xc193e896, 0x42f5167b ),
	NORM( 0x3b938e40, 0x3f33fbc7, 0x3f360bae ),
	VERT( 0x422e9b64, 0xc185fb9b, 0x42f03ae9 ),
	NORM( 0xbe1caef5, 0x3f538f3b, 0x3f0ab93b ),
	VERT( 0x42267e19, 0xc17d05b3, 0x42ea53c5 ),
	NORM( 0xbe99a18d, 0x3f6498b0, 0x3eabcd80 ),
	VERT( 0x421f8647, 0xc17c015a, 0x42e3c807 ),
	NORM( 0xbeda7273, 0x3f65eb4b, 0x3dda2059 ),
	VERT( 0x421a2d84, 0xc1847df2, 0x42dd09e8 ),
	NORM( 0xbf062dbb, 0x3f5770ef, 0xbe05b2c1 ),
	VERT( 0x4216d112, 0xc1918976, 0x42d68f04 ),
	NORM( 0xbf15dec8, 0x3f3a1ff0, 0xbeb7a83a ),
	VERT( 0x4215ab98, 0xc1a43fa4, 0x42d0c86b ),
	NORM( 0xbf1b3bcc, 0x3f0feee6, 0xbf0ff35a ),
	VERT( 0x4216d113, 0xc1bb5a08, 0x42cc1ae1 ),
	NORM( 0xbf15d94a, 0x3eb798eb, 0xbf3a2823 ),
	VERT( 0x421a2d84, 0xc1d54595, 0x42c8d7ff ),
	NORM( 0xbf061694, 0x3e056258, 0xbf578277 ),
	VERT( 0x421f8647, 0xc1f03e1b, 0x42c738ac ),
	NORM( 0xbeda3540, 0xbddaab67, 0xbf65f7c1 ),
	VERT( 0x42267e1a, 0xc2053686, 0x42c75939 ),
	NORM( 0xbe99281b, 0xbeac57c6, 0xbf64930a ),
	VERT( 0x422e9b63, 0xc21104d0, 0x42c93768 ),
	NORM( 0xbe1c03ac, 0xbf0ae53b, 0xbf537a44 ),
	VERT( 0x42375099, 0xc21abbf1, 0x42ccb2a8 ),
	NORM( 0x3b92bafb, 0xbf360f06, 0xbf33f868 ),
	VERT( 0x424005ce, 0xc221b271, 0x42d18e3a ),
	NORM( 0x3e2500b6, 0xbf54d3a9, 0xbf082893 ),
	VERT( 0x4248231a, 0xc2256ed3, 0x42d7755e ),
	NORM( 0x3e9d2166, 0xbf650dc7, 0xbea61b4d ),
	VERT( 0x424f1aea, 0xc225afea, 0x42de011b ),
	NORM( 0x3edca8f7, 0xbf65b1c6, 0xbdc49259 ),
	VERT( 0x425473af, 0xc2227147, 0x42e4bf3c ),
	NORM( 0x3f0687bd, 0xbf56eafe, 0x3e0d4d6c ),
	VERT( 0x41cc3406, 0xc2497546, 0x4300ff7f ),
	NORM( 0x3ebc87a7, 0xbf5025d5, 0x3ee6dd5a ),
	VERT( 0x41cda1f4, 0xc240459d, 0x4303eda9 ),
	NORM( 0x3ec2fb1e, 0xbf27631f, 0x3f275f0a ),
	VERT( 0x41cc3406, 0xc2348cff, 0x43063991 ),
	NORM( 0x3ebc7a19, 0xbee6b8ff, 0x3f5032fa ),
	VERT( 0x41c8032c, 0xc22717d7, 0x4307bb2a ),
	NORM( 0x3ea95b49, 0xbe5ec79c, 0x3f6b150e ),
	VERT( 0x41c15885, 0xc218d0f7, 0x4308582b ),
	NORM( 0x3e8adf9a, 0x3cfe7b81, 0x3f76465c ),
	VERT( 0x41b8a85d, 0xc20ab16f, 0x430805e1 ),
	NORM( 0x3e45a6dc, 0x3e8ed4c2, 0x3f70d1df ),
	VERT( 0x41ae8a4a, 0xc1fb5f48, 0x4306c9e9 ),
	NORM( 0x3dcfaba5, 0x3f021132, 0x3f5af674 ),
	VERT( 0x41a3aecc, 0xc1e55d00, 0x4304b9cb ),
	NORM( 0x3b30b652, 0x3f33e48d, 0x3f36233b ),
	VERT( 0x4198d34c, 0xc1d4dc0f, 0x4301f983 ),
	NORM( 0xbdc5b507, 0x3f598247, 0x3f04b8d5 ),
	VERT( 0x418eb539, 0xc1cafc4e, 0x42fd7221 ),
	NORM( 0xbe41e7cc, 0x3f702c61, 0x3e945c99 ),
	VERT( 0x41860510, 0xc1c86a00, 0x42f6625c ),
	NORM( 0xbe89d2c4, 0x3f7653c3, 0x3d27e272 ),
	VERT( 0x417eb4d4, 0xc1cd5205, 0x42ef3eee ),
	NORM( 0xbea93543, 0x3f6b869f, 0xbe579e79 ),
	VERT( 0x41765323, 0xc1d95ed0, 0x42e8845a ),
	NORM( 0xbebd0302, 0x3f50972f, 0xbee4dd0a ),
	VERT( 0x4173774a, 0xc1ebbe1a, 0x42e2a809 ),
	NORM( 0xbec3bfb2, 0x3f2740bd, 0xbf27480b ),
	VERT( 0x41765323, 0xc20197af, 0x42de1037 ),
	NORM( 0xbebcdea8, 0x3ee48c12, 0xbf50b59a ),
	VERT( 0x417eb4d4, 0xc20f0cd5, 0x42db0d05 ),
	NORM( 0xbea90e0d, 0x3e562c1b, 0xbf6ba2c7 ),
	VERT( 0x41860510, 0xc21d53b7, 0x42d9d300 ),
	NORM( 0xbe89bdca, 0xbd2bb174, 0xbf765412 ),
	VERT( 0x418eb53a, 0xc22b733f, 0x42da7795 ),
	NORM( 0xbe418fc3, 0xbe94bc2f, 0xbf70220a ),
	VERT( 0x4198d34d, 0xc238750b, 0x42dcef84 ),
	NORM( 0xbdc4f4d3, 0xbf0551db, 0xbf592758 ),
	VERT( 0x41a3d027, 0xc24382f4, 0x42e126f2 ),
	NORM( 0x3abf138a, 0xbf3624f8, 0xbf33e308 ),
	VERT( 0x41ae8a4b, 0xc24bb6a5, 0x42e69054 ),
	NORM( 0x3dcce36c, 0xbf5ac242, 0xbf027a83 ),
	VERT( 0x41b8a861, 0xc250a689, 0x42ed1139 ),
	NORM( 0x3e45768d, 0xbf70d1db, 0xbe8ee593 ),
	VERT( 0x41c15887, 0xc251efad, 0x42f420fc ),
	NORM( 0x3e8ac026, 0xbf764906, 0xbd029e9f ),
	VERT( 0x41c8032f, 0xc24f7ba8, 0x42fb446e ),
	NORM( 0x3ea963ba, 0xbf6b1858, 0x3e5e765f ),
	VERT( 0xc1c4e90b, 0x42355ad7, 0xc02f4b68 ),
	NORM( 0xbd3d68d6, 0x3f2b98aa, 0xbf3d9b37 ),
	VERT( 0xc1b0540e, 0x421ef739, 0xc0ef2b45 ),
	NORM( 0xb97add7e, 0x3f2603b6, 0xbf42df4a ),
	VERT( 0xc1c4f046, 0x421ea0ba, 0xc0ec7756 ),
	NORM( 0xbd3b786f, 0x3f25e09a, 0xbf42a2fb ),
	VERT( 0xc1c4f598, 0x4203b44a, 0xc155cad6 ),
	NORM( 0xbd3cf219, 0x3f2b2bcc, 0xbf3dfdfc ),
	VERT( 0xc1c501fa, 0x4143fb6c, 0xc20117fc ),
	NORM( 0xbd031bb6, 0xbcbd6fcf, 0xbf7fcce2 ),
	VERT( 0xc1c4e90b, 0x427523cb, 0x415350f6 ),
	NORM( 0xbd3cceae, 0x3f51f530, 0xbf11feac ),
	VERT( 0xc1b055ff, 0x42757e11, 0x4151e7dd ),
	NORM( 0xb9fd8b6f, 0x3f520883, 0xbf125cd6 ),
	VERT( 0xc1c4f1ff, 0x42797667, 0x41790805 ),
	NORM( 0xbcd504c0, 0x3f7afb44, 0x3e47ffa8 ),
	VERT( 0xc1b045d9, 0x427532a9, 0x418465d6 ),
	NORM( 0x39974254, 0x3f65d1fd, 0x3ee18dcd ),
	VERT( 0xc1c501b5, 0x4274d1f8, 0x41852738 ),
	NORM( 0xbc873065, 0x3f671f2c, 0x3edc020d ),
	VERT( 0xc1c2a80b, 0x42733456, 0x41b51d38 ),
	NORM( 0x3a906c97, 0x3f38f6d5, 0x3f30fc81 ),
	VERT( 0xc1b04663, 0x4273919d, 0x41b462aa ),
	NORM( 0xba6ec87c, 0x3f3d35e5, 0x3f2c7078 ),
	VERT( 0xc259546a, 0xc24e9218, 0x430780c7 ),
	NORM( 0xbe64434d, 0xbf3076e2, 0x3f3076fd ),
	VERT( 0xc28b79f6, 0xc240459d, 0x4303eda9 ),
	NORM( 0xbec2fbe3, 0xbf2760f3, 0x3f2760fe ),
	VERT( 0xc28b1e7b, 0xc2497546, 0x4300ff7f ),
	NORM( 0xbebc7500, 0xbf5025da, 0x3ee6ec83 ),
	VERT( 0xc258d375, 0xc257b1ec, 0x43048ea8 ),
	NORM( 0xbe5c4b00, 0xbf5946e9, 0x3ef755bf ),
	VERT( 0xc2aa0b5b, 0xc22a9d8b, 0x42fd0749 ),
	NORM( 0xbefd4943, 0xbf1d513f, 0x3f1d5144 ),
	VERT( 0xc2a98ecb, 0xc233e095, 0x42f734a7 ),
	NORM( 0xbef4cd00, 0xbf467dee, 0x3ed33c47 ),
	VERT( 0xc258d375, 0xc242c9a4, 0x4309c8ba ),
	NORM( 0xbe5bdfa2, 0xbef78d65, 0x3f593ddd ),
	VERT( 0xc28b1e7b, 0xc2348cff, 0x43063991 ),
	NORM( 0xbebc74fd, 0xbee6b0e0, 0x3f503662 ),
	VERT( 0xc2a98ecb, 0xc21ef84d, 0x4300d466 ),
	NORM( 0xbef4cfa7, 0xbed331d0, 0x3f467fe5 ),
	VERT( 0xc257595e, 0xc235261d, 0x430b3ebc ),
	NORM( 0xbe45efa3, 0xbe8087ac, 0x3f72cfb4 ),
	VERT( 0xc28a1244, 0xc22717d7, 0x4307bb2a ),
	NORM( 0xbea96d88, 0xbe5e96c4, 0x3f6b14a9 ),
	VERT( 0xc2a82197, 0xc211bbf7, 0x43026432 ),
	NORM( 0xbedbe327, 0xbe3ae2e2, 0x3f626b39 ),
	VERT( 0xc254ffeb, 0xc2269575, 0x430bc94b ),
	NORM( 0xbe221dcb, 0x3b4efc22, 0x3f7cc527 ),
	VERT( 0xc288679a, 0xc218d0f7, 0x4308582b ),
	NORM( 0xbe8aed35, 0x3d003b55, 0x3f7643ed ),
	VERT( 0xc2a5dca2, 0xc203cf7a, 0x430317cc ),
	NORM( 0xbeb43f92, 0x3d754652, 0x3f6f1edc ),
	VERT( 0xc251f018, 0xc21815cd, 0x430b5ef9 ),
	NORM( 0xbde6006f, 0x3e848d1b, 0x3f75985b ),
	VERT( 0xc2863b90, 0xc20ab16f, 0x430805e1 ),
	NORM( 0xbe457681, 0x3e8ee594, 0x3f70d1db ),
	VERT( 0xc2a2e784, 0xc1ec4b73, 0x4302e2f4 ),
	NORM( 0xbe7fe7c2, 0x3e99950f, 0x3f6baeac ),
	VERT( 0xc24e5f50, 0xc20aa40b, 0x430a0704 ),
	NORM( 0xbd71499b, 0x3efe646c, 0x3f5da6fa ),
	VERT( 0xc283b40c, 0xc1fb5f48, 0x4306c9e9 ),
	NORM( 0xbdcf3a95, 0x3f021289, 0x3f5af755 ),
	VERT( 0xc29f75d6, 0xc1d35a38, 0x4301c947 ),
	NORM( 0xbe05196c, 0x3f05421e, 0x3f5808e6 ),
	VERT( 0xc24a8bc6, 0xc1fe558d, 0x4307d8dc ),
	NORM( 0xbaa14d15, 0x3f33d114, 0x3f3636b8 ),
	VERT( 0xc280fd2c, 0xc1e55d00, 0x4304b9cb ),
	NORM( 0xbb2b118c, 0x3f33e393, 0x3f362437 ),
	VERT( 0xc29bc3ad, 0xc1be7e56, 0x42ffbbec ),
	NORM( 0xbae76d53, 0x3f347298, 0x3f3596b4 ),
	VERT( 0xc246b83d, 0xc1ece443, 0x4304fa89 ),
	NORM( 0xbdd24c02, 0x3f6073de, 0x3ef08cab ),
	VERT( 0xc27c8c98, 0xc1d4dc0f, 0x4301f983 ),
	NORM( 0x3dc5e45f, 0x3f597ca2, 0x3f04c0fa ),
	VERT( 0xc2981184, 0xc1af23c9, 0x42fa84f6 ),
	NORM( 0x3e02818e, 0x3f5762c3, 0x3f0676b1 ),
	VERT( 0xc2432774, 0xc1e2249c, 0x43019e19 ),
	NORM( 0xbe335cc1, 0x3f75c2ea, 0x3e5faa98 ),
	VERT( 0xc2777d8f, 0xc1cafc4e, 0x42fd7221 ),
	NORM( 0x3e41f23f, 0x3f702695, 0x3e947eb9 ),
	VERT( 0xc2949fd6, 0xc1a6565e, 0x42f448a7 ),
	NORM( 0x3e7e31fe, 0x3f6b6be5, 0x3e9be015 ),
	VERT( 0xc24017a1, 0xc1ded1ff, 0x42fbfc5d ),
	NORM( 0x3e1baa14, 0x3f7cffc2, 0x3c66e363 ),
	VERT( 0xc273257a, 0xc1c86a00, 0x42f6625c ),
	NORM( 0x3e89e654, 0x3f76500c, 0x3d295090 ),
	VERT( 0xc291aab8, 0xc1a4afa4, 0x42ed73c5 ),
	NORM( 0x3eb39f61, 0x3f6f2a74, 0x3d835d97 ),
	VERT( 0xc23dbe2e, 0xc1e3267f, 0x42f4b40b ),
	NORM( 0x3e3e3496, 0x3f73b29a, 0xbe795c86 ),
	VERT( 0xc26fd027, 0xc1cd5205, 0x42ef3eee ),
	NORM( 0x3ea956b0, 0x3f6b8592, 0xbe5747ce ),
	VERT( 0xc28f65c4, 0xc1aa4c6d, 0x42e67d88 ),
	NORM( 0x3edbd7b4, 0x3f628ee0, 0xbe386118 ),
	VERT( 0xc23c4418, 0xc1eed686, 0x42ede248 ),
	NORM( 0x3e538b26, 0x3f59c192, 0xbef78f12 ),
	VERT( 0xc26db7bb, 0xc1d95ed0, 0x42e8845a ),
	NORM( 0x3ebd0073, 0x3f509c70, 0xbee4cbfd ),
	VERT( 0xc28df88f, 0xc1b6cada, 0x42dfdf5d ),
	NORM( 0x3ef50dc7, 0x3f468fd5, 0xbed2adaf ),
	VERT( 0xc23bc323, 0xc2008b19, 0x42e7fe0e ),
	NORM( 0x3e59dd8c, 0x3f317f9a, 0xbf303fc1 ),
	VERT( 0xc26d00c5, 0xc1ebbe1a, 0x42e2a809 ),
	NORM( 0x3ec3c251, 0x3f274401, 0xbf274403 ),
	VERT( 0xc28d7bff, 0xc1c950e4, 0x42da0cbb ),
	NORM( 0x3efd8fc6, 0x3f1d3a33, 0xbf1d4be7 ),
	VERT( 0xc23c4418, 0xc20c538a, 0x42e36e24 ),
	NORM( 0x3e52ad6c, 0x3ef76fe5, 0xbf59d7dc ),
	VERT( 0xc26db7bb, 0xc20197af, 0x42de1037 ),
	NORM( 0x3ebd0d91, 0x3ee48efb, 0xbf50aa2f ),
	VERT( 0xc28df88f, 0xc1e09b69, 0x42d56b39 ),
	NORM( 0x3ef4f5fa, 0x3ed26483, 0xbf46aa90 ),
	VERT( 0xc26fd027, 0xc20f0cd5, 0x42db0d05 ),
	NORM( 0x3ea94358, 0x3e5650f2, 0xbf6b971e ),
	VERT( 0xc23dbe2e, 0xc219f711, 0x42e08222 ),
	NORM( 0x3e3dc916, 0x3e748680, 0xbf740631 ),
	VERT( 0xc28f65c4, 0xc1fb1414, 0x42d24b9e ),
	NORM( 0x3edbb34e, 0x3e38ccd1, 0xbf629238 ),
	VERT( 0xc273257a, 0xc21d53b7, 0x42d9d300 ),
	NORM( 0x3e89d6fd, 0xbd2a93d6, 0xbf765152 ),
	VERT( 0xc24017a1, 0xc22887b8, 0x42df6d02 ),
	NORM( 0x3e1b668e, 0xbc838e6f, 0xbf7d0063 ),
	VERT( 0xc291aab8, 0xc20b7689, 0x42d0e469 ),
	NORM( 0x3eb377f8, 0xbd813302, 0xbf6f3691 ),
	VERT( 0xc2777d8f, 0xc22b733f, 0x42da7795 ),
	NORM( 0x3e41ce58, 0xbe94a7a7, 0xbf702210 ),
	VERT( 0xc2432774, 0xc2370765, 0x42e041a8 ),
	NORM( 0x3ddbd0da, 0xbe8b5394, 0xbf74cd54 ),
	VERT( 0xc2949fd6, 0xc2192049, 0x42d14e1a ),
	NORM( 0x3e7d5eb8, 0xbe9c3392, 0xbf6b6c4c ),
	VERT( 0xc246b83d, 0xc2447925, 0x42e2f193 ),
	NORM( 0xbeb152fe, 0xbecd44da, 0xbf591ec8 ),
	VERT( 0xc27c8c99, 0xc238750b, 0x42dcef84 ),
	NORM( 0x3dc2bd97, 0xbf05b1a2, 0xbf58f46e ),
	VERT( 0xc2981184, 0xc22598e8, 0x42d38173 ),
	NORM( 0x3e01b1ac, 0xbf06d07e, 0xbf573274 ),
	VERT( 0xc24a7262, 0xc2501dea, 0x42e785de ),
	NORM( 0xbe3d3f88, 0xbf2e60cc, 0xbf355b07 ),
	VERT( 0xc2810583, 0xc24382f4, 0x42e126f2 ),
	NORM( 0xbb1cbc7b, 0xbf362f3f, 0xbf33d875 ),
	VERT( 0xc29bc3ad, 0xc23006d2, 0x42d7581a ),
	NORM( 0xbabce93d, 0xbf3589f3, 0xbf347f79 ),
	VERT( 0xc283b40c, 0xc24bb6a5, 0x42e69054 ),
	NORM( 0xbdccd656, 0xbf5a9c90, 0xbf02b9f3 ),
	VERT( 0xc24e5f50, 0xc258ab0c, 0x42ed0a87 ),
	NORM( 0xbd6bdc11, 0xbf5d323e, 0xbf0006e9 ),
	VERT( 0xc29f75d6, 0xc237b41c, 0x42dc8f0f ),
	NORM( 0xbe04e8c7, 0xbf57fc24, 0xbf0559d4 ),
	VERT( 0xc251f018, 0xc25e0ae9, 0x42f3c368 ),
	NORM( 0xbde50f95, 0xbf758bcf, 0xbe8503f0 ),
	VERT( 0xc2863b91, 0xc250a689, 0x42ed1139 ),
	NORM( 0xbe45a6ca, 0xbf70d1de, 0xbe8ed4d0 ),
	VERT( 0xc2a2e784, 0xc23c1ad3, 0x42e2cb5f ),
	NORM( 0xbe7fe8da, 0xbf6bbb11, 0xbe99486e ),
	VERT( 0xc288679b, 0xc251efad, 0x42f420fc ),
	NORM( 0xbe8ad6a4, 0xbf76462b, 0xbd020682 ),
	VERT( 0xc254ffeb, 0xc25fb42e, 0x42fb033c ),
	NORM( 0xbe215e76, 0xbf7ccc8f, 0xbb8886cf ),
	VERT( 0xc2a5dca2, 0xc23cee31, 0x42e9a03e ),
	NORM( 0xbeb41afb, 0xbf6f267c, 0xbd748ffd ),
	VERT( 0xc257595e, 0xc25d89f2, 0x430125c8 ),
	NORM( 0xbe451d14, 0xbf72e860, 0x3e801de9 ),
	VERT( 0xc28a1245, 0xc24f7ba8, 0x42fb446e ),
	NORM( 0xbea95a18, 0xbf6b178c, 0x3e5ea122 ),
	VERT( 0xc2a82197, 0xc23a1fc8, 0x42f0967e ),
	NORM( 0xbedbe1df, 0xbf626a46, 0x3e3afb3f ),
	VERT( 0xc2c48c47, 0xc212906d, 0x42f100b9 ),
	NORM( 0xbf1aeef5, 0xbf101a7d, 0x3f101a80 ),
	VERT( 0xc2c3f98a, 0xc21beb85, 0x42eb3a20 ),
	NORM( 0xbf15c3fc, 0xbf39b005, 0x3eb9c1bf ),
	VERT( 0xc2dec08b, 0xc1e2d67a, 0x42e06e21 ),
	NORM( 0xbf351787, 0xbefffea9, 0x3effccc4 ),
	VERT( 0xc2de1062, 0xc1f5cc7d, 0x42dab77e ),
	NORM( 0xbf2f0718, 0xbf2a1134, 0x3e9aa40f ),
	VERT( 0xc2c3f98a, 0xc207033c, 0x42f5ae44 ),
	NORM( 0xbf15cad8, 0xbeb9e29e, 0x3f39a243 ),
	VERT( 0xc2de1062, 0xc1cbfbee, 0x42e52ba2 ),
	NORM( 0xbf2f09fb, 0xbe9a8458, 0x3f2a1570 ),
	VERT( 0xc2c24b50, 0xc1f41aea, 0x42f8f123 ),
	NORM( 0xbf069a80, 0xbe0db643, 0x3f56daee ),
	VERT( 0xc2dc0be8, 0xc1b2cb90, 0x42e89d4e ),
	NORM( 0xbf1d3b68, 0xbdaa0099, 0x3f48e77b ),
	VERT( 0xc2bf9eee, 0xc1d9226a, 0x42fa9075 ),
	NORM( 0xbedc7cbc, 0x3dc581f4, 0x3f65b92e ),
	VERT( 0xc2d8d64f, 0xc198fcde, 0x42ea8713 ),
	NORM( 0xbf00ada8, 0x3e11d679, 0x3f5a491c ),
	VERT( 0xc2bc2306, 0xc1bef377, 0x42fa6fea ),
	NORM( 0xbe9ce4be, 0x3ea65e89, 0x3f650bf9 ),
	VERT( 0xc2d4a797, 0xc1805201, 0x42eac78e ),
	NORM( 0xbeb6e402, 0x3eb765fb, 0x3f5cd3f9 ),
	VERT( 0xc2b81460, 0xc1a756e5, 0x42f891b9 ),
	NORM( 0xbe24f878, 0x3f082e4c, 0x3f54d066 ),
	VERT( 0xc2cfc8b4, 0xc154f2bb, 0x42e95a58 ),
	NORM( 0xbe3f7b46, 0x3f0cd545, 0x3f505a0f ),
	VERT( 0xc2b3b9c6, 0xc193e896, 0x42f5167b ),
	NORM( 0xbb90cb82, 0x3f33f8d9, 0x3f360e9d ),
	VERT( 0xc2ca8ea2, 0xc131e021, 0x42e6585a ),
	NORM( 0xbb1e87ed, 0x3f348e02, 0x3f357b51 ),
	VERT( 0xc2af5f2b, 0xc185fb9b, 0x42f03ae9 ),
	NORM( 0x3e1cb860, 0x3f53874a, 0x3f0ac4ad ),
	VERT( 0xc2c5548f, 0xc119d031, 0x42e1f607 ),
	NORM( 0x3e3a648f, 0x3f4fc3c1, 0x3f0e1f0a ),
	VERT( 0xc2ab5086, 0xc17d05b3, 0x42ea53c5 ),
	NORM( 0x3e99984d, 0x3f64948b, 0x3eabebd1 ),
	VERT( 0xc2c075ad, 0xc10e668f, 0x42dc7fe0 ),
	NORM( 0x3eb52a64, 0x3f5c9f42, 0x3eba150d ),
	VERT( 0xc2a7d49d, 0xc17c015a, 0x42e3c807 ),
	NORM( 0x3eda48f9, 0x3f65f391, 0x3dda8a6a ),
	VERT( 0xc2bc46f3, 0xc1106a65, 0x42d65528 ),
	NORM( 0x3f00777c, 0x3f5a3bd8, 0x3e160101 ),
	VERT( 0xc2a5283b, 0xc1847df2, 0x42dd09e8 ),
	NORM( 0x3f0620df, 0x3f577b2b, 0xbe05794b ),
	VERT( 0xc2b9115b, 0xc11fb88a, 0x42cfe17b ),
	NORM( 0x3f1d45bc, 0x3f48f8d9, 0xbda24ecd ),
	VERT( 0xc2a37a02, 0xc1918976, 0x42d68f04 ),
	NORM( 0x3f15d94c, 0x3f3a2821, 0xbeb798eb ),
	VERT( 0xc2b70ce1, 0xc13b45f6, 0x42c99565 ),
	NORM( 0x3f2f5045, 0x3f2a21ad, 0xbe990def ),
	VERT( 0xc2a2e745, 0xc1a43fa4, 0x42d0c86b ),
	NORM( 0x3f1b3bcb, 0x3f0ff347, 0xbf0feef9 ),
	VERT( 0xc2b65cb8, 0xc161320a, 0x42c3dec3 ),
	NORM( 0x3f3584e8, 0x3eff4157, 0xbeff53bf ),
	VERT( 0xc2a37a03, 0xc1bb5a08, 0x42cc1ae1 ),
	NORM( 0x3f15dec6, 0x3eb7a83d, 0xbf3a1ff1 ),
	VERT( 0xc2b70ce1, 0xc187738d, 0x42bf2142 ),
	NORM( 0x3f2f5bb0, 0x3e9941f7, 0xbf2a0a31 ),
	VERT( 0xc2a5283b, 0xc1d54595, 0x42c8d7ff ),
	NORM( 0x3f062697, 0x3e058b31, 0xbf5776eb ),
	VERT( 0xc2b9115b, 0xc1a0a3e8, 0x42bbaf94 ),
	NORM( 0x3f1d3e65, 0x3da11b28, 0xbf490275 ),
	VERT( 0xc2a7d49d, 0xc1f03e1b, 0x42c738ac ),
	NORM( 0x3eda6212, 0xbdda65bc, 0xbf65ee27 ),
	VERT( 0xc2bc46f3, 0xc1ba72a0, 0x42b9c5cd ),
	NORM( 0x3f005761, 0xbe16d151, 0xbf5a45c2 ),
	VERT( 0xc2ab5086, 0xc2053686, 0x42c75939 ),
	NORM( 0x3e997153, 0xbeac5c31, 0xbf6485ed ),
	VERT( 0xc2c075ad, 0xc1d31d7b, 0x42b98554 ),
	NORM( 0x3eb5259a, 0xbeba2ff9, 0xbf5c9a8f ),
	VERT( 0xc2af5f2b, 0xc21104d0, 0x42c93768 ),
	NORM( 0x3e1c56d3, 0xbf0ae6f6, 0xbf53754b ),
	VERT( 0xc2c5548f, 0xc1e8f618, 0x42baf287 ),
	NORM( 0x3e3a2108, 0xbf0e2e76, 0xbf4fbcfd ),
	VERT( 0xc2b3b9c6, 0xc21abbf1, 0x42ccb2a8 ),
	NORM( 0xbb956ff8, 0xbf360d22, 0xbf33fa49 ),
	VERT( 0xc2ca8ea2, 0xc1fa7f60, 0x42bdf486 ),
	NORM( 0xbb2dedf2, 0xbf357e28, 0xbf348b19 ),
	VERT( 0xc2b81460, 0xc221b271, 0x42d18e3a ),
	NORM( 0xbe252d68, 0xbf54d305, 0xbf082630 ),
	VERT( 0xc2cfc8b4, 0xc20343b0, 0x42c256d9 ),
	NORM( 0xbe3f4b31, 0xbf505ac9, 0xbf0cd847 ),
	VERT( 0xc2bc2306, 0xc2256ed3, 0x42d7755e ),
	NORM( 0xbe9d1f28, 0xbf6513a1, 0xbea5fd22 ),
	VERT( 0xc2d4a797, 0xc2061e1a, 0x42c7cd00 ),
	NORM( 0xbeb709ad, 0xbf5cd8c1, 0xbeb72954 ),
	VERT( 0xc2bf9eee, 0xc225afea, 0x42de011b ),
	NORM( 0xbedca692, 0xbf65b418, 0xbdc40f9f ),
	VERT( 0xc2d8d64f, 0xc2059d24, 0x42cdf7b9 ),
	NORM( 0xbf00c0ae, 0xbf5a4046, 0xbe119d52 ),
	VERT( 0xc2c24b51, 0xc2227147, 0x42e4bf3c ),
	NORM( 0xbf069039, 0xbf56e451, 0x3e0d6e97 ),
	VERT( 0xc2dc0be8, 0xc201c99a, 0x42d46b65 ),
	NORM( 0xbf1d3ad5, 0xbf48e7e3, 0x3daa03d1 ),
	VERT( 0xc2f373a7, 0xc1a14bcb, 0x42d00b75 ),
	NORM( 0xbf4a5a61, 0xbeddbeb9, 0x3eddc78c ),
	VERT( 0xc2f2b2a3, 0xc1b47ff5, 0x42ca645b ),
	NORM( 0xbf4396b7, 0xbf1997d6, 0x3e72fcfe ),
	VERT( 0xc303991e, 0xc11b83f5, 0x42bb2901 ),
	NORM( 0xbf5e29c1, 0xbeb3d152, 0x3eb3f481 ),
	VERT( 0xc3032d3e, 0xc14293eb, 0x42b596da ),
	NORM( 0xbf56bcb7, 0xbf055f0e, 0x3e21cac3 ),
	VERT( 0xc2f2b2a2, 0xc18aaf64, 0x42d4d880 ),
	NORM( 0xbf4395d5, 0xbe72f371, 0x3f1999e8 ),
	VERT( 0xc3032d3e, 0xc0dde57d, 0x42c00afe ),
	NORM( 0xbf56bc02, 0xbe21fa74, 0x3f055c93 ),
	VERT( 0xc2f07cbc, 0xc1646a70, 0x42d877b8 ),
	NORM( 0xbf2fb4e9, 0xbccedad3, 0x3f3a1176 ),
	VERT( 0xc301f0f7, 0xc07fa6fa, 0x42c3e7a3 ),
	NORM( 0xbf4101be, 0x3d39c327, 0x3f27c743 ),
	VERT( 0xc2ecf885, 0xc133109b, 0x42daa9ef ),
	NORM( 0xbf0ff5fb, 0x3e417a4f, 0x3f4e1628 ),
	VERT( 0xc2fff3af, 0xbf8cecf1, 0x42c67b91 ),
	NORM( 0xbf1e461e, 0x3e7c68e3, 0x3f3f0f0c ),
	VERT( 0xc2e86356, 0xc104ae3a, 0x42db48d5 ),
	NORM( 0xbeccc00b, 0x3ec82681, 0x3f543a1c ),
	VERT( 0xc2fad452, 0x3fc65080, 0x42c799cc ),
	NORM( 0xbee0d60e, 0x3edd670a, 0x3f499a24 ),
	VERT( 0xc2e30d23, 0xc0b8d92d, 0x42da4994 ),
	NORM( 0xbe56edbb, 0x3f1119e7, 0x3f4bf282 ),
	VERT( 0xc2f4dd35, 0x4071a597, 0x42c72ed4 ),
	NORM( 0xbe6b2862, 0x3f16cc08, 0x3f4657e3 ),
	VERT( 0xc2dd5306, 0xc07427bb, 0x42d7bd94 ),
	NORM( 0xbbad14be, 0x3f344d96, 0x3f35ba4e ),
	VERT( 0xc2ee7669, 0x40ada609, 0x42c541f4 ),
	NORM( 0xbb9baab0, 0x3f348b1d, 0x3f357d6d ),
	VERT( 0xc2d798e9, 0xc022a7c0, 0x42d3d13f ),
	NORM( 0x3e4cefb2, 0x3f4b3153, 0x3f130ce4 ),
	VERT( 0xc2e80f9c, 0x40cc73de, 0x42c1f4c3 ),
	NORM( 0x3e63005b, 0x3f45f23e, 0x3f181824 ),
	VERT( 0xc2d242b6, 0xc002bf9b, 0x42cec90a ),
	NORM( 0x3ec8ad40, 0x3f5427c0, 0x3ecc883d ),
	VERT( 0xc2e2187f, 0x40d32366, 0x42bd80d7 ),
	NORM( 0x3edc2770, 0x3f49665a, 0x3ee2c765 ),
	VERT( 0xc2cdad87, 0xc0169c53, 0x42c8fcbe ),
	NORM( 0x3f0eb4b9, 0x3f4e7c7d, 0x3e495f51 ),
	VERT( 0xc2dcf921, 0x40c13f99, 0x42b833e2 ),
	NORM( 0x3f1d7c6b, 0x3f3f280d, 0x3e818331 ),
	VERT( 0xc2ca2951, 0xc05ce327, 0x42c2d184 ),
	NORM( 0x3f2f31b9, 0x3f3a98a2, 0xbc9f77d9 ),
	VERT( 0xc2d90ae3, 0x409800e2, 0x42b26a5d ),
	NORM( 0x3f4115b0, 0x3f27af0d, 0x3d3ae454 ),
	VERT( 0xc2c7f36b, 0xc0a86535, 0x42bcb2f9 ),
	NORM( 0x3f438832, 0x3f1a0401, 0xbe6f69c4 ),
	VERT( 0xc2d69256, 0x40346d03, 0x42ac893d ),
	NORM( 0x3f56ae75, 0x3f05c850, 0xbe1d7c67 ),
	VERT( 0xc2c73266, 0xc0f535d3, 0x42b70be0 ),
	NORM( 0x3f4a810d, 0x3edd83f4, 0xbedd7504 ),
	VERT( 0xc2d5ba96, 0x3ec16bdc, 0x42a6f717 ),
	NORM( 0x3f5e6083, 0x3eb381e5, 0xbeb334e1 ),
	VERT( 0xc2c7f36b, 0xc127d3bb, 0x42b23ed5 ),
	NORM( 0x3f438998, 0x3e6f7880, 0xbf1a00cc ),
	VERT( 0xc2d69256, 0xc01a1780, 0x42a21519 ),
	NORM( 0x3f56d265, 0x3e1f08f1, 0xbf057132 ),
	VERT( 0xc2ca2951, 0xc158c80f, 0x42ae9f9c ),
	NORM( 0x3f2f217b, 0x3c9cc92b, 0xbf3aa872 ),
	VERT( 0xc2d90ae3, 0xc0ab1daa, 0x429e3874 ),
	NORM( 0x3f40e0a5, 0xbd44b9ee, 0xbf27e0d1 ),
	VERT( 0xc2cdad87, 0xc18510f8, 0x42ac6d63 ),
	NORM( 0x3f0ea9ac, 0xbe49a7a3, 0xbf4e7fb7 ),
	VERT( 0xc2dcf921, 0xc103db0f, 0x429ba486 ),
	NORM( 0x3f1d60db, 0xbe80c081, 0xbf3f5f99 ),
	VERT( 0xc2d242b7, 0xc19c4224, 0x42abce7e ),
	NORM( 0x3ec8ce32, 0xbecc7f66, 0xbf542216 ),
	VERT( 0xc2e2187f, 0xc12e42b1, 0x429a864a ),
	NORM( 0x3edd7a7e, 0xbee09194, 0xbf49a7e0 ),
	VERT( 0xc2d798e9, 0xc1b062f7, 0x42accdbf ),
	NORM( 0x3e4d1891, 0xbf130b43, 0xbf4b2fed ),
	VERT( 0xc2e80f9c, 0xc151e210, 0x429af143 ),
	NORM( 0x3e633a17, 0xbf180d0f, 0xbf45f69d ),
	VERT( 0xc2dd5306, 0xc1c01447, 0x42af59c0 ),
	NORM( 0xbba924a6, 0xbf35b495, 0xbf345369 ),
	VERT( 0xc2ee7669, 0xc16c4b98, 0x429cde22 ),
	NORM( 0xbb8d21c8, 0xbf357497, 0xbf34942e ),
	VERT( 0xc2e30d23, 0xc1ca444c, 0x42b34615 ),
	NORM( 0xbe574b87, 0xbf4bf790, 0xbf110a1b ),
	VERT( 0xc2f4dd35, 0xc17bb29c, 0x42a02b54 ),
	NORM( 0xbe6b69e4, 0xbf465b13, 0xbf16c173 ),
	VERT( 0xc2e86356, 0xc1ce414f, 0x42b84e48 ),
	NORM( 0xbecccaa0, 0xbf54343d, 0xbec83494 ),
	VERT( 0xc2fad452, 0xc17f0a51, 0x42a49f41 ),
	NORM( 0xbee0cf7e, 0xbf499fa2, 0xbedd59b2 ),
	VERT( 0xc2ecf885, 0xc1cbc5ba, 0x42be1a94 ),
	NORM( 0xbf0ff029, 0xbf4e13b1, 0xbe41e975 ),
	VERT( 0xc2fff3af, 0xc1761877, 0x42a9ec36 ),
	NORM( 0xbf1e292a, 0xbf3f26e3, 0xbe7c6a7c ),
	VERT( 0xc2f07cbc, 0xc1c2fcdb, 0x42c445cf ),
	NORM( 0xbf2fb930, 0xbf3a0d4b, 0x3ccf4fd6 ),
	VERT( 0xc301f0f7, 0xc161790a, 0x42afb5bb ),
	NORM( 0xbf40f3c0, 0xbf27d70c, 0xbd3a0947 ),
	VERT( 0xc30b03ab, 0x3f8f3d3b, 0x42a57b8e ),
	NORM( 0xbf6ca784, 0xbe8a1c04, 0x3e8a044e ),
	VERT( 0xc30a9147, 0xbfaed1f0, 0x429fffa4 ),
	NORM( 0xbf64ba6f, 0xbee25aaf, 0x3da20d1a ),
	VERT( 0xc3104f6b, 0x413fb309, 0x428fc220 ),
	NORM( 0xbf7575d0, 0xbe4da066, 0x3e4da065 ),
	VERT( 0xc30fd719, 0x41174f33, 0x428a5a76 ),
	NORM( 0xbf6d3687, 0xbec0699c, 0x3c4de368 ),
	VERT( 0xc30a9147, 0x40771ba1, 0x42aa73c9 ),
	NORM( 0xbf64bb81, 0xbda254a0, 0x3ee2532a ),
	VERT( 0xc30fd719, 0x416af056, 0x4294ce9b ),
	NORM( 0xbf6d32b7, 0xbc48f406, 0x3ec07db4 ),
	VERT( 0xc30941e7, 0x40d58c64, 0x42ae91a5 ),
	NORM( 0xbf4d8716, 0x3dee6f3d, 0x3f15afc4 ),
	VERT( 0xc30e7656, 0x418b0a68, 0x429927d1 ),
	NORM( 0xbf54efed, 0x3e357a41, 0x3f06aae8 ),
	VERT( 0xc3072c65, 0x4115d46f, 0x42b18d4e ),
	NORM( 0xbf2863f0, 0x3e9c25df, 0x3f304f4d ),
	VERT( 0xc30c452d, 0x419f17df, 0x429c81e4 ),
	NORM( 0xbf2e24b0, 0x3eb5ece6, 0x3f241f21 ),
	VERT( 0xc304751e, 0x413c0292, 0x42b332bb ),
	NORM( 0xbeef406d, 0x3ef28b47, 0x3f3f194c ),
	VERT( 0xc30969dc, 0x41b042be, 0x429ea25e ),
	NORM( 0xbef6f879, 0x3f026ffb, 0x3f3668ff ),
	VERT( 0xc3014b73, 0x415ab66d, 0x42b36533 ),
	NORM( 0xbe7ab011, 0x3f1c430d, 0x3f40d926 ),
	VERT( 0xc3061639, 0x41bd5f87, 0x429f641f ),
	NORM( 0xbe80cc95, 0x3f211b98, 0x3f3c3c8b ),
	VERT( 0xc2fbcd21, 0x416fd86f, 0x42b22147 ),
	NORM( 0xbbad8421, 0x3f349ef2, 0x3f35696f ),
	VERT( 0xc302844d, 0x41c58973, 0x429eb9f8 ),
	NORM( 0xbb35c81c, 0x3f34dbdb, 0x3f352da7 ),
	VERT( 0xc2f5035d, 0x4179f7d1, 0x42af7d07 ),
	NORM( 0x3e703caf, 0x3f40a4f7, 0x3f1d88c0 ),
	VERT( 0xc2fde4c3, 0x41c83211, 0x429caf7d ),
	NORM( 0x3e7be116, 0x3f3c41b2, 0x3f21a606 ),
	VERT( 0xc2eeb006, 0x41786414, 0x42aba68b ),
	NORM( 0x3ee4ce8f, 0x3f3f36a4, 0x3efc12d8 ),
	VERT( 0xc2f73d7c, 0x41c52b07, 0x4299684c ),
	NORM( 0x3ee9a8a3, 0x3f37a867, 0x3f06bf30 ),
	VERT( 0xc2e8f727, 0x416c767c, 0x42a6ddbc ),
	NORM( 0x3f28a66a, 0x3f2fc71e, 0x3e9d6bb4 ),
	VERT( 0xc2f0e9fb, 0x41bd8d9f, 0x42952c02 ),
	NORM( 0x3f304f1e, 0x3f2326d9, 0x3eb10117 ),
	VERT( 0xc2e54086, 0x41538717, 0x42a19cac ),
	NORM( 0x3f4ef6e8, 0x3f143de3, 0x3dd7916c ),
	VERT( 0xc2ed7655, 0x41af685e, 0x4290550b ),
	NORM( 0x3f582798, 0x3f035ad8, 0x3e1df0a4 ),
	VERT( 0xc2e277b4, 0x41326c86, 0x429bdf16 ),
	NORM( 0x3f63fdbc, 0x3ee605e6, 0xbd90f8b9 ),
	VERT( 0xc2ea6302, 0x419ddc01, 0x428ab5a7 ),
	NORM( 0x3f6c28f4, 0x3ec59f19, 0xbb73d5ca ),
	VERT( 0xc2e192ec, 0x410aaaa6, 0x4296632e ),
	NORM( 0x3f6ca269, 0x3e8a21ae, 0xbe8a21a6 ),
	VERT( 0xc2e9725e, 0x4189aa16, 0x42854dfc ),
	NORM( 0x3f753981, 0x3e4fdcf4, 0xbe4fdcf8 ),
	VERT( 0xc2e277b4, 0x40bd96c0, 0x42916af1 ),
	NORM( 0x3f6486a8, 0x3d9d9f2e, 0xbee35d58 ),
	VERT( 0xc2ea6302, 0x416816db, 0x42804182 ),
	NORM( 0x3f6cea8a, 0x3c619af3, 0xbec1d933 ),
	VERT( 0xc2e51675, 0x40473063, 0x428d4d16 ),
	NORM( 0x3f4dd1d3, 0xbdeaab10, 0xbf1560ce ),
	VERT( 0xc2ed2488, 0x413cf261, 0x4277d097 ),
	NORM( 0x3f5648ac, 0xbe29b835, 0xbf057c0c ),
	VERT( 0xc2e8e905, 0x3f12a00e, 0x428a6c0a ),
	NORM( 0x3f2853e0, 0xbe9c5198, 0xbf3054f4 ),
	VERT( 0xc2f0dc31, 0x4119b3cf, 0x42717cae ),
	NORM( 0x3f306701, 0xbeb07d9b, 0xbf2330a3 ),
	VERT( 0xc2eeb006, 0xbffb8295, 0x4288abfe ),
	NORM( 0x3eeb0935, 0xbef5c202, 0xbf3f6146 ),
	VERT( 0xc2f73d7c, 0x40e50354, 0x426cdb7d ),
	NORM( 0x3ef54477, 0xbf02c642, 0xbf36be37 ),
	VERT( 0xc2f5035d, 0xc07890ce, 0x42887987 ),
	NORM( 0x3e70783d, 0xbf1d928a, 0xbf409851 ),
	VERT( 0xc2fde4c3, 0x40b09041, 0x426b57f9 ),
	NORM( 0x3e7c31c7, 0xbf21a8f6, 0xbf3c386c ),
	VERT( 0xc2fbcd21, 0xc0a68c54, 0x4289bd74 ),
	NORM( 0xbba4d94a, 0xbf35636e, 0xbf34a51a ),
	VERT( 0xc302844d, 0x408fe898, 0x426cac49 ),
	NORM( 0xbb364714, 0xbf352daa, 0xbf34dbd8 ),
	VERT( 0xc3014b73, 0xc0bacb28, 0x428c61b3 ),
	NORM( 0xbe7a96d4, 0xbf40d3cf, 0xbf1c4c2b ),
	VERT( 0xc3061639, 0x40854614, 0x4270c13f ),
	NORM( 0xbe80eb2c, 0xbf3c3d10, 0xbf2114de ),
	VERT( 0xc304751e, 0xc0b7a3a4, 0x4290382f ),
	NORM( 0xbeef6fe9, 0xbf3f15c0, 0xbef26797 ),
	VERT( 0xc30969dc, 0x40916231, 0x42774fa2 ),
	NORM( 0xbef760c9, 0xbf36579e, 0xbf0256db ),
	VERT( 0xc3072c65, 0xc09d4cce, 0x4294fdf3 ),
	NORM( 0xbf285d5c, 0xbf3056ca, 0xbe9c206e ),
	VERT( 0xc30c452d, 0x40b369c4, 0x427fe513 ),
	NORM( 0xbf2e456e, 0xbf240949, 0xbeb5be41 ),
	VERT( 0xc30941e7, 0xc05b2465, 0x429a5fbc ),
	NORM( 0xbf4d763c, 0xbf15c2ac, 0xbdef18b2 ),
	VERT( 0xc30e7656, 0x40e90b0b, 0x4284f5e7 ),
	NORM( 0xbf54f90c, 0xbf06a32f, 0xbe352a98 ),
	VERT( 0xc2f544db, 0x42b41aef, 0xc0c626d3 ),
	NORM( 0xbf4b35fe, 0x3edc1f12, 0xbedc410e ),
	VERT( 0xc2f4814f, 0x42ae762a, 0xc1098e65 ),
	NORM( 0xbf446af4, 0x3e6ff1e8, 0xbf18d510 ),
	VERT( 0xc3032d3f, 0x429af1f9, 0x3f949932 ),
	NORM( 0xbf5b0d18, 0x3e0b6ccf, 0xbeffa334 ),
	VERT( 0xc303991f, 0x42a0841f, 0x40668c4d ),
	NORM( 0xbf62a049, 0x3ea8420f, 0xbea88297 ),
	VERT( 0xc2dec08f, 0x42c5c93f, 0xc17085e9 ),
	NORM( 0xbf3295b7, 0x3f01b589, 0xbf01b028 ),
	VERT( 0xc2de1066, 0x42c0129c, 0xc18b38fd ),
	NORM( 0xbf2ca0ca, 0x3e9dfefd, 0xbf2bbd9c ),
	VERT( 0xc3032d3f, 0x42a5661d, 0x40cc6893 ),
	NORM( 0xbf5b1c24, 0x3eff5aca, 0xbe0c0510 ),
	VERT( 0xc2f4814f, 0x42b8ea4e, 0xc057b510 ),
	NORM( 0xbf446dee, 0x3f18cd0f, 0xbe701c7b ),
	VERT( 0xc2de1066, 0x42ca86c1, 0xc142d0d4 ),
	NORM( 0xbf2c9905, 0x3f2bc904, 0xbe9def5a ),
	VERT( 0xc301f0f9, 0x42a942c1, 0x41153d44 ),
	NORM( 0xbf44f561, 0x3f22ad98, 0x3d85ab50 ),
	VERT( 0xc2f243fe, 0x42bc905d, 0xbea5f2fa ),
	NORM( 0xbf3078ec, 0x3f395d31, 0xbcb9baba ),
	VERT( 0xc2dc0bed, 0x42cdf86e, 0xc110701e ),
	NORM( 0xbf1b04a9, 0x3f4a71fb, 0xbdb6a74d ),
	VERT( 0xc2fff3b2, 0x42abd6af, 0x41438967 ),
	NORM( 0xbf219f74, 0x3f3acbf5, 0x3e867a32 ),
	VERT( 0xc2eeb3fa, 0x42becd74, 0x402f4cf9 ),
	NORM( 0xbf10b0e6, 0x3f4d7d88, 0x3e42e773 ),
	VERT( 0xc2d8d654, 0x42cfe233, 0xc0b9a571 ),
	NORM( 0xbefde651, 0x3f5b8a22, 0x3e0bd5c3 ),
	VERT( 0xc2fad455, 0x42acf4ea, 0x416df113 ),
	NORM( 0xbee65f07, 0x3f4673f7, 0x3ee30581 ),
	VERT( 0xc2ea0f6b, 0x42bf7a85, 0x40b38870 ),
	NORM( 0xbecdeb42, 0x3f53d15c, 0x3ec8af35 ),
	VERT( 0xc2d4a79b, 0x42d022ad, 0xc02df415 ),
	NORM( 0xbeb45499, 0x3f5dcd37, 0x3eb5389c ),
	VERT( 0xc2f4dd38, 0x42ac89f3, 0x4188c837 ),
	NORM( 0xbe49d269, 0x3f4379b1, 0x3f1d6a5c ),
	VERT( 0xc2e4a74f, 0x42be8bc6, 0x410181e2 ),
	NORM( 0xbe490fcf, 0x3f49d9cf, 0x3f15377b ),
	VERT( 0xc2cfc8b8, 0x42ceb57a, 0x3c5109d5 ),
	NORM( 0xbe3e8e3f, 0x3f508891, 0x3f0ca47f ),
	VERT( 0xc2ee73d8, 0x42a997d5, 0x4191e80e ),
	NORM( 0x3cf32b14, 0x3f32fa9d, 0x3f36e111 ),
	VERT( 0xc2ded92f, 0x42bb90aa, 0x411c5745 ),
	NORM( 0x3afbce36, 0x3f313da5, 0x3f38b84f ),
	VERT( 0xc2ca8ea6, 0x42cbb37b, 0x400d1b42 ),
	NORM( 0xbc170105, 0x3f3489bf, 0x3f357be7 ),
	VERT( 0xc2e67358, 0x42a65370, 0x4199bec6 ),
	NORM( 0x3e4f018e, 0x3f1d1356, 0x3f4368f4 ),
	VERT( 0xc2d88b29, 0x42b771f9, 0x41326c94 ),
	NORM( 0x3e37dff0, 0x3f12cf7e, 0x3f4c9ed9 ),
	VERT( 0xc2c55494, 0x42c75127, 0x406d5b30 ),
	NORM( 0x3e2f88b3, 0x3f0cf9ad, 0x3f5121cd ),
	VERT( 0xc2defe73, 0x42a1f957, 0x419bd1ec ),
	NORM( 0x3ec5a3fb, 0x3efb9842, 0x3f47dd28 ),
	VERT( 0xc2d2a6b7, 0x42b24153, 0x413c5882 ),
	NORM( 0x3ebd6a8c, 0x3edc270b, 0x3f52d4aa ),
	VERT( 0xc2c075b1, 0x42c1dafe, 0x408d80dc ),
	NORM( 0x3eb212c4, 0x3eba5f03, 0x3f5d3096 ),
	VERT( 0xc2d89558, 0x429da186, 0x419af16c ),
	NORM( 0x3f39e51e, 0x3e8133fb, 0x3f23b976 ),
	VERT( 0xc2cd9538, 0x42acc0ca, 0x413c93c5 ),
	NORM( 0x3f1065ca, 0x3e7ee81f, 0x3f498df7 ),
	VERT( 0xc2bc46f8, 0x42bbb049, 0x40897931 ),
	NORM( 0x3f0120fd, 0x3e1df8ee, 0x3f597d85 ),
	VERT( 0xc2d3ad71, 0x4297417b, 0x418e83c1 ),
	NORM( 0x3f42fec7, 0x3dc67855, 0x3f240115 ),
	VERT( 0xc2c9abb0, 0x42a624b0, 0x4129da8f ),
	NORM( 0x3f38b438, 0x3d40c1e1, 0x3f30d927 ),
	VERT( 0xc2b91160, 0x42b53c9d, 0x4055b9cd ),
	NORM( 0x3f1fc18c, 0xbd7b9f27, 0x3f476a76 ),
	VERT( 0xc2d096c0, 0x42919eb4, 0x41800a8f ),
	NORM( 0x3f5b1e92, 0xbdc8d902, 0x3f01f87e ),
	VERT( 0xc2c735d3, 0x42a00e7c, 0x410ea3d3 ),
	NORM( 0x3f516f65, 0xbe162e02, 0x3f0e5967 ),
	VERT( 0xc2b70ce6, 0x42aef085, 0x3fcf0821 ),
	NORM( 0x3f33d13e, 0xbe8dc532, 0x3f27dc30 ),
	VERT( 0xc2cf8910, 0x428c4f75, 0x415b1c6d ),
	NORM( 0x3f650c98, 0xbea2adb6, 0x3ea0b40a ),
	VERT( 0xc2c65ebb, 0x429a826f, 0x40d3327d ),
	NORM( 0x3f5b3e26, 0xbebca53d, 0x3eb92b18 ),
	VERT( 0xc2b65cbc, 0x42a939e3, 0xbf40b07a ),
	NORM( 0x3f3ae436, 0xbef82d32, 0x3ef6a7b6 ),
	VERT( 0xc2c735d3, 0x4295e11f, 0x4074e383 ),
	NORM( 0x3f4f970d, 0xbf11afff, 0x3e0b928d ),
	VERT( 0xc2d096c0, 0x4287b05e, 0x4130a271 ),
	NORM( 0x3f5a9984, 0xbf033a6a, 0x3db80f98 ),
	VERT( 0xc2b70ce6, 0x42a47c62, 0xc0670094 ),
	NORM( 0x3f3303e3, 0xbf293e91, 0x3e8b399b ),
	VERT( 0xc2c9abb0, 0x42927a4e, 0x3f4877b0 ),
	NORM( 0x3f30ed41, 0xbf37aec6, 0xbdb1bba2 ),
	VERT( 0xc2d3ad71, 0x42841212, 0x41038c2e ),
	NORM( 0x3f3daf06, 0xbf28757b, 0xbe09453c ),
	VERT( 0xc2b91160, 0x42a10ab3, 0xc0d841a5 ),
	NORM( 0x3f1d25e3, 0xbf49bc42, 0x3d3f9077 ),
	VERT( 0xc2cd9373, 0x429087e7, 0xc0148fb2 ),
	NORM( 0x3f09ee4f, 0xbf4bce27, 0xbe8d0f58 ),
	VERT( 0xc2d8973e, 0x4281b3ad, 0x40add8a3 ),
	NORM( 0x3f3d7535, 0xbf152d1d, 0xbeabe8b7 ),
	VERT( 0xc2bc46f8, 0x429f20ee, 0xc11fbe4b ),
	NORM( 0x3efb9982, 0xbf5aa70b, 0xbe2e6c90 ),
	VERT( 0xc2defe73, 0x4280be86, 0x40373528 ),
	NORM( 0x3ece533b, 0xbf45be6b, 0xbefb52cc ),
	VERT( 0xc2d2a6b7, 0x42902aa4, 0xc0a8b9e8 ),
	NORM( 0x3ebb63f0, 0xbf5223cd, 0xbee07c57 ),
	VERT( 0xc2c075b1, 0x429ee074, 0xc15113f3 ),
	NORM( 0x3eaea28b, 0xbf5ce5a5, 0xbebef506 ),
	VERT( 0xc2e67358, 0x4281434f, 0x3f2fc8a1 ),
	NORM( 0x3e470cb2, 0xbf428bbd, 0xbf1ec81b ),
	VERT( 0xc2d88b29, 0x4291682e, 0xc0fbc38c ),
	NORM( 0x3e3137e0, 0xbf4b78cc, 0xbf14e758 ),
	VERT( 0xc2c55494, 0x42a04da8, 0xc17cc53b ),
	NORM( 0x3e2cb66e, 0xbf5087d7, 0xbf0e1463 ),
	VERT( 0xc2ee73d8, 0x428338ff, 0xbf726948 ),
	NORM( 0x3d1d10bb, 0xbf39f5ac, 0xbf2faa91 ),
	VERT( 0xc2ded92f, 0x42942ae5, 0xc11ed6e2 ),
	NORM( 0x3c88a35a, 0xbf3bdf32, 0xbf2dd836 ),
	VERT( 0xc2ca8ea6, 0x42a34fa8, 0xc18febe3 ),
	NORM( 0xbb3836e4, 0xbf3728d5, 0xbf32da25 ),
	VERT( 0xc2f4dd38, 0x42858674, 0xc01a2e59 ),
	NORM( 0xbe3e913f, 0xbf2100d6, 0xbf413f19 ),
	VERT( 0xc2e4a750, 0x42978846, 0xc1369a28 ),
	NORM( 0xbe3b3424, 0xbf193d84, 0xbf47a84d ),
	VERT( 0xc2cfc8b8, 0x42a7b1fa, 0xc19bf3e5 ),
	NORM( 0xbe38790c, 0xbf0ed98f, 0xbf4f5f2a ),
	VERT( 0xc2ea0f6b, 0x429c7ff9, 0xc13e1024 ),
	NORM( 0xbecdc8e7, 0xbec8c294, 0xbf53d51e ),
	VERT( 0xc2fad455, 0x4289fa5e, 0xc0278d3b ),
	NORM( 0xbee5ef80, 0xbee374dd, 0xbf46746c ),
	VERT( 0xc2d4a79b, 0x42ad2821, 0xc1a1a8b0 ),
	NORM( 0xbeb44c20, 0xbeb5428a, 0xbf5dcce8 ),
	VERT( 0xc2fff3b2, 0x428f4754, 0xc003c5ae ),
	NORM( 0xbf216b26, 0xbe8702c1, 0xbf3ae08e ),
	VERT( 0xc2eeb3fa, 0x42a23e19, 0xc138a79a ),
	NORM( 0xbf109914, 0xbe437ddc, 0xbf4d855e ),
	VERT( 0xc2d8d654, 0x42b352d7, 0xc1a0a6c7 ),
	NORM( 0xbefdfcfe, 0xbe0bad29, 0xbf5b8530 ),
	VERT( 0xc2f243fe, 0x42a85e74, 0xc126bede ),
	NORM( 0xbf307337, 0x3cb9ed33, 0xbf396293 ),
	VERT( 0xc301f0f9, 0x429510da, 0xbf452044 ),
	NORM( 0xbf44cda3, 0xbd873bae, 0xbf22d880 ),
	VERT( 0xc2dc0bed, 0x42b9c684, 0xc198ffb5 ),
	NORM( 0xbf1b1fde, 0x3db7cae7, 0xbf4a5902 ),
	VERT( 0xc28bf973, 0x42ec135f, 0xc208b5bc ),
	NORM( 0xbec40290, 0x3f2736db, 0xbf273e59 ),
	VERT( 0xc28b9db5, 0x42e6371f, 0xc211e588 ),
	NORM( 0xbebd7371, 0x3ee64d44, 0xbf501836 ),
	VERT( 0xc2a98ed0, 0x42dc8fc7, 0xc1fd2dab ),
	NORM( 0xbef46a76, 0x3ed36f29, 0xbf468ebe ),
	VERT( 0xc2aa0b61, 0x42e26269, 0xc1eaa79f ),
	NORM( 0xbefce2b3, 0x3f1d6228, 0xbf1d6998 ),
	VERT( 0xc2595476, 0x42f45cb0, 0xc219485c ),
	NORM( 0xbe89446e, 0x3f2e5a5c, 0xbf2e6e8d ),
	VERT( 0xc258d381, 0x42ee7873, 0xc222682f ),
	NORM( 0xbe84ada1, 0x3ef41dd0, 0xbf570717 ),
	VERT( 0xc2a98ed0, 0x42e703eb, 0xc1d35d15 ),
	NORM( 0xbef46ad8, 0x3f46854f, 0xbed39224 ),
	VERT( 0xc28b9db5, 0x42f0ab45, 0xc1f9fa78 ),
	NORM( 0xbebd73d9, 0x3f500e8a, 0xbee66fe1 ),
	VERT( 0xc258d381, 0x42f8ec9a, 0xc20d7fe7 ),
	NORM( 0xbe84b97d, 0x3f56f538, 0xbef4564b ),
	VERT( 0xc2a8219c, 0x42ea2386, 0xc1b8e46d ),
	NORM( 0xbedb92a9, 0x3f626c0f, 0xbe3c4bdb ),
	VERT( 0xc28a90bd, 0x42f3aeae, 0xc1df110f ),
	NORM( 0xbeaa3029, 0x3f6aff41, 0xbe5dae08 ),
	VERT( 0xc257596b, 0x42fbd899, 0xc1ffb8bb ),
	NORM( 0xbe6ea62d, 0x3f713200, 0xbe769dd9 ),
	VERT( 0xc2a5dca8, 0x42eb8abb, 0xc19d0b76 ),
	NORM( 0xbeb3ee05, 0x3f6f33ff, 0x3d6f9209 ),
	VERT( 0xc288e4e1, 0x42f4e90c, 0xc1c284bf ),
	NORM( 0xbe8b6635, 0x3f76300d, 0x3d0576d9 ),
	VERT( 0xc254fff7, 0x42fcedbb, 0xc1e2977c ),
	NORM( 0xbe43b35b, 0x3f7b4373, 0x3c3ffb7e ),
	VERT( 0xc2a2e78a, 0x42eb210b, 0xc181b7fa ),
	NORM( 0xbe800529, 0x3f6bdb64, 0x3e987300 ),
	VERT( 0xc286b747, 0x42f444ed, 0xc1a64785 ),
	NORM( 0xbe46041a, 0x3f70aca3, 0x3e8faed9 ),
	VERT( 0xc251f024, 0x42fc1915, 0xc1c59822 ),
	NORM( 0xbe0b66cc, 0x3f7464e3, 0x3e878b05 ),
	VERT( 0xc29f75db, 0x42e8edb0, 0xc1518d79 ),
	NORM( 0xbe067ed8, 0x3f586cda, 0x3f048901 ),
	VERT( 0xc2842df0, 0x42f1cd86, 0xc18c4610 ),
	NORM( 0xbdceaeff, 0x3f5aa57a, 0x3f029f68 ),
	VERT( 0xc24e5f5c, 0x42f9692b, 0xc1aab4a3 ),
	NORM( 0xbd92afff, 0x3f5cd995, 0x3f002914 ),
	VERT( 0xc29bc3b3, 0x42e5170d, 0xc127d5b5 ),
	NORM( 0xbb5e6dbe, 0x3f361d31, 0x3f33ea77 ),
	VERT( 0xc281751b, 0x42edaddb, 0xc16c8c29 ),
	NORM( 0xbaa982d8, 0x3f3593f3, 0x3f34756e ),
	VERT( 0xc24a8bd3, 0x42f50cd8, 0xc193c20f ),
	NORM( 0xbaf580d1, 0x3f363b23, 0x3f33cc82 ),
	VERT( 0xc298118a, 0x42dfe014, 0xc109209a ),
	NORM( 0x3dffaff5, 0x3f07519f, 0x3f56f316 ),
	VERT( 0xc27d788e, 0x42e82ddc, 0xc14b8ed5 ),
	NORM( 0x3dc9dc3f, 0x3f03fbd4, 0x3f59e5f0 ),
	VERT( 0xc246b849, 0x42ef5035, 0xc18250d0 ),
	NORM( 0x3d8bfb42, 0x3f02e53c, 0x3f5b4ef9 ),
	VERT( 0xc2949fdc, 0x42d9a3c5, 0xc0ef0b74 ),
	NORM( 0x3e7a9323, 0x3e9e0a68, 0x3f6b4d99 ),
	VERT( 0xc27865df, 0x42e1ad7f, 0xc137d38c ),
	NORM( 0x3e444bf2, 0x3e929c22, 0x3f705223 ),
	VERT( 0xc2432781, 0x42e89753, 0xc16f2236 ),
	NORM( 0x3e095fd3, 0x3e8d4797, 0x3f73a709 ),
	VERT( 0xc291aabe, 0x42d2cee7, 0xc0e87095 ),
	NORM( 0x3eb2028b, 0x3d8a12e0, 0x3f6f6879 ),
	VERT( 0xc2740aab, 0x42da9e31, 0xc132b2a0 ),
	NORM( 0x3e8b0991, 0x3d1b97af, 0x3f763028 ),
	VERT( 0xc24017ae, 0x42e1577f, 0xc1687d0c ),
	NORM( 0x3e4380b5, 0x3cb2ed2e, 0x3f7b3a92 ),
	VERT( 0xc28f65c9, 0x42cbd8a8, 0xc0fee3c5 ),
	NORM( 0x3eda68aa, 0xbe35d33a, 0x3f630887 ),
	VERT( 0xc270b2f0, 0x42d37b1b, 0xc13c857f ),
	NORM( 0x3eaa5afa, 0xbe593eeb, 0x3f6b39b9 ),
	VERT( 0xc23dbe3b, 0x42da0f2b, 0xc1712606 ),
	NORM( 0x3e702924, 0xbe6fa82e, 0x3f718a2e ),
	VERT( 0xc28df895, 0x42c53a7d, 0xc1186eba ),
	NORM( 0x3ef3c8fd, 0xbed230f5, 0x3f4714a7 ),
	VERT( 0xc26e9902, 0x42ccc0c0, 0xc154a0d6 ),
	NORM( 0x3ebe0526, 0xbee53447, 0x3f50448a ),
	VERT( 0xc23c4424, 0x42d33d69, 0xc184430a ),
	NORM( 0x3e861fc8, 0xbef26843, 0x3f574964 ),
	VERT( 0xc28d7c05, 0x42bf67dc, 0xc13d7ad1 ),
	NORM( 0x3efc6f68, 0xbf1d7d04, 0x3f1d7cfd ),
	VERT( 0xc26de188, 0x42c6e482, 0xc1796002 ),
	NORM( 0x3ec4b4ab, 0xbf2718cc, 0x3f27281b ),
	VERT( 0xc23bc32f, 0x42cd592e, 0xc19682af ),
	NORM( 0x3e8ae61a, 0xbf2e3369, 0x3f2e42c9 ),
	VERT( 0xc28df895, 0x42bac659, 0xc16c0fdb ),
	NORM( 0x3ef3c8fe, 0xbf4714a9, 0x3ed230ed ),
	VERT( 0xc26e9902, 0x42c24c9d, 0xc19420fe ),
	NORM( 0x3ebe01f9, 0xbf5038ac, 0x3ee56207 ),
	VERT( 0xc23c4424, 0x42c8c945, 0xc1ae139f ),
	NORM( 0x3e861c59, 0xbf573d1b, 0x3ef295cb ),
	VERT( 0xc28f65c9, 0x42b7a6be, 0xc1908097 ),
	NORM( 0x3eda68b6, 0xbf630883, 0x3e35d340 ),
	VERT( 0xc270b2f1, 0x42bf4933, 0xc1af0a67 ),
	NORM( 0x3eaa6993, 0xbf6b2f96, 0x3e59c096 ),
	VERT( 0xc23dbe3b, 0x42c5dd44, 0xc1c95aa9 ),
	NORM( 0x3e704792, 0xbf718032, 0x3e702a95 ),
	VERT( 0xc291aabe, 0x42b63f8b, 0xc1ac5993 ),
	NORM( 0x3eb209b5, 0xbf6f653c, 0xbd8ae5a8 ),
	VERT( 0xc2740aab, 0x42be0ed6, 0xc1cb96be ),
	NORM( 0x3e8b1197, 0xbf762f53, 0xbd1b1d73 ),
	VERT( 0xc24017ae, 0x42c4c824, 0xc1e67bf6 ),
	NORM( 0x3e43cfce, 0xbf7b37f5, 0xbcabd5e1 ),
	VERT( 0xc27865e0, 0x42beb2f4, 0xc1e7d3f8 ),
	NORM( 0x3e443454, 0xbf7050e0, 0xbe92ac4e ),
	VERT( 0xc2949fdc, 0x42b6a939, 0xc1c7ad0c ),
	NORM( 0x3e7aafca, 0xbf6b4ac4, 0xbe9e0feb ),
	VERT( 0xc2432781, 0x42c59cca, 0xc201bda9 ),
	NORM( 0x3e096c72, 0xbf73a36e, 0xbe8d5d62 ),
	VERT( 0xc298118a, 0x42b8dc93, 0xc1e09e4b ),
	NORM( 0x3dffea05, 0xbf56fc2b, 0xbf07417a ),
	VERT( 0xc27d788d, 0x42c12a5b, 0xc200eab3 ),
	NORM( 0x3dc9d5e5, 0xbf59e847, 0xbf03f81e ),
	VERT( 0xc246b849, 0x42c84cb3, 0xc20f2f66 ),
	NORM( 0x3d8bd4ee, 0xbf5b3e37, 0xbf0301ef ),
	VERT( 0xc281751b, 0x42c54a08, 0xc20beab1 ),
	NORM( 0xbaa85e9e, 0xbf347910, 0xbf359057 ),
	VERT( 0xc29bc3b3, 0x42bcb338, 0xc1f57a27 ),
	NORM( 0xbb5e72c9, 0xbf33ea8f, 0xbf361d1a ),
	VERT( 0xc24a8bd3, 0x42cca906, 0xc21aa8af ),
	NORM( 0xbaf61da7, 0xbf33d5a7, 0xbf36321d ),
	VERT( 0xc2842df0, 0x42caca06, 0xc2142a09 ),
	NORM( 0xbdced54d, 0xbf02991a, 0xbf5aa8ad ),
	VERT( 0xc29f75db, 0x42c1ea2e, 0xc2026a5f ),
	NORM( 0xbe06b1ce, 0xbf048b7f, 0xbf586958 ),
	VERT( 0xc24e5f5c, 0x42d265aa, 0xc2236152 ),
	NORM( 0xbd92c669, 0xbf002802, 0xbf5cd9f8 ),
	VERT( 0xc2a2e78a, 0x42c8267f, 0xc206d115 ),
	NORM( 0xbe80365d, 0xbe987b4f, 0xbf6bd35d ),
	VERT( 0xc286b747, 0x42d14a62, 0xc21918d9 ),
	NORM( 0xbe460da5, 0xbe8fc91e, 0xbf70a83a ),
	VERT( 0xc251f024, 0x42d91e8b, 0xc228c12a ),
	NORM( 0xbe0b6c82, 0xbe87bcab, 0xbf745dcb ),
	VERT( 0xc2a5dca8, 0x42cefb5f, 0xc207a473 ),
	NORM( 0xbeb3ee7d, 0xbd7237d2, 0xbf6f313d ),
	VERT( 0xc288e4e2, 0x42d859b1, 0xc21a6117 ),
	NORM( 0xbe8b5aa1, 0xbd084f1e, 0xbf763021 ),
	VERT( 0xc254fff7, 0x42e05e60, 0xc22a6a75 ),
	NORM( 0xbe43df6d, 0xbc42ef6b, 0xbf7b4129 ),
	VERT( 0xc28a90be, 0x42df7cc6, 0xc217ec5d ),
	NORM( 0xbeaa2c55, 0x3e5d1839, 0xbf6b08c4 ),
	VERT( 0xc2a8219c, 0x42d5f19d, 0xc204d60c ),
	NORM( 0xbedb82a0, 0x3e3b7af0, 0xbf627ac7 ),
	VERT( 0xc257596b, 0x42e7a6b2, 0xc2284030 ),
	NORM( 0xbe6ea610, 0x3e768e26, 0xbf713303 ),
	VERT( 0xc2196f4c, 0x42f89613, 0xc221bb23 ),
	NORM( 0xbe086427, 0x3f3361f8, 0xbf336e21 ),
	VERT( 0xc2192b6e, 0x42f2aefd, 0xc22ad544 ),
	NORM( 0xbe03d2e1, 0x3efdead4, 0xbf5bd814 ),
	VERT( 0xc1b02f45, 0x42fa7d84, 0xc2258a03 ),
	NORM( 0xb8f31f5f, 0x3f3508e2, 0xbf350104 ),
	VERT( 0xc1b02035, 0x42f49433, 0xc22e9faf ),
	NORM( 0xb836c5a7, 0x3f00ae37, 0xbf5d4ee7 ),
	VERT( 0xc2192b6f, 0x42fd2324, 0xc215ecfc ),
	NORM( 0xbe03da01, 0x3f5bd345, 0xbefdfa8d ),
	VERT( 0xc1b02035, 0x42ff085a, 0xc219b767 ),
	NORM( 0x392119c0, 0x3f5d5195, 0xbf00a99a ),
	VERT( 0xc2186478, 0x43000367, 0xc20838c7 ),
	NORM( 0xbdecdda4, 0x3f75975b, 0xbe83d295 ),
	VERT( 0xc21727f7, 0x43008755, 0xc1f31b3b ),
	NORM( 0xbdc20a2a, 0x3f7ed926, 0xba8db03c ),
	VERT( 0xc1b017f3, 0x43016df0, 0xc1fa5012 ),
	NORM( 0x39216d11, 0x3f7ffea7, 0xbbd20582 ),
	VERT( 0xc2158b7e, 0x4300145f, 0xc1d5d6c5 ),
	NORM( 0xbd89df08, 0x3f76db0d, 0x3e832b0a ),
	VERT( 0xc1b031db, 0x4300f161, 0xc1dcbed3 ),
	NORM( 0xb8ab1380, 0x3f77bd05, 0x3e8105c7 ),
	VERT( 0xc213ab28, 0x42fd64b2, 0xc1baa2be ),
	NORM( 0xbd102a41, 0x3f5e0002, 0x3efe5434 ),
	VERT( 0xc211a7b0, 0x42f8f2c6, 0xc1a359c7 ),
	NORM( 0xba279afe, 0x3f35e338, 0x3f342597 ),
	VERT( 0xc1b036c0, 0x42fa7e71, 0xc1a9886f ),
	NORM( 0xb8aaba89, 0x3f361d69, 0x3f33eac8 ),
	VERT( 0xc20fa43a, 0x42f32089, 0xc191921e ),
	NORM( 0x3d0a282f, 0x3f01928a, 0x3f5c9e48 ),
	VERT( 0xc1b036c0, 0x42f49435, 0xc19760ca ),
	NORM( 0x395a6f1c, 0x3f01a5a7, 0x3f5cbe4d ),
	VERT( 0xc20dc3e3, 0x42ec5386, 0xc18681e7 ),
	NORM( 0x3d87521a, 0x3e87b150, 0x3f764400 ),
	VERT( 0xc1b031db, 0x42ed9a2d, 0xc18b9c83 ),
	NORM( 0x3a0addad, 0x3e869463, 0x3f76ff84 ),
	VERT( 0xc20c2769, 0x42e50269, 0xc182ea2d ),
	NORM( 0x3dbf5612, 0x3bb9ed26, 0x3f7ee04d ),
	VERT( 0xc20aeae8, 0x42ddacd1, 0xc187099c ),
	NORM( 0x3dea5809, 0xbe81acb2, 0x3f75ea2b ),
	VERT( 0xc1b01a21, 0x42dedb1e, 0xc18bc2cf ),
	NORM( 0xba4897f4, 0xbe854ae9, 0x3f772c27 ),
	VERT( 0xc20a23f2, 0x42d6d2b9, 0xc192984b ),
	NORM( 0x3e036ca9, 0xbefd9852, 0x3f5bf3b4 ),
	VERT( 0xc1b01af6, 0x42d804d9, 0xc19760c7 ),
	NORM( 0xb9779039, 0xbf00a285, 0x3f5d55b3 ),
	VERT( 0xc209e015, 0x42d0eba6, 0xc1a4cc8f ),
	NORM( 0x3e08548c, 0xbf33686b, 0x3f33686b ),
	VERT( 0xc1b01a4b, 0x42d21b8b, 0xc1a98c22 ),
	NORM( 0xb87a9e16, 0xbf350a08, 0x3f34ffdf ),
	VERT( 0xc20a23f2, 0x42cc5e95, 0xc1bc68dc ),
	NORM( 0x3e036904, 0xbf5c2456, 0x3efcefc8 ),
	VERT( 0xc1b01af6, 0x42cd90b4, 0xc1c13154 ),
	NORM( 0xb98ed7de, 0xbf5d8a04, 0x3f004856 ),
	VERT( 0xc20aeae9, 0x42c97aea, 0xc1d7d142 ),
	NORM( 0x3dea3919, 0xbf76021e, 0x3e80f9fc ),
	VERT( 0xc1b01a21, 0x42caa936, 0xc1dc8a73 ),
	NORM( 0xba25a770, 0xbf777770, 0x3e83178c ),
	VERT( 0xc20c276a, 0x42c8730e, 0xc1f5279e ),
	NORM( 0x3dbf5156, 0xbf7ee05c, 0xbbb9db48 ),
	VERT( 0xc1b017f4, 0x42c9bd2c, 0xc1fa5015 ),
	NORM( 0xb98197bd, 0xbf7fffe3, 0xbaef7a4b ),
	VERT( 0xc20dc3e3, 0x42c958fc, 0xc209360d ),
	NORM( 0x3d8754c5, 0xbf76615f, 0xbe86db37 ),
	VERT( 0xc1b031db, 0x42ca9fa1, 0xc20bc35a ),
	NORM( 0x3a259fe0, 0xbf774297, 0xbe84a418 ),
	VERT( 0xc20fa439, 0x42cc1d07, 0xc216d00d ),
	NORM( 0x3d0a4a2a, 0xbf5cd230, 0xbf0139dc ),
	VERT( 0xc1b036c0, 0x42cd90b2, 0xc219b767 ),
	NORM( 0x39c44395, 0xbf5cff08, 0xbf01372f ),
	VERT( 0xc211a7b1, 0x42d08ef3, 0xc222748a ),
	NORM( 0xba23d277, 0xbf34263c, 0xbf35e295 ),
	VERT( 0xc1b036c0, 0x42d21a9e, 0xc2258bdd ),
	NORM( 0xb52f8e9c, 0xbf33dfe0, 0xbf36282f ),
	VERT( 0xc213ab28, 0x42d66131, 0xc22b5860 ),
	NORM( 0xbd0f9598, 0xbefe77a8, 0xbf5df63a ),
	VERT( 0xc1b036c0, 0x42d804d9, 0xc22e9fb1 ),
	NORM( 0x388007bd, 0xbefd098e, 0xbf5e8d1a ),
	VERT( 0xc2158b7e, 0x42dd2e32, 0xc230e07c ),
	NORM( 0xbd898f30, 0xbe8351df, 0xbf76d696 ),
	VERT( 0xc1b031db, 0x42dee835, 0xc2345484 ),
	NORM( 0x388be123, 0xbe815785, 0xbf77b25d ),
	VERT( 0xc21727f8, 0x42e47f51, 0xc232ac56 ),
	NORM( 0xbdc1fa1e, 0x3a8c6d55, 0xbf7ed957 ),
	VERT( 0xc1b017f3, 0x42e64c87, 0xc23646c1 ),
	NORM( 0x39606c71, 0x3bb536fe, 0xbf7ffeff ),
	VERT( 0xc2186478, 0x42ebd4e5, 0xc2309c9b ),
	NORM( 0xbdecd320, 0x3e83d48a, 0xbf759741 ),
	VERT( 0xc1b01a21, 0x42edb0d7, 0xc234547f ),
	NORM( 0x37e7cc43, 0x3e86d5f6, 0xbf76f695 ),
	VERT( 0xc31079b4, 0x4188f711, 0x428574fc ),
	NORM( 0xbf781c82, 0xbe329eb2, 0x3e321c0c ),
	VERT( 0xc3123122, 0x418e194d, 0x4284322f ),
	NORM( 0xbeed7f2d, 0xbf205492, 0x3f206711 ),
	VERT( 0xc311b807, 0x41738b2a, 0x427da5ef ),
	NORM( 0xbee23770, 0xbf3d9000, 0x3f01a5dd ),
	VERT( 0xc3100df3, 0x416dc1e0, 0x4280acbf ),
	NORM( 0xbf6fd21d, 0xbeb304ef, 0xbc4aabfb ),
	VERT( 0xc311ad7a, 0x417dd7f4, 0x4287fd83 ),
	NORM( 0xbf5403d9, 0x3ecafa04, 0xbecad65f ),
	VERT( 0xc311349b, 0x415544d2, 0x42829bc2 ),
	NORM( 0xbf4df966, 0x3e8dcddc, 0xbf067999 ),
	VERT( 0xc311349b, 0x419472fc, 0x428d0fe7 ),
	NORM( 0xbf4dc4b3, 0x3f06b1e1, 0xbe8e2a1a ),
	VERT( 0xc3100df3, 0x419c1803, 0x4289fa83 ),
	NORM( 0xbf6fdce0, 0x3c423c37, 0x3eb2cd91 ),
	VERT( 0xc311b807, 0x41a39628, 0x4289471c ),
	NORM( 0xbee190b3, 0xbf01bde9, 0x3f3db135 ),
	VERT( 0xc30fd23b, 0x41a9bfe3, 0x42917a72 ),
	NORM( 0xbf3bedde, 0x3f27b175, 0xbe373300 ),
	VERT( 0xc30ed205, 0x41aef614, 0x428dee74 ),
	NORM( 0xbf578a5b, 0x3e49bcff, 0x3f009653 ),
	VERT( 0xc31054f6, 0x41b8c54a, 0x428db919 ),
	NORM( 0xbebf9603, 0xbec848e7, 0x3f573f31 ),
	VERT( 0xc30d9e81, 0x41bd5f0f, 0x4294f018 ),
	NORM( 0xbf202fa5, 0x3f45cdba, 0xbddb1bd1 ),
	VERT( 0xc30cdb73, 0x41c04814, 0x42910bd5 ),
	NORM( 0xbf309eac, 0x3ebcc3aa, 0x3f1f7a8b ),
	VERT( 0xc30e2022, 0x41cc3518, 0x42913a96 ),
	NORM( 0xbe8a8d07, 0xbe9370ba, 0x3f6b2a10 ),
	VERT( 0xc30abfd8, 0x41cdfa32, 0x42973481 ),
	NORM( 0xbef91b6d, 0x3f5f11fc, 0xbd818245 ),
	VERT( 0xc30a4c7d, 0x41cedfdf, 0x42931c54 ),
	NORM( 0xbefa2eae, 0x3f03ea9f, 0x3f343d49 ),
	VERT( 0xc30b4008, 0x41dc9285, 0x42938e6c ),
	NORM( 0xbe0e3adf, 0xbe50e3d9, 0x3f7814e3 ),
	VERT( 0xc30751c5, 0x41d9bed6, 0x4293fbe9 ),
	NORM( 0xbe82dcb0, 0x3f206def, 0x3f3c75c4 ),
	VERT( 0xc307e6d3, 0x41e8c008, 0x42948bff ),
	NORM( 0x3c389142, 0xbe14812f, 0x3f7d46f6 ),
	VERT( 0xc307684f, 0x41da6f94, 0x4298201c ),
	NORM( 0xbea96910, 0x3f71214d, 0xbd6bdd7a ),
	VERT( 0xc3041f46, 0x41e02761, 0x42939b59 ),
	NORM( 0xbb0e26e2, 0x3f31ea31, 0x3f381217 ),
	VERT( 0xc3044eee, 0x41efe934, 0x42942208 ),
	NORM( 0x3e2dc733, 0xbdec5dba, 0x3f7a8cf6 ),
	VERT( 0xc303d235, 0x41e1e5e2, 0x4297a2dc ),
	NORM( 0xbe2c413f, 0x3f7b65ac, 0xbdaf735f ),
	VERT( 0xc300ecc7, 0x41e1a99d, 0x42920137 ),
	NORM( 0x3e81a07c, 0x3f36ade4, 0x3f273911 ),
	VERT( 0xc300b709, 0x41f19110, 0x429257bd ),
	NORM( 0x3ea5ef4b, 0xbdeac343, 0x3f7065ed ),
	VERT( 0xc3003c1c, 0x41e3dae0, 0x4295c549 ),
	NORM( 0xbc271cdc, 0x3f7d755d, 0xbe0f8df7 ),
	VERT( 0xc2fbe41d, 0x41de2b4b, 0x428f4979 ),
	NORM( 0x3eedfccd, 0x3f30d1ff, 0x3f0dd042 ),
	VERT( 0xc2fabba8, 0x41ed9ac7, 0x428f4c5c ),
	NORM( 0x3ee78d64, 0xbe0cbe72, 0x3f6198bb ),
	VERT( 0xc2f9c925, 0x41e02c73, 0x4292a7f1 ),
	NORM( 0x3de877c8, 0x3f784143, 0xbe5d4f08 ),
	VERT( 0xc2f65961, 0x41d69049, 0x428bab96 ),
	NORM( 0x3f343c70, 0x3f19cfcf, 0x3ec1d57f ),
	VERT( 0xc2f48843, 0x41e4fb81, 0x428b3db2 ),
	NORM( 0x3f177f08, 0xbe52b01a, 0x3f47869d ),
	VERT( 0xc2f38b35, 0x41d7e534, 0x428e8986 ),
	NORM( 0x3e746c25, 0x3f696bc7, 0xbeab136c ),
	VERT( 0xc2f3135a, 0x41c9af24, 0x42876fe9 ),
	NORM( 0x3f5ba050, 0x3ef38892, 0x3e46eca3 ),
	VERT( 0xc2f0e72d, 0x41d71347, 0x42866a51 ),
	NORM( 0x3f300d71, 0xbe887890, 0x3f2cdfc1 ),
	VERT( 0xc2efe949, 0x41c987ff, 0x4289c0ef ),
	NORM( 0x3ea9d336, 0x3f55753c, 0xbee1ef2a ),
	VERT( 0xc2f06131, 0x41b9a409, 0x42829783 ),
	NORM( 0x3f6f6b91, 0x3eb3d369, 0x3d362dc6 ),
	VERT( 0xc2edcbaa, 0x41c47d88, 0x42810d46 ),
	NORM( 0x3f3aa809, 0xbeb26259, 0x3f16cc65 ),
	VERT( 0xc2ecdf9e, 0x41b79a0f, 0x42844624 ),
	NORM( 0x3ebd20b1, 0x3f4217f4, 0xbf098e11 ),
	VERT( 0xc2ebede0, 0x41a3507d, 0x427dc8c5 ),
	NORM( 0x3ec6303a, 0x3f26f09c, 0xbf26e01e ),
	VERT( 0xc2ef89ad, 0x41a78dea, 0x427b9e8c ),
	NORM( 0x3f7997dc, 0x3e20b5fa, 0xbe213e8c ),
	VERT( 0xc2ecd973, 0x41b029cf, 0x42775c1c ),
	NORM( 0x3f3f6e76, 0xbef04fc9, 0x3ef07008 ),
	VERT( 0xc2f06131, 0x41946cf7, 0x4272937c ),
	NORM( 0x3f710628, 0xbd03cf23, 0xbeabc311 ),
	VERT( 0xc2edcbaa, 0x419aacf4, 0x426d3241 ),
	NORM( 0x3f3ab335, 0xbf143981, 0x3ebaa3aa ),
	VERT( 0xc2ecdf9e, 0x418dc97b, 0x4273a3fd ),
	NORM( 0x3ebd53bc, 0x3f0ad19e, 0xbf412490 ),
	VERT( 0xc2f2d90e, 0x41818ee5, 0x426aab9b ),
	NORM( 0x3f599265, 0xbe58c7f2, 0xbef712e2 ),
	VERT( 0xc2f091cd, 0x41857dd0, 0x42644e47 ),
	NORM( 0x3f2d8219, 0xbf2eaaa0, 0x3e8c5246 ),
	VERT( 0xc2efa45e, 0x4170f925, 0x426acee6 ),
	NORM( 0x3ea53200, 0x3edddab7, 0xbf576d4f ),
	VERT( 0xc2f64b99, 0x41634a50, 0x4264d914 ),
	NORM( 0x3f3237a0, 0xbec5f1cd, 0xbf1ada12 ),
	VERT( 0xc2f37aec, 0x414d1a74, 0x42645c5f ),
	NORM( 0x3e76120a, 0x3ea781b2, 0xbf69f596 ),
	VERT( 0xc2f479ac, 0x4167152c, 0x425db9fb ),
	NORM( 0x3f16fb5d, 0xbf486bb4, 0x3e4adc25 ),
	VERT( 0xc2fbe41d, 0x41434a2e, 0x42604fd9 ),
	NORM( 0x3ef87d9e, 0xbf0a6530, 0xbf2fea10 ),
	VERT( 0xc2fabba8, 0x41436126, 0x4258a39e ),
	NORM( 0x3eeebbd9, 0xbf5fa30d, 0x3e0ec6de ),
	VERT( 0xc2f9c925, 0x41288482, 0x425f5ac7 ),
	NORM( 0x3df9232e, 0x3e65c032, 0xbf778599 ),
	VERT( 0xc300ecc7, 0x412d8c37, 0x425e90af ),
	NORM( 0x3e7e9f4c, 0xbf26d01b, 0xbf3775a8 ),
	VERT( 0xc300b709, 0x412b061d, 0x4256a87a ),
	NORM( 0x3ea67168, 0xbf70737a, 0x3de158f4 ),
	VERT( 0xc3003c1c, 0x410f99be, 0x425d8392 ),
	NORM( 0xbc83b45f, 0x3e11512d, 0xbf7d602e ),
	VERT( 0xc3044eee, 0x411cb3ce, 0x42577c69 ),
	NORM( 0x3e2e06db, 0xbf7aaf8c, 0x3de24038 ),
	VERT( 0xc3041f46, 0x4120bb32, 0x425f51cf ),
	NORM( 0xbbbe88fd, 0xbf3839b3, 0xbf31bfce ),
	VERT( 0xc303d235, 0x4100ad28, 0x425e7e13 ),
	NORM( 0xbe312c20, 0x3da3eeb7, 0xbf7b4e16 ),
	VERT( 0xc30751c5, 0x411db6ae, 0x42628611 ),
	NORM( 0xbe83ca8b, 0xbf3c9636, 0xbf20170a ),
	VERT( 0xc307e6d3, 0x4119640f, 0x425b10fd ),
	NORM( 0x3c2edaa0, 0xbf7d6845, 0x3e10f4e2 ),
	VERT( 0xc307684f, 0x40f9864e, 0x42623937 ),
	NORM( 0xbeab5cf8, 0x3d568e67, 0xbf70dcdb ),
	VERT( 0xc30a4c7d, 0x4124b357, 0x4267f58f ),
	NORM( 0xbefb5fc4, 0xbf340a61, 0xbf039f0f ),
	VERT( 0xc30b4008, 0x412150a3, 0x426127bf ),
	NORM( 0xbe102c1c, 0xbf7836e8, 0x3e4cff15 ),
	VERT( 0xc30abfd8, 0x41041ffd, 0x426873e8 ),
	NORM( 0xbefb941e, 0x3d781a3a, 0xbf5e6ca4 ),
	VERT( 0xc30cdb73, 0x4135374f, 0x426f4174 ),
	NORM( 0xbf309615, 0xbf1fa8c9, 0xbebc4749 ),
	VERT( 0xc30d9e81, 0x41164343, 0x4270c17b ),
	NORM( 0xbf211980, 0x3dcfda52, 0xbf454033 ),
	VERT( 0xc30e2022, 0x4133ef58, 0x42695675 ),
	NORM( 0xbe8bf0e5, 0xbf6b35e5, 0x3e91d2e0 ),
	VERT( 0xc30ed205, 0x414e2262, 0x4277ea75 ),
	NORM( 0xbf57773a, 0xbf00aa8e, 0xbe4a3565 ),
	VERT( 0xc31054f6, 0x414ffb46, 0x42730e5e ),
	NORM( 0xbec0b9c0, 0xbf5727b9, 0x3ec79591 ),
	VERT( 0xc30fd23b, 0x4131f079, 0x427a9111 ),
	NORM( 0xbf3c475d, 0x3e353a98, 0xbf276f46 ),
	VERT( 0xc3123122, 0x418e194d, 0x4284322f ),
	NORM( 0xbf7ec140, 0xbd8ea793, 0x3d8ea793 ),
	VERT( 0xc314a566, 0x420d13a1, 0x42425d61 ),
	NORM( 0xbf7ff7a7, 0x3c38ea59, 0xbc38ea4d ),
	VERT( 0xc31428d6, 0x42029f7d, 0x4237e93e ),
	NORM( 0xbf776f4c, 0xbe2e2432, 0xbe44a3f8 ),
	VERT( 0xc311b807, 0x41738b2a, 0x427da5ef ),
	NORM( 0xbf765ef2, 0xbe7d208b, 0xbde6dde5 ),
	VERT( 0xc311b807, 0x41a39628, 0x4289471c ),
	NORM( 0xbf765465, 0x3de7985e, 0x3e7d9a29 ),
	VERT( 0xc31428d6, 0x421787c6, 0x424cd187 ),
	NORM( 0xbf776a3a, 0x3e44d423, 0x3e2e60ff ),
	VERT( 0xc31054f6, 0x41b8c54a, 0x428db919 ),
	NORM( 0xbf5d9a25, 0x3e93c884, 0x3ed17622 ),
	VERT( 0xc312bba2, 0x42214589, 0x42568f4b ),
	NORM( 0xbf5e54bf, 0x3eb888bb, 0x3eae42c0 ),
	VERT( 0xc30e2022, 0x41cc3518, 0x42913a96 ),
	NORM( 0xbf361c33, 0x3ee414a3, 0x3f0b2a0f ),
	VERT( 0xc31076ad, 0x4229a2fc, 0x425eecbc ),
	NORM( 0xbf365c3a, 0x3f01327a, 0x3ef9b5e1 ),
	VERT( 0xc30b4008, 0x41dc9285, 0x42938e6c ),
	NORM( 0xbf0209c1, 0x3f12c9eb, 0x3f248eb6 ),
	VERT( 0xc30d818f, 0x42300e2e, 0x426557ee ),
	NORM( 0xbf01f6fb, 0x3f1d8daf, 0x3f1a5810 ),
	VERT( 0xc307e6d3, 0x41e8c008, 0x42948bff ),
	NORM( 0xbe897d5e, 0x3f29a74c, 0x3f32f695 ),
	VERT( 0xc30a0fe1, 0x42341720, 0x426960e2 ),
	NORM( 0xbe89293d, 0x3f2f49fb, 0x3f2d831f ),
	VERT( 0xc3044eee, 0x41efe934, 0x42942208 ),
	NORM( 0xbc1e4d2f, 0x3f34d25b, 0x3f35332b ),
	VERT( 0xc3065db8, 0x42357774, 0x426ac136 ),
	NORM( 0xbc520440, 0x3f34f9cd, 0x3f35087c ),
	VERT( 0xc300b709, 0x41f19110, 0x429257bd ),
	NORM( 0x3e7fa741, 0x3f336dd6, 0x3f2b0b74 ),
	VERT( 0xc302ab8f, 0x42341720, 0x426960e2 ),
	NORM( 0x3eff738c, 0x3f2015cf, 0x3f199b34 ),
	VERT( 0xc2fabba8, 0x41ed9ac7, 0x428f4c5c ),
	NORM( 0x3efbbbd3, 0x3f25fc62, 0x3f14cd7b ),
	VERT( 0xc2fe73c2, 0x42300e2e, 0x426557ee ),
	NORM( 0x3efda3b7, 0x3f1ba292, 0x3f1ed750 ),
	VERT( 0xc2f48843, 0x41e4fb81, 0x428b3db2 ),
	NORM( 0x3f33390d, 0x3f0cfa55, 0x3ee8b9ff ),
	VERT( 0xc2f88986, 0x4229a2fc, 0x425eecbc ),
	NORM( 0x3f33c637, 0x3efd5a6d, 0x3f030908 ),
	VERT( 0xc2f0e72d, 0x41d71347, 0x42866a51 ),
	NORM( 0x3f723eb6, 0x3dfa8ec5, 0x3e99438b ),
	VERT( 0xc2f3ff9d, 0x42214589, 0x42568f4b ),
	NORM( 0x3f5d1f00, 0x3eafe2f4, 0x3ebcc22f ),
	VERT( 0xc2edcbaa, 0x41c47d88, 0x42810d46 ),
	NORM( 0x3f764563, 0x3e79003e, 0x3dfe6e36 ),
	VERT( 0xc2f12534, 0x421787c6, 0x424cd187 ),
	NORM( 0x3f770fc9, 0x3e2da1aa, 0x3e4c7144 ),
	VERT( 0xc2ecd973, 0x41b029cf, 0x42775c1c ),
	NORM( 0x3f7eff89, 0x3d80697b, 0xbd7f232c ),
	VERT( 0xc2f02c13, 0x420d13a1, 0x42425d61 ),
	NORM( 0x3f7ff100, 0xbc7626c3, 0x3c798968 ),
	VERT( 0xc2edcbaa, 0x419aacf4, 0x426d3241 ),
	NORM( 0x3f7644ee, 0xbdfbf1cc, 0xbe79a901 ),
	VERT( 0xc2f12534, 0x42029f7d, 0x4237e93e ),
	NORM( 0x3f771a2f, 0xbe4b9240, 0xbe2dbae1 ),
	VERT( 0xc2f091cd, 0x41857dd0, 0x42644e47 ),
	NORM( 0x3f5e476d, 0xbe94c2b2, 0xbecddebc ),
	VERT( 0xc2f3ff9d, 0x41f1c372, 0x422e2b79 ),
	NORM( 0x3f5e08c9, 0xbeba4ec1, 0xbeade2f0 ),
	VERT( 0xc2f88986, 0x41e1088b, 0x4225ce06 ),
	NORM( 0x3f3502a5, 0xbf027288, 0xbefb0929 ),
	VERT( 0xc2f479ac, 0x4167152c, 0x425db9fb ),
	NORM( 0x3f363dc6, 0xbee58d6f, 0xbf0a62aa ),
	VERT( 0xc2fabba8, 0x41436126, 0x4258a39e ),
	NORM( 0x3efcd36f, 0xbf15153e, 0xbf255167 ),
	VERT( 0xc2fe73c2, 0x41d43229, 0x421f62d6 ),
	NORM( 0x3efce60a, 0xbf1f2ba1, 0xbf1b9998 ),
	VERT( 0xc300b709, 0x412b061d, 0x4256a87a ),
	NORM( 0x3e804db6, 0xbf2affc9, 0xbf33632c ),
	VERT( 0xc302ab8f, 0x41cc2042, 0x421b59e2 ),
	NORM( 0x3e7aa615, 0xbf2febd1, 0xbf2f1a77 ),
	VERT( 0xc3065db8, 0x41c95f9d, 0x4219f98e ),
	NORM( 0x3e43b913, 0xbf2f3025, 0xbf342433 ),
	VERT( 0xc3044eee, 0x411cb3ce, 0x42577c69 ),
	NORM( 0x3e9f832a, 0xbf4830d7, 0xbf0a329c ),
	VERT( 0xc307e6d3, 0x4119640f, 0x425b10fd ),
	NORM( 0xbe89f2dd, 0xbf32f25c, 0xbf2993e7 ),
	VERT( 0xc30a0fe1, 0x41cc2042, 0x421b59e2 ),
	NORM( 0xbe867d5a, 0xbf2ded55, 0xbf2f6531 ),
	VERT( 0xc30d818f, 0x41d43229, 0x421f62d6 ),
	NORM( 0xbf02221f, 0xbf1a4ee7, 0xbf1d7309 ),
	VERT( 0xc30b4008, 0x412150a3, 0x426127bf ),
	NORM( 0xbf025f3a, 0xbf247b7e, 0xbf129399 ),
	VERT( 0xc31076ad, 0x41e1088b, 0x4225ce06 ),
	NORM( 0xbf3683b0, 0xbef98f96, 0xbf010d3b ),
	VERT( 0xc30e2022, 0x4133ef58, 0x42695675 ),
	NORM( 0xbf36692f, 0xbf0b02d2, 0xbee37e12 ),
	VERT( 0xc312bba2, 0x41f1c372, 0x422e2b79 ),
	NORM( 0xbf5e6c85, 0xbeae0cd0, 0xbeb848fb ),
	VERT( 0xc31054f6, 0x414ffb46, 0x42730e5e ),
	NORM( 0xbf5dc8b3, 0xbed10a2a, 0xbe9349d0 ),
	VERT( 0xc311ad7a, 0x417dd7f4, 0x4287fd83 ),
	NORM( 0xbf7865ca, 0xbe2f260b, 0x3e2f2609 ),
	VERT( 0xc311349b, 0x415544d2, 0x42829bc2 ),
	NORM( 0xbf6ff5b6, 0xbeb22cf5, 0xbc8a344a ),
	VERT( 0xc311349b, 0x419472fc, 0x428d0fe7 ),
	NORM( 0xbf6ff5b7, 0x3c8a346c, 0x3eb22cee ),
	VERT( 0xc30fd23b, 0x41a9bfe3, 0x42917a72 ),
	NORM( 0xbf5738e5, 0x3e503085, 0x3f007a3a ),
	VERT( 0xc30d9e81, 0x41bd5f0f, 0x4294f018 ),
	NORM( 0xbf2fdbe5, 0x3ec089eb, 0x3f1f30f1 ),
	VERT( 0xc30abfd8, 0x41cdfa32, 0x42973481 ),
	NORM( 0xbef91014, 0x3f061102, 0x3f330962 ),
	VERT( 0xc307684f, 0x41da6f94, 0x4298201c ),
	NORM( 0xbe818ac3, 0x3f22f108, 0x3f3a85d9 ),
	VERT( 0xc303d235, 0x41e1e5e2, 0x4297a2dc ),
	NORM( 0xbb0eb145, 0x3f34f405, 0x3f3515a7 ),
	VERT( 0xc3003c1c, 0x41e3dae0, 0x4295c549 ),
	NORM( 0x3e7e89fa, 0x3f3adec3, 0x3f22fdc6 ),
	VERT( 0xc2f9c925, 0x41e02c73, 0x4292a7f1 ),
	NORM( 0x3eea80e3, 0x3f35ea73, 0x3f08ba7c ),
	VERT( 0xc2f38b35, 0x41d7e534, 0x428e8986 ),
	NORM( 0x3f31219d, 0x3f20966f, 0x3eb6ffa0 ),
	VERT( 0xc2efe949, 0x41c987ff, 0x4289c0ef ),
	NORM( 0x3f59fd96, 0x3efe30c9, 0x3e2ca530 ),
	VERT( 0xc2ecdf9e, 0x41b79a0f, 0x42844624 ),
	NORM( 0x3f6dcb35, 0x3ebd82ee, 0x3c58bd0d ),
	VERT( 0xc2ebede0, 0x41a3507d, 0x427dc8c5 ),
	NORM( 0x3f76ea7b, 0x3e3f2cf6, 0xbe3f2cfb ),
	VERT( 0xc2ecdf9e, 0x418dc97b, 0x4273a3fd ),
	NORM( 0x3f6e801d, 0xbb46536f, 0xbeba0ad9 ),
	VERT( 0xc2efa45e, 0x4170f925, 0x426acee6 ),
	NORM( 0x3f57d8cb, 0xbe386243, 0xbf01b26c ),
	VERT( 0xc2f37aec, 0x414d1a74, 0x42645c5f ),
	NORM( 0x3f312fdc, 0xbeb7c8a5, 0xbf204d43 ),
	VERT( 0xc2f9c925, 0x41288482, 0x425f5ac7 ),
	NORM( 0x3ef6bbbd, 0xbf05705b, 0xbf344eac ),
	VERT( 0xc3003c1c, 0x410f99be, 0x425d8392 ),
	NORM( 0x3e7e1714, 0xbf23120d, 0xbf3ad6d7 ),
	VERT( 0xc303d235, 0x4100ad28, 0x425e7e13 ),
	NORM( 0xbb0ea21e, 0xbf351593, 0xbf34f419 ),
	VERT( 0xc307684f, 0x40f9864e, 0x42623937 ),
	NORM( 0xbe81533a, 0xbf3a7f1b, 0xbf2303c7 ),
	VERT( 0xc30abfd8, 0x41041ffd, 0x426873e8 ),
	NORM( 0xbef8c6d8, 0xbf32fa4f, 0xbf064715 ),
	VERT( 0xc30d9e81, 0x41164343, 0x4270c17b ),
	NORM( 0xbf2fcbe9, 0xbf1f2dee, 0xbec0ce3a ),
	VERT( 0xc30fd23b, 0x4131f079, 0x427a9111 ),
	NORM( 0xbf5738ea, 0xbf007a35, 0xbe503064 ),
	VERT( 0xc2e88b08, 0x4206c516, 0x427c93b7 ),
	NORM( 0x3f10dfd2, 0x3e190772, 0x3f4f9101 ),
	VERT( 0xc2e4ec63, 0x421e54c6, 0x426bc01b ),
	NORM( 0x3f083284, 0x3e91e9cd, 0x3f4c1ddf ),
	VERT( 0xc2e4cece, 0x417a715b, 0x420a9fc4 ),
	NORM( 0xbd50337c, 0xbf7e8c71, 0xbdbf4795 ),
	VERT( 0xc2e883bf, 0x416ed630, 0x423275e0 ),
	NORM( 0x3e535f14, 0xbf777cb3, 0x3e1a98da ),
	VERT( 0xc2dc5cff, 0x41f1154d, 0x425c732e ),
	NORM( 0x3f0926ce, 0xbeb63651, 0x3f4405f5 ),
	VERT( 0xc2d913f0, 0x42204a62, 0x4258bde7 ),
	NORM( 0x3f1649e2, 0x3e7f475f, 0x3f452bc3 ),
	VERT( 0xc2d8ff4e, 0x4187d0d1, 0x41f69744 ),
	NORM( 0xbe972d2f, 0xbf57eb23, 0xbee5cbeb ),
	VERT( 0xc2dc57e9, 0x41802029, 0x4223b5a7 ),
	NORM( 0x3e0184cd, 0xbf6e104c, 0x3eb0c903 ),
	VERT( 0xc30270ec, 0x4237e298, 0x418fa1e1 ),
	NORM( 0x3e41203d, 0xbf3cd6f1, 0xbf25f721 ),
	VERT( 0xc2fe1091, 0x42825833, 0x42197cdc ),
	NORM( 0x3ef4b77e, 0x3f000c3e, 0x3f38d8ac ),
	VERT( 0xc2c4d5a9, 0x42d3715d, 0xc1aefa41 ),
	NORM( 0xbf1a07ea, 0x3f10823a, 0xbf10aa04 ),
	VERT( 0xc2c3f7f1, 0x42d5b1fb, 0xc1b7e5e8 ),
	NORM( 0xbf7707ae, 0x3e3e343e, 0xbe3dc848 ),
	VERT( 0xc2c3640e, 0x42cfec01, 0xc1ca9e93 ),
	NORM( 0xbf72e8e0, 0x3cf2dd0f, 0xbea0e9de ),
	VERT( 0xc2c44933, 0x42ce0373, 0xc1c09a89 ),
	NORM( 0xbf14a846, 0x3eba1b3c, 0xbf3a7d28 ),
	VERT( 0xc2c80cb8, 0x42d37b1a, 0xc1af0a64 ),
	NORM( 0x3c614336, 0x3f350e46, 0xbf34f2dc ),
	VERT( 0xc2c7755a, 0x42cdb703, 0xc1c1ca9f ),
	NORM( 0x3ced2f94, 0x3f0d21d1, 0xbf557456 ),
	VERT( 0xc2c7755a, 0x42d82b28, 0xc197fa07 ),
	NORM( 0x3cfdf7db, 0x3f557a55, 0xbf0d1171 ),
	VERT( 0xc2c44932, 0x42d7d96e, 0xc1994296 ),
	NORM( 0xbf14b03c, 0x3f3a5fc3, 0xbeba777b ),
	VERT( 0xc2c3640e, 0x42da6025, 0xc1a0cdfd ),
	NORM( 0xbf730649, 0x3ea04ab3, 0xbce616e3 ),
	VERT( 0xc2c5b991, 0x42db7566, 0xc17c57d7 ),
	NORM( 0x3da11b64, 0x3f6c50b0, 0xbec0b932 ),
	VERT( 0xc2c2ad63, 0x42daeec7, 0xc180ee6e ),
	NORM( 0xbf04f7df, 0x3f57dbf6, 0xbe0dffe6 ),
	VERT( 0xc2c1b27a, 0x42dda4da, 0xc186e9ba ),
	NORM( 0xbf670ee1, 0x3ecf0da5, 0x3e1747fb ),
	VERT( 0xc2c2f79a, 0x42dd206e, 0xc146c482 ),
	NORM( 0x3e1c7ead, 0x3f781675, 0xbe464e3c ),
	VERT( 0xc2c01e4a, 0x42dc7b9c, 0xc14f4c63 ),
	NORM( 0xbed76560, 0x3f66f1a4, 0x3dc44b33 ),
	VERT( 0xc2bf00c1, 0x42df4711, 0xc157f9a1 ),
	NORM( 0xbf538d57, 0x3ee97a2b, 0x3ea92909 ),
	VERT( 0xc2bcc88c, 0x42dc64df, 0xc11e45f3 ),
	NORM( 0xbe95ceb5, 0x3f6624b7, 0x3ea6d8b4 ),
	VERT( 0xc2bb7de2, 0x42df2a4b, 0xc123b9fa ),
	NORM( 0xbf3989e2, 0x3eed2ba6, 0x3f029259 ),
	VERT( 0xc2bf5f92, 0x42dd0f23, 0xc112e0b6 ),
	NORM( 0x3e7ce9fa, 0x3f780dbe, 0xbc2f991b ),
	VERT( 0xc2b8e659, 0x42daac23, 0xc0e44195 ),
	NORM( 0xbe135803, 0x3f55284c, 0x3f08e7bb ),
	VERT( 0xc2b76721, 0x42dd5081, 0xc0e94807 ),
	NORM( 0xbf1aa1f5, 0x3ed72972, 0x3f2d5a3d ),
	VERT( 0xc2bb302c, 0x42db42b8, 0xc0c86b72 ),
	NORM( 0x3eb6b8ca, 0x3f6baafb, 0x3e2278df ),
	VERT( 0xc2b4bb70, 0x42d76f6e, 0xc09bbe2c ),
	NORM( 0x3c8c6bf5, 0x3f358eba, 0x3f346d1a ),
	VERT( 0xc2b303d3, 0x42d9d9fc, 0xc09bda5e ),
	NORM( 0xbef0d3bc, 0x3ea97de7, 0x3f516a48 ),
	VERT( 0xc2b6b26c, 0x42d7da8c, 0xc077c6c0 ),
	NORM( 0x3ef4b84d, 0x3f536d6d, 0x3e992236 ),
	VERT( 0xc2b09087, 0x42d2e737, 0xc04fe5a1 ),
	NORM( 0x3e367d5d, 0x3f09b785, 0x3f52ec60 ),
	VERT( 0xc2aea085, 0x42d50321, 0xc048e40e ),
	NORM( 0xbea9b479, 0x3e4fe2ad, 0x3f6bdeed ),
	VERT( 0xc2b234ab, 0x42d3120b, 0xc00ac13e ),
	NORM( 0x3f199216, 0x3f30e15f, 0x3ece8bfc ),
	VERT( 0xc2ae0545, 0x42cd3cac, 0xbfa26795 ),
	NORM( 0x3f3708f5, 0x3f06a3ae, 0x3eebd9e2 ),
	VERT( 0xc2acae53, 0x42cd6292, 0xc018ce08 ),
	NORM( 0x3ea8711f, 0x3eaab7aa, 0x3f622db3 ),
	VERT( 0xc2aa89c4, 0x42cf2063, 0xc00daa9f ),
	NORM( 0xbe48e6b2, 0x3d2f04cb, 0x3f7ac94b ),
	VERT( 0xc2a95895, 0x42c741c4, 0xc015f698 ),
	NORM( 0x3ee9d825, 0x3ddaabc7, 0x3f6217d2 ),
	VERT( 0xc2a706e6, 0x42c8986e, 0xc00a120f ),
	NORM( 0xbd9dca1d, 0xbe1184c2, 0x3f7ca215 ),
	VERT( 0xc2aa6d3d, 0x42c6c032, 0xbf9e1550 ),
	NORM( 0x3f508b62, 0x3eae7a40, 0x3ef049c5 ),
	VERT( 0xc2a7ab47, 0x42c00dc8, 0xc0046b95 ),
	NORM( 0x3f63e85a, 0x3e14feed, 0x3edcf79e ),
	VERT( 0xc2a6c97d, 0x42c0efb6, 0xc0479143 ),
	NORM( 0x3f0d5d71, 0xbe025593, 0x3f52ed57 ),
	VERT( 0xc2a4552d, 0x42c1dd33, 0xc03e5907 ),
	NORM( 0x3c815342, 0xbeadaf1f, 0x3f70c957 ),
	VERT( 0xc2a5ef7d, 0x42b99a40, 0xc06db350 ),
	NORM( 0x3f700c29, 0xbd34496a, 0x3eb07ab2 ),
	VERT( 0xc2a52dad, 0x42badaab, 0xc0951e27 ),
	NORM( 0x3f1c9db0, 0xbeb34727, 0x3f35952f ),
	VERT( 0xc2a2a399, 0x42bb6422, 0xc09377c5 ),
	NORM( 0x3d9e34b6, 0xbf07d56e, 0x3f581696 ),
	VERT( 0xc2a5581f, 0x42b3d629, 0xc0c1da80 ),
	NORM( 0x3f741c51, 0xbe59cc2c, 0x3e5a6771 ),
	VERT( 0xc2a4a136, 0x42b56cc1, 0xc0db9f2a ),
	NORM( 0x3f21c033, 0xbf0c68ed, 0x3f0c34c4 ),
	VERT( 0xc2a20fb6, 0x42b59e28, 0xc0de5a57 ),
	NORM( 0x3dcc07ea, 0xbf340ba9, 0x3f343127 ),
	VERT( 0xc2a52dad, 0x42b104b0, 0xc1193eed ),
	NORM( 0x3f1c8f87, 0xbf35bd23, 0x3eb2d68d ),
	VERT( 0xc2a2a399, 0x42b0effe, 0xc11d5d03 ),
	NORM( 0x3da3ecac, 0xbf57fe98, 0x3f07e077 ),
	VERT( 0xc2a5ef7d, 0x42af261c, 0xc10f0df5 ),
	NORM( 0x3f6fdaf7, 0xbeb15f44, 0x3d3d7327 ),
	VERT( 0xc2a6c97d, 0x42adef58, 0xc149e740 ),
	NORM( 0x3f0d4540, 0xbf530551, 0x3e018bb2 ),
	VERT( 0xc2a4552d, 0x42adab4a, 0xc151258a ),
	NORM( 0x3cab21f9, 0xbf70d7e1, 0x3ead3a2c ),
	VERT( 0xc2a7ab47, 0x42abdbdf, 0xc142aa2e ),
	NORM( 0x3f637f4c, 0xbedf243f, 0xbe1209e4 ),
	VERT( 0xc2a95896, 0x42ac6282, 0xc17c77b7 ),
	NORM( 0x3ee88a87, 0xbf626fb1, 0xbdda2d14 ),
	VERT( 0xc2a706e7, 0x42ac0912, 0xc1837fb1 ),
	NORM( 0xbd93483e, 0xbf7cc2a8, 0x3e10bc00 ),
	VERT( 0xc2aa6d3e, 0x42aa30d7, 0xc1783d88 ),
	NORM( 0x3f4f5a94, 0xbef52e28, 0xbead5819 ),
	VERT( 0xc2acae53, 0x42ac793d, 0xc196bf15 ),
	NORM( 0x3ea7a99e, 0xbf624313, 0xbeab0ab1 ),
	VERT( 0xc2ae0545, 0x42aa4220, 0xc19610a9 ),
	NORM( 0x3f35f2a2, 0xbeeef24f, 0xbf06bf9b ),
	VERT( 0xc2aa89c5, 0x42ac25d7, 0xc19d9f83 ),
	NORM( 0xbe42f276, 0xbf7b0c5f, 0xbd3a3959 ),
	VERT( 0xc2b09087, 0x42ae31fa, 0xc1acd1ad ),
	NORM( 0x3e39e4d5, 0xbf522a4c, 0xbf0a96ae ),
	VERT( 0xc2aea085, 0x42adffa1, 0xc1b52a82 ),
	NORM( 0xbea4e497, 0xbf6c5268, 0xbe570e17 ),
	VERT( 0xc2b234ab, 0x42ac0e8b, 0xc1ad662b ),
	NORM( 0x3f190c49, 0xbece3b42, 0xbf316cad ),
	VERT( 0xc2b6b26c, 0x42af76b9, 0xc1c08825 ),
	NORM( 0x3ef38df2, 0xbe985671, 0xbf53e837 ),
	VERT( 0xc2b4bb70, 0x42b16eb0, 0xc1bef283 ),
	NORM( 0x3cb5c0cd, 0xbf33904d, 0xbf365ffd ),
	VERT( 0xc2b303d3, 0x42b17628, 0xc1c885e7 ),
	NORM( 0xbeeb8bfb, 0xbf51eac8, 0xbeae5bcf ),
	VERT( 0xc2b76721, 0x42b64d01, 0xc1d66004 ),
	NORM( 0xbf192a03, 0xbf2daf46, 0xbeda44fe ),
	VERT( 0xc2b8e659, 0x42b5f6e6, 0xc1cbe55c ),
	NORM( 0xbe0fef89, 0xbf0862fd, 0xbf55a283 ),
	VERT( 0xc2bb302c, 0x42b43f38, 0xc1ce28dd ),
	NORM( 0x3eb59698, 0xbe202349, 0xbf6bfc91 ),
	VERT( 0xc2bcc88c, 0x42bb7b8a, 0xc1d2c84d ),
	NORM( 0xbe968eec, 0xbea6fbdf, 0xbf65fef8 ),
	VERT( 0xc2bb7de2, 0x42bc2fc0, 0xc1ddc72b ),
	NORM( 0xbf3902dd, 0xbf02c1b9, 0xbeee6857 ),
	VERT( 0xc2bf5f92, 0x42ba1497, 0xc1d55a8a ),
	NORM( 0x3e75565f, 0x3c26b694, 0xbf7887c2 ),
	VERT( 0xc2c01e4a, 0x42c19c5a, 0xc1d3233a ),
	NORM( 0xbed859a5, 0xbdc76f2f, 0xbf66adc2 ),
	VERT( 0xc2bf00c0, 0x42c2b7b6, 0xc1de3a40 ),
	NORM( 0xbf532da1, 0xbea8b5a0, 0xbeeb26bb ),
	VERT( 0xc2c2f79a, 0x42c09112, 0xc1d59fb0 ),
	NORM( 0x3e14131f, 0x3e441c39, 0xbf7884fb ),
	VERT( 0xc2c2ad63, 0x42c7ee68, 0xc1ccefea ),
	NORM( 0xbf04e9bd, 0x3e0d4321, 0xbf57ec67 ),
	VERT( 0xc2c1b27a, 0x42c972ef, 0xc1d7b163 ),
	NORM( 0xbf66caaa, 0xbe1526b0, 0xbed09f59 ),
	VERT( 0xc2c5b991, 0x42c7437c, 0xc1cef394 ),
	NORM( 0x3d993669, 0x3ec0767f, 0xbf6c7345 ),
	VERT( 0xc2c80cb8, 0x42d37b1a, 0xc1af0a64 ),
	NORM( 0xbf262da5, 0x3f09a89e, 0xbf09bc1a ),
	VERT( 0xc2c7755a, 0x42cdb703, 0xc1c1ca9f ),
	NORM( 0xbf20a36d, 0x3ead1607, 0xbf338f3c ),
	VERT( 0xc2c7755a, 0x42d82b28, 0xc197fa07 ),
	NORM( 0xbf20b0b0, 0x3f337047, 0xbead6520 ),
	VERT( 0xc2c5b991, 0x42db7566, 0xc17c57d7 ),
	NORM( 0xbf107e4e, 0x3f513b38, 0xbded4eb5 ),
	VERT( 0xc2c2f79a, 0x42dd206e, 0xc146c482 ),
	NORM( 0xbeed0ade, 0x3f60fc76, 0x3debf53a ),
	VERT( 0xc2bf5f92, 0x42dd0f23, 0xc112e0b6 ),
	NORM( 0xbea8d5b6, 0x3f6199ef, 0x3ead5d23 ),
	VERT( 0xc2bb302c, 0x42db42b8, 0xc0c86b72 ),
	NORM( 0xbe31169c, 0x3f52e2e0, 0x3f0a36aa ),
	VERT( 0xc2b6b26c, 0x42d7da8c, 0xc077c6c0 ),
	NORM( 0xbb330981, 0x3f359b9c, 0x3f346d74 ),
	VERT( 0xc2b234ab, 0x42d3120b, 0xc00ac13e ),
	NORM( 0x3e2c9fc2, 0x3f0bdec9, 0x3f520604 ),
	VERT( 0xc2ae0545, 0x42cd3cac, 0xbfa26795 ),
	NORM( 0x3ea84077, 0x3eb19847, 0x3f60e2e5 ),
	VERT( 0xc2aa6d3d, 0x42c6c032, 0xbf9e1550 ),
	NORM( 0x3eeebf6b, 0x3dff576a, 0x3f60340f ),
	VERT( 0xc2a7ab47, 0x42c00dc8, 0xc0046b95 ),
	NORM( 0x3f127d9d, 0xbdd97c3c, 0x3f502d2a ),
	VERT( 0xc2a5ef7d, 0x42b99a40, 0xc06db350 ),
	NORM( 0x3f2383ce, 0xbea8b753, 0x3f31ff00 ),
	VERT( 0xc2a5581f, 0x42b3d629, 0xc0c1da80 ),
	NORM( 0x3f294f0d, 0xbf07c6d2, 0x3f07c6c3 ),
	VERT( 0xc2a5ef7d, 0x42af261c, 0xc10f0df5 ),
	NORM( 0x3f2383c8, 0xbf31ff04, 0x3ea8b756 ),
	VERT( 0xc2a7ab47, 0x42abdbdf, 0xc142aa2e ),
	NORM( 0x3f127da0, 0xbf502d26, 0x3dd97c8c ),
	VERT( 0xc2aa6d3e, 0x42aa30d7, 0xc1783d88 ),
	NORM( 0x3eee6315, 0xbf6045c8, 0xbe006b2c ),
	VERT( 0xc2ae0545, 0x42aa4220, 0xc19610a9 ),
	NORM( 0x3ea7bc57, 0xbf60d968, 0xbeb244fc ),
	VERT( 0xc2b234ab, 0x42ac0e8b, 0xc1ad662b ),
	NORM( 0x3e2c3c2c, 0xbf51e90c, 0xbf0c11e8 ),
	VERT( 0xc2b6b26c, 0x42af76b9, 0xc1c08825 ),
	NORM( 0xbb39d655, 0xbf3462e0, 0xbf35a617 ),
	VERT( 0xc2bb302c, 0x42b43f38, 0xc1ce28dd ),
	NORM( 0xbe3040f1, 0xbf0a726e, 0xbf52c6da ),
	VERT( 0xc2bf5f92, 0x42ba1497, 0xc1d55a8a ),
	NORM( 0xbea826c4, 0xbeae2d7f, 0xbf61927a ),
	VERT( 0xc2c2f79a, 0x42c09112, 0xc1d59fb0 ),
	NORM( 0xbeecc4df, 0xbded354f, 0xbf6109a1 ),
	VERT( 0xc2c5b991, 0x42c7437c, 0xc1cef394 ),
	NORM( 0xbf106a56, 0x3dec630c, 0xbf514d2b ),
	VERT( 0xc2c3f7f1, 0x42d5b1fb, 0xc1b7e5e8 ),
	NORM( 0xbf11aaf1, 0x3f14db7a, 0xbf14db64 ),
	VERT( 0xc2c3640e, 0x42cfec01, 0xc1ca9e93 ),
	NORM( 0xbf0cbcf0, 0x3ec2e46e, 0xbf3e598e ),
	VERT( 0xc2c3640e, 0x42da6025, 0xc1a0cdfd ),
	NORM( 0xbf0cbcea, 0x3f3e5994, 0xbec2e466 ),
	VERT( 0xc2c1b27a, 0x42dda4da, 0xc186e9ba ),
	NORM( 0xbefc906a, 0x3f5b2a1a, 0xbe1dc60e ),
	VERT( 0xc2bf00c1, 0x42df4711, 0xc157f9a1 ),
	NORM( 0xbece81f8, 0x3f69467d, 0x3dab1167 ),
	VERT( 0xc2bb7de2, 0x42df2a4b, 0xc123b9fa ),
	NORM( 0xbe925d9a, 0x3f679018, 0x3ea1f967 ),
	VERT( 0xc2b76721, 0x42dd5081, 0xc0e94807 ),
	NORM( 0xbe1880f4, 0x3f55f55b, 0x3f074b05 ),
	VERT( 0xc2b303d3, 0x42d9d9fc, 0xc09bda5e ),
	NORM( 0xbb08c77f, 0x3f3588dc, 0x3f348076 ),
	VERT( 0xc2aea085, 0x42d50321, 0xc048e40e ),
	NORM( 0x3e139199, 0x3f089e14, 0x3f55550b ),
	VERT( 0xc2aa89c4, 0x42cf2063, 0xc00daa9f ),
	NORM( 0x3e8f43dd, 0x3ea446d1, 0x3f67a463 ),
	VERT( 0xc2a706e6, 0x42c8986e, 0xc00a120f ),
	NORM( 0x3eca9d5d, 0x3daf00b5, 0x3f6a14f1 ),
	VERT( 0xc2a4552d, 0x42c1dd33, 0xc03e5907 ),
	NORM( 0x3ef7d13e, 0xbe1e8534, 0x3f5c7b44 ),
	VERT( 0xc2a2a399, 0x42bb6422, 0xc09377c5 ),
	NORM( 0x3f0a109e, 0xbec49afa, 0x3f3fdc6e ),
	VERT( 0xc2a20fb6, 0x42b59e28, 0xc0de5a57 ),
	NORM( 0x3f0ee3d3, 0xbf163282, 0x3f163284 ),
	VERT( 0xc2a2a399, 0x42b0effe, 0xc11d5d03 ),
	NORM( 0x3f0a109e, 0xbf3fdc6d, 0x3ec49afd ),
	VERT( 0xc2a4552d, 0x42adab4a, 0xc151258a ),
	NORM( 0x3ef7d13b, 0xbf5c7b45, 0x3e1e852c ),
	VERT( 0xc2a706e7, 0x42ac0912, 0xc1837fb1 ),
	NORM( 0x3ecae5e7, 0xbf6a097a, 0xbdad93f0 ),
	VERT( 0xc2aa89c5, 0x42ac25d7, 0xc19d9f83 ),
	NORM( 0x3e8fa759, 0xbf67b14f, 0xbea3a6bb ),
	VERT( 0xc2aea085, 0x42adffa1, 0xc1b52a82 ),
	NORM( 0x3e13edad, 0xbf556c1a, 0xbf0873d1 ),
	VERT( 0xc2b303d3, 0x42b17628, 0xc1c885e7 ),
	NORM( 0xbb08f01c, 0xbf34804b, 0xbf358907 ),
	VERT( 0xc2b76721, 0x42b64d01, 0xc1d66004 ),
	NORM( 0xbe191afa, 0xbf072a49, 0xbf56032b ),
	VERT( 0xc2bb7de2, 0x42bc2fc0, 0xc1ddc72b ),
	NORM( 0xbe92d47a, 0xbea177e6, 0xbf6793e4 ),
	VERT( 0xc2bf00c0, 0x42c2b7b6, 0xc1de3a40 ),
	NORM( 0xbecebb8a, 0xbda9dbe9, 0xbf693d46 ),
	VERT( 0xc2c1b27a, 0x42c972ef, 0xc1d7b163 ),
	NORM( 0xbefc9068, 0x3e1dc5bb, 0xbf5b2a1e ),
	VERT( 0xc2d486ae, 0x427fedd9, 0x420a2708 ),
	NORM( 0x3eb09989, 0x3f27faa6, 0x3f2bd1f4 ),
	VERT( 0xc2d011d1, 0x428f1450, 0x41c99833 ),
	NORM( 0x3f3ec022, 0x3f1c44d3, 0x3e898de0 ),
	VERT( 0xc2e4ec63, 0x421e54c6, 0x426bc01b ),
	NORM( 0x3e9f76bd, 0x3f1e1903, 0x3f38e395 ),
	VERT( 0xc2d0124f, 0x425322e5, 0x40d8b410 ),
	NORM( 0x3ed378c0, 0x3c2aa10e, 0xbf6920db ),
	VERT( 0xc2d4a43f, 0x421ecd80, 0x4129ba6a ),
	NORM( 0xbe1fb603, 0xbedbbf3d, 0xbf63bfbb ),
	VERT( 0xc2e4cece, 0x417a715b, 0x420a9fc4 ),
	NORM( 0xbec44bc7, 0xbf15e056, 0xbf36ddc1 ),
	VERT( 0xc2cb029b, 0x426c9497, 0x420c73b2 ),
	NORM( 0x3f356faa, 0x3f064f2d, 0x3ef17a68 ),
	VERT( 0xc2c8565d, 0x426fb3da, 0x41c9cdca ),
	NORM( 0x3f64be0b, 0x3edcef93, 0xbdfe3720 ),
	VERT( 0xc2c856b6, 0x42374e06, 0x41321636 ),
	NORM( 0x3f0271cf, 0x3e207ab2, 0xbf5896ad ),
	VERT( 0xc2cb1739, 0x420f2253, 0x414046d9 ),
	NORM( 0xbda82040, 0xbebad6d3, 0xbf6d6ae8 ),
	VERT( 0xc2d12b1c, 0x41db2b2d, 0x4250e2e1 ),
	NORM( 0x3e8b2645, 0xbef592b4, 0x3f5595ec ),
	VERT( 0xc2cbb852, 0x42210842, 0x42411f53 ),
	NORM( 0x3f1ba7d0, 0x3e959e8b, 0x3f3cf924 ),
	VERT( 0xc2c4f2e3, 0x424acc19, 0x42175b7b ),
	NORM( 0x3f329840, 0x3ef79d0c, 0x3f075237 ),
	VERT( 0xc2bf1571, 0x425cf061, 0x41c24bfc ),
	NORM( 0x3f5820a2, 0x3f035ec6, 0x3e1e549e ),
	VERT( 0xc2bf15ca, 0x4225199f, 0x41254dbd ),
	NORM( 0x3ddc13f4, 0xbdd10451, 0xbf7d2c4c ),
	VERT( 0xc2c50781, 0x41dc9c79, 0x416f7066 ),
	NORM( 0xbef00af8, 0xbed94d87, 0xbf464ea2 ),
	VERT( 0xc2cba3b0, 0x418b11bf, 0x41c942ee ),
	NORM( 0xbf069b1a, 0xbf1e1aa7, 0xbf15bbf9 ),
	VERT( 0xc2d12607, 0x4156a146, 0x4218b707 ),
	NORM( 0xbe42dfeb, 0xbf783539, 0x3e1dc029 ),
	VERT( 0xc2173f07, 0x4210a2c3, 0x42314e1e ),
	NORM( 0xbf5cf096, 0x3ef6568d, 0x3e1d87e0 ),
	VERT( 0xc219795d, 0x4204ab7c, 0x423d4565 ),
	NORM( 0xbf64c8f7, 0x3ea273fd, 0x3ea26d6b ),
	VERT( 0xc2169c66, 0x4208b33b, 0x42414e4e ),
	NORM( 0xbf0e2789, 0x3f168a99, 0x3f168ce4 ),
	VERT( 0xc2147b74, 0x42142220, 0x4235df69 ),
	NORM( 0xbf09482e, 0x3f308d5a, 0x3ef9268c ),
	VERT( 0xc210b6e3, 0x421bc948, 0x42262799 ),
	NORM( 0xbf45fbfe, 0x3f224a28, 0x3b036821 ),
	VERT( 0xc20e3dc3, 0x421ec98f, 0x422b37fb ),
	NORM( 0xbef60ed4, 0x3f48c99d, 0x3ec8d72e ),
	VERT( 0xc20652e6, 0x42255c83, 0x421c945e ),
	NORM( 0xbf2184af, 0x3f43e683, 0xbe02e564 ),
	VERT( 0xc2045033, 0x4227efa9, 0x422211e1 ),
	NORM( 0xbec8c882, 0x3f5d94a8, 0x3e9f7e43 ),
	VERT( 0xc1f190aa, 0x422cb569, 0x42153b78 ),
	NORM( 0xbee42518, 0x3f5db44a, 0xbe683b1a ),
	VERT( 0xc1eebff2, 0x422ef4d1, 0x421b0cb9 ),
	NORM( 0xbe8de3d7, 0x3f6d8284, 0x3e7fdf1b ),
	VERT( 0xc1d206dd, 0x423153ca, 0x42109d17 ),
	NORM( 0xbe6b296e, 0x3f6e07a1, 0xbe9342fc ),
	VERT( 0xc1d09d9a, 0x42335e8d, 0x4216a2fd ),
	NORM( 0xbe1291f8, 0x3f77803c, 0x3e58c327 ),
	VERT( 0xc1b02e9b, 0x4232e714, 0x420f09ce ),
	NORM( 0xba1f769b, 0x3f7e57d7, 0xbde8a06d ),
	VERT( 0xc1d206dd, 0x41b0065c, 0x4269edb3 ),
	NORM( 0xbe6b486c, 0xbe93acd3, 0x3f6df551 ),
	VERT( 0xc1b02e9b, 0x41acdfc9, 0x426b80fd ),
	NORM( 0xb92fca9f, 0xbdea5d55, 0x3f7e5178 ),
	VERT( 0xc1d09d9a, 0x41bc0fd2, 0x426bf99f ),
	NORM( 0xbe12a7f3, 0x3e585277, 0x3f778595 ),
	VERT( 0xc1f190aa, 0x41b9431f, 0x42654f52 ),
	NORM( 0xbee44003, 0xbe68eff7, 0x3f5da180 ),
	VERT( 0xc1eebff2, 0x41c4e34c, 0x42678fe2 ),
	NORM( 0xbe8df6e3, 0x3e7f7e97, 0x3f6d862a ),
	VERT( 0xc20652e6, 0x41c7f4ea, 0x425df66d ),
	NORM( 0xbf219428, 0xbe036cdb, 0x3f43d414 ),
	VERT( 0xc2045033, 0x41d2ed9c, 0x42608aba ),
	NORM( 0xbec8de6a, 0x3e9f5979, 0x3f5d964f ),
	VERT( 0xc210b6e3, 0x41db1b61, 0x42546331 ),
	NORM( 0xbf46096a, 0x3add3bf9, 0x3f2239d6 ),
	VERT( 0xc20e3dc3, 0x41e539d0, 0x425764a1 ),
	NORM( 0xbef621d1, 0x3ec8bef5, 0x3f48c9da ),
	VERT( 0xc2173f07, 0x41f1686a, 0x42493cac ),
	NORM( 0xbf5cf85c, 0x3e1d6886, 0x3ef63faa ),
	VERT( 0xc2147b74, 0x41fa88ab, 0x424cbd33 ),
	NORM( 0xbf094daf, 0x3ef919b3, 0x3f308d9b ),
	VERT( 0xc21c4dcc, 0x420e518d, 0x422d07a7 ),
	NORM( 0xbd4e1014, 0x3f3741b7, 0x3f324a18 ),
	VERT( 0xc21eb699, 0x420160b6, 0x4239f87e ),
	NORM( 0xbd55ddb4, 0x3f34c6da, 0x3f34c4a0 ),
	VERT( 0xc219795d, 0x4204ab7c, 0x423d4565 ),
	NORM( 0xbf2a2b5d, 0x3f073a72, 0x3f073f2c ),
	VERT( 0xc2173f07, 0x4210a2c3, 0x42314e1e ),
	NORM( 0xbf244f01, 0x3f265fc6, 0x3ed0681b ),
	VERT( 0xc2153d6e, 0x421a60a0, 0x4220f894 ),
	NORM( 0xbd37e0fd, 0x3f398dc2, 0x3f2ffe5a ),
	VERT( 0xc210b6e3, 0x421bc948, 0x42262799 ),
	NORM( 0xbf13320a, 0x3f43687d, 0x3e96ccc4 ),
	VERT( 0xc20a00bc, 0x4224bb8f, 0x42169da5 ),
	NORM( 0xbd14fe69, 0x3f3b8205, 0x3f2e0a5b ),
	VERT( 0xc20652e6, 0x42255c83, 0x421c945e ),
	NORM( 0xbef019d6, 0x3f5c5160, 0x3e4b543e ),
	VERT( 0xc1f6b77f, 0x422cadb1, 0x420eab83 ),
	NORM( 0xbccff2c3, 0x3f3cfca3, 0x3f2c8ff1 ),
	VERT( 0xc1f190aa, 0x422cb569, 0x42153b78 ),
	NORM( 0xbea99668, 0x3f6f6546, 0x3e00bbc1 ),
	VERT( 0xc1d49bee, 0x4231ac66, 0x4209acce ),
	NORM( 0xbc4dc932, 0x3f3df08c, 0x3f2b9b1e ),
	VERT( 0xc1d206dd, 0x423153ca, 0x42109d17 ),
	NORM( 0xbe2f954f, 0x3f7b5b69, 0x3da5a7ef ),
	VERT( 0xc1b001cc, 0x4233608b, 0x4207f8a9 ),
	NORM( 0x37b75210, 0x3f3e2a37, 0x3f2b62ed ),
	VERT( 0xc1d49bee, 0x41a22a0b, 0x426a442f ),
	NORM( 0xbc4d8f9c, 0x3f2b82b5, 0x3f3e069b ),
	VERT( 0xc1d206dd, 0x41b0065c, 0x4269edb3 ),
	NORM( 0xbe2fbae3, 0x3da4536f, 0x3f7b5d43 ),
	VERT( 0xc1f6b77f, 0x41ac2777, 0x42654579 ),
	NORM( 0xbcd1f1b3, 0x3f2c7d6c, 0x3f3d0cfd ),
	VERT( 0xc1f190aa, 0x41b9431f, 0x42654f52 ),
	NORM( 0xbea9bfbe, 0x3dff9dfb, 0x3f6f65e0 ),
	VERT( 0xc20a00bc, 0x41bc0bba, 0x425d5357 ),
	NORM( 0xbd16275f, 0x3f2dfe8a, 0x3f3b8c0f ),
	VERT( 0xc20652e6, 0x41c7f4ea, 0x425df66d ),
	NORM( 0xbef0499d, 0x3e4a9dd6, 0x3f5c4edc ),
	VERT( 0xc2153d6e, 0x41d0c197, 0x4252f869 ),
	NORM( 0xbd38e37d, 0x3f2ff963, 0x3f399176 ),
	VERT( 0xc210b6e3, 0x41db1b61, 0x42546331 ),
	NORM( 0xbf1346b9, 0x3e969070, 0x3f436488 ),
	VERT( 0xc21c4dcc, 0x41e8dfbd, 0x4246e956 ),
	NORM( 0xbd4ea619, 0x3f324a3d, 0x3f3740e9 ),
	VERT( 0xc2173f07, 0x41f1686a, 0x42493cac ),
	NORM( 0xbf245aec, 0x3ed04881, 0x3f265de5 ),
	VERT( 0xc223f2b5, 0x42038587, 0x423c1d50 ),
	NORM( 0x3b4f8bcd, 0x3f3504b9, 0x3f3504b6 ),
	VERT( 0xc2215b7b, 0x42116fb9, 0x422e331e ),
	NORM( 0x3b487d96, 0x3f34deb4, 0x3f352abc ),
	VERT( 0xc24761cc, 0x4218b15b, 0x42271e9c ),
	NORM( 0x3b488080, 0x3f34debc, 0x3f352ab4 ),
	VERT( 0xc24b4eb0, 0x42039c17, 0x423c33e0 ),
	NORM( 0x3b4f8bcd, 0x3f3504b9, 0x3f3504b7 ),
	VERT( 0xc219c300, 0x421e6729, 0x42213bae ),
	NORM( 0x3b33d5be, 0x3f34bb43, 0x3f354e2c ),
	VERT( 0xc23bdf9d, 0x422c56ce, 0x4213792a ),
	NORM( 0x3b33e09a, 0x3f34bb50, 0x3f354e20 ),
	VERT( 0xc20dadc7, 0x422989a0, 0x42161937 ),
	NORM( 0x3b12ecc3, 0x3f349cc5, 0x3f356caa ),
	VERT( 0xc22990ea, 0x423d35b1, 0x42029a46 ),
	NORM( 0x3b13028d, 0x3f349cd4, 0x3f356c9b ),
	VERT( 0xc1fbdd39, 0x423214dc, 0x420d8dfa ),
	NORM( 0x3acfe1ef, 0x3f348545, 0x3f35842a ),
	VERT( 0xc211b516, 0x424a27b1, 0x41eb508c ),
	NORM( 0x3ad02382, 0x3f348553, 0x3f35841c ),
	VERT( 0xc1d73070, 0x423773d0, 0x42082f06 ),
	NORM( 0x3a57575a, 0x3f347663, 0x3f35930c ),
	VERT( 0xc1ebd8be, 0x42524af5, 0x41db0a07 ),
	NORM( 0x3a57f23f, 0x3f34766b, 0x3f359304 ),
	VERT( 0xc1b0370d, 0x4239481a, 0x42065abb ),
	NORM( 0x39bde4b0, 0x3f04cb34, 0x3f5add65 ),
	VERT( 0xc1d73070, 0x419f2e7a, 0x42700b99 ),
	NORM( 0x3a57515a, 0x3f359311, 0x3f34765e ),
	VERT( 0xc1ebd8be, 0x4153b4ee, 0x4285715e ),
	NORM( 0x3a57e843, 0x3f35930a, 0x3f347665 ),
	VERT( 0xc1fbdd39, 0x41a9ec62, 0x426aaca4 ),
	NORM( 0x3acff14b, 0x3f35842c, 0x3f348543 ),
	VERT( 0xc211b516, 0x417441f9, 0x42815fbd ),
	NORM( 0x3ad032cd, 0x3f35841f, 0x3f348550 ),
	VERT( 0xc20dadc7, 0x41bb02de, 0x42622167 ),
	NORM( 0x3b12ec47, 0x3f356cb1, 0x3f349cbe ),
	VERT( 0xc22990ea, 0x419404fd, 0x4275cd79 ),
	NORM( 0x3b13020d, 0x3f356ca1, 0x3f349cce ),
	VERT( 0xc219c300, 0x41d147cc, 0x4256fef0 ),
	NORM( 0x3b33d8c6, 0x3f354e2e, 0x3f34bb41 ),
	VERT( 0xc23bdf9d, 0x41b5c2c2, 0x4264ee96 ),
	NORM( 0x3b33e3a5, 0x3f354e20, 0x3f34bb4f ),
	VERT( 0xc2215b7b, 0x41eb36aa, 0x424a0780 ),
	NORM( 0x3b4884ac, 0x3f352aba, 0x3f34deb6 ),
	VERT( 0xc24761cc, 0x41dd0da9, 0x42514923 ),
	NORM( 0x3b488794, 0x3f352ab2, 0x3f34debd ),
	VERT( 0xc24b4eb0, 0x42039c17, 0x423c33e0 ),
	NORM( 0xbf67fb17, 0x3e991b6b, 0x3e991b72 ),
	VERT( 0xc24761cc, 0x4218b15b, 0x42271e9c ),
	NORM( 0xbf6011a5, 0x3eee065c, 0x3e0889ad ),
	VERT( 0xc24bf972, 0x42125d85, 0x421f08ff ),
	NORM( 0xbf600f0b, 0x3eee1418, 0x3e086e40 ),
	VERT( 0xc2501034, 0x41f8cebb, 0x4234ff26 ),
	NORM( 0xbf67fb17, 0x3e991b6c, 0x3e991b70 ),
	VERT( 0xc23bdf9d, 0x422c56ce, 0x4213792a ),
	NORM( 0xbf48e069, 0x3f1e9b47, 0xbcaafed8 ),
	VERT( 0xc23ffc81, 0x4226d485, 0x420a91fd ),
	NORM( 0xbf48d6b5, 0x3f1ea729, 0xbcac799b ),
	VERT( 0xc22990ea, 0x423d35b1, 0x42029a46 ),
	NORM( 0xbf23fed8, 0x3f40a13b, 0xbe1cba78 ),
	VERT( 0xc22cea86, 0x4238675d, 0x41f1fe4d ),
	NORM( 0xbf23eb74, 0x3f40aef5, 0xbe1cf0fe ),
	VERT( 0xc211b516, 0x424a27b1, 0x41eb508c ),
	NORM( 0xbee7e869, 0x3f5ac2c4, 0xbe822501 ),
	VERT( 0xc2141034, 0x4245e373, 0x41d70621 ),
	NORM( 0xbee7ae48, 0x3f5aceaa, 0xbe823c82 ),
	VERT( 0xc1ebd8be, 0x42524af5, 0x41db0a07 ),
	NORM( 0xbe6fcb4c, 0x3f6b3164, 0xbea2ce5c ),
	VERT( 0xc1ee3e3f, 0x424e5d84, 0x41c61200 ),
	NORM( 0xbe6f3e20, 0x3f6b380e, 0xbea2dbc8 ),
	VERT( 0xc1b036f8, 0x42551185, 0x41d57ce5 ),
	NORM( 0x3991c565, 0x3f70ab61, 0xbeae84d7 ),
	VERT( 0xc1b036f8, 0x42551185, 0x41d57ce5 ),
	NORM( 0xb43a98a0, 0x3f347141, 0x3f35982d ),
	VERT( 0xc1b04b6d, 0x42513a8e, 0x41c057eb ),
	NORM( 0xb979f87d, 0x3f70ab79, 0xbeae8451 ),
	VERT( 0xc1ebd8be, 0x4153b4ee, 0x4285715e ),
	NORM( 0xbe715ade, 0xbea16ce5, 0x3f6b54bf ),
	VERT( 0xc1ee3e3f, 0x4129c4dc, 0x42837aa6 ),
	NORM( 0xbe70c10a, 0xbea179f1, 0x3f6b5c5b ),
	VERT( 0xc211b516, 0x417441f9, 0x42815fbd ),
	NORM( 0xbee7e865, 0xbe8224eb, 0x3f5ac2c8 ),
	VERT( 0xc2141034, 0x414bad20, 0x427e7b3c ),
	NORM( 0xbee7ae41, 0xbe823c6e, 0x3f5aceaf ),
	VERT( 0xc22990ea, 0x419404fd, 0x4275cd79 ),
	NORM( 0xbf23fed5, 0xbe1cba57, 0x3f40a13f ),
	VERT( 0xc22cea86, 0x4180cebb, 0x4270ff25 ),
	NORM( 0xbf23eb6f, 0xbe1cf0e3, 0x3f40aefc ),
	VERT( 0xc23bdf9d, 0x41b5c2c2, 0x4264ee96 ),
	NORM( 0xbf48e066, 0xbcaafd69, 0x3f1e9b4b ),
	VERT( 0xc23ffc81, 0x41a3f469, 0x425f6c4f ),
	NORM( 0xbf48d6b0, 0xbcac786f, 0x3f1ea730 ),
	VERT( 0xc24761cc, 0x41dd0da9, 0x42514923 ),
	NORM( 0xbf6011a6, 0x3e0889ba, 0x3eee0657 ),
	VERT( 0xc24bf972, 0x41cce26f, 0x424af54c ),
	NORM( 0xbf600f0c, 0x3e086e54, 0x3eee1411 ),
	VERT( 0xc2215b7b, 0x42116fb9, 0x422e331e ),
	NORM( 0x3ef7bc34, 0x3f052bc8, 0x3f342970 ),
	VERT( 0xc223f2b5, 0x42038587, 0x423c1d50 ),
	NORM( 0x3f004d2b, 0x3f1ca4dd, 0x3f1ca4e9 ),
	VERT( 0xc219c300, 0x421e6729, 0x42213bae ),
	NORM( 0x3eddc85d, 0x3edecee6, 0x3f4a0f5b ),
	VERT( 0xc20dadc7, 0x422989a0, 0x42161937 ),
	NORM( 0x3eb4a4ba, 0x3eb9bde6, 0x3f5ccd00 ),
	VERT( 0xc1fbdd39, 0x423214dc, 0x420d8dfa ),
	NORM( 0x3e7e9746, 0x3e9db2d3, 0x3f6b1749 ),
	VERT( 0xc1d73070, 0x423773d0, 0x42082f06 ),
	NORM( 0x3e034baf, 0x3e8cc74b, 0x3f73ef2f ),
	VERT( 0xc1d73070, 0x419f2e7a, 0x42700b99 ),
	NORM( 0x3e0383b3, 0x3f73ec66, 0x3e8ccd86 ),
	VERT( 0xc1fbdd39, 0x41a9ec62, 0x426aaca4 ),
	NORM( 0x3e7e9706, 0x3f6b1742, 0x3e9db316 ),
	VERT( 0xc20dadc7, 0x41bb02de, 0x42622167 ),
	NORM( 0x3eb4a4a1, 0x3f5cccfc, 0x3eb9be12 ),
	VERT( 0xc219c300, 0x41d147cc, 0x4256fef0 ),
	NORM( 0x3eddc832, 0x3f4a0f5e, 0x3edecf06 ),
	VERT( 0xc2215b7b, 0x41eb36aa, 0x424a0780 ),
	NORM( 0x3ef7bbf8, 0x3f342974, 0x3f052bdf ),
	VERT( 0xc29b89ed, 0x4147145a, 0xc1822eae ),
	NORM( 0xbf3235d9, 0xbebd5d2e, 0xbf1d84fe ),
	VERT( 0xc2afb256, 0xc181228b, 0x4144fc11 ),
	NORM( 0xbf35203e, 0xbeb7e25c, 0xbf1bcec5 ),
	VERT( 0xc2baa648, 0xc12bf46a, 0x415015d0 ),
	NORM( 0xbf0ef32b, 0xbef5ac58, 0xbf2d3dbd ),
	VERT( 0xc2b63592, 0xc02b41a6, 0x40ae69fe ),
	NORM( 0xbf0ef32b, 0xbef5ac57, 0xbf2d3dbd ),
	VERT( 0xc2a95e70, 0x4178836d, 0xc14c1ed8 ),
	NORM( 0xbf0ef32b, 0xbef5ac58, 0xbf2d3dbd ),
	VERT( 0xc2a98d09, 0xc1c0584b, 0x413e3e09 ),
	NORM( 0xbf6779a8, 0xbdc74702, 0xbed4edeb ),
	VERT( 0xc29970f4, 0x413775c2, 0xc18a33ea ),
	NORM( 0xbf493177, 0xbe8d6234, 0xbf0da218 ),
	VERT( 0xc292791e, 0x410ae89c, 0xc1a6ad94 ),
	NORM( 0xbf646375, 0xbdf7a321, 0xbededbd4 ),
	VERT( 0xc28fdfcf, 0x4098a06f, 0xc1c65a5d ),
	NORM( 0xbf723977, 0x3c202b6e, 0xbea59d53 ),
	VERT( 0xc29b2860, 0xc133b0ce, 0xc10cb3b5 ),
	NORM( 0xbf723977, 0x3c202b6f, 0xbea59d53 ),
	VERT( 0xc2a79ed4, 0xc1e7b188, 0x410efe8d ),
	NORM( 0xbf723977, 0x3c202b6e, 0xbea59d52 ),
	VERT( 0xc1b01787, 0xc1b06d4c, 0x42dc90a0 ),
	NORM( 0x3a8743be, 0x3f557eaf, 0x3f0d43e9 ),
	VERT( 0xc1f65f71, 0xc1a80f60, 0x42dc5f43 ),
	NORM( 0xbe9ec44f, 0x3e7429a0, 0x3f6b9a1e ),
	VERT( 0xc1f4b0b1, 0xc1b29e55, 0x42dc577e ),
	NORM( 0xbebaca22, 0x3f5ef8ba, 0x3ea87d06 ),
	VERT( 0xc1f5ea96, 0xc1aa27ae, 0x42e0ecd8 ),
	NORM( 0xbe0930e1, 0x3f6a991f, 0xbec11d87 ),
	VERT( 0xc1f4b0b1, 0xc2295be5, 0x42b45120 ),
	NORM( 0xbec4f5e8, 0xbf6aa5e7, 0xbddf2153 ),
	VERT( 0xc1f65f71, 0xc22d4e61, 0x42afb5fd ),
	NORM( 0xbe04265a, 0xbf668cc6, 0x3ed48554 ),
	VERT( 0xc1b013c9, 0xc22ddc6d, 0x42b1bdbc ),
	NORM( 0x3889f158, 0xbf7b71b5, 0xbe405379 ),
	VERT( 0xc1f5ea96, 0xc22bf56f, 0x42b57c0c ),
	NORM( 0xbf017492, 0xbf02e205, 0xbf31e55f ),
	VERT( 0xc2203548, 0xc1d082ed, 0x42d1ed3c ),
	NORM( 0xbf57655f, 0xbdd2232b, 0x3f07d541 ),
	VERT( 0xc2203548, 0xc2165dd2, 0x42badf0e ),
	NORM( 0xbea7fb4e, 0xbf50b710, 0x3ef44a8e ),
	VERT( 0xc21dcbf1, 0xc20f2d91, 0x42c1152a ),
	NORM( 0xbf6347b4, 0xbeeb6803, 0xbca24fe4 ),
	VERT( 0xc21dcbf1, 0xc1d40215, 0x42d3ab6e ),
	NORM( 0xbf610839, 0x3eec7340, 0x3df2919a ),
	VERT( 0xc21fb418, 0xc20dff8d, 0x42c423dd ),
	NORM( 0xbf637eda, 0x3e4dd5d2, 0xbed30892 ),
	VERT( 0xc21fb418, 0xc1d0f002, 0x42d6e7a3 ),
	NORM( 0xbef0ea39, 0x3f513a53, 0xbeaa4a60 ),
	VERT( 0xc1f5ea96, 0xc1aa27ae, 0x42e0ecd8 ),
	NORM( 0xbe8d14c4, 0x3f75c18e, 0x3d4ce3d5 ),
	VERT( 0xc1fcb0e2, 0xc1afd134, 0x42f16bbc ),
	NORM( 0xbda1d3ab, 0x3f708a43, 0x3eaa7f29 ),
	VERT( 0xc1afda0b, 0xc22b2ff2, 0x42c7baf4 ),
	NORM( 0xbb8cd093, 0xbf7b1028, 0xbe48158e ),
	VERT( 0xc1fcb0e2, 0xc229ddcb, 0x42c87123 ),
	NORM( 0xbe689349, 0xbf6feb56, 0xbe878f03 ),
	VERT( 0xc1f5ea96, 0xc22bf56f, 0x42b57c0c ),
	NORM( 0xbe84993d, 0xbf76cbd9, 0x3d73b468 ),
	VERT( 0xc2295fba, 0xc216903e, 0x42d1fe26 ),
	NORM( 0xbf5aa17f, 0xbe234bde, 0xbefd88da ),
	VERT( 0xc2295fba, 0xc1dc29f4, 0x42e63bc7 ),
	NORM( 0xbf2c89c2, 0x3f3c08e2, 0xbda1e62b ),
	VERT( 0xc21fb418, 0xc1d0f002, 0x42d6e7a3 ),
	NORM( 0xbf518f43, 0x3f0db4b8, 0xbe1cfb38 ),
	VERT( 0xc21fb418, 0xc20dff8d, 0x42c423dd ),
	NORM( 0xbf4f70c2, 0xbf13a28f, 0xbdd4ebaa ),
	VERT( 0xc2a5db01, 0xc1401467, 0x41fc8d5c ),
	NORM( 0xbf5453ca, 0xbeeffcd8, 0x3e9b9f5e ),
	VERT( 0xc2b10f8a, 0xc08d141d, 0x41bfc830 ),
	NORM( 0xbf3ae4f1, 0xbf0cd0ae, 0x3ecfa16d ),
	VERT( 0xc2afb256, 0xc181228b, 0x4144fc11 ),
	NORM( 0xbf4e222b, 0xbee2af39, 0x3ec9f9bf ),
	VERT( 0xc2a98d09, 0xc1c0584b, 0x413e3e09 ),
	NORM( 0xbf62d019, 0xbeb54a4c, 0x3e994d52 ),
	VERT( 0xc2a379ca, 0xc1fe6552, 0x413c6620 ),
	NORM( 0xbf19680b, 0xbf457282, 0xbe5bb5d7 ),
	VERT( 0xc2a79ed4, 0xc1e7b188, 0x410efe8d ),
	NORM( 0xbf080b07, 0xbf42bf9d, 0xbebecd30 ),
	VERT( 0xc2a95e70, 0x4178836d, 0xc14c1ed8 ),
	NORM( 0xbf0a548a, 0x3f0cc874, 0xbf230956 ),
	VERT( 0xc2aae519, 0x41c1bd7e, 0xc094e958 ),
	NORM( 0xbf200287, 0x3efe1096, 0xbf1a421d ),
	VERT( 0xc29ae5f5, 0x41c4e7b2, 0xc0a19224 ),
	NORM( 0xbe11c747, 0x3f2d3bba, 0xbf38ed53 ),
	VERT( 0xc29970f4, 0x413775c2, 0xc18a33ea ),
	NORM( 0xbe3ba2ba, 0x3f29fc70, 0xbf3994b9 ),
	VERT( 0xc29b89ed, 0x4147145a, 0xc1822eae ),
	NORM( 0xbd8ecdb6, 0x3f2d6192, 0xbf3b8010 ),
	VERT( 0xc28c202e, 0x41cde615, 0xc0c58bb2 ),
	NORM( 0xbe885be7, 0x3f250251, 0xbf377728 ),
	VERT( 0xc28a3504, 0x40a67d6a, 0xc1c9d19d ),
	NORM( 0xbe3f88b9, 0xbcca3668, 0xbf7b670d ),
	VERT( 0xc28fdfcf, 0x4098a06f, 0xc1c65a5d ),
	NORM( 0xbe0c5959, 0xbdb855b8, 0xbf7c88fa ),
	VERT( 0xc292791e, 0x410ae89c, 0xc1a6ad94 ),
	NORM( 0xbe58455f, 0x3f28d5a7, 0xbf38aead ),
	VERT( 0xc1cd5e8d, 0xc180022f, 0xc080c04f ),
	NORM( 0xb4c67978, 0xbf3504f3, 0xbf3504f4 ),
	VERT( 0xc1df4bad, 0xc28a601f, 0x4244a71f ),
	NORM( 0xb9c7b365, 0xbf7ff04c, 0xbcb34dda ),
	VERT( 0xc2187f63, 0xc28a8117, 0x4244e90f ),
	NORM( 0xbedcaf60, 0xbf66de31, 0x3cf8f421 ),
	VERT( 0xc222815f, 0xc28265e9, 0x4234b2b1 ),
	NORM( 0xbf1bfa4b, 0xbf446a7e, 0xbe4d0b82 ),
	VERT( 0xc25a2c42, 0xc25a3ed4, 0x420a25b3 ),
	NORM( 0xbf04fece, 0xbf564002, 0xbe306a85 ),
	VERT( 0xc2870590, 0xc230c419, 0x41c155f1 ),
	NORM( 0xbf092f40, 0xbf530fc9, 0xbe3a4e5a ),
	VERT( 0xc29b2860, 0xc133b0ce, 0xc10cb3b5 ),
	NORM( 0xb2dbc266, 0xbf3504f3, 0xbf3504f4 ),
	VERT( 0xc2bbed29, 0xc0008a8a, 0x41ac9479 ),
	NORM( 0xbf6a7a37, 0xbeb56f1b, 0x3e40f253 ),
	VERT( 0xc2b4e66d, 0x411ed82e, 0x411a2e21 ),
	NORM( 0xbf782fc9, 0x3dafd1da, 0xbe6b29ef ),
	VERT( 0xc2b3e083, 0x3fbd17d1, 0x3fb7561c ),
	NORM( 0xbf49120a, 0xbe927ea6, 0xbf0c8121 ),
	VERT( 0xc2b63592, 0xc02b41a6, 0x40ae69fe ),
	NORM( 0xbf7a5d1c, 0x3dc1e52c, 0xbe3e6f40 ),
	VERT( 0xc2baa648, 0xc12bf46a, 0x415015d0 ),
	NORM( 0xbf5cacdb, 0xbec4fce7, 0x3ea8f757 ),
	VERT( 0xc26f83b8, 0x40ecafb4, 0xc1db5e2e ),
	NORM( 0xbe6a973e, 0xbd413449, 0xbf78e61b ),
	VERT( 0xc242e46c, 0x41244a17, 0xc1f2574f ),
	NORM( 0xbe3bd502, 0xbc5a8dce, 0xbf7ba21b ),
	VERT( 0xc20eaef2, 0x413e532c, 0xc1ff5bd8 ),
	NORM( 0xbd9e20d3, 0xbbb3d5e4, 0xbf7f3b5f ),
	VERT( 0xc1af97b9, 0xc2517818, 0x42ee54a6 ),
	NORM( 0x3c492abc, 0xbf642732, 0xbee823eb ),
	VERT( 0xc2bf1571, 0x425cf061, 0x41c24bfc ),
	NORM( 0x3f5036ba, 0x3ef6ea1c, 0xbea6a11b ),
	VERT( 0xc2bf15ca, 0x4225199f, 0x41254dbd ),
	NORM( 0x3f65adff, 0x3e3a45a3, 0xbece0e18 ),
	VERT( 0xc2cec8d3, 0x41dd7131, 0x424a69b8 ),
	NORM( 0xbe37af20, 0xbe692ff2, 0x3f7501f4 ),
	VERT( 0xc2c9c933, 0x421debc7, 0x423bf360 ),
	NORM( 0x3f10bbe6, 0x3ea3f298, 0x3f429914 ),
	VERT( 0xc2cbb852, 0x42210842, 0x42411f53 ),
	NORM( 0x3f538a27, 0x3ddee24a, 0x3f0d759c ),
	VERT( 0xc2d12b1c, 0x41db2b2d, 0x4250e2e1 ),
	NORM( 0x3f4d30af, 0xbe73afac, 0x3f0c6ef8 ),
	VERT( 0xc2c392e5, 0x42443ccf, 0x4215a25a ),
	NORM( 0x3f1d7e8e, 0x3f15fdfb, 0x3f07086e ),
	VERT( 0xc2c4f2e3, 0x424acc19, 0x42175b7b ),
	NORM( 0x3f620138, 0x3e89b2be, 0x3ec52801 ),
	VERT( 0xc2be316c, 0x4254e19b, 0x41c7cd67 ),
	NORM( 0x3eb19563, 0x3f6982de, 0xbe5f9728 ),
	VERT( 0xc2be31be, 0x4221a729, 0x4142c064 ),
	NORM( 0x3f0a94e2, 0xbd463884, 0xbf56e3d0 ),
	VERT( 0xc2c3a5d0, 0x41dec3fd, 0x41836202 ),
	NORM( 0x3f34c1f4, 0xbef461c2, 0xbf05e91f ),
	VERT( 0xc2c50781, 0x41dc9c79, 0x416f7066 ),
	NORM( 0x3f5a0183, 0xbed1616e, 0xbea7ebca ),
	VERT( 0xc2c9b645, 0x4193f4dd, 0x41ce3123 ),
	NORM( 0x3f2694a0, 0xbf3883dd, 0xbe74a872 ),
	VERT( 0xc2cba3b0, 0x418b11bf, 0x41c942ee ),
	NORM( 0x3f491f40, 0xbf1a0bc5, 0xbe134840 ),
	VERT( 0xc2cec429, 0x416da5ef, 0x4216e131 ),
	NORM( 0x3d762ef6, 0xbf7f24e5, 0x3d62b06a ),
	VERT( 0xc2d12607, 0x4156a146, 0x4218b707 ),
	NORM( 0x3f488844, 0xbf117002, 0x3e81298f ),
	VERT( 0xc2cce780, 0x414fa20c, 0x4220bb25 ),
	NORM( 0xbf4aef82, 0xbf14cd3e, 0x3e3c17f3 ),
	VERT( 0xc2cce780, 0x41d638fa, 0x4257ef1d ),
	NORM( 0xbf1bcc00, 0xbe01a7d0, 0x3f4887ef ),
	VERT( 0xc2b9dcaf, 0x4226e34c, 0x41370169 ),
	NORM( 0xbeb92708, 0x3ee67a2e, 0xbf5102e1 ),
	VERT( 0xc2c361ad, 0x41b2e299, 0x41a1e9aa ),
	NORM( 0xbf2b9d57, 0xbec0f2fd, 0xbf23a315 ),
	VERT( 0xc2c361ad, 0x4234a0ca, 0x422c2452 ),
	NORM( 0xbebaa3af, 0x3f3aebc7, 0x3f13f223 ),
	VERT( 0xc2b9dcaf, 0x425e1746, 0x41c9e8a8 ),
	NORM( 0xbeca489b, 0x3f629f03, 0xbe7b5edb ),
	VERT( 0xc1afd003, 0xc263b510, 0x43078f73 ),
	NORM( 0xb9306880, 0xbf5e46bc, 0x3efe007e ),
	VERT( 0xc1afd003, 0xc25ad595, 0x430a91a5 ),
	NORM( 0x3896c89d, 0xbf3504ed, 0x3f3504fa ),
	VERT( 0xc1afd003, 0xc24eccc8, 0x430cc985 ),
	NORM( 0x39f3c2d3, 0xbefdfe75, 0x3f5e474f ),
	VERT( 0xc1afd003, 0xc23271c4, 0x430ec05e ),
	NORM( 0x3938cc1b, 0xbc61bfc2, 0x3f7ff9c7 ),
	VERT( 0xc1afd004, 0xc21616c2, 0x430ce3b0 ),
	NORM( 0x38053d6a, 0x3efa326d, 0x3f5f5a42 ),
	VERT( 0xc1b029e3, 0xc1f68a9e, 0x42f98d11 ),
	NORM( 0x38b4ca18, 0x3f77a76a, 0xbe81ab46 ),
	VERT( 0xc1b029e3, 0xc200fa1e, 0x42f2a9b7 ),
	NORM( 0x37bf4a57, 0x3f5e1509, 0xbefeae27 ),
	VERT( 0xc1b029e3, 0xc20a0df2, 0x42ecbf7a ),
	NORM( 0xba0d65b8, 0x3f36e951, 0xbf331b74 ),
	VERT( 0xc1b029e3, 0xc2159752, 0x42e81008 ),
	NORM( 0x39352593, 0x3efee749, 0xbf5e04a5 ),
	VERT( 0xc1b029e3, 0xc23271c5, 0x42e46208 ),
	NORM( 0x38b6da3c, 0xbc03d3af, 0xbf7ffde1 ),
	VERT( 0xc1b029e3, 0xc24f0122, 0x42e83592 ),
	NORM( 0xb9fd109c, 0xbf02dc9b, 0xbf5c0682 ),
	VERT( 0xc1afd003, 0xc25ad596, 0x42ecbf7b ),
	NORM( 0xb98a54c4, 0xbf36e290, 0xbf33225d ),
	VERT( 0xc1afd003, 0xc26b907c, 0x430078b0 ),
	NORM( 0x3a1a78ce, 0xbf7ff9c3, 0x3c61e1b7 ),
	VERT( 0xc1afd003, 0xc26969e5, 0x43041dc4 ),
	NORM( 0x3a06631c, 0xbf768a80, 0x3e89e435 ),
	VERT( 0xc30fd71a, 0x425f6b2c, 0x41b63b20 ),
	NORM( 0xbf6f0703, 0xbb8a23b7, 0xbeb74fa7 ),
	VERT( 0xc3104f6b, 0x426a3a82, 0x41ca6d09 ),
	NORM( 0xbf7746ea, 0x3e3b67ba, 0xbe3b67aa ),
	VERT( 0xc30fd71a, 0x42745373, 0x41e00baf ),
	NORM( 0xbf6f0702, 0x3eb74faa, 0x3b8a2622 ),
	VERT( 0xc30e7657, 0x427d05df, 0x41f59dea ),
	NORM( 0xbf56ce8b, 0x3f025e58, 0x3e43e17d ),
	VERT( 0xc30c452e, 0x4281dd03, 0x4204d5b1 ),
	NORM( 0xbf302c90, 0x3f206759, 0x3ebb4a23 ),
	VERT( 0xc30969dd, 0x4283fd7d, 0x420d6b22 ),
	NORM( 0xbefb4427, 0x3f33b800, 0x3f041c96 ),
	VERT( 0xc306163a, 0x4284bf40, 0x4213f988 ),
	NORM( 0xbe7366c5, 0x3f3b73c0, 0x3f2362c5 ),
	VERT( 0xc302844e, 0x42841518, 0x42180e7a ),
	NORM( 0x3c111a73, 0x3f362a57, 0x3f33da08 ),
	VERT( 0xc2f73d7e, 0x427d86d5, 0x4217df46 ),
	NORM( 0x3ee3a27f, 0x3f0a767e, 0x3f36c876 ),
	VERT( 0xc2f186db, 0x4274f163, 0x42139e55 ),
	NORM( 0x3f24fbf7, 0x3ec521db, 0x3f291e39 ),
	VERT( 0xc2ed2489, 0x426aeaa8, 0x420cea2f ),
	NORM( 0x3f5073fd, 0x3e3efab7, 0x3f0cb9cd ),
	VERT( 0xc2ea6304, 0x4260218c, 0x420437c0 ),
	NORM( 0x3f69ed0d, 0xbc3e8525, 0x3ecfe6d3 ),
	VERT( 0xc2e97260, 0x42555235, 0x41f43d97 ),
	NORM( 0x3f737a91, 0xbe5fb04b, 0x3e5fabd4 ),
	VERT( 0xc2ea6304, 0x424b3942, 0x41de9eef ),
	NORM( 0x3f6a47d3, 0xbece5644, 0x3c0d62b9 ),
	VERT( 0xc2ed2489, 0x424286d6, 0x41c90cb9 ),
	NORM( 0x3f4fa4b1, 0xbf0ca33a, 0xbe4d9324 ),
	VERT( 0xc2f186db, 0x423bd2ac, 0x41b4ff39 ),
	NORM( 0x3f26efa4, 0xbf2698a6, 0xbec7236b ),
	VERT( 0xc2f73d7e, 0x423791bc, 0x41a3d45b ),
	NORM( 0x3ee84e9d, 0xbf351f7d, 0xbf0ab43d ),
	VERT( 0xc2fde4c5, 0x42360e35, 0x4196b798 ),
	NORM( 0x3e5f9aab, 0xbf38e96c, 0xbf27fbf6 ),
	VERT( 0xc306163a, 0x423b777e, 0x418be509 ),
	NORM( 0xbe6af569, 0xbf2548fa, 0xbf3a7530 ),
	VERT( 0xc30969dd, 0x424205e0, 0x418eec12 ),
	NORM( 0xbefb440c, 0xbf041c9f, 0xbf33b803 ),
	VERT( 0xc30c452e, 0x424a9b51, 0x41976df7 ),
	NORM( 0xbf302c93, 0xbebb4a1b, 0xbf206758 ),
	VERT( 0xc30e7657, 0x4254a20d, 0x41a4d64a ),
	NORM( 0xbf56ce91, 0xbe43e167, 0xbf025e51 ),
	VERT( 0xc1c66e15, 0x41fb9111, 0x422e2597 ),
	NORM( 0xb39e02b0, 0x3f3504f5, 0x3f3504f2 ),
	VERT( 0xc24f0ea4, 0x42070714, 0x4224e70c ),
	NORM( 0xb41aa89f, 0x3f3504f5, 0x3f3504f2 ),
	VERT( 0xc24f0ea4, 0x42070714, 0x4224e70c ),
	NORM( 0x3e166a44, 0x3f2ccd62, 0x3f391921 ),
	VERT( 0xc2506dcb, 0x420044d5, 0x422ba94a ),
	NORM( 0x3e3438cd, 0x3f48bf5d, 0x3f18562b ),
	VERT( 0xc2506dcb, 0x420044d5, 0x422ba94a ),
	NORM( 0xb4a8a833, 0x3f3504f4, 0x3f3504f2 ),
	VERT( 0xc250608d, 0x41dea2e9, 0x423c9cab ),
	NORM( 0xb4a8a833, 0x3f3504f4, 0x3f3504f3 ),
	VERT( 0xc250608d, 0x41dea2e9, 0x423c9cab ),
	NORM( 0x3e65a325, 0x3f3961f8, 0x3f26f410 ),
	VERT( 0xc248b31d, 0x41afd6e1, 0x425402af ),
	NORM( 0xb4a8a833, 0x3f3504f4, 0x3f3504f3 ),
	VERT( 0xc248b31d, 0x41afd6e1, 0x425402af ),
	NORM( 0x3e5d6dfd, 0x3f40056d, 0x3f1fff89 ),
	VERT( 0xc2337b75, 0x4181f84b, 0x426af1fa ),
	NORM( 0xb4a8a833, 0x3f3504f4, 0x3f3504f3 ),
	VERT( 0xc2337b75, 0x4181f84b, 0x426af1fa ),
	NORM( 0x3e39a951, 0x3f473a79, 0x3f19ea19 ),
	VERT( 0xc216ab3d, 0x413dac8c, 0x427c82fd ),
	NORM( 0xb4a8a833, 0x3f3504f4, 0x3f3504f3 ),
	VERT( 0xc216ab3d, 0x413dac8c, 0x427c82fd ),
	NORM( 0x3e114b30, 0x3f4cad65, 0x3f156959 ),
	VERT( 0xc1f491d0, 0x411c1002, 0x42827510 ),
	NORM( 0x3da0cca7, 0x3f4f8a6a, 0x3f1485b2 ),
	VERT( 0xc1f491d0, 0x411c1002, 0x42827510 ),
	NORM( 0xb4a8a833, 0x3f3504f4, 0x3f3504f3 ),
	VERT( 0xc1d2cda9, 0x41111f72, 0x4283d322 ),
	NORM( 0xb4a8a832, 0x3f3504f4, 0x3f3504f3 ),
	VERT( 0xc1d2cda9, 0x41111f72, 0x4283d322 ),
	NORM( 0x3cd8e0ef, 0x3f51af30, 0x3f12b4a5 ),
	VERT( 0xc1c7c980, 0x41105c9b, 0x4283eb7d ),
	NORM( 0xb41f5715, 0x3f3504f4, 0x3f3504f2 ),
	VERT( 0xc1c7c980, 0x41105c9b, 0x4283eb7d ),
	NORM( 0x3ca20a1b, 0x3f518166, 0x3f1307ae ),
	VERT( 0xc2bfb9a6, 0x40b2ac65, 0x41f4c28b ),
	NORM( 0xbf534530, 0xbf1091e5, 0xbb257193 ),
	VERT( 0xc2b7bc85, 0x4184af77, 0x417ae852 ),
	NORM( 0xbf6a189d, 0xbd84c299, 0xbecc8b5c ),
	VERT( 0xc2c9afe8, 0x41dea17f, 0x4258140a ),
	NORM( 0x3e1a9f34, 0x3e85a883, 0x3f7414c8 ),
	VERT( 0xc2c16953, 0x4231b508, 0x422d2745 ),
	NORM( 0x3e840b22, 0x3f1cce50, 0x3f3f4859 ),
	VERT( 0xc2c22620, 0x41d82ea0, 0x4253244d ),
	NORM( 0x3e78b87e, 0x3f09e767, 0x3f4e8621 ),
	VERT( 0xc2ba4e57, 0x4224e060, 0x4223be3c ),
	NORM( 0x3e98884f, 0x3f20c77a, 0x3f380965 ),
	VERT( 0xc2a3bfbb, 0x41fbd9a2, 0x4256196a ),
	NORM( 0x3d9ddc8e, 0x3f2f9fa1, 0x3f3935ee ),
	VERT( 0xc29f1e6d, 0x4219f76d, 0x4224a0ba ),
	NORM( 0x3cfdfe3c, 0x3f35a4eb, 0x3f3437b4 ),
	VERT( 0xc1af6fc7, 0xc181f690, 0xc071dd8a ),
	NORM( 0xb4e3094e, 0xbf3504f3, 0xbf3504f3 ),
	VERT( 0xc1b017b6, 0xc28a7585, 0x4244d1ea ),
	NORM( 0xb430c386, 0xbf7ff7ee, 0xbc809019 ),
	VERT( 0xc1c579ed, 0x424ccd22, 0x41be41fb ),
	NORM( 0x329cc164, 0x3f3504f4, 0x3f3504f2 ),
	VERT( 0xc1c579ed, 0x424ccd22, 0x41be41fb ),
	NORM( 0x3d0a6462, 0x3dee606e, 0x3f7e1ce1 ),
	VERT( 0xc1f16eab, 0x424bbf72, 0x41c05d5e ),
	NORM( 0x3d72c3db, 0x3e281147, 0x3f7c1278 ),
	VERT( 0xc1f16eab, 0x424bbf72, 0x41c05d5e ),
	NORM( 0x33245c3d, 0x3f3504f6, 0x3f3504f1 ),
	VERT( 0xc21b3964, 0x42401398, 0x41d7b510 ),
	NORM( 0x3e1ae9f3, 0x3e98d061, 0x3f713e27 ),
	VERT( 0xc21b3964, 0x42401398, 0x41d7b510 ),
	NORM( 0x33245c3e, 0x3f3504f6, 0x3f3504f1 ),
	VERT( 0xc22deb97, 0x42353254, 0x41ed7798 ),
	NORM( 0x3e45ab86, 0x3ec21137, 0x3f67af9b ),
	VERT( 0xc22deb97, 0x42353254, 0x41ed7798 ),
	NORM( 0x33245c3d, 0x3f3504f5, 0x3f3504f1 ),
	VERT( 0xc23be0f7, 0x42293e38, 0x4202afe8 ),
	NORM( 0x33245c3e, 0x3f3504f5, 0x3f3504f1 ),
	VERT( 0xc23be0f7, 0x42293e38, 0x4202afe8 ),
	NORM( 0x3e277d84, 0x3ed0cfd3, 0x3f65f609 ),
	VERT( 0xc243b2b3, 0x42201ff2, 0x420bce2d ),
	NORM( 0x33245c3e, 0x3f3504f6, 0x3f3504f1 ),
	VERT( 0xc243b2b3, 0x42201ff2, 0x420bce2d ),
	NORM( 0x3e2bfa55, 0x3ef3c8fa, 0x3f5cf973 ),
	VERT( 0xc24bccfe, 0x42121641, 0x4219d7de ),
	NORM( 0x33245c3e, 0x3f3504f5, 0x3f3504f1 ),
	VERT( 0xc24bccfe, 0x42121641, 0x4219d7de ),
	NORM( 0x3e2115d9, 0x3f00488c, 0x3f59d8fe ),
	VERT( 0xc1b0469a, 0x424d5227, 0x41bd37f1 ),
	NORM( 0x00000000, 0x3f3504f3, 0x3f3504f3 ),
	VERT( 0xc1b0469a, 0x424d5227, 0x41bd37f1 ),
	NORM( 0xbaff5d46, 0x3dec13b8, 0x3f7e4b02 ),
	VERT( 0xc2ae4197, 0x4201eec3, 0x406c8106 ),
	NORM( 0xbf085bee, 0x3ed0ba4a, 0xbf3dde90 ),
	VERT( 0xc2b70309, 0x426008e0, 0x41ceb7d3 ),
	NORM( 0x3dc25c77, 0x3f7e35a6, 0x3d8fd4ed ),
	VERT( 0xc2b1455f, 0x4252c2fd, 0x41d8f13e ),
	NORM( 0x3e811c50, 0x3f374f08, 0x3f26a206 ),
	VERT( 0xc298e7af, 0x4247eb04, 0x420c1b37 ),
	NORM( 0xbd07154d, 0x3f4020a6, 0x3f28f8fb ),
	VERT( 0xc213d778, 0x4233c61b, 0xc015ff9c ),
	NORM( 0xbde3a6f9, 0x3f2a289e, 0xbf3d22b4 ),
	VERT( 0xc2111bff, 0x421d2280, 0xc0e08582 ),
	NORM( 0xbddda5dd, 0x3f24479c, 0xbf425f48 ),
	VERT( 0xc20fc1ec, 0x42024138, 0xc14ffe91 ),
	NORM( 0xbddf2799, 0x3f2a0a11, 0xbf3d5398 ),
	VERT( 0xc1f65f71, 0xc22d4e61, 0x42afb5fd ),
	NORM( 0xbe8b882d, 0xbf752364, 0x3dbffdd0 ),
	VERT( 0xc2203548, 0xc2165dd2, 0x42badf0e ),
	NORM( 0xbf55c63e, 0xbf03fc3c, 0x3e44a09c ),
	VERT( 0xc21cf566, 0xc21f1273, 0x42acecdd ),
	NORM( 0xbf02e4f2, 0xbf5625fc, 0x3e49b7f1 ),
	VERT( 0xc1e41d44, 0xc22f7819, 0x429efac3 ),
	NORM( 0xbdec357d, 0xbf6f4b7a, 0x3eac1270 ),
	VERT( 0xc1b05428, 0xc2361d18, 0x429b9775 ),
	NORM( 0xbadddd2d, 0xbf703977, 0x3eb0f3c0 ),
	VERT( 0xc219c49c, 0xc248d3aa, 0x428b8a9f ),
	NORM( 0xbf0c9160, 0xbf2ca59f, 0x3efcbe1a ),
	VERT( 0xc1df5629, 0xc2489023, 0x428b68db ),
	NORM( 0xba38370f, 0xbf4b7c45, 0x3f1b5653 ),
	VERT( 0xc213d778, 0x42738f0f, 0x4159a3e5 ),
	NORM( 0xbde0b584, 0x3f4feeac, 0xbf12aabb ),
	VERT( 0xc212a58d, 0x4277eb9d, 0x417f3333 ),
	NORM( 0xbd2d1aa9, 0x3f7a5175, 0x3e522225 ),
	VERT( 0xc1af51cf, 0xc19e9864, 0x42d65f8a ),
	NORM( 0x3902240d, 0x3f747de3, 0x3e97c959 ),
	VERT( 0xc1e3f11d, 0xc19fd53e, 0x42d5e60d ),
	NORM( 0xbe2d9b96, 0x3f6b931b, 0x3eb4a177 ),
	VERT( 0xc1f65f71, 0xc1a80f60, 0x42dc5f43 ),
	NORM( 0xbe88ecea, 0x3f63e111, 0x3ebce412 ),
	VERT( 0xc2203548, 0xc1d082ed, 0x42d1ed3c ),
	NORM( 0xbf5761d8, 0x3ec2f3cd, 0x3ec46abc ),
	VERT( 0xc2206109, 0xc1bc0670, 0x42ce2d95 ),
	NORM( 0xbf2c27ce, 0x3f1204c6, 0x3ef1788a ),
	VERT( 0xc210f703, 0x42735c68, 0x41881258 ),
	NORM( 0xbcad8111, 0x3f6063df, 0x3ef6377e ),
	VERT( 0xc1df67eb, 0xc1967484, 0x42cf247e ),
	NORM( 0xbdc217fd, 0x3f542d46, 0x3f0d2af6 ),
	VERT( 0xc216c831, 0xc1a460e7, 0x42c86494 ),
	NORM( 0xbe11b68a, 0x3f3cc14c, 0x3f290ec6 ),
	VERT( 0xc20a1624, 0x4271e64f, 0x41b7b948 ),
	NORM( 0xb93f46f3, 0x3f4278f9, 0x3f267b85 ),
	VERT( 0xc1d623f9, 0xc13cdf5b, 0x42bf4648 ),
	NORM( 0x3b57b58b, 0x3f4200c1, 0x3f270703 ),
	VERT( 0xc20a880d, 0xc1290aa9, 0x42bccbb2 ),
	NORM( 0xbdbdf39c, 0x3f34fa11, 0x3f337f8c ),
	VERT( 0xc29dd944, 0x42038e42, 0x40528901 ),
	NORM( 0xbe339521, 0x3f1f7421, 0xbf432de0 ),
	VERT( 0xc2a95241, 0x422380b9, 0x412b83af ),
	NORM( 0xbdc1c4de, 0x3f2a601e, 0xbf3d87a0 ),
	VERT( 0xc28e9c87, 0x420120c6, 0xbc6f5b0c ),
	NORM( 0xbe8db7d8, 0x3f18fc4e, 0xbf40a400 ),
	VERT( 0xc295d4a1, 0x42165b35, 0x40a0575c ),
	NORM( 0xbe8fafe8, 0x3f18adcf, 0xbf4084eb ),
	VERT( 0xc276842b, 0x420a4ed5, 0xc013d055 ),
	NORM( 0xbea62f07, 0x3f140ed9, 0xbf3f999c ),
	VERT( 0xc27291cd, 0x41dfcc83, 0xc10692b3 ),
	NORM( 0xbea8f319, 0x3f1fb46e, 0xbf355e3b ),
	VERT( 0xc2805725, 0x421fffa9, 0x40266795 ),
	NORM( 0xbea1ea32, 0x3f1b933a, 0xbf3a7d48 ),
	VERT( 0xc247baf3, 0x4216533f, 0xc0aa0b7b ),
	NORM( 0xbe8176fc, 0x3f1bcccc, 0xbf408a86 ),
	VERT( 0xc24502b5, 0x41f73b3f, 0xc135702c ),
	NORM( 0xbe838bb5, 0x3f243b96, 0xbf3908ac ),
	VERT( 0xc24d36ce, 0x422c9f0a, 0xbf0e3a41 ),
	NORM( 0xbe834ba7, 0x3f220099, 0xbf3b08a2 ),
	VERT( 0xc225d8db, 0xc225334c, 0x4293228e ),
	NORM( 0xbf4d6426, 0xbf0ad28b, 0x3e7f761d ),
	VERT( 0xc223f9d6, 0xc238f280, 0x42839a0b ),
	NORM( 0xbf54d305, 0xbee9ae54, 0x3ea25bf0 ),
	VERT( 0xc2299fc3, 0xc20e0e88, 0x42a98695 ),
	NORM( 0xbf46a302, 0xbf100330, 0x3e92260d ),
	VERT( 0xc2601621, 0xc1eeac24, 0x427867e2 ),
	NORM( 0xbf344371, 0xbf2adadc, 0x3e782ef4 ),
	VERT( 0xc25cc1be, 0xc20b4aed, 0x42598c81 ),
	NORM( 0xbf3d4326, 0xbf0cc691, 0x3ec6fa37 ),
	VERT( 0xc266cc14, 0xc1dd3f91, 0x428c82f5 ),
	NORM( 0xbf36ffe0, 0xbf1c21f0, 0x3eaf279e ),
	VERT( 0xc28b2d3d, 0xc1998486, 0x424dd414 ),
	NORM( 0xbf35a938, 0xbf2e16bf, 0x3e3cd24b ),
	VERT( 0xc288d518, 0xc1c39026, 0x423009a7 ),
	NORM( 0xbf4154b0, 0xbf09f57b, 0x3ebf10dc ),
	VERT( 0xc28fe61f, 0xc183cdd1, 0x426c4d0a ),
	NORM( 0xbf3b9823, 0xbf1fca82, 0x3e8ab9cb ),
	VERT( 0xc2a8f1fe, 0xc0cdc09e, 0x421ac9e4 ),
	NORM( 0xbf4b7e10, 0xbf183fcd, 0x3df62ff4 ),
	VERT( 0xc2af2ac4, 0xc044a853, 0x4236b0a8 ),
	NORM( 0xbf4adcbc, 0xbf147297, 0x3e41c042 ),
	VERT( 0xc2b49494, 0x4047c903, 0x42043a42 ),
	NORM( 0xbf3862ac, 0xbf29d0ac, 0x3e4fe0cd ),
	VERT( 0xc2c132b6, 0x4119be1b, 0x4227f21e ),
	NORM( 0xbf2df47f, 0xbf261476, 0x3eaf6bac ),
	VERT( 0xc2a95241, 0x42514beb, 0x41b1583e ),
	NORM( 0xbd58d455, 0x3f43879f, 0xbf24aed2 ),
	VERT( 0xc295d4a1, 0x4256242a, 0x41a7a7be ),
	NORM( 0xbe6bb137, 0x3f48cca7, 0xbf137514 ),
	VERT( 0xc2805725, 0x425fc89c, 0x41945ed9 ),
	NORM( 0xbe9ef3fe, 0x3f46370a, 0xbf0d2cb9 ),
	VERT( 0xc24d36ce, 0x426c67fe, 0x4176402b ),
	NORM( 0xbe807d8e, 0x3f49d85b, 0xbf0fc2b2 ),
	VERT( 0xc2299fc3, 0xc1b0e1a5, 0x42c1346f ),
	NORM( 0xbf5f0514, 0xbe58c477, 0x3ee2d0f3 ),
	VERT( 0xc266cc14, 0xc13b5b54, 0x42ac676f ),
	NORM( 0xbf35bb56, 0xbeaae2e9, 0x3f1ec603 ),
	VERT( 0xc28fe61f, 0xbf077d2e, 0x42960aff ),
	NORM( 0xbf3dc445, 0xbe9d42a1, 0x3f18c7d5 ),
	VERT( 0xc2af2ac4, 0x414df9b7, 0x4276799b ),
	NORM( 0xbf438d1b, 0xbe92dc77, 0x3f13ffb8 ),
	VERT( 0xc2c132b6, 0x41a87571, 0x4255bd50 ),
	NORM( 0xbf19e312, 0xbed72e83, 0x3f2e0236 ),
	VERT( 0xc2a6d0d8, 0x4257e863, 0x41c5e209 ),
	NORM( 0x3dacd2f8, 0x3f7e9cb6, 0x3d78e1e9 ),
	VERT( 0xc293b703, 0x425ca7d4, 0x41bc6328 ),
	NORM( 0xbe28c26c, 0x3f7c215c, 0x3d5a661b ),
	VERT( 0xc27d4f1e, 0x42661ae7, 0x41a97d01 ),
	NORM( 0xbe526683, 0x3f7956a6, 0x3dc3e2d3 ),
	VERT( 0xc24adf23, 0x427279a9, 0x4190bf7d ),
	NORM( 0xbe06b3f1, 0x3f78854a, 0x3e4d805a ),
	VERT( 0xc227fe51, 0xc1949ee3, 0x42c424ed ),
	NORM( 0xbecd8b04, 0x3eee30c0, 0x3f49f759 ),
	VERT( 0xc263f16d, 0xc10c6bd1, 0x42aefa2e ),
	NORM( 0xbebe48a5, 0x3eba8b5b, 0x3f5a98a4 ),
	VERT( 0xc28de6df, 0x400b8f3c, 0x4299103a ),
	NORM( 0xbec5ebfc, 0x3ebf3e59, 0x3f57de57 ),
	VERT( 0xc2ac8b6d, 0x41750b66, 0x427d968e ),
	NORM( 0xbeee4866, 0x3e9bcbe7, 0x3f54c665 ),
	VERT( 0xc2be370d, 0x41baaf12, 0x425d81df ),
	NORM( 0xbe6dc74f, 0x3e4c2fea, 0x3f73b6cf ),
	VERT( 0xc2a31ce6, 0x42552938, 0x41cdde4e ),
	NORM( 0xbbd4891c, 0x3f67fad1, 0x3ed8815e ),
	VERT( 0xc29098c1, 0x425a8bb2, 0x41c63a57 ),
	NORM( 0xbddc9798, 0x3f6e46a6, 0x3eb2e356 ),
	VERT( 0xc2785cb1, 0x4263b4ba, 0x41b3e84a ),
	NORM( 0xbdd18862, 0x3f68a7cb, 0x3ecf16c0 ),
	VERT( 0xc24777fb, 0x426c90e4, 0x4195a960 ),
	NORM( 0xbd2d1f88, 0x3f5d47e5, 0x3f0045a4 ),
	VERT( 0xc225a87d, 0xc18b60fc, 0x42c0e46d ),
	NORM( 0xbe24eadf, 0x3f212e5a, 0x3f429179 ),
	VERT( 0xc25fc5ca, 0xc0f79a01, 0x42acbd8f ),
	NORM( 0xbe11773a, 0x3f1c9fb1, 0x3f473461 ),
	VERT( 0xc28af62c, 0x401f80ad, 0x4296b6c5 ),
	NORM( 0xbe312352, 0x3f1415da, 0x3f4c1293 ),
	VERT( 0xc2a8aa96, 0x41800fb2, 0x427da104 ),
	NORM( 0xbe590271, 0x3f0f2aa6, 0x3f4d2c51 ),
	VERT( 0xc2b9cbbb, 0x41bcb1c1, 0x425dbf7d ),
	NORM( 0xbe246ba2, 0x3f03c301, 0x3f579ab4 ),
	VERT( 0xc28f05d1, 0x4251fff5, 0x42020646 ),
	NORM( 0x3d22d297, 0x3f4ee205, 0x3f167067 ),
	VERT( 0xc2844d18, 0x425a17b9, 0x41f3dd04 ),
	NORM( 0xba5fd5a4, 0x3f4c547c, 0x3f1a3979 ),
	VERT( 0xc267f5d4, 0x4263f995, 0x41e0194c ),
	NORM( 0x3c07cd4b, 0x3f4cc282, 0x3f19a391 ),
	VERT( 0xc23b91f8, 0x426bbb04, 0x41c40fdf ),
	NORM( 0x3ca2150a, 0x3f4e40a3, 0x3f178f36 ),
	VERT( 0xc21bc445, 0xc1159b6c, 0x42b9958b ),
	NORM( 0xbe20bced, 0x3f267372, 0x3f3e4d9b ),
	VERT( 0xc251a2b8, 0xbff915eb, 0x42ab8eb5 ),
	NORM( 0xbe131146, 0x3f1d23d5, 0x3f46b958 ),
	VERT( 0xc281663b, 0x40f0089e, 0x4297e0ef ),
	NORM( 0xbe0d5c74, 0x3f18354c, 0x3f4ac7af ),
	VERT( 0xc29ab519, 0x41a050d4, 0x4281eee8 ),
	NORM( 0xbdecdfc5, 0x3f172c3b, 0x3f4c7722 ),
	VERT( 0xc2a28263, 0x41dd7b4c, 0x42654895 ),
	NORM( 0xbd59fe79, 0x3f1a4c69, 0x3f4bd1c4 ),
	VERT( 0xc198250a, 0x41763bff, 0x4281290f ),
	NORM( 0x3f557be3, 0x3ec7cd92, 0x3ec7cd8c ),
	VERT( 0xc19b5c2e, 0x41839a3b, 0x427e1400 ),
	NORM( 0x3f38c427, 0x3f2f7dff, 0x3dc3f2ff ),
	VERT( 0xc1a4250a, 0x4189d06a, 0x427af8e8 ),
	NORM( 0x3ed4e9aa, 0x3f66d451, 0xbdf2c36a ),
	VERT( 0xc1b0250a, 0x418c1676, 0x4279d5e2 ),
	NORM( 0xba2b11d4, 0x3f7b15c3, 0xbe47b102 ),
	VERT( 0xc1bc250a, 0x4189d06a, 0x427af8e8 ),
	NORM( 0xbed4c666, 0x3f67030e, 0xbde96692 ),
	VERT( 0xc1c4ede6, 0x41839a3b, 0x427e1400 ),
	NORM( 0xbf37e42e, 0x3f302b69, 0x3dd1445a ),
	VERT( 0xc1c8250a, 0x41763bff, 0x4281290f ),
	NORM( 0xbf5434c8, 0x3eca81ca, 0x3eca81c8 ),
	VERT( 0xc1c4ede6, 0x41654388, 0x4283481e ),
	NORM( 0xbf37e44e, 0x3dd14286, 0x3f302b50 ),
	VERT( 0xc1bc250a, 0x4158d72a, 0x4284d5a9 ),
	NORM( 0xbed4c688, 0xbde96a1f, 0x3f6702f8 ),
	VERT( 0xc1b0250a, 0x41544b11, 0x4285672c ),
	NORM( 0xba2b11d2, 0xbe47b2c3, 0x3f7b15ad ),
	VERT( 0xc1a4250a, 0x4158d72a, 0x4284d5a9 ),
	NORM( 0x3ed4e9a3, 0xbdf2c585, 0x3f66d44a ),
	VERT( 0xc19b5c2e, 0x41654388, 0x4283481e ),
	NORM( 0x3f38c42b, 0x3dc3f2e8, 0x3f2f7dfc ),
	VERT( 0xc19bb5ad, 0x417dda43, 0x42821cd7 ),
	NORM( 0x3f375091, 0x3efca9c5, 0x3efcc2db ),
	VERT( 0xc19e7159, 0x41862386, 0x42804f3e ),
	NORM( 0x3f1ed31f, 0x3f3f19cf, 0x3e764a6f ),
	VERT( 0xc1a5e8e0, 0x418b6b2e, 0x427dfaa8 ),
	NORM( 0x3eb77659, 0x3f6e938d, 0x3d63cdd4 ),
	VERT( 0xc1b01c14, 0x418d59ed, 0x427d0349 ),
	NORM( 0x39fef324, 0x3f7ffbd3, 0xbc38c572 ),
	VERT( 0xc1ba4f47, 0x418b6b2e, 0x427dfaa8 ),
	NORM( 0xbeb6a722, 0x3f6eb36c, 0x3d6be64d ),
	VERT( 0xc1c1c6cf, 0x41862386, 0x42804f3e ),
	NORM( 0xbf1e1bc8, 0x3f3f74a9, 0x3e793c61 ),
	VERT( 0xc1c4827a, 0x417dda43, 0x42821cd7 ),
	NORM( 0xbf367144, 0x3efdec2a, 0x3efe0539 ),
	VERT( 0xc1c1c6cf, 0x416f6d77, 0x4283ea71 ),
	NORM( 0xbf1dee3f, 0x3e79d1a9, 0x3f3f8e14 ),
	VERT( 0xc1ba4f47, 0x4164de26, 0x42853c5b ),
	NORM( 0xbeb64bf8, 0x3d71fb74, 0x3f6ebec2 ),
	VERT( 0xc1b01c14, 0x416100ad, 0x4285b80a ),
	NORM( 0x39fef96c, 0xbc19ad31, 0x3f7ffd1c ),
	VERT( 0xc1a5e8e0, 0x4164de26, 0x42853c5b ),
	NORM( 0x3eb71b4f, 0x3d69e5e2, 0x3f6e9f23 ),
	VERT( 0xc19e7159, 0x416f6d77, 0x4283ea71 ),
	NORM( 0x3f1ea5ae, 0x3e76e053, 0x3f3f3376 ),
	VERT( 0xc1a2089f, 0x4181c39d, 0x4282cfae ),
	NORM( 0x3ea33c39, 0x3f2b9f50, 0x3f2b860b ),
	VERT( 0xc1a3eb64, 0x4186bda1, 0x4281912d ),
	NORM( 0x3e8d9101, 0x3f487bd1, 0x3f0e9728 ),
	VERT( 0xc1a91259, 0x418a6245, 0x4280a804 ),
	NORM( 0x3e23a2e8, 0x3f5da9d4, 0x3ef2b759 ),
	VERT( 0xc1b01c14, 0x418bb7a5, 0x428052ac ),
	NORM( 0xb3d319ee, 0x3f656d41, 0x3ee32692 ),
	VERT( 0xc1b725ce, 0x418a6245, 0x4280a804 ),
	NORM( 0xbe23a2f3, 0x3f5da9d5, 0x3ef2b753 ),
	VERT( 0xc1bc4cc3, 0x4186bda1, 0x4281912d ),
	NORM( 0xbe8d90f7, 0x3f487bd2, 0x3f0e9729 ),
	VERT( 0xc1be2f88, 0x4181c39d, 0x4282cfae ),
	NORM( 0xbea33c1b, 0x3f2b9f54, 0x3f2b860d ),
	VERT( 0xc1bc4cc3, 0x41799332, 0x42840e2f ),
	NORM( 0xbe8d2a49, 0x3f0ed7bf, 0x3f485ff0 ),
	VERT( 0xc1b725ce, 0x417249ea, 0x4284f758 ),
	NORM( 0xbe22d599, 0x3ef3a6e2, 0x3f5d718d ),
	VERT( 0xc1b01c14, 0x416f9f2e, 0x42854cb0 ),
	NORM( 0xb4e4fd64, 0x3ee449e7, 0x3f6524eb ),
	VERT( 0xc1a91259, 0x417249ea, 0x4284f758 ),
	NORM( 0x3e22d590, 0x3ef3a706, 0x3f5d7184 ),
	VERT( 0xc1a3eb64, 0x41799332, 0x42840e2f ),
	NORM( 0x3e8d2a64, 0x3f0ed7b6, 0x3f485ff2 ),
	VERT( 0xc22fe8cc, 0x4205c9a0, 0x423de69f ),
	NORM( 0x3f37509c, 0x3efcc2e6, 0x3efca999 ),
	VERT( 0xc213e4cf, 0x41a88671, 0x426f6d07 ),
	NORM( 0x3f37509e, 0x3efcc2d1, 0x3efca9a9 ),
	VERT( 0xc19bb5ad, 0x424b890c, 0x41f04e67 ),
	NORM( 0x3f375092, 0x3efcc2ed, 0x3efca9ad ),
	VERT( 0xc19e7159, 0x4247edd9, 0x41f784cc ),
	NORM( 0x3f1ed323, 0x3e764a4c, 0x3f3f19ce ),
	VERT( 0xc23146a2, 0x42022e6e, 0x424181d2 ),
	NORM( 0x3f1ed326, 0x3e764a5a, 0x3f3f19cb ),
	VERT( 0xc21542a5, 0x41a1500c, 0x42730839 ),
	NORM( 0x3f1ed32e, 0x3e764a1c, 0x3f3f19c9 ),
	VERT( 0xc19b5c2e, 0x4245635d, 0x41f4fb80 ),
	NORM( 0x3f38c437, 0x3dc3f2ba, 0x3f2f7df0 ),
	VERT( 0xc22fbc0d, 0x41ff47e2, 0x42403d2c ),
	NORM( 0x3f38c441, 0x3dc3f15e, 0x3f2f7dec ),
	VERT( 0xc213b810, 0x419c3b13, 0x4271c393 ),
	NORM( 0x3f38c43e, 0x3dc3f1eb, 0x3f2f7dec ),
	VERT( 0xc198250a, 0x4249a17b, 0x41ec7f45 ),
	NORM( 0x3f557bf9, 0x3ec7cd66, 0x3ec7cd59 ),
	VERT( 0xc22e207b, 0x4203e20f, 0x423bff0e ),
	NORM( 0x3f557c08, 0x3ec7cd34, 0x3ec7cd4b ),
	VERT( 0xc2121c7e, 0x41a4b74f, 0x426d8576 ),
	NORM( 0x3f557c0b, 0x3ec7cd30, 0x3ec7cd41 ),
	VERT( 0xc218fe69, 0x419c0865, 0x4275ac0d ),
	NORM( 0x3eb77653, 0x3d63ce56, 0x3f6e938e ),
	VERT( 0xc2350266, 0x41ff1533, 0x424425a6 ),
	NORM( 0x3eb7764e, 0x3d63cd98, 0x3f6e938f ),
	VERT( 0xc1a5e8e0, 0x42454a05, 0x41fccc74 ),
	NORM( 0x3eb77651, 0x3d63ce83, 0x3f6e938e ),
	VERT( 0xc234207b, 0x41f911b4, 0x42435843 ),
	NORM( 0x3ed4e9d1, 0xbdf2c3f3, 0x3f66d446 ),
	VERT( 0xc2181c7e, 0x419604e4, 0x4274deab ),
	NORM( 0x3ed4e9a2, 0xbdf2c2c3, 0x3f66d456 ),
	VERT( 0xc1a4250a, 0x42424845, 0x41fb31b0 ),
	NORM( 0x3ed4e9a0, 0xbdf2c2a9, 0x3f66d457 ),
	VERT( 0xc1b01c14, 0x424452a6, 0x41febb32 ),
	NORM( 0x39fee511, 0xbc38c428, 0x3f7ffbd3 ),
	VERT( 0xc21e1803, 0x419a19a6, 0x4276a36c ),
	NORM( 0x39fedefe, 0xbc38c58c, 0x3f7ffbd3 ),
	VERT( 0xc23a1c00, 0x41fd2675, 0x42451d05 ),
	NORM( 0x39fee02f, 0xbc38c628, 0x3f7ffbd3 ),
	VERT( 0xc23a207b, 0x41f6cba7, 0x42447b4a ),
	NORM( 0xba2b21ec, 0xbe47b14e, 0x3f7b15bf ),
	VERT( 0xc1b0250a, 0x4241253f, 0x41fd77bc ),
	NORM( 0xba2b2113, 0xbe47b0c9, 0x3f7b15c6 ),
	VERT( 0xc21e1c7e, 0x4193bed8, 0x427601b1 ),
	NORM( 0xba2b2113, 0xbe47b0b2, 0x3f7b15c7 ),
	VERT( 0xc1ba4f47, 0x42454a05, 0x41fccc74 ),
	NORM( 0xbeb6a71f, 0x3d6be5fe, 0x3f6eb36d ),
	VERT( 0xc223319c, 0x419c0865, 0x4275ac0d ),
	NORM( 0xbeb6a718, 0x3d6be64e, 0x3f6eb36e ),
	VERT( 0xc23f3599, 0x41ff1533, 0x424425a6 ),
	NORM( 0xbeb6a714, 0x3d6be595, 0x3f6eb370 ),
	VERT( 0xc240207b, 0x41f911b4, 0x42435843 ),
	NORM( 0xbed4c695, 0xbde9679f, 0x3f6702ff ),
	VERT( 0xc2241c7e, 0x419604e4, 0x4274deab ),
	NORM( 0xbed4c668, 0xbde96672, 0x3f67030e ),
	VERT( 0xc1bc250a, 0x42424845, 0x41fb31b0 ),
	NORM( 0xbed4c66e, 0xbde966f7, 0x3f67030b ),
	VERT( 0xc226ed60, 0x41a1500c, 0x42730839 ),
	NORM( 0xbf1e1bc8, 0x3e793c46, 0x3f3f74ab ),
	VERT( 0xc1c1c6cf, 0x4247edd9, 0x41f784cc ),
	NORM( 0xbf1e1bcd, 0x3e793c44, 0x3f3f74a8 ),
	VERT( 0xc242f15d, 0x42022e6e, 0x424181d2 ),
	NORM( 0xbf1e1bc0, 0x3e793c84, 0x3f3f74ad ),
	VERT( 0xc22880ec, 0x419c3b13, 0x4271c393 ),
	NORM( 0xbf37e431, 0x3dd14461, 0x3f302b66 ),
	VERT( 0xc24484e9, 0x41ff47e2, 0x42403d2c ),
	NORM( 0xbf37e433, 0x3dd143d3, 0x3f302b66 ),
	VERT( 0xc1c4ede6, 0x4245635d, 0x41f4fb80 ),
	NORM( 0xbf37e43d, 0x3dd1440a, 0x3f302b5b ),
	VERT( 0xc1c4827a, 0x424b890c, 0x41f04e67 ),
	NORM( 0xbf367143, 0x3efe054e, 0x3efdec1a ),
	VERT( 0xc2444f33, 0x4205c9a0, 0x423de69f ),
	NORM( 0xbf36713d, 0x3efe055d, 0x3efdec1c ),
	VERT( 0xc2284b36, 0x41a88671, 0x426f6d07 ),
	NORM( 0xbf36713e, 0x3efe0549, 0x3efdec2d ),
	VERT( 0xc22a1c7e, 0x41a4b74f, 0x426d8576 ),
	NORM( 0xbf5434c7, 0x3eca81c4, 0x3eca81d4 ),
	VERT( 0xc1c8250a, 0x4249a17b, 0x41ec7f45 ),
	NORM( 0xbf5434d1, 0x3eca81bd, 0x3eca81b1 ),
	VERT( 0xc246207b, 0x4203e20f, 0x423bff0e ),
	NORM( 0xbf5434c4, 0x3eca81c6, 0x3eca81de ),
	VERT( 0xc242f15d, 0x420964d3, 0x423a4b6c ),
	NORM( 0xbf1dee2b, 0x3f3f8e1e, 0x3e79d1ef ),
	VERT( 0xc226ed60, 0x41afbcd7, 0x426bd1d4 ),
	NORM( 0xbf1dee32, 0x3f3f8e1e, 0x3e79d1b8 ),
	VERT( 0xc1c1c6cf, 0x424f243f, 0x41e91801 ),
	NORM( 0xbf1dee3d, 0x3f3f8e16, 0x3e79d1a5 ),
	VERT( 0xc1c4ede6, 0x424ddf98, 0x41e4030a ),
	NORM( 0xbf37e454, 0x3f302b48, 0x3dd1431c ),
	VERT( 0xc24484e9, 0x4208202d, 0x4237c0f1 ),
	NORM( 0xbf37e439, 0x3f302b5e, 0x3dd14460 ),
	VERT( 0xc22880ec, 0x41ad338a, 0x42694758 ),
	NORM( 0xbf37e43e, 0x3f302b5d, 0x3dd14369 ),
	VERT( 0xc223319c, 0x41b5047f, 0x42692e00 ),
	NORM( 0xbeb64bfb, 0x3f6ebebe, 0x3d71fe53 ),
	VERT( 0xc1ba4f47, 0x4251c813, 0x41e3d059 ),
	NORM( 0xbeb64bf6, 0x3f6ebebf, 0x3d71fe64 ),
	VERT( 0xc23f3599, 0x420c08a7, 0x4237a798 ),
	NORM( 0xbeb64bef, 0x3f6ebec0, 0x3d71fe4a ),
	VERT( 0xc1bc250a, 0x4250fab0, 0x41ddccdb ),
	NORM( 0xbed4c6a1, 0x3f6702f9, 0xbde9687e ),
	VERT( 0xc240207b, 0x420b3b44, 0x4234a5d9 ),
	NORM( 0xbed4c679, 0x3f670302, 0xbde96876 ),
	VERT( 0xc2241c7e, 0x41b369b8, 0x42662c41 ),
	NORM( 0xbed4c6b1, 0x3f6702f6, 0xbde96869 ),
	VERT( 0xc21e1803, 0x41b6f33c, 0x426836a1 ),
	NORM( 0x39ff089c, 0x3f7ffd1c, 0xbc19a122 ),
	VERT( 0xc23a1c00, 0x420d0006, 0x4236b03a ),
	NORM( 0x39ff065f, 0x3f7ffd1c, 0xbc19a1a1 ),
	VERT( 0xc1b01c14, 0x4252bf71, 0x41e1e19c ),
	NORM( 0x39ff0a76, 0x3f7ffd1d, 0xbc199f17 ),
	VERT( 0xc1b0250a, 0x42521db6, 0x41db86ce ),
	NORM( 0xba2b21eb, 0x3f7b15bd, 0xbe47b17d ),
	VERT( 0xc23a207b, 0x420c5e4a, 0x423382d3 ),
	NORM( 0xba2b1f72, 0x3f7b15b6, 0xbe47b20f ),
	VERT( 0xc21e1c7e, 0x41b5afc6, 0x4265093a ),
	NORM( 0xba2b1f8e, 0x3f7b15bb, 0xbe47b1a7 ),
	VERT( 0xc2350266, 0x420c08a7, 0x4237a798 ),
	NORM( 0x3eb71b60, 0x3f6e9f1f, 0x3d69e6d9 ),
	VERT( 0xc1a5e8e0, 0x4251c813, 0x41e3d059 ),
	NORM( 0x3eb71b63, 0x3f6e9f1e, 0x3d69e777 ),
	VERT( 0xc218fe69, 0x41b5047f, 0x42692e00 ),
	NORM( 0x3eb71b6e, 0x3f6e9f1c, 0x3d69e6da ),
	VERT( 0xc2181c7e, 0x41b369b8, 0x42662c41 ),
	NORM( 0x3ed4e9e9, 0x3f66d43d, 0xbdf2c4be ),
	VERT( 0xc1a4250a, 0x4250fab0, 0x41ddccdb ),
	NORM( 0x3ed4e9d4, 0x3f66d444, 0xbdf2c433 ),
	VERT( 0xc234207b, 0x420b3b44, 0x4234a5d9 ),
	NORM( 0x3ed4e9b3, 0x3f66d449, 0xbdf2c4cb ),
	VERT( 0xc23146a2, 0x420964d3, 0x423a4b6c ),
	NORM( 0x3f1ea5b8, 0x3f3f3373, 0x3e76e008 ),
	VERT( 0xc19e7159, 0x424f243f, 0x41e91801 ),
	NORM( 0x3f1ea5bb, 0x3f3f3373, 0x3e76dff1 ),
	VERT( 0xc21542a5, 0x41afbcd7, 0x426bd1d4 ),
	NORM( 0x3f1ea5be, 0x3f3f3372, 0x3e76dfd3 ),
	VERT( 0xc22fbc0d, 0x4208202d, 0x4237c0f1 ),
	NORM( 0x3f38c446, 0x3f2f7de4, 0x3dc3f1e8 ),
	VERT( 0xc19b5c2e, 0x424ddf98, 0x41e4030a ),
	NORM( 0x3f38c44f, 0x3f2f7ddb, 0x3dc3f1c9 ),
	VERT( 0xc213b810, 0x41ad338a, 0x42694758 ),
	NORM( 0x3f38c44b, 0x3f2f7de2, 0x3dc3f0f4 ),
	VERT( 0xc2170e48, 0x41ab51cc, 0x4270d844 ),
	NORM( 0x3ea33c0e, 0x3f2b8613, 0x3f2b9f52 ),
	VERT( 0xc2331245, 0x42072f4d, 0x423f51dd ),
	NORM( 0x3ea33c0f, 0x3f2b8619, 0x3f2b9f4c ),
	VERT( 0xc1a2089f, 0x424ceeb9, 0x41f324e2 ),
	NORM( 0x3ea33c0b, 0x3f2b8612, 0x3f2b9f53 ),
	VERT( 0xc217ffab, 0x41a657c7, 0x42735547 ),
	NORM( 0x3e8d90e5, 0x3f0e9726, 0x3f487bd8 ),
	VERT( 0xc1a3eb64, 0x424a71b7, 0x41f81ee7 ),
	NORM( 0x3e8d90ee, 0x3f0e9729, 0x3f487bd4 ),
	VERT( 0xc23403a8, 0x4204b24b, 0x4241cedf ),
	NORM( 0x3e8d90ca, 0x3f0e973b, 0x3f487bcd ),
	VERT( 0xc21a9325, 0x41a2b323, 0x42752799 ),
	NORM( 0x3e23a2ec, 0x3ef2b741, 0x3f5da9da ),
	VERT( 0xc1a91259, 0x42489f65, 0x41fbc38b ),
	NORM( 0x3e23a2da, 0x3ef2b759, 0x3f5da9d4 ),
	VERT( 0xc2369722, 0x4202dff9, 0x4243a131 ),
	NORM( 0x3e23a2b4, 0x3ef2b76e, 0x3f5da9d1 ),
	VERT( 0xc1b01c14, 0x4247f4b5, 0x41fd18ea ),
	NORM( 0xb4777207, 0x3ee32698, 0x3f656d3f ),
	VERT( 0xc21e1803, 0x41a15dc4, 0x4275d248 ),
	NORM( 0xb4a2ed6a, 0x3ee3269c, 0x3f656d3f ),
	VERT( 0xc23a1c00, 0x42023549, 0x42444be1 ),
	NORM( 0xb413c557, 0x3ee326a8, 0x3f656d3c ),
	VERT( 0xc2219ce0, 0x41a2b323, 0x42752799 ),
	NORM( 0xbe23a305, 0x3ef2b743, 0x3f5da9d8 ),
	VERT( 0xc1b725ce, 0x42489f65, 0x41fbc38b ),
	NORM( 0xbe23a2e5, 0x3ef2b75a, 0x3f5da9d4 ),
	VERT( 0xc23da0dd, 0x4202dff9, 0x4243a131 ),
	NORM( 0xbe23a2ba, 0x3ef2b771, 0x3f5da9cf ),
	VERT( 0xc1bc4cc3, 0x424a71b7, 0x41f81ee7 ),
	NORM( 0xbe8d90ee, 0x3f0e972c, 0x3f487bd2 ),
	VERT( 0xc2403457, 0x4204b24b, 0x4241cedf ),
	NORM( 0xbe8d90ca, 0x3f0e973b, 0x3f487bcd ),
	VERT( 0xc224305a, 0x41a657c7, 0x42735547 ),
	NORM( 0xbe8d90ee, 0x3f0e9726, 0x3f487bd6 ),
	VERT( 0xc22521bd, 0x41ab51cc, 0x4270d844 ),
	NORM( 0xbea33c18, 0x3f2b8612, 0x3f2b9f51 ),
	VERT( 0xc1be2f88, 0x424ceeb9, 0x41f324e2 ),
	NORM( 0xbea33c0e, 0x3f2b8611, 0x3f2b9f53 ),
	VERT( 0xc24125ba, 0x42072f4d, 0x423f51dd ),
	NORM( 0xbea33c0f, 0x3f2b8619, 0x3f2b9f4c ),
	VERT( 0xc1bc4cc3, 0x424f6bbb, 0x41ee2adf ),
	NORM( 0xbe8d2a49, 0x3f485ff5, 0x3f0ed7b8 ),
	VERT( 0xc224305a, 0x41b04bcf, 0x426e5b43 ),
	NORM( 0xbe8d2a41, 0x3f485ff8, 0x3f0ed7b7 ),
	VERT( 0xc2403457, 0x4209ac4f, 0x423cd4db ),
	NORM( 0xbe8d2a43, 0x3f485ff8, 0x3f0ed7b6 ),
	VERT( 0xc1b725ce, 0x42513e0d, 0x41ea863b ),
	NORM( 0xbe22d572, 0x3f5d7187, 0x3ef3a6fe ),
	VERT( 0xc23da0dd, 0x420b7ea1, 0x423b0289 ),
	NORM( 0xbe22d5b0, 0x3f5d7180, 0x3ef3a70f ),
	VERT( 0xc2219ce0, 0x41b3f073, 0x426c88f1 ),
	NORM( 0xbe22d597, 0x3f5d7184, 0x3ef3a702 ),
	VERT( 0xc21e1803, 0x41b545d2, 0x426bde41 ),
	NORM( 0xb4a5cb31, 0x3f6524e8, 0x3ee449f2 ),
	VERT( 0xc23a1c00, 0x420c2951, 0x423a57d9 ),
	NORM( 0xb419a9ff, 0x3f6524e5, 0x3ee449fe ),
	VERT( 0xc1b01c14, 0x4251e8bc, 0x41e930dc ),
	NORM( 0xb47435d0, 0x3f6524e6, 0x3ee449fd ),
	VERT( 0xc2369722, 0x420b7ea1, 0x423b0289 ),
	NORM( 0x3e22d5a9, 0x3f5d7181, 0x3ef3a70b ),
	VERT( 0xc21a9325, 0x41b3f073, 0x426c88f1 ),
	NORM( 0x3e22d57c, 0x3f5d7186, 0x3ef3a700 ),
	VERT( 0xc1a91259, 0x42513e0d, 0x41ea863b ),
	NORM( 0x3e22d568, 0x3f5d7188, 0x3ef3a6fe ),
	VERT( 0xc23403a8, 0x4209ac4f, 0x423cd4db ),
	NORM( 0x3e8d2a43, 0x3f485ff8, 0x3f0ed7b6 ),
	VERT( 0xc217ffab, 0x41b04bcf, 0x426e5b43 ),
	NORM( 0x3e8d2a38, 0x3f485ff9, 0x3f0ed7b7 ),
	VERT( 0xc1a3eb64, 0x424f6bbb, 0x41ee2adf ),
	NORM( 0x3e8d2a49, 0x3f485ff8, 0x3f0ed7b5 ),
	VERT( 0xc213e4cf, 0x4236bc64, 0x420cf3db ),
	NORM( 0x3f37509b, 0x3efca9a1, 0x3efcc2df ),
	VERT( 0xc2121c7e, 0x4234d4d3, 0x420b0c4a ),
	NORM( 0x3f557c00, 0x3ec7cd51, 0x3ec7cd51 ),
	VERT( 0xc213b810, 0x423912f1, 0x4206ce2c ),
	NORM( 0x3f38c424, 0x3f2f7e05, 0x3dc3f25c ),
	VERT( 0xc21542a5, 0x423a5796, 0x420958a9 ),
	NORM( 0x3f1ed324, 0x3f3f19cc, 0x3e764a64 ),
	VERT( 0xc2181c7e, 0x423c2e08, 0x4203b315 ),
	NORM( 0x3ed4e9b0, 0x3f66d44d, 0xbdf2c411 ),
	VERT( 0xc218fe69, 0x423cfb6a, 0x4206b4d5 ),
	NORM( 0x3eb77669, 0x3f6e938b, 0x3d63ccde ),
	VERT( 0xc21e1c7e, 0x423d510e, 0x4202900f ),
	NORM( 0xba2b0832, 0x3f7b15c0, 0xbe47b135 ),
	VERT( 0xc21e1803, 0x423df2ca, 0x4205bd76 ),
	NORM( 0x39fef148, 0x3f7ffbd3, 0xbc38c7ef ),
	VERT( 0xc2241c7e, 0x423c2e08, 0x4203b315 ),
	NORM( 0xbed4c65d, 0x3f670314, 0xbde96591 ),
	VERT( 0xc223319c, 0x423cfb6a, 0x4206b4d5 ),
	NORM( 0xbeb6a71d, 0x3f6eb36c, 0x3d6be70a ),
	VERT( 0xc22880ec, 0x423912f1, 0x4206ce2c ),
	NORM( 0xbf37e420, 0x3f302b77, 0x3dd144a3 ),
	VERT( 0xc226ed60, 0x423a5796, 0x420958a9 ),
	NORM( 0xbf1e1bbf, 0x3f3f74ac, 0x3e793c93 ),
	VERT( 0xc22a1c7e, 0x4234d4d3, 0x420b0c4a ),
	NORM( 0xbf5434c4, 0x3eca81da, 0x3eca81cb ),
	VERT( 0xc2284b36, 0x4236bc64, 0x420cf3db ),
	NORM( 0xbf36713c, 0x3efdec29, 0x3efe0554 ),
	VERT( 0xc22880ec, 0x423096b5, 0x420f4a68 ),
	NORM( 0xbf37e436, 0x3dd143f9, 0x3f302b63 ),
	VERT( 0xc226ed60, 0x42332131, 0x42108f0e ),
	NORM( 0xbf1dee2e, 0x3e79d1df, 0x3f3f8e1d ),
	VERT( 0xc2241c7e, 0x422d7b9e, 0x4212657f ),
	NORM( 0xbed4c69e, 0xbde967be, 0x3f6702fd ),
	VERT( 0xc223319c, 0x42307d5d, 0x421332e2 ),
	NORM( 0xbeb64bfe, 0x3d71fefe, 0x3f6ebebd ),
	VERT( 0xc21e1c7e, 0x422c5898, 0x42138886 ),
	NORM( 0xba2b1ddd, 0xbe47b196, 0x3f7b15bc ),
	VERT( 0xc21e1803, 0x422f85fe, 0x42142a41 ),
	NORM( 0x39feff85, 0xbc19a013, 0x3f7ffd1c ),
	VERT( 0xc2181c7e, 0x422d7b9e, 0x4212657f ),
	NORM( 0x3ed4e9ce, 0xbdf2c44f, 0x3f66d445 ),
	VERT( 0xc218fe69, 0x42307d5d, 0x421332e2 ),
	NORM( 0x3eb71b69, 0x3d69e786, 0x3f6e9f1d ),
	VERT( 0xc213b810, 0x423096b5, 0x420f4a68 ),
	NORM( 0x3f38c443, 0x3dc3f1a0, 0x3f2f7de8 ),
	VERT( 0xc21542a5, 0x42332131, 0x42108f0e ),
	NORM( 0x3f1ea5bd, 0x3e76dffa, 0x3f3f3370 ),
	VERT( 0xc2170e48, 0x423827a1, 0x420e5989 ),
	NORM( 0x3ea33c26, 0x3f2b9f47, 0x3f2b8618 ),
	VERT( 0xc217ffab, 0x423aa4a4, 0x420bdc86 ),
	NORM( 0x3e8d90f2, 0x3f487bd4, 0x3f0e9728 ),
	VERT( 0xc21a9325, 0x423c76f6, 0x420a0a34 ),
	NORM( 0x3e23a318, 0x3f5da9d6, 0x3ef2b749 ),
	VERT( 0xc21e1803, 0x423d21a6, 0x42095f85 ),
	NORM( 0xb4802b31, 0x3f656d3c, 0x3ee326a7 ),
	VERT( 0xc2219ce0, 0x423c76f6, 0x420a0a34 ),
	NORM( 0xbe23a325, 0x3f5da9d7, 0x3ef2b744 ),
	VERT( 0xc224305a, 0x423aa4a4, 0x420bdc86 ),
	NORM( 0xbe8d90e2, 0x3f487bd4, 0x3f0e972c ),
	VERT( 0xc22521bd, 0x423827a1, 0x420e5989 ),
	NORM( 0xbea33c0d, 0x3f2b9f4a, 0x3f2b861b ),
	VERT( 0xc224305a, 0x4235aaa0, 0x4210d68a ),
	NORM( 0xbe8d2a3f, 0x3f0ed7b4, 0x3f485ffa ),
	VERT( 0xc2219ce0, 0x4233d84e, 0x4212a8dc ),
	NORM( 0xbe22d5b1, 0x3ef3a702, 0x3f5d7183 ),
	VERT( 0xc21e1803, 0x42332d9e, 0x4213538c ),
	NORM( 0xb47a14ac, 0x3ee449f3, 0x3f6524e8 ),
	VERT( 0xc21a9325, 0x4233d84e, 0x4212a8dc ),
	NORM( 0x3e22d5a3, 0x3ef3a709, 0x3f5d7182 ),
	VERT( 0xc217ffab, 0x4235aaa0, 0x4210d68a ),
	NORM( 0x3e8d2a46, 0x3f0ed7b3, 0x3f485ff9 ),
	VERT( 0xc0e1f11a, 0x4236bc64, 0x420cf3db ),
	NORM( 0xbf37509b, 0x3efca9a6, 0x3efcc2db ),
	VERT( 0xc0d7026a, 0x423a5796, 0x420958a9 ),
	NORM( 0xbf1ed323, 0x3f3f19cd, 0x3e764a65 ),
	VERT( 0xc0e35712, 0x423912f1, 0x4206ce2c ),
	NORM( 0xbf38c429, 0x3f2f7e00, 0x3dc3f25b ),
	VERT( 0xc0f033a2, 0x4234d4d3, 0x420b0c4a ),
	NORM( 0xbf557c05, 0x3ec7cd45, 0x3ec7cd48 ),
	VERT( 0xc0b9244a, 0x423cfb6a, 0x4206b4d5 ),
	NORM( 0xbeb7764f, 0x3f6e938f, 0x3d63cdb6 ),
	VERT( 0xc0c033a2, 0x423c2e08, 0x4203b315 ),
	NORM( 0xbed4e984, 0x3f66d45b, 0xbdf2c333 ),
	VERT( 0xc090577a, 0x423df2ca, 0x4205bd76 ),
	NORM( 0xb9fedf74, 0x3f7ffbd3, 0xbc38c94e ),
	VERT( 0xc09033a2, 0x423d510e, 0x4202900f ),
	NORM( 0x3a2b1ea3, 0x3f7b15bf, 0xbe47b158 ),
	VERT( 0xc04f1564, 0x423cfb6a, 0x4206b4d5 ),
	NORM( 0x3eb6a717, 0x3f6eb36f, 0x3d6be5af ),
	VERT( 0xc0406744, 0x423c2e08, 0x4203b315 ),
	NORM( 0x3ed4c64b, 0x3f670313, 0xbde966df ),
	VERT( 0xc0135924, 0x423a5796, 0x420958a9 ),
	NORM( 0x3f1e1bbe, 0x3f3f74ae, 0x3e793c8e ),
	VERT( 0xbff440c8, 0x423912f1, 0x4206ce2c ),
	NORM( 0x3f37e41c, 0x3f302b7a, 0x3dd144d2 ),
	VERT( 0xbffaf788, 0x4236bc64, 0x420cf3db ),
	NORM( 0x3f36713d, 0x3efdec28, 0x3efe0551 ),
	VERT( 0xbfc0ce88, 0x4234d4d3, 0x420b0c4a ),
	NORM( 0x3f5434c0, 0x3eca81d8, 0x3eca81da ),
	VERT( 0xc0135924, 0x42332131, 0x42108f0e ),
	NORM( 0x3f1dee2f, 0x3e79d1e5, 0x3f3f8e1c ),
	VERT( 0xbff440c8, 0x423096b5, 0x420f4a68 ),
	NORM( 0x3f37e435, 0x3dd1440d, 0x3f302b63 ),
	VERT( 0xc04f1564, 0x42307d5d, 0x421332e2 ),
	NORM( 0x3eb64bf7, 0x3d71ff09, 0x3f6ebebe ),
	VERT( 0xc0406744, 0x422d7b9e, 0x4212657f ),
	NORM( 0x3ed4c69c, 0xbde967cf, 0x3f6702fd ),
	VERT( 0xc090577a, 0x422f85fe, 0x42142a41 ),
	NORM( 0xb9ff071b, 0xbc199f38, 0x3f7ffd1d ),
	VERT( 0xc09033a2, 0x422c5898, 0x42138886 ),
	NORM( 0x3a2b1f7a, 0xbe47b180, 0x3f7b15bd ),
	VERT( 0xc0b9244a, 0x42307d5d, 0x421332e2 ),
	NORM( 0xbeb71b6a, 0x3d69e791, 0x3f6e9f1c ),
	VERT( 0xc0c033a2, 0x422d7b9e, 0x4212657f ),
	NORM( 0xbed4e9d4, 0xbdf2c423, 0x3f66d445 ),
	VERT( 0xc0d7026a, 0x42332131, 0x42108f0e ),
	NORM( 0xbf1ea5bb, 0x3e76e000, 0x3f3f3371 ),
	VERT( 0xc0e35712, 0x423096b5, 0x420f4a68 ),
	NORM( 0xbf38c442, 0x3dc3f193, 0x3f2f7de9 ),
	VERT( 0xc0c8a552, 0x423827a1, 0x420e5989 ),
	NORM( 0xbea33c19, 0x3f2b9f4c, 0x3f2b8617 ),
	VERT( 0xc0c11a3a, 0x423aa4a4, 0x420bdc86 ),
	NORM( 0xbe8d90e7, 0x3f487bd6, 0x3f0e9728 ),
	VERT( 0xc0ac7e6a, 0x423c76f6, 0x420a0a34 ),
	NORM( 0xbe23a322, 0x3f5da9d6, 0x3ef2b747 ),
	VERT( 0xc090577a, 0x423d21a6, 0x42095f85 ),
	NORM( 0x341cd175, 0x3f656d3c, 0x3ee326a7 ),
	VERT( 0xc0686124, 0x423c76f6, 0x420a0a34 ),
	NORM( 0x3e23a329, 0x3f5da9d5, 0x3ef2b74a ),
	VERT( 0xc03f2984, 0x423aa4a4, 0x420bdc86 ),
	NORM( 0x3e8d90e7, 0x3f487bd6, 0x3f0e9728 ),
	VERT( 0xc0301354, 0x423827a1, 0x420e5989 ),
	NORM( 0x3ea33c19, 0x3f2b9f4c, 0x3f2b8617 ),
	VERT( 0xc03f2984, 0x4235aaa0, 0x4210d68a ),
	NORM( 0x3e8d2a42, 0x3f0ed7b4, 0x3f485ff9 ),
	VERT( 0xc0686124, 0x4233d84e, 0x4212a8dc ),
	NORM( 0x3e22d5a5, 0x3ef3a706, 0x3f5d7183 ),
	VERT( 0xc090577a, 0x42332d9e, 0x4213538c ),
	NORM( 0x3419a9ff, 0x3ee449f0, 0x3f6524e9 ),
	VERT( 0xc0ac7e6a, 0x4233d84e, 0x4212a8dc ),
	NORM( 0xbe22d59e, 0x3ef3a702, 0x3f5d7184 ),
	VERT( 0xc0c11a3a, 0x4235aaa0, 0x4210d68a ),
	NORM( 0xbe8d2a42, 0x3f0ed7b4, 0x3f485ff9 ),
	VERT( 0xc0e1f11a, 0x41a88671, 0x426f6d07 ),
	NORM( 0xbf37509f, 0x3efcc2d1, 0x3efca9a4 ),
	VERT( 0xc0f033a2, 0x41a4b74f, 0x426d8576 ),
	NORM( 0xbf557c08, 0x3ec7cd35, 0x3ec7cd49 ),
	VERT( 0xc0e35712, 0x419c3b13, 0x4271c393 ),
	NORM( 0xbf38c434, 0x3dc3f226, 0x3f2f7df6 ),
	VERT( 0xc0d7026a, 0x41a1500c, 0x42730839 ),
	NORM( 0xbf1ed32d, 0x3e764a2c, 0x3f3f19c8 ),
	VERT( 0xc0c033a2, 0x419604e4, 0x4274deab ),
	NORM( 0xbed4e99c, 0xbdf2c2ce, 0x3f66d457 ),
	VERT( 0xc0b9244a, 0x419c0865, 0x4275ac0d ),
	NORM( 0xbeb77645, 0x3d63ce99, 0x3f6e9390 ),
	VERT( 0xc09033a2, 0x4193bed8, 0x427601b1 ),
	NORM( 0x3a2b1d11, 0xbe47b098, 0x3f7b15c8 ),
	VERT( 0xc090577a, 0x419a19a6, 0x4276a36c ),
	NORM( 0xb9fecd8c, 0xbc38c4db, 0x3f7ffbd3 ),
	VERT( 0xc0406744, 0x419604e4, 0x4274deab ),
	NORM( 0x3ed4c66f, 0xbde96652, 0x3f67030d ),
	VERT( 0xc04f1564, 0x419c0865, 0x4275ac0d ),
	NORM( 0x3eb6a718, 0x3d6be605, 0x3f6eb36e ),
	VERT( 0xbff440c8, 0x419c3b13, 0x4271c393 ),
	NORM( 0x3f37e434, 0x3dd143e5, 0x3f302b65 ),
	VERT( 0xc0135924, 0x41a1500c, 0x42730839 ),
	NORM( 0x3f1e1bc7, 0x3e793c42, 0x3f3f74ac ),
	VERT( 0xbfc0ce88, 0x41a4b74f, 0x426d8576 ),
	NORM( 0x3f5434c9, 0x3eca81bb, 0x3eca81d5 ),
	VERT( 0xbffaf788, 0x41a88671, 0x426f6d07 ),
	NORM( 0x3f36713c, 0x3efe0552, 0x3efdec2a ),
	VERT( 0xbff440c8, 0x41ad338a, 0x42694758 ),
	NORM( 0x3f37e442, 0x3f302b59, 0x3dd1434c ),
	VERT( 0xc0135924, 0x41afbcd7, 0x426bd1d4 ),
	NORM( 0x3f1dee35, 0x3f3f8e1b, 0x3e79d1af ),
	VERT( 0xc0406744, 0x41b369b8, 0x42662c41 ),
	NORM( 0x3ed4c6a1, 0x3f6702fb, 0xbde967f9 ),
	VERT( 0xc04f1564, 0x41b5047f, 0x42692e00 ),
	NORM( 0x3eb64bf3, 0x3f6ebebf, 0x3d71feca ),
	VERT( 0xc09033a2, 0x41b5afc6, 0x4265093a ),
	NORM( 0x3a2b0eb2, 0x3f7b15b9, 0xbe47b1c6 ),
	VERT( 0xc090577a, 0x41b6f33c, 0x426836a1 ),
	NORM( 0xb9ff1704, 0x3f7ffd1c, 0xbc19a280 ),
	VERT( 0xc0c033a2, 0x41b369b8, 0x42662c41 ),
	NORM( 0xbed4e9da, 0x3f66d43e, 0xbdf2c565 ),
	VERT( 0xc0b9244a, 0x41b5047f, 0x42692e00 ),
	NORM( 0xbeb71b67, 0x3f6e9f1e, 0x3d69e632 ),
	VERT( 0xc0e35712, 0x41ad338a, 0x42694758 ),
	NORM( 0xbf38c44a, 0x3f2f7de2, 0x3dc3f12b ),
	VERT( 0xc0d7026a, 0x41afbcd7, 0x426bd1d4 ),
	NORM( 0xbf1ea5bd, 0x3f3f3372, 0x3e76dfe8 ),
	VERT( 0xc0c8a552, 0x41ab51cc, 0x4270d844 ),
	NORM( 0xbea33c1f, 0x3f2b8611, 0x3f2b9f4f ),
	VERT( 0xc0c11a3a, 0x41a657c7, 0x42735547 ),
	NORM( 0xbe8d90f6, 0x3f0e9726, 0x3f487bd5 ),
	VERT( 0xc0ac7e6a, 0x41a2b323, 0x42752799 ),
	NORM( 0xbe23a2c9, 0x3ef2b748, 0x3f5da9da ),
	VERT( 0xc090577a, 0x41a15dc4, 0x4275d248 ),
	NORM( 0x3507bf35, 0x3ee32694, 0x3f656d40 ),
	VERT( 0xc0686124, 0x41a2b323, 0x42752799 ),
	NORM( 0x3e23a2fb, 0x3ef2b731, 0x3f5da9de ),
	VERT( 0xc03f2984, 0x41a657c7, 0x42735547 ),
	NORM( 0x3e8d90e1, 0x3f0e972b, 0x3f487bd5 ),
	VERT( 0xc0301354, 0x41ab51cc, 0x4270d844 ),
	NORM( 0x3ea33c0d, 0x3f2b8617, 0x3f2b9f4e ),
	VERT( 0xc03f2984, 0x41b04bcf, 0x426e5b43 ),
	NORM( 0x3e8d2a46, 0x3f485ff5, 0x3f0ed7b9 ),
	VERT( 0xc0686124, 0x41b3f073, 0x426c88f1 ),
	NORM( 0x3e22d59d, 0x3f5d7183, 0x3ef3a706 ),
	VERT( 0xc090577a, 0x41b545d2, 0x426bde41 ),
	NORM( 0x34bc6438, 0x3f6524e7, 0x3ee449f6 ),
	VERT( 0xc0ac7e6a, 0x41b3f073, 0x426c88f1 ),
	NORM( 0xbe22d57d, 0x3f5d7185, 0x3ef3a706 ),
	VERT( 0xc0c11a3a, 0x41b04bcf, 0x426e5b43 ),
	NORM( 0xbe8d2a35, 0x3f485ff6, 0x3f0ed7bc ),
	VERT( 0xbd689900, 0x4205c9a0, 0x423de69f ),
	NORM( 0xbf37509d, 0x3efcc2e7, 0x3efca994 ),
	VERT( 0xbf009dd0, 0x4203e20f, 0x423bff0e ),
	NORM( 0xbf557c0d, 0x3ec7cd32, 0x3ec7cd38 ),
	VERT( 0xbdcdca80, 0x41ff47e2, 0x42403d2c ),
	NORM( 0xbf38c445, 0x3dc3f13a, 0x3f2f7de8 ),
	VERT( 0x3e91d7e0, 0x42022e6e, 0x424181d2 ),
	NORM( 0xbf1ed327, 0x3e764a4f, 0x3f3f19cb ),
	VERT( 0x3f7f6230, 0x41f911b4, 0x42435843 ),
	NORM( 0xbed4e9cb, 0xbdf2c3b8, 0x3f66d448 ),
	VERT( 0x3f9bee78, 0x41ff1533, 0x424425a6 ),
	NORM( 0xbeb77650, 0x3d63cdb9, 0x3f6e938f ),
	VERT( 0x401fd88c, 0x41f6cba7, 0x42447b4a ),
	NORM( 0x3a2b35f9, 0xbe47b142, 0x3f7b15c0 ),
	VERT( 0x401f90dc, 0x41fd2675, 0x42451d05 ),
	NORM( 0xb9fecc76, 0xbc38c59b, 0x3f7ffbd3 ),
	VERT( 0x407fd88c, 0x41f911b4, 0x42435843 ),
	NORM( 0x3ed4c692, 0xbde967ae, 0x3f670300 ),
	VERT( 0x40712a6c, 0x41ff1533, 0x424425a6 ),
	NORM( 0x3eb6a714, 0x3d6be5c8, 0x3f6eb36f ),
	VERT( 0x40a30fb6, 0x41ff47e2, 0x42403d2c ),
	NORM( 0x3f37e433, 0x3dd1440e, 0x3f302b65 ),
	VERT( 0x40967356, 0x42022e6e, 0x424181d2 ),
	NORM( 0x3f1e1bc1, 0x3e793c8c, 0x3f3f74ac ),
	VERT( 0x40afec46, 0x4203e20f, 0x423bff0e ),
	NORM( 0x3f5434be, 0x3eca81d6, 0x3eca81e6 ),
	VERT( 0x40a16206, 0x4205c9a0, 0x423de69f ),
	NORM( 0x3f36713b, 0x3efe055f, 0x3efdec1f ),
	VERT( 0x40a30fb6, 0x4208202d, 0x4237c0f1 ),
	NORM( 0x3f37e435, 0x3f302b62, 0x3dd1445c ),
	VERT( 0x40967356, 0x420964d3, 0x423a4b6c ),
	NORM( 0x3f1dee2a, 0x3f3f8e20, 0x3e79d1ec ),
	VERT( 0x407fd88c, 0x420b3b44, 0x4234a5d9 ),
	NORM( 0x3ed4c68c, 0x3f6702fd, 0xbde968bf ),
	VERT( 0x40712a6c, 0x420c08a7, 0x4237a798 ),
	NORM( 0x3eb64bfb, 0x3f6ebebe, 0x3d71fdea ),
	VERT( 0x401fd88c, 0x420c5e4a, 0x423382d3 ),
	NORM( 0x3a2b2d16, 0x3f7b15b5, 0xbe47b21e ),
	VERT( 0x401f90dc, 0x420d0006, 0x4236b03a ),
	NORM( 0xb9fef368, 0x3f7ffd1c, 0xbc19a246 ),
	VERT( 0x3f7f6230, 0x420b3b44, 0x4234a5d9 ),
	NORM( 0xbed4e9b4, 0x3f66d44a, 0xbdf2c485 ),
	VERT( 0x3f9bee78, 0x420c08a7, 0x4237a798 ),
	NORM( 0xbeb71b61, 0x3f6e9f1e, 0x3d69e730 ),
	VERT( 0xbdcdca80, 0x4208202d, 0x4237c0f1 ),
	NORM( 0xbf38c448, 0x3f2f7de2, 0x3dc3f1c8 ),
	VERT( 0x3e91d7e0, 0x420964d3, 0x423a4b6c ),
	NORM( 0xbf1ea5ba, 0x3f3f3372, 0x3e76e000 ),
	VERT( 0x3f3bd4b0, 0x42072f4d, 0x423f51dd ),
	NORM( 0xbea33c07, 0x3f2b8619, 0x3f2b9f4d ),
	VERT( 0x3f782d70, 0x4204b24b, 0x4241cedf ),
	NORM( 0xbe8d90c4, 0x3f0e973a, 0x3f487bcf ),
	VERT( 0x3fce85f8, 0x4202dff9, 0x4243a131 ),
	NORM( 0xbe23a2c4, 0x3ef2b76a, 0x3f5da9d1 ),
	VERT( 0x401f90dc, 0x42023549, 0x42444be1 ),
	NORM( 0x33c709cf, 0x3ee326ab, 0x3f656d3b ),
	VERT( 0x4057deac, 0x4202dff9, 0x4243a131 ),
	NORM( 0x3e23a2be, 0x3ef2b77a, 0x3f5da9cd ),
	VERT( 0x40808b26, 0x4204b24b, 0x4241cedf ),
	NORM( 0x3e8d90ce, 0x3f0e973a, 0x3f487bce ),
	VERT( 0x4088163e, 0x42072f4d, 0x423f51dd ),
	NORM( 0x3ea33c16, 0x3f2b8616, 0x3f2b9f4d ),
	VERT( 0x40808b26, 0x4209ac4f, 0x423cd4db ),
	NORM( 0x3e8d2a44, 0x3f485ff7, 0x3f0ed7b6 ),
	VERT( 0x4057deac, 0x420b7ea1, 0x423b0289 ),
	NORM( 0x3e22d5b4, 0x3f5d7180, 0x3ef3a70e ),
	VERT( 0x401f90dc, 0x420c2951, 0x423a57d9 ),
	NORM( 0x3440d554, 0x3f6524e5, 0x3ee449fe ),
	VERT( 0x3fce85f8, 0x420b7ea1, 0x423b0289 ),
	NORM( 0xbe22d5ab, 0x3f5d7180, 0x3ef3a70e ),
	VERT( 0x3f782d70, 0x4209ac4f, 0x423cd4db ),
	NORM( 0xbe8d2a43, 0x3f485ff7, 0x3f0ed7b7 ),
	VERT( 0x42ada12a, 0x41d87ad4, 0x419ad1c5 ),
	NORM( 0x3f163c82, 0xbf493de7, 0xbe46aa9f ),
	VERT( 0x42afa82c, 0x4215f1e7, 0x41eaf0e1 ),
	NORM( 0x3f624fc8, 0xbebb36f6, 0x3e95162e ),
	VERT( 0x42a34d32, 0x4210ef41, 0x41f4f62c ),
	NORM( 0x3e8d205d, 0xbf2e01c6, 0x3f2e01c8 ),
	VERT( 0x42a24dc5, 0x41db6992, 0x41b01f8f ),
	NORM( 0x3a1e5ead, 0xbf7d9055, 0x3e0ceed0 ),
	VERT( 0x42af08d8, 0x421903b8, 0x41e4cd3d ),
	NORM( 0x3f00ead6, 0x3f129171, 0xbf25a1e8 ),
	VERT( 0x42ad01d6, 0x41de9e78, 0x4194ae22 ),
	NORM( 0x3e8d39d7, 0xbc9c6cc7, 0xbf760528 ),
	VERT( 0x42a1ae70, 0x41e18d34, 0x41a9fbed ),
	NORM( 0xbed82aee, 0x3d5596fa, 0xbf67ae1c ),
	VERT( 0x42a2addd, 0x42140113, 0x41eed289 ),
	NORM( 0xbe8d2059, 0x3f2e01c2, 0xbf2e01cd ),
	VERT( 0x42a454cf, 0x421a1938, 0x40fc68a7 ),
	NORM( 0x3f163c90, 0xbf493dd1, 0xbe46ab53 ),
	VERT( 0x42a65bd1, 0x4243cdb4, 0x418f3945 ),
	NORM( 0x3f624fe9, 0xbebb3699, 0x3e9515d6 ),
	VERT( 0x429a00d6, 0x423ecb0e, 0x41993e91 ),
	NORM( 0x3e8d2064, 0xbf2e01c3, 0x3f2e01ca ),
	VERT( 0x4299016a, 0x421b9096, 0x4128cfe9 ),
	NORM( 0x3a1e5bde, 0xbf7d9056, 0x3e0cee9d ),
	VERT( 0x42a5bc7c, 0x4246df86, 0x418915a2 ),
	NORM( 0x3f00ea99, 0x3f129191, 0xbf25a1fb ),
	VERT( 0x42a3b57b, 0x421d2b09, 0x40e3da1f ),
	NORM( 0x3e8d399e, 0xbc9c6857, 0xbf760531 ),
	VERT( 0x42986214, 0x421ea268, 0x411c88a2 ),
	NORM( 0xbed82adb, 0x3d559898, 0xbf67ae1f ),
	VERT( 0x42996181, 0x4241dce0, 0x41931aed ),
	NORM( 0xbe8d2049, 0x3f2e01c6, 0xbf2e01cc ),
	VERT( 0x42a755da, 0x420b485c, 0x413977c4 ),
	NORM( 0x3f163cc8, 0xbf493db7, 0xbe46aa59 ),
	VERT( 0x42a95cda, 0x4234fcd8, 0x41acdafe ),
	NORM( 0x3f624fc8, 0xbebb36f0, 0x3e951635 ),
	VERT( 0x429d01e0, 0x422ffa32, 0x41b6e049 ),
	NORM( 0x3e8d204e, 0xbf2e01ca, 0x3f2e01c7 ),
	VERT( 0x429c0273, 0x420cbfbb, 0x41641357 ),
	NORM( 0x3a1e55b0, 0xbf7d9054, 0x3e0ceee7 ),
	VERT( 0x42a8bd86, 0x42380eaa, 0x41a6b75a ),
	NORM( 0x3f00ead1, 0x3f12917d, 0xbf25a1e1 ),
	VERT( 0x42a6b684, 0x420e5a2e, 0x412d307a ),
	NORM( 0x3e8d3955, 0xbc9c7150, 0xbf76053a ),
	VERT( 0x429b631f, 0x420fd18d, 0x4157cc10 ),
	NORM( 0xbed82af4, 0x3d5596c6, 0xbf67ae1b ),
	VERT( 0x429c628b, 0x42330c04, 0x41b0bca6 ),
	NORM( 0xbe8d205c, 0x3f2e01c8, 0xbf2e01c6 ),
	VERT( 0x42aaa020, 0x41f61c8c, 0x417a601a ),
	NORM( 0x3f163c8d, 0xbf493dc6, 0xbe46ac2a ),
	VERT( 0x42aca722, 0x4224c2c2, 0x41cd4f28 ),
	NORM( 0x3f625002, 0xbebb365a, 0x3e951591 ),
	VERT( 0x42a04c29, 0x421fc01d, 0x41d75474 ),
	NORM( 0x3e8d2061, 0xbf2e01c6, 0x3f2e01c7 ),
	VERT( 0x429f4cbb, 0x41f90b4a, 0x41927dd8 ),
	NORM( 0x3a1e87ba, 0xbf7d9052, 0x3e0cef16 ),
	VERT( 0x42ac07cc, 0x4227d494, 0x41c72b85 ),
	NORM( 0x3f00ea60, 0x3f1291b0, 0xbf25a20c ),
	VERT( 0x42aa00cc, 0x41fc4030, 0x416e18d3 ),
	NORM( 0x3e8d396b, 0xbc9c619b, 0xbf76053a ),
	VERT( 0x429ead66, 0x41ff2eec, 0x418c5a34 ),
	NORM( 0xbed82b01, 0x3d5595e0, 0xbf67ae19 ),
	VERT( 0x429facd3, 0x4222d1ee, 0x41d130d2 ),
	NORM( 0xbe8d206a, 0x3f2e01c6, 0xbf2e01c5 ),
	VERT( 0x42b0d464, 0x41bd5376, 0x41b5f923 ),
	NORM( 0x3f163c80, 0xbf493de9, 0xbe46aa8d ),
	VERT( 0x42b2db66, 0x42085e38, 0x42030c1f ),
	NORM( 0x3f624fca, 0xbebb36f4, 0x3e951621 ),
	VERT( 0x42a6806c, 0x42035b92, 0x42080ec5 ),
	NORM( 0x3e8d2054, 0xbf2e01ca, 0x3f2e01c6 ),
	VERT( 0x42a580ff, 0x41c04236, 0x41cb46ec ),
	NORM( 0x3a1e451b, 0xbf7d9055, 0x3e0ceec5 ),
	VERT( 0x42b23c12, 0x420b700a, 0x41fff49a ),
	NORM( 0x3f00ead0, 0x3f129176, 0xbf25a1e8 ),
	VERT( 0x42b03510, 0x41c3771a, 0x41afd580 ),
	NORM( 0x3e8d39dc, 0xbc9c6d94, 0xbf760528 ),
	VERT( 0x42a4e1aa, 0x41c665d8, 0x41c5234a ),
	NORM( 0xbed82af2, 0x3d559762, 0xbf67ae1b ),
	VERT( 0x42a5e117, 0x42066d64, 0x4204fcf3 ),
	NORM( 0xbe8d2055, 0x3f2e01c5, 0xbf2e01cb ),
	VERT( 0x42907246, 0x416ed630, 0x423275e0 ),
	NORM( 0xbe541dce, 0xbf77ce8d, 0x3e1116f3 ),
	VERT( 0x42b08c63, 0x411cb3ce, 0x42577c69 ),
	NORM( 0xbe8e3c8c, 0xbf66a7bb, 0xbeaa9a76 ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_Handle[]
START
VList      vertex_Racing_Cont_Handle,
PList      strip_Racing_Cont_Handle,
Center      -22.017063F, 30.088657F, 48.591171F,
Radius      157.800720F,
END

CNKOBJECT  object_Racing_Cont_Handle[]
START
EvalFlags ( 0x00000027 ),
CNKModel   model_Racing_Cont_Handle,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_Racing_Cont_A_button,
Sibling     object_Racing_Cont_VM_forR,
END

CNKOBJECT_END



CNKOBJECT_START

PLIST      strip_Racing_Cont_Unite[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 41, 41, 41 ),
	MAmbi( 255, 63, 63, 63 ),
	MSpec( 12, 0, 0, 0 ),
	CnkS( 0x0 ), 1020, _NB( UFO_0, 112 ),
	StripR(8),  180, 166, 182, 188, 185, 187, 178, 165, 
	StripL(8),  165, 160, 187, 157, 188, 159, 166, 163, 
	StripR(7),  154, 152, 6, 9, 8, 13, 60, 
	StripR(5),  9, 152, 197, 196, 193, 
	StripL(3),  33, 149, 150, 
	StripR(11),  202, 176, 200, 150, 30, 33, 34, 7, 62, 59, 
                   61, 
	StripL(6),  201, 175, 164, 151, 161, 156, 
	StripL(4),  164, 177, 201, 186, 
	StripR(6),  194, 181, 192, 186, 183, 201, 
	StripL(6),  153, 195, 167, 194, 179, 181, 
	StripL(8),  151, 148, 156, 155, 158, 153, 162, 167, 
	StripL(3),  211, 212, 209, 
	StripL(7),  212, 210, 209, 208, 207, 203, 206, 
	StripL(6),  216, 213, 215, 214, 220, 221, 
	StripR(7),  2, 220, 219, 215, 217, 216, 218, 
	StripR(12),  222, 221, 205, 220, 224, 2, 26, 219, 16, 25, 
                   22, 24, 
	StripR(6),  223, 222, 206, 205, 203, 204, 
	StripR(7),  204, 205, 4, 224, 39, 26, 45, 
	StripL(3),  52, 53, 56, 
	StripR(10),  52, 49, 56, 47, 58, 37, 41, 39, 42, 45, 
	StripR(7),  22, 20, 16, 18, 26, 28, 45, 
	StripL(4),  25, 1, 219, 217, 
	StripL(4),  4, 46, 39, 37, 
	StripL(7),  437, 467, 387, 450, 252, 448, 460, 
	StripL(5),  455, 433, 252, 371, 373, 
	StripL(4),  455, 252, 440, 442, 
	StripL(5),  460, 445, 252, 444, 442, 
	StripL(3),  453, 454, 452, 
	StripL(3),  454, 457, 452, 
	StripL(4),  370, 432, 416, 452, 
	StripL(3),  465, 436, 399, 
	StripR(10),  446, 435, 461, 462, 447, 464, 449, 465, 469, 464, 
	StripL(12),  435, 459, 446, 434, 443, 458, 441, 457, 439, 452, 
                   454, 432, 
	StripR(7),  370, 372, 416, 394, 422, 397, 391, 
	StripR(6),  385, 429, 392, 419, 391, 422, 
	StripR(5),  377, 388, 399, 386, 436, 
	StripL(3),  399, 377, 400, 
	StripR(5),  382, 406, 385, 411, 429, 
	StripR(7),  382, 381, 406, 375, 400, 379, 377, 
	StripL(4),  438, 466, 468, 467, 
	StripL(8),  403, 408, 405, 413, 418, 431, 424, 425, 
	StripL(3),  363, 362, 365, 
	StripL(3),  367, 366, 368, 
	StripL(5),  366, 412, 427, 428, 368, 
	StripL(7),  363, 410, 412, 366, 362, 352, 348, 
	StripL(3),  412, 362, 363, 
	StripL(3),  369, 368, 428, 
	StripR(21),  363, 412, 365, 414, 367, 430, 428, 426, 420, 423, 
                   421, 417, 415, 404, 398, 402, 401, 409, 407, 414, 
                   412, 
	StripL(3),  341, 338, 326, 
	StripL(4),  347, 349, 284, 281, 
	StripR(15),  390, 396, 281, 283, 280, 292, 313, 295, 318, 298, 
                   323, 301, 328, 307, 331, 
	StripL(9),  383, 380, 284, 374, 279, 378, 275, 376, 389, 
	StripL(6),  383, 284, 384, 281, 393, 390, 
	StripL(4),  252, 275, 387, 389, 
	StripR(5),  396, 395, 276, 373, 252, 
	StripL(12),  396, 283, 276, 292, 293, 295, 296, 298, 299, 301, 
                   302, 304, 
	StripL(4),  356, 342, 360, 337, 
	StripL(9),  355, 358, 367, 342, 369, 356, 368, 366, 428, 
	StripL(3),  352, 366, 356, 
	StripL(7),  365, 364, 340, 363, 346, 362, 348, 
	StripL(6),  340, 351, 365, 344, 367, 355, 
	StripL(4),  340, 346, 339, 334, 
	StripR(24),  335, 338, 316, 321, 317, 322, 287, 289, 286, 288, 
                   247, 255, 243, 254, 253, 258, 256, 261, 262, 266, 
                   311, 267, 268, 242, 
	StripR(7),  320, 361, 315, 357, 281, 353, 349, 
	StripL(11),  361, 336, 320, 343, 325, 359, 330, 354, 274, 345, 
                   350, 
	StripL(3),  168, 170, 171, 
	StripR(14),  191, 184, 198, 202, 199, 200, 5, 30, 31, 29, 
                   32, 63, 23, 21, 
	StripL(10),  198, 191, 190, 193, 189, 197, 14, 9, 12, 13, 
	StripR(6),  230, 229, 227, 228, 171, 173, 
	StripR(7),  199, 234, 198, 226, 190, 225, 189, 
	StripL(6),  235, 232, 236, 170, 169, 168, 
	StripR(24),  0, 235, 233, 232, 231, 170, 174, 171, 172, 173, 
                   225, 228, 189, 229, 14, 230, 15, 3, 11, 38, 
                   10, 36, 61, 65, 
	StripR(7),  3, 230, 237, 227, 238, 171, 239, 
	StripL(14),  225, 172, 226, 174, 234, 231, 199, 233, 5, 0, 
                   31, 35, 32, 23, 
	StripL(4),  252, 251, 250, 249, 
	StripL(4),  243, 246, 253, 256, 
	StripL(16),  241, 263, 258, 259, 254, 260, 255, 290, 288, 291, 
                   289, 327, 322, 326, 321, 338, 
	StripR(14),  263, 259, 264, 260, 270, 290, 269, 291, 272, 327, 
                   274, 326, 350, 341, 
	StripR(5),  266, 261, 265, 258, 241, 
	StripL(6),  266, 267, 265, 242, 241, 240, 
	StripL(8),  270, 238, 269, 271, 272, 273, 274, 330, 
	StripR(7),  275, 248, 252, 244, 250, 245, 249, 
	StripR(13),  281, 280, 282, 313, 314, 318, 319, 323, 324, 328, 
                   329, 332, 333, 
	StripL(3),  279, 285, 284, 
	StripL(15),  302, 300, 299, 297, 296, 294, 293, 278, 276, 277, 
                   252, 308, 251, 257, 249, 
	StripL(29),  307, 306, 304, 305, 302, 303, 300, 311, 310, 262, 
                   257, 256, 249, 246, 245, 243, 244, 247, 248, 286, 
                   275, 287, 279, 317, 285, 316, 284, 335, 347, 
	StripL(3),  304, 301, 307, 
	StripL(4),  310, 257, 309, 308, 
	StripL(5),  268, 311, 312, 303, 305, 
	StripL(8),  277, 278, 308, 294, 309, 297, 310, 300, 
	StripL(3),  328, 332, 331, 
	StripL(12),  273, 333, 330, 329, 325, 324, 320, 319, 315, 314, 
                   281, 282, 
	StripL(3),  63, 21, 64, 
	StripL(15),  15, 14, 11, 12, 10, 13, 61, 60, 59, 8, 
                   7, 6, 33, 154, 149, 
	StripR(7),  30, 34, 29, 62, 63, 61, 64, 
	StripL(3),  17, 66, 19, 
	StripR(25),  69, 67, 70, 71, 72, 107, 96, 108, 100, 134, 
                   106, 133, 105, 132, 103, 131, 102, 130, 101, 113, 
                   104, 97, 105, 100, 106, 
	StripR(43),  78, 67, 68, 69, 73, 74, 75, 76, 126, 98, 
                   99, 97, 114, 113, 116, 130, 135, 131, 136, 132, 
                   137, 133, 138, 134, 139, 108, 110, 107, 109, 71, 
                   79, 67, 77, 78, 83, 80, 85, 86, 90, 129, 
                   91, 27, 17, 
	StripR(8),  68, 73, 80, 81, 86, 128, 129, 121, 
	StripL(3),  68, 78, 80, 
	StripR(34),  73, 75, 81, 126, 127, 115, 118, 117, 120, 119, 
                   122, 140, 145, 141, 146, 142, 147, 143, 95, 144, 
                   94, 112, 93, 111, 92, 84, 88, 82, 87, 83, 
                   66, 89, 17, 91, 
	StripR(26),  83, 82, 77, 84, 79, 111, 109, 112, 110, 144, 
                   139, 143, 138, 142, 137, 141, 136, 140, 135, 119, 
                   116, 117, 114, 115, 99, 126, 
	StripR(5),  83, 85, 89, 90, 91, 
	StripL(6),  69, 74, 70, 76, 72, 96, 
	StripR(5),  98, 76, 97, 96, 100, 
	StripL(5),  105, 104, 103, 101, 102, 
	StripR(6),  120, 121, 118, 128, 127, 81, 
	StripL(8),  122, 120, 123, 121, 124, 129, 44, 27, 
	StripL(4),  57, 125, 40, 43, 
	StripR(10),  54, 55, 145, 57, 122, 125, 123, 43, 124, 44, 
	StripL(6),  50, 147, 51, 146, 54, 145, 
	StripR(8),  147, 95, 50, 94, 48, 93, 36, 92, 
	CnkEnd()
END

VLIST      vertex_Racing_Cont_Unite[]
START
	CnkV_VN(0x0, 2821),
	OffnbIdx(0, 470),
	VERT( 0xbd964fff, 0xc3001fea, 0xc30eafc7 ),
	NORM( 0x3814ef3a, 0x3dba61e4, 0xbf7ef00b ),
	VERT( 0xbd964fff, 0xc3001fea, 0xc30eafc7 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xbd964ffe, 0xc3001fea, 0xc2389177 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xbe1f6009, 0xc300098b, 0x4256965e ),
	NORM( 0x31b73585, 0x3f0d0fe6, 0x3f55a11a ),
	VERT( 0xbe1f6009, 0xc300098b, 0x4256965e ),
	NORM( 0xb96c02c1, 0xbf7fffef, 0x3ab78ad2 ),
	VERT( 0xbe1f6009, 0xc25de9ac, 0xc3080a67 ),
	NORM( 0x3797173b, 0x3e87d418, 0xbf76d3c2 ),
	VERT( 0xc28f0432, 0xc1094340, 0xc2aa0e10 ),
	NORM( 0xbe2264c7, 0x3f4f33bd, 0xbf10c235 ),
	VERT( 0xc2994da3, 0xc1284fbb, 0xc2ab0674 ),
	NORM( 0xbf104953, 0x3f3574ae, 0xbed92cc2 ),
	VERT( 0xc28ce6ed, 0x40e6bac7, 0xc26cd0d0 ),
	NORM( 0xbf0c6c53, 0x3f4923fa, 0xbe926bf8 ),
	VERT( 0xc2835f85, 0x411269df, 0xc26cd0d0 ),
	NORM( 0xbe2ea4c9, 0x3f71dc96, 0xbe8f4901 ),
	VERT( 0xc2a6afbd, 0xc2271957, 0xc0540e70 ),
	NORM( 0xbdeb66df, 0x3f292240, 0x3f3de7af ),
	VERT( 0xc28648b0, 0xc2271957, 0xc0540e70 ),
	NORM( 0xba20e7d3, 0x3f2380b1, 0x3f44fc00 ),
	VERT( 0xc2835f85, 0x410dfeb4, 0xc25e9ddd ),
	NORM( 0xbde45842, 0x3f6d7e79, 0x3eb6679d ),
	VERT( 0xc28ce6ed, 0x41063b95, 0xc25cad15 ),
	NORM( 0xbec115f4, 0x3f652a0f, 0x3e7348ca ),
	VERT( 0x3e1f6009, 0x410dfeb4, 0xc25e9ddd ),
	NORM( 0x00000000, 0x3f69676f, 0x3ed251c1 ),
	VERT( 0x3e1f6009, 0xc2271957, 0xc0540e70 ),
	NORM( 0x3139fdde, 0x3f237caa, 0x3f44ff5b ),
	VERT( 0xc28648b0, 0xc3001fea, 0xc2c42f70 ),
	NORM( 0x00000000, 0xbf7fffd2, 0x3b18fee5 ),
	VERT( 0xc2b74c7d, 0xc3001fea, 0xc2c42f70 ),
	NORM( 0xbf583ea1, 0x3d411cf4, 0xbf087c8f ),
	VERT( 0xc2b74c7d, 0xc3001fea, 0xc2c42f70 ),
	NORM( 0x00000000, 0xbf7ffec3, 0x3bc981ee ),
	VERT( 0xc2af96f4, 0xc3001fea, 0xc2daf476 ),
	NORM( 0xbf727945, 0xbbddb85a, 0xbea4305a ),
	VERT( 0xc2af96f4, 0xc3001fea, 0xc2daf476 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc2afca39, 0xc3001fea, 0xc308b08e ),
	NORM( 0xbf724f40, 0x3d160b47, 0xbea41f9f ),
	VERT( 0xc2afca39, 0xc3001fea, 0xc308b08e ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc2a9d96b, 0xc3001fea, 0xc30cbeff ),
	NORM( 0xbee8bd3d, 0x3d993384, 0xbf633773 ),
	VERT( 0xc2a9d96b, 0xc3001fea, 0xc30cbeff ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc2a26c01, 0xc3001fea, 0xc30eafc7 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc28648b0, 0xc3001fea, 0xc2389177 ),
	NORM( 0xbb28a121, 0xbf7fffbd, 0xba97c9aa ),
	VERT( 0xc3145a4d, 0xc2fe4f0c, 0xc2389177 ),
	NORM( 0xbf29d37a, 0x3db06c4d, 0xbf3e4939 ),
	VERT( 0xc3145a4d, 0xc2fe4f0c, 0xc2389177 ),
	NORM( 0xbc011bfb, 0xbf7ffb98, 0xbc0b643a ),
	VERT( 0xc2a774d1, 0xc255a800, 0xc3062061 ),
	NORM( 0xbf09201d, 0x3f0445b7, 0xbf2afcbd ),
	VERT( 0xc29aa8e2, 0xc24de4e1, 0xc3062061 ),
	NORM( 0xbdcde511, 0x3f1a558f, 0xbf4a9e88 ),
	VERT( 0xc29ba146, 0xc25de9ac, 0xc3080a67 ),
	NORM( 0xbd4fb54d, 0x3e8fff79, 0xbf7552d1 ),
	VERT( 0xc2a774d1, 0xc265accb, 0xc3080a67 ),
	NORM( 0xbeef1269, 0x3e558c31, 0xbf5bfe40 ),
	VERT( 0xc295ceee, 0xc1e413ac, 0xc2db1131 ),
	NORM( 0xbe099fa6, 0x3f41bf3a, 0xbf23c038 ),
	VERT( 0xc2a1ccc1, 0xc1f399ea, 0xc2db1131 ),
	NORM( 0xbf118985, 0x3f2787f1, 0xbeff404a ),
	VERT( 0xc2a26c01, 0xc30021a4, 0xc30ead78 ),
	NORM( 0xbc594bf9, 0x3daeaa12, 0xbf7f0b70 ),
	VERT( 0xc2a64d90, 0xc300137d, 0x4256b0a2 ),
	NORM( 0x3f12d3f6, 0x3eda8d14, 0x3f32fcb6 ),
	VERT( 0xc2a64d90, 0xc300137d, 0x4256b0a2 ),
	NORM( 0x38c7894a, 0xbf800000, 0x392b6dbb ),
	VERT( 0xc28648b0, 0xc3001148, 0x4256aace ),
	NORM( 0xb2a2319b, 0x3f0d0fe6, 0x3f55a11a ),
	VERT( 0xc28648b0, 0xc3001fea, 0x418f4c89 ),
	NORM( 0xbb2b9e83, 0xbf7fff88, 0xbb335c69 ),
	VERT( 0xc3278381, 0xc3001fea, 0x418f4c89 ),
	NORM( 0xbf7c5789, 0x3e296f49, 0xbd014908 ),
	VERT( 0xc3278381, 0xc3001fea, 0x418f4c89 ),
	NORM( 0xbb9e474b, 0xbf7ffdc7, 0xbbda9cbc ),
	VERT( 0xc3262e3b, 0xc3001fea, 0xc1c692d7 ),
	NORM( 0xbc289f35, 0xbf7ff622, 0xbc64e28b ),
	VERT( 0xc3262e3b, 0xc3001fea, 0xc1c692d7 ),
	NORM( 0xbf7a94e9, 0x3df0df5d, 0xbe2b8001 ),
	VERT( 0xc3231c07, 0xc3001fea, 0xc205292f ),
	NORM( 0xbf54e9e6, 0x3db266f4, 0xbf0c6135 ),
	VERT( 0xc3231c07, 0xc3001fea, 0xc205292f ),
	NORM( 0xbc289f35, 0xbf7ff622, 0xbc64e28c ),
	VERT( 0xc28648b0, 0xc3001640, 0x4257273d ),
	NORM( 0xb9b25925, 0xbf7fffef, 0x3ab78e7e ),
	VERT( 0xc2abf23e, 0xc3001fea, 0x42a1a218 ),
	NORM( 0x39c94aa6, 0xbf7ffff7, 0xba7f6ffe ),
	VERT( 0xc2abf23e, 0xc3001fea, 0x42a1a218 ),
	NORM( 0x3f3dabd9, 0x3e9b7c0c, 0x3f195a34 ),
	VERT( 0xc2c878a7, 0xc3001fea, 0x42b5d041 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc2c878a7, 0xc3001fea, 0x42b5d041 ),
	NORM( 0x3e4c5cb1, 0x3f0dddf3, 0x3f4ee164 ),
	VERT( 0xc31d2446, 0xc3001fea, 0x42b57bf2 ),
	NORM( 0xbe955120, 0x3f136bc9, 0x3f4385d5 ),
	VERT( 0xc31d2446, 0xc3001fea, 0x42b57bf2 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc3246a05, 0xc3001fea, 0x42a5d198 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc3246a05, 0xc3001fea, 0x42a5d198 ),
	NORM( 0xbf3b13ff, 0x3ee204ae, 0x3f054ab6 ),
	VERT( 0xc328662f, 0xc3001fea, 0x4295cd05 ),
	NORM( 0xbf631625, 0x3eba6260, 0x3e915e28 ),
	VERT( 0xc328662f, 0xc3001fea, 0x4295cd05 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xc328662f, 0xc3001fea, 0x42415bc7 ),
	NORM( 0xbf7c5abc, 0x3e2bac90, 0xbc569e8f ),
	VERT( 0xc328662f, 0xc3001fea, 0x42415bc7 ),
	NORM( 0x39bd3ef1, 0xbf7fffff, 0xb92c1e42 ),
	VERT( 0xc29fa7de, 0xc15feae8, 0xc2a46f52 ),
	NORM( 0xbf687373, 0x3ecd142b, 0xbdfb7cd9 ),
	VERT( 0xc2934127, 0x40be38af, 0xc2553bae ),
	NORM( 0xbf2d60eb, 0x3f2ea83a, 0x3e8d01d0 ),
	VERT( 0xc2ab2783, 0xc22ea636, 0xc0269db3 ),
	NORM( 0xbf1f35db, 0x3f007277, 0x3f19e9e1 ),
	VERT( 0xc2a826fb, 0xc2078c39, 0xc2d4b72d ),
	NORM( 0xbf6eee4f, 0x3ea4adec, 0xbe235fe0 ),
	VERT( 0xc2adcf0b, 0xc2680fdc, 0xc30371de ),
	NORM( 0xbf6f8e84, 0x3e2dd839, 0xbe9e3c9b ),
	VERT( 0xc2af5823, 0xc30005cc, 0xc2c6b482 ),
	NORM( 0xbf7ff77c, 0x3c6af239, 0x3bf136c2 ),
	VERT( 0xc2ad184a, 0xc300137c, 0x424eed83 ),
	NORM( 0xbeb069d5, 0x3f0449a6, 0x3f48a34a ),
	VERT( 0xc2afc493, 0xc2d4cdb8, 0xc2db5864 ),
	NORM( 0xbf468fa7, 0x3c2c59f6, 0xbf218fd3 ),
	VERT( 0xc2a6cc71, 0xc2938902, 0xc2bcaaf8 ),
	NORM( 0x3f7d4bba, 0x3c55418a, 0xbe13d84f ),
	VERT( 0xc2af9677, 0xc29b1d49, 0xc2db9c50 ),
	NORM( 0xbdaad26a, 0xba1d05d8, 0xbf7f1b9f ),
	VERT( 0xc2afa6ff, 0xc295dcde, 0xc2da722a ),
	NORM( 0xbe0563ea, 0x3ec76cdd, 0xbf696991 ),
	VERT( 0xc2a6dd87, 0xc28e4a23, 0xc2bcaaf8 ),
	NORM( 0x3f5619b4, 0x3f031f19, 0xbe482abe ),
	VERT( 0xc2a6db85, 0xc2734961, 0xc24f6620 ),
	NORM( 0x3f7ffe79, 0x3bdb97f9, 0xbaa8b8fe ),
	VERT( 0xc2a6f537, 0xc25cc4ba, 0xc2513fb3 ),
	NORM( 0x3f430c05, 0x3f21303b, 0xbe1b7c53 ),
	VERT( 0xc2b1c5ce, 0xc2970685, 0xc2c42f70 ),
	NORM( 0xbf67fa36, 0x3d9b1f8d, 0xbed50a3a ),
	VERT( 0xc2afadd1, 0xc28c5b4f, 0xc2c42f70 ),
	NORM( 0xbe46b6f9, 0x3f52f943, 0xbf083a6f ),
	VERT( 0xc304afe1, 0xc272d35d, 0xc24fda8f ),
	NORM( 0xbf20d3c1, 0x3e853bdc, 0xbf3bb43c ),
	VERT( 0xc2fe6c54, 0xc25cfa53, 0xc2513b27 ),
	NORM( 0xbe9f66bb, 0x3f424b6b, 0xbf1266cc ),
	VERT( 0xc2a6c0fe, 0xc29d8bc8, 0xc2bcaaf8 ),
	NORM( 0x3f7d8824, 0xbaa5a7b5, 0xbe0dd89b ),
	VERT( 0xc2af8b5c, 0xc2a2cdd9, 0xc2db0df9 ),
	NORM( 0xbd509764, 0x3ba51831, 0xbf7faa21 ),
	VERT( 0xc2a6cc3d, 0xc289f7b1, 0xc24ca151 ),
	NORM( 0x3f7fffe0, 0x3b005a93, 0x383addef ),
	VERT( 0xc2b34787, 0xc29d86cf, 0xc2c42f70 ),
	NORM( 0xbf61fc69, 0x3d49ee07, 0xbeef3965 ),
	VERT( 0xc307e51c, 0xc289c494, 0xc24d37e4 ),
	NORM( 0xbf29d413, 0x3dd73c5c, 0xbf3da8a7 ),
	VERT( 0xc2a6b375, 0xc2bcc625, 0xc2bcaaf8 ),
	NORM( 0x3f7d8f83, 0xbb89d9be, 0xbe0cf5e3 ),
	VERT( 0xc2af7d0e, 0xc2bfff4a, 0xc2dba13a ),
	NORM( 0xbcabf4d1, 0x3cac72ca, 0xbf7fe309 ),
	VERT( 0xc2a6cbe7, 0xc2b30a34, 0xc245a9f0 ),
	NORM( 0x3f7fffbe, 0xbb2ac2cf, 0x3a8a5d7b ),
	VERT( 0xc2b4725e, 0xc2bcc0b8, 0xc2c42f70 ),
	NORM( 0xbf5f82d6, 0x3cdbaff2, 0xbef94092 ),
	VERT( 0xc30bf968, 0xc2b2b661, 0xc245b828 ),
	NORM( 0xbf2ad25e, 0x3d3d3c52, 0xbf3e4e1e ),
	VERT( 0xc2a6fc3c, 0xc2d4ca5c, 0xc2bcaaf8 ),
	NORM( 0x3f7d8f7c, 0xbc50e520, 0xbe0c6c82 ),
	VERT( 0xc2a72754, 0xc2d2c120, 0xc240de72 ),
	NORM( 0x3f7ffefc, 0xbbae5531, 0x3ad698d5 ),
	VERT( 0xc2b603aa, 0xc2d48da4, 0xc2c42f70 ),
	NORM( 0xbf5c8d75, 0x3d31b7b7, 0xbf017ef4 ),
	VERT( 0xc30f13ac, 0xc2d2d2f9, 0xc2400c72 ),
	NORM( 0xbf287815, 0x3d7d016e, 0xbf401abf ),
	VERT( 0xc3104594, 0xc2dca19a, 0xc23dc95f ),
	NORM( 0xbf287d65, 0x3da4454e, 0xbf3fa39c ),
	VERT( 0xc2a686cf, 0xc2cf32ff, 0x408fd45e ),
	NORM( 0x3f7ffeee, 0x3bba183f, 0x3a203814 ),
	VERT( 0xc2a6b5ba, 0xc2c9fe07, 0x425c7cbf ),
	NORM( 0x3f7cf5fd, 0x3da23c22, 0x3e06ca79 ),
	VERT( 0xc2ab8b3e, 0xc2c7b736, 0x42823778 ),
	NORM( 0x3f3ebf4f, 0x3ec63dc6, 0x3f0b0520 ),
	VERT( 0xc2c09792, 0xc2c7b736, 0x428b58b5 ),
	NORM( 0x3e3649e6, 0x3f1ef714, 0x3f436bb4 ),
	VERT( 0xc2a70437, 0xc23e1c6e, 0xc1d46b36 ),
	NORM( 0x3f34af67, 0x3f2d91a8, 0xbe523eb6 ),
	VERT( 0xc31108cb, 0xc23e9bff, 0xc1d3dfa0 ),
	NORM( 0xbeb6600f, 0x3f67feec, 0xbe69322a ),
	VERT( 0xc30eb488, 0xc24c9590, 0xc21c8242 ),
	NORM( 0xbea7693e, 0x3f4b2232, 0xbf036690 ),
	VERT( 0xc310ff71, 0xc246e485, 0xc2088592 ),
	NORM( 0xbec27f3b, 0x3f5d4ab2, 0xbea8a041 ),
	VERT( 0xc2a63c1f, 0xc22a94e0, 0xc11b73a6 ),
	NORM( 0x3f318b13, 0x3f369a48, 0xbdcf2d3f ),
	VERT( 0xc3111002, 0xc22dd986, 0xc11f200f ),
	NORM( 0xbe8ffa94, 0x3f6f56a9, 0xbe5da6e8 ),
	VERT( 0xc30f9c7a, 0xc2294be3, 0xc085fca1 ),
	NORM( 0xbe5bf71e, 0x3f7a044b, 0x3bf1f296 ),
	VERT( 0xc30b9ec6, 0xc2294be3, 0xc007ba44 ),
	NORM( 0xbcbf65dd, 0x3f7d2c48, 0x3e15dcc0 ),
	VERT( 0xc3111002, 0xc238971e, 0xc19b9c65 ),
	NORM( 0xbeb5c03c, 0x3f68ffa8, 0xbe5ab27c ),
	VERT( 0xc2a9acbb, 0xc2294be3, 0xc007ba44 ),
	NORM( 0x3e8de7ae, 0x3f6be04e, 0x3e8b7cb5 ),
	VERT( 0xc2a780db, 0xc2294be3, 0xc07d478a ),
	NORM( 0x3f27428c, 0x3f40abaf, 0x3da773dd ),
	VERT( 0xc2a6e5d0, 0xc2552ea9, 0xc1b836c3 ),
	NORM( 0x3f7ffd93, 0xbbf89e98, 0xbb852b6c ),
	VERT( 0xc2a6ed28, 0xc23fb2e2, 0xc01d4a7b ),
	NORM( 0x3f7f68f7, 0x3cfe6159, 0x3d771c68 ),
	VERT( 0xc2a6d4e3, 0xc278c833, 0xc19142b4 ),
	NORM( 0x3f7fffef, 0x3ab8291b, 0x3962d98b ),
	VERT( 0xc2a6dc46, 0xc26197c9, 0x412065eb ),
	NORM( 0x3f7cd046, 0x3e01f6cf, 0x3dbe43b3 ),
	VERT( 0xc2a6e38d, 0xc2a99fd2, 0xc0b9164d ),
	NORM( 0x3f7ffff0, 0x3a99f60c, 0x3a38c940 ),
	VERT( 0xc2a6faa8, 0xc2a06d29, 0x42135b6c ),
	NORM( 0x3f7d4460, 0x3dd9d339, 0x3dcc0674 ),
	VERT( 0xc317f338, 0xc24c12cd, 0xc15c9121 ),
	NORM( 0xbf5a2532, 0x3f019eaf, 0xbe077d22 ),
	VERT( 0xc317e82d, 0xc255375c, 0xc1ba45cb ),
	NORM( 0xbf582f94, 0x3f0521f5, 0xbe032be3 ),
	VERT( 0xc317dbc9, 0xc25f472d, 0xc2041ce6 ),
	NORM( 0xbf536464, 0x3ef096ce, 0xbe9fbb6a ),
	VERT( 0xc31ad678, 0xc26df7b4, 0xc09ee454 ),
	NORM( 0xbf79db99, 0x3e5957e6, 0xbd4700d5 ),
	VERT( 0xc31aca51, 0xc27954a9, 0xc19146a4 ),
	NORM( 0xbf78d0fe, 0x3e6b8bc1, 0xbd499f66 ),
	VERT( 0xc31abe8c, 0xc282385d, 0xc1fdf528 ),
	NORM( 0xbf719614, 0x3e528da6, 0xbe84af3c ),
	VERT( 0xc31f4e41, 0xc2a4facc, 0x41882c58 ),
	NORM( 0xbf7bb07a, 0x3e390d1a, 0xbcde34c8 ),
	VERT( 0xc31f3140, 0xc2a8ef59, 0xc0bf1f0d ),
	NORM( 0xbf7ad032, 0x3e4b2532, 0xbce10c7c ),
	VERT( 0xc31f13d3, 0xc2af6625, 0xc1ea6a25 ),
	NORM( 0xbf73fac6, 0x3e32a71d, 0xbe7d7611 ),
	VERT( 0xc323c781, 0xc2cce957, 0x42012a56 ),
	NORM( 0xbf7bbec1, 0x3e3863d4, 0xbcbe6c0a ),
	VERT( 0xc323509b, 0xc2ceea3d, 0x4082bb64 ),
	NORM( 0xbf7c2c46, 0x3e2f470b, 0xbc9ef181 ),
	VERT( 0xc3232ba2, 0xc2d26db6, 0xc1d9bedc ),
	NORM( 0xbf754662, 0x3e233184, 0xbe73b1e7 ),
	VERT( 0xc324bab7, 0xc2e235d8, 0x411b1f74 ),
	NORM( 0xbf7d0f35, 0x3e18c673, 0xbcc5b5c9 ),
	VERT( 0xc3155b54, 0xc264f838, 0xc217620e ),
	NORM( 0xbf306184, 0x3ec0ce66, 0xbf1e880a ),
	VERT( 0xc3183a4d, 0xc28510e2, 0xc215fc1f ),
	NORM( 0xbf45842b, 0x3e107e0b, 0xbf1ecd9b ),
	VERT( 0xc31b0ece, 0xc2afcb2e, 0xc212eadb ),
	NORM( 0xbf460640, 0x3dc28602, 0xbf2068bd ),
	VERT( 0xc31f0997, 0xc2d3a3e9, 0xc20d9089 ),
	NORM( 0xbf460ff1, 0x3dd01270, 0xbf2018b1 ),
	VERT( 0xc317f338, 0xc23fb2e2, 0xc02f6e7d ),
	NORM( 0xbf51fe70, 0x3f11dd2e, 0xbd4bcf53 ),
	VERT( 0xc3165a7f, 0xc23b253f, 0x408de802 ),
	NORM( 0xbf182bbb, 0x3f4339d0, 0x3e82a4ac ),
	VERT( 0xc311f682, 0xc23b253f, 0x40df8a26 ),
	NORM( 0xbe0b3121, 0x3f5fe21f, 0x3eee56cb ),
	VERT( 0xc2aa5977, 0xc23cc792, 0x40df8a26 ),
	NORM( 0x3f300ac3, 0x3f1b8f4d, 0x3ecb6f24 ),
	VERT( 0xc2aa1e9a, 0xc23b253f, 0x4096fa0e ),
	NORM( 0x3f602e59, 0x3ecc8d10, 0x3e8ad4fe ),
	VERT( 0xc31ad678, 0xc26197c9, 0x4119f882 ),
	NORM( 0xbf71caf9, 0x3ea46434, 0x3d8e3a5a ),
	VERT( 0xc318015f, 0xc25d0a26, 0x41848e34 ),
	NORM( 0xbf21bcea, 0x3f2a82f1, 0x3ecb0110 ),
	VERT( 0xc3139625, 0xc25d0a26, 0x41a17a97 ),
	NORM( 0xbe454d3c, 0x3f4d6a48, 0x3f10983b ),
	VERT( 0xc2aed024, 0xc25d0a26, 0x41a17a97 ),
	NORM( 0x3edd396d, 0x3f340122, 0x3f1090eb ),
	VERT( 0xc2aa12fb, 0xc25d0a26, 0x4187c4ec ),
	NORM( 0x3f7840a5, 0x3e262413, 0x3e3ad3a6 ),
	VERT( 0xc31f4e41, 0xc2a06d29, 0x4211593b ),
	NORM( 0xbf70c7f3, 0x3ea46212, 0x3de2fc34 ),
	VERT( 0xc31d4c0f, 0xc29e2658, 0x42345d4d ),
	NORM( 0xbf35aabc, 0x3f14180a, 0x3ecdeced ),
	VERT( 0xc317c607, 0xc29e2658, 0x4246710b ),
	NORM( 0xbe72110b, 0x3f3a956b, 0x3f248004 ),
	VERT( 0xc2b967e7, 0xc29e2658, 0x4246710b ),
	NORM( 0x3e7f5349, 0x3f31975b, 0x3f2cfb7f ),
	VERT( 0xc2aae740, 0xc29e2658, 0x42365f80 ),
	NORM( 0x3f506e48, 0x3ecf99e7, 0x3ed4c5ca ),
	VERT( 0xc323c781, 0xc2c9fe07, 0x425a3470 ),
	NORM( 0xbf76ae73, 0x3e8088a7, 0x3dbc4db1 ),
	VERT( 0xc3217f31, 0xc2c7b736, 0x4281134f ),
	NORM( 0xbf45dd0d, 0x3eed7e69, 0x3eddad6b ),
	VERT( 0xc31b3856, 0xc2c7b736, 0x428b58b5 ),
	NORM( 0xbe8af90e, 0x3f223053, 0x3f397a9c ),
	VERT( 0xc28c1bf7, 0xc1e1d266, 0xc2db153c ),
	NORM( 0x3e2e6850, 0x3f37522f, 0xbf2d4964 ),
	VERT( 0xc28c1bf7, 0xc1e1d266, 0xc2db153c ),
	NORM( 0xbcf68baf, 0x3f4288de, 0xbf263b44 ),
	VERT( 0xc2921807, 0xc235c10a, 0xc2ff981c ),
	NORM( 0xbc79cfb1, 0x3f3a7edf, 0xbf2f5427 ),
	VERT( 0xc2921807, 0xc235c10a, 0xc2ff981c ),
	NORM( 0x3d28e750, 0x3f3fe012, 0xbf2923ea ),
	VERT( 0xc2754f53, 0x400af7a6, 0xc28af1a1 ),
	NORM( 0xbb922f30, 0x3f5370d3, 0xbf105143 ),
	VERT( 0xc2754f53, 0x400af7a6, 0xc28af1a1 ),
	NORM( 0x3d4e18e5, 0x3f463cba, 0xbf2177f2 ),
	VERT( 0xc281620f, 0xc1094341, 0xc2aa0e10 ),
	NORM( 0xbc0d0216, 0x3f4e1d94, 0xbf17d06a ),
	VERT( 0xc281620f, 0xc1094341, 0xc2aa0e10 ),
	NORM( 0x3e121aa7, 0x3f46bd5b, 0xbf1d2d23 ),
	VERT( 0xc27fecc8, 0xc1e48ddc, 0xc2daf2bc ),
	NORM( 0x3e3612f3, 0x3f3874bf, 0xbf2b94bc ),
	VERT( 0xc27fecc8, 0xc1e48ddc, 0xc2daf2bc ),
	NORM( 0x00000000, 0x3f3fdf53, 0xbf297903 ),
	VERT( 0xc26b0051, 0xc12cc6f1, 0xc2ab148e ),
	NORM( 0x3e1debcc, 0x3f45c6a0, 0xbf1dad4b ),
	VERT( 0xc26b0051, 0xc12cc6f1, 0xc2ab148e ),
	NORM( 0x00000000, 0x3f4bcc72, 0xbf1aed1b ),
	VERT( 0xc28319dd, 0xc21a5f6d, 0xc2eea860 ),
	NORM( 0x00000000, 0x3f3378f4, 0xbf368d97 ),
	VERT( 0xc28319dd, 0xc21a5f6d, 0xc2eea860 ),
	NORM( 0x3d89f521, 0x3f3af0e3, 0xbf2e0b8c ),
	VERT( 0xc2606338, 0x3e3678b8, 0xc28f04a3 ),
	NORM( 0x3cf2a2e2, 0x3f3fcdc3, 0xbf296176 ),
	VERT( 0xc2606338, 0x3e3678b8, 0xc28f04a3 ),
	NORM( 0x00000000, 0x3f49a13a, 0xbf1dbd0d ),
	VERT( 0x00000000, 0xc21a5f6d, 0xc2eea860 ),
	NORM( 0x00000000, 0x3f4716ad, 0xbf20ef18 ),
	VERT( 0x00000000, 0xc21a5f6d, 0xc2eea860 ),
	NORM( 0x00000000, 0x3f3378f4, 0xbf368d97 ),
	VERT( 0x28000000, 0x3e3678b8, 0xc28f04a3 ),
	NORM( 0x00000000, 0x3f49a13a, 0xbf1dbd0d ),
	VERT( 0x28000000, 0x3e3678b8, 0xc28f04a3 ),
	NORM( 0x3931f0ad, 0x3f3577b8, 0xbf3491e5 ),
	VERT( 0x42974833, 0xc30005cc, 0xc2c6b482 ),
	NORM( 0x3f7ff77c, 0x3c6af239, 0x3bf136c2 ),
	VERT( 0x4297ba49, 0xc3001fea, 0xc308b08e ),
	NORM( 0x3f730d27, 0x3d10ff96, 0xbe9fbfa0 ),
	VERT( 0x4295bf1b, 0xc2680fdc, 0xc30371de ),
	NORM( 0x3f70828b, 0x3e27d61e, 0xbe9a04ae ),
	VERT( 0x42931793, 0xc22ea636, 0xc0269db3 ),
	NORM( 0x3f2d5726, 0x3ef33923, 0x3f0fdfbc ),
	VERT( 0x428797ee, 0xc15feae8, 0xc2a46f52 ),
	NORM( 0x3f66f6c2, 0x3ed1d055, 0xbe09c426 ),
	VERT( 0x4276626e, 0x40be38af, 0xc2553bae ),
	NORM( 0x3f349208, 0x3f2a9333, 0x3e77b170 ),
	VERT( 0x4290170b, 0xc2078c39, 0xc2d4b72d ),
	NORM( 0x3f6f9055, 0x3ea1d3f8, 0xbe1fe7dc ),
	VERT( 0x00000000, 0xc235c10a, 0xc2ff981c ),
	NORM( 0x00000000, 0x3f4716ad, 0xbf20ef18 ),
	VERT( 0x00000000, 0xc235c10a, 0xc2ff981c ),
	NORM( 0x00000000, 0x3f3946df, 0xbf30a8c5 ),
	VERT( 0x425613da, 0xc21a5f6d, 0xc2eea860 ),
	NORM( 0xbcd75c24, 0x3f3e5845, 0xbf2b0de5 ),
	VERT( 0x425613da, 0xc21a5f6d, 0xc2eea860 ),
	NORM( 0x00000000, 0x3f3378f4, 0xbf368d97 ),
	VERT( 0x42304358, 0x3e3678b8, 0xc28f04a3 ),
	NORM( 0xbd8f7bd5, 0x3f3f8879, 0xbf28e80e ),
	VERT( 0x42304358, 0x3e3678b8, 0xc28f04a3 ),
	NORM( 0x00000000, 0x3f49a13a, 0xbf1dbd0d ),
	VERT( 0x423ae071, 0xc12cc6f1, 0xc2ab148e ),
	NORM( 0xbe1a91f8, 0x3f466860, 0xbf1d16ee ),
	VERT( 0x423ae071, 0xc12cc6f1, 0xc2ab148e ),
	NORM( 0x00000000, 0x3f4bcc72, 0xbf1aed1b ),
	VERT( 0x4268180e, 0xc1e1d266, 0xc2db153c ),
	NORM( 0xbdb7b252, 0x3f3c3c43, 0xbf2bfa2e ),
	VERT( 0x4268180e, 0xc1e1d266, 0xc2db153c ),
	NORM( 0x3c9e6091, 0x3f41f315, 0xbf2704a9 ),
	VERT( 0x424fcce8, 0xc1e48ddc, 0xc2daf2bc ),
	NORM( 0x00000000, 0x3f3fdf54, 0xbf297902 ),
	VERT( 0x424fcce8, 0xc1e48ddc, 0xc2daf2bc ),
	NORM( 0xbdc5240c, 0x3f3d1068, 0xbf2ad4f2 ),
	VERT( 0x00000000, 0xc1e48ddc, 0xc2daf2bc ),
	NORM( 0x00000000, 0x3f41163b, 0xbf281673 ),
	VERT( 0x00000000, 0xc12cc6f1, 0xc2ab148e ),
	NORM( 0x00000000, 0x3f4b99b0, 0xbf1b2fc9 ),
	VERT( 0x42569f2a, 0x411269df, 0xc26cd0d0 ),
	NORM( 0x3e03b2db, 0x3f76cb5f, 0xbe6e2468 ),
	VERT( 0x426de884, 0xc1094340, 0xc2aa0e10 ),
	NORM( 0x3e134725, 0x3f4f5d6f, 0xbf1188a8 ),
	VERT( 0x4252a43e, 0xc1094341, 0xc2aa0e10 ),
	NORM( 0xb3f15bbc, 0x3f4da858, 0xbf187328 ),
	VERT( 0x4252a43e, 0xc1094341, 0xc2aa0e10 ),
	NORM( 0xbe1cb550, 0x3f4718e6, 0xbf1c14de ),
	VERT( 0x42452f73, 0x400af7a6, 0xc28af1a1 ),
	NORM( 0x3b92d3b0, 0x3f537256, 0xbf104f09 ),
	VERT( 0x42452f73, 0x400af7a6, 0xc28af1a1 ),
	NORM( 0xbdf40ee7, 0x3f45f04a, 0xbf1f743f ),
	VERT( 0x3d0e0b6f, 0x4010b763, 0xc28adac4 ),
	NORM( 0x39349b9a, 0x3f3575d3, 0xbf3493cd ),
	VERT( 0x3d0e0b6f, 0x4010b763, 0xc28adac4 ),
	NORM( 0x38c43f2b, 0x3f544ac6, 0xbf0f1111 ),
	VERT( 0x3e1f6009, 0x411269df, 0xc26cd0d0 ),
	NORM( 0x382a8be8, 0x3f77877f, 0xbe829e29 ),
	VERT( 0x427b7dfc, 0xc1e413ac, 0xc2db1131 ),
	NORM( 0x3e05f751, 0x3f419569, 0xbf242217 ),
	VERT( 0x428298f2, 0xc24de4e1, 0xc3062061 ),
	NORM( 0x3dc804ec, 0x3f1abb6a, 0xbf4a685c ),
	VERT( 0xbe1f6009, 0xc24de4e1, 0xc3062061 ),
	NORM( 0x00000000, 0x3f164fcc, 0xbf4f39b8 ),
	VERT( 0x4274102e, 0xc235c10a, 0xc2ff981c ),
	NORM( 0xbc83dde9, 0x3f41d0c9, 0xbf273235 ),
	VERT( 0x4274102e, 0xc235c10a, 0xc2ff981c ),
	NORM( 0x3c79cfb1, 0x3f3a7edf, 0xbf2f5427 ),
	VERT( 0x428e3da0, 0xc300137d, 0x4256b0a2 ),
	NORM( 0xb870737f, 0xbf800000, 0x39394007 ),
	VERT( 0x425c7180, 0xc3001640, 0x4257273d ),
	NORM( 0x38f024b3, 0xbf7ffff7, 0x3a89eb6d ),
	VERT( 0x425c7180, 0xc3001fea, 0x418f4c89 ),
	NORM( 0x38da9b21, 0xbf7fff98, 0xbb668e6c ),
	VERT( 0x43278381, 0xc3001fea, 0x418f4c89 ),
	NORM( 0x3911332d, 0xbf7ffdf7, 0xbc0128b8 ),
	VERT( 0x4328662f, 0xc3001fea, 0x42415bc7 ),
	NORM( 0xb9a19a6d, 0xbf7fffff, 0xb918f72f ),
	VERT( 0x4293e24e, 0xc3001fea, 0x42a1a218 ),
	NORM( 0xb9b68a48, 0xbf7ffff6, 0xba84ba01 ),
	VERT( 0x4328662f, 0xc3001fea, 0x4295cd05 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x42b068b7, 0xc3001fea, 0x42b5d041 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x43246a05, 0xc3001fea, 0x42a5d198 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x431d2446, 0xc3001fea, 0x42b57bf2 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x42978704, 0xc3001fea, 0xc2daf476 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x429f3c8d, 0xc3001fea, 0xc2c42f70 ),
	NORM( 0x3bb422c0, 0xbf7ffe21, 0x3ba9f4c9 ),
	VERT( 0x425c7180, 0xc3001fea, 0xc2c42f70 ),
	NORM( 0x3b070007, 0xbf7fffbd, 0x3afebe0d ),
	VERT( 0x4297ba49, 0xc3001fea, 0xc308b08e ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x428a5c11, 0xc3001fea, 0xc30eafc7 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x4291c97b, 0xc3001fea, 0xc30cbeff ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0xbd964fff, 0xc3001fea, 0xc2c42f70 ),
	NORM( 0x00000000, 0xbf800000, 0x00000000 ),
	VERT( 0x425c7180, 0xc3001fea, 0xc2389177 ),
	NORM( 0x3b123abe, 0xbf7fffaf, 0xbb0d5356 ),
	VERT( 0x43145a4d, 0xc2fe4f0c, 0xc2389177 ),
	NORM( 0x3b15464f, 0xbf7ffba5, 0xbc393516 ),
	VERT( 0x43231c07, 0xc3001fea, 0xc205292f ),
	NORM( 0x3a339725, 0xbf7ff72c, 0xbc86582c ),
	VERT( 0x43262e3b, 0xc3001fea, 0xc1c692d7 ),
	NORM( 0x3a339725, 0xbf7ff72c, 0xbc86582c ),
	VERT( 0xbd964ffd, 0xc3001fea, 0x418f4c89 ),
	NORM( 0xb8ecab51, 0xbf7ffffc, 0x3a376a56 ),
	VERT( 0x4269adfa, 0x40e6bac7, 0xc26cd0d0 ),
	NORM( 0x3f009381, 0x3f530195, 0xbe85dfb7 ),
	VERT( 0x42813db3, 0xc1284fbb, 0xc2ab0674 ),
	NORM( 0x3f0c4fd3, 0x3f36f068, 0xbede8c40 ),
	VERT( 0x428e9fcd, 0xc2271957, 0xc0540e70 ),
	NORM( 0x3e2f58b8, 0x3f296559, 0x3f3ade07 ),
	VERT( 0x4269adfa, 0x41063b95, 0xc25cad15 ),
	NORM( 0x3eb0d9a9, 0x3f64fcf6, 0x3e9158d1 ),
	VERT( 0x42569f2a, 0x410dfeb4, 0xc25e9ddd ),
	NORM( 0x3d8ed9df, 0x3f6a0c24, 0x3ecc57a8 ),
	VERT( 0x425c7180, 0xc2271957, 0xc0540e70 ),
	NORM( 0x390f9c9f, 0x3f237ccd, 0x3f44ff3e ),
	VERT( 0x428f64e1, 0xc255a800, 0xc3062061 ),
	NORM( 0x3f0a74cf, 0x3f03ca18, 0xbf2a4947 ),
	VERT( 0x428f64e1, 0xc265accb, 0xc3080a67 ),
	NORM( 0x3f05ad3a, 0x3e4df6bd, 0xbf542afd ),
	VERT( 0x42839156, 0xc25de9ac, 0xc3080a67 ),
	NORM( 0x3dafff0d, 0x3e9055c3, 0xbf74a14c ),
	VERT( 0x4289bcd1, 0xc1f399ea, 0xc2db1131 ),
	NORM( 0x3f12bb3c, 0x3f26cc66, 0xbefe6f26 ),
	VERT( 0x428a5c11, 0xc30021a4, 0xc30ead78 ),
	NORM( 0x3ddadbfe, 0x3da3d96e, 0xbf7db56c ),
	VERT( 0x4291c97b, 0xc3001fea, 0xc30cbeff ),
	NORM( 0x3f0b380e, 0x3d84e1c3, 0xbf563122 ),
	VERT( 0x425c7180, 0xc3001148, 0x4256aace ),
	NORM( 0x3329e05e, 0x3f0d0fe6, 0x3f55a11b ),
	VERT( 0x428e3da0, 0xc300137d, 0x4256b0a2 ),
	NORM( 0xbf15c53f, 0x3ed6f7af, 0x3f31a103 ),
	VERT( 0x4295085a, 0xc300137c, 0x424eed83 ),
	NORM( 0x3edcd67a, 0x3efd0476, 0x3f413bcb ),
	VERT( 0x42978704, 0xc3001fea, 0xc2daf476 ),
	NORM( 0x3f727945, 0xbbddb85a, 0xbea4305a ),
	VERT( 0x4297b4a3, 0xc2d4cdb8, 0xc2db5864 ),
	NORM( 0x3f48f8b1, 0x3d02d55a, 0xbf1e5d8d ),
	VERT( 0x429f3c8d, 0xc3001fea, 0xc2c42f70 ),
	NORM( 0x3f5181fd, 0x3ca13f8d, 0xbf13070f ),
	VERT( 0x428ebc81, 0xc2938902, 0xc2bcaaf8 ),
	NORM( 0xbf7d2b06, 0x3cd0634b, 0xbe15a40f ),
	VERT( 0x428ecd97, 0xc28e4a23, 0xc2bcaaf8 ),
	NORM( 0xbf43f273, 0x3f1229a9, 0xbe98040a ),
	VERT( 0x4297970f, 0xc295dcde, 0xc2da722a ),
	NORM( 0x3dbd4353, 0x3f245dc8, 0xbf42d553 ),
	VERT( 0x42978687, 0xc29b1d49, 0xc2db9c50 ),
	NORM( 0x3d8dbe41, 0x3eb2d77a, 0xbf6f3834 ),
	VERT( 0x428ecb95, 0xc2734961, 0xc24f6620 ),
	NORM( 0xbf7ffe0f, 0x3bf72741, 0xbac6facc ),
	VERT( 0x428ee547, 0xc25cc4ba, 0xc2513fb3 ),
	NORM( 0xbf33a59e, 0x3f2cd6cf, 0xbe68e1bb ),
	VERT( 0x4299b5de, 0xc2970685, 0xc2c42f70 ),
	NORM( 0x3f5d7af2, 0x3e47e23a, 0xbeec8510 ),
	VERT( 0x42979de1, 0xc28c5b4f, 0xc2c42f70 ),
	NORM( 0x3e580c8d, 0x3f51193a, 0xbf0976e6 ),
	VERT( 0x4304afe1, 0xc272d35d, 0xc24fda8f ),
	NORM( 0x3f139481, 0x3e92d827, 0xbf43dee1 ),
	VERT( 0x42fe6c54, 0xc25cfa53, 0xc2513b27 ),
	NORM( 0x3e9c3a6e, 0x3f3e8aeb, 0xbf1813f0 ),
	VERT( 0x42977b6c, 0xc2a2cdd9, 0xc2db0df9 ),
	NORM( 0x3d68ff9f, 0x3dd38ed5, 0xbf7e36b6 ),
	VERT( 0x428eb10e, 0xc29d8bc8, 0xc2bcaaf8 ),
	NORM( 0xbf7d82df, 0x3aafcccb, 0xbe0e6ed2 ),
	VERT( 0x428ebc4d, 0xc289f7b1, 0xc24ca151 ),
	NORM( 0xbf7fffcd, 0x3b21cba1, 0x38f72c72 ),
	VERT( 0x429b3797, 0xc29d86cf, 0xc2c42f70 ),
	NORM( 0x3f5b5194, 0x3dae6fe5, 0xbf023ae8 ),
	VERT( 0x4307e51c, 0xc289c494, 0xc24d37e4 ),
	NORM( 0x3f1f1a4a, 0x3de3914e, 0xbf468709 ),
	VERT( 0x42976d1e, 0xc2bfff4a, 0xc2dba13a ),
	NORM( 0x3d025613, 0x3d0325e8, 0xbf7fbd32 ),
	VERT( 0x428ea385, 0xc2bcc625, 0xc2bcaaf8 ),
	NORM( 0xbf7d92fd, 0xbbb649d4, 0xbe0c8504 ),
	VERT( 0x428ebbf7, 0xc2b30a34, 0xc245a9f0 ),
	NORM( 0xbf7fff0e, 0xbbaf7744, 0x39bc0a87 ),
	VERT( 0x429c626e, 0xc2bcc0b8, 0xc2c42f70 ),
	NORM( 0x3f5a3d90, 0x3d065f72, 0xbf058db9 ),
	VERT( 0x430bf968, 0xc2b2b661, 0xc245b828 ),
	NORM( 0x3f20fe3c, 0x3d5a312b, 0xbf4692b3 ),
	VERT( 0x428eec4c, 0xc2d4ca5c, 0xc2bcaaf8 ),
	NORM( 0xbf7d8606, 0xbc6bfcdb, 0xbe0d5222 ),
	VERT( 0x428f1764, 0xc2d2c120, 0xc240de72 ),
	NORM( 0xbf7ffb94, 0xbc3e57b9, 0x3826df8a ),
	VERT( 0x429df3ba, 0xc2d48da4, 0xc2c42f70 ),
	NORM( 0x3f568962, 0x3d16965b, 0xbf0b5c60 ),
	VERT( 0x430f13ac, 0xc2d2d2f9, 0xc2400c72 ),
	NORM( 0x3f1f4c54, 0x3d4d72f6, 0xbf47fcf1 ),
	VERT( 0x43104594, 0xc2dca19a, 0xc23dc95f ),
	NORM( 0x3f1e0085, 0x3d883403, 0xbf48b3d7 ),
	VERT( 0x43145a4d, 0xc2fe4f0c, 0xc2389177 ),
	NORM( 0x3f1ee219, 0x3db87573, 0xbf47667c ),
	VERT( 0x428ea5ca, 0xc2c9fe07, 0x425c7cbf ),
	NORM( 0xbf7ddeea, 0x3d89a69c, 0x3de0cbb2 ),
	VERT( 0x428e76df, 0xc2cf32ff, 0x408fd45e ),
	NORM( 0xbf7fffad, 0x3b4e7ee2, 0xb7bf3b85 ),
	VERT( 0x4293e24e, 0xc3001fea, 0x42a1a218 ),
	NORM( 0xbf43ca49, 0x3e92e074, 0x3f13adc2 ),
	VERT( 0x42937b4e, 0xc2c7b736, 0x42823778 ),
	NORM( 0xbf4177fd, 0x3ec6331f, 0x3f0738ec ),
	VERT( 0x42b068b7, 0xc3001fea, 0x42b5d041 ),
	NORM( 0xbe4c7bd4, 0x3f0de341, 0x3f4edbd5 ),
	VERT( 0x42a887a2, 0xc2c7b736, 0x428b58b5 ),
	NORM( 0xbe2c39f4, 0x3f201588, 0x3f4313d3 ),
	VERT( 0x428ef447, 0xc23e1c6e, 0xc1d46b36 ),
	NORM( 0xbf335c8c, 0x3f2f1dff, 0xbe4fd2f1 ),
	VERT( 0x431108cb, 0xc23e9bff, 0xc1d3dfa0 ),
	NORM( 0x3eb50071, 0x3f6878d8, 0xbe65dd33 ),
	VERT( 0x430eb488, 0xc24c9590, 0xc21c8242 ),
	NORM( 0x3ea7ba65, 0x3f494211, 0xbf06281b ),
	VERT( 0x4310ff71, 0xc246e485, 0xc2088592 ),
	NORM( 0x3ec0e5fa, 0x3f5d0733, 0xbeabd0b7 ),
	VERT( 0x428e2c2f, 0xc22a94e0, 0xc11b73a6 ),
	NORM( 0xbf2c1d4d, 0x3f3c1a37, 0xbdb830f1 ),
	VERT( 0x43111002, 0xc22dd986, 0xc11f200f ),
	NORM( 0x3e9ac770, 0x3f6df582, 0xbe583c61 ),
	VERT( 0x4309d2d8, 0xc2294be3, 0xc007ba44 ),
	NORM( 0x3c875a05, 0x3f7dbc0e, 0x3e06deb6 ),
	VERT( 0x430f9c7a, 0xc2294be3, 0xc085fca1 ),
	NORM( 0x3e669463, 0x3f795c57, 0x3cb5de64 ),
	VERT( 0x43111002, 0xc238971e, 0xc19b9c65 ),
	NORM( 0x3eb3558e, 0x3f6951d3, 0xbe5d3033 ),
	VERT( 0x42919ccb, 0xc2294be3, 0xc007ba44 ),
	NORM( 0xbedcf9dd, 0x3f5cf6ae, 0x3e863755 ),
	VERT( 0x428f70eb, 0xc2294be3, 0xc07d478a ),
	NORM( 0xbf25bfb0, 0x3f41b61d, 0x3db9c603 ),
	VERT( 0x428ed5e0, 0xc2552ea9, 0xc1b836c3 ),
	NORM( 0xbf7ffed8, 0x3b9848fe, 0xbb72ec17 ),
	VERT( 0x428edd38, 0xc23fb2e2, 0xc01d4a7b ),
	NORM( 0xbf7e3a4b, 0x3db586a8, 0x3d9ddddd ),
	VERT( 0x428ec4f3, 0xc278c833, 0xc19142b4 ),
	NORM( 0xbf7fffe7, 0x3adc80a6, 0x39a4fcd4 ),
	VERT( 0x428ecc56, 0xc26197c9, 0x412065eb ),
	NORM( 0xbf7cb571, 0x3e048681, 0x3dc01983 ),
	VERT( 0x428ed39d, 0xc2a99fd2, 0xc0b9164d ),
	NORM( 0xbf7fffe2, 0xbaf978c3, 0xb84c29e1 ),
	VERT( 0x428eeab8, 0xc2a06d29, 0x42135b6c ),
	NORM( 0xbf7d2660, 0x3ddf6c69, 0x3dcf40ea ),
	VERT( 0x4317f338, 0xc24c12cd, 0xc15c9121 ),
	NORM( 0x3f5a345e, 0x3f01ae9d, 0xbe04fc63 ),
	VERT( 0x4317e82d, 0xc255375c, 0xc1ba45cb ),
	NORM( 0x3f586f7f, 0x3f04a681, 0xbe046533 ),
	VERT( 0x4317dbc9, 0xc25f472d, 0xc2041ce6 ),
	NORM( 0x3f54c666, 0x3eecaa35, 0xbe9e3e4b ),
	VERT( 0x431ad678, 0xc26df7b4, 0xc09ee454 ),
	NORM( 0x3f7a30be, 0x3e5340ce, 0xbd44f30a ),
	VERT( 0x431aca51, 0xc27954a9, 0xc19146a4 ),
	NORM( 0x3f794907, 0x3e6202ef, 0xbd626f06 ),
	VERT( 0x431abe8c, 0xc282385d, 0xc1fdf528 ),
	NORM( 0x3f71dca7, 0x3e4b8381, 0xbe856b6c ),
	VERT( 0x431f4e41, 0xc2a4facc, 0x41882c58 ),
	NORM( 0x3f7bc04d, 0x3e380c6f, 0xbccaf751 ),
	VERT( 0x431f3140, 0xc2a8ef59, 0xc0bf1f0d ),
	NORM( 0x3f7b4bf8, 0x3e402edc, 0xbd0ce64f ),
	VERT( 0x431f13d3, 0xc2af6625, 0xc1ea6a25 ),
	NORM( 0x3f73b101, 0x3e2d28d0, 0xbe82ca25 ),
	VERT( 0x4323c781, 0xc2cce957, 0x42012a56 ),
	NORM( 0x3f7bd3dd, 0x3e36c6dd, 0xbcb1e335 ),
	VERT( 0x4323509b, 0xc2ceea3d, 0x4082bb64 ),
	NORM( 0x3f7c3521, 0x3e2e2e3d, 0xbcb2abca ),
	VERT( 0x43232ba2, 0xc2d26db6, 0xc1d9bedc ),
	NORM( 0x3f756a38, 0x3e1f0a20, 0xbe742f8b ),
	VERT( 0x4324bab7, 0xc2e235d8, 0x411b1f74 ),
	NORM( 0x3f7d1073, 0x3e187424, 0xbccf0484 ),
	VERT( 0x43262e3b, 0xc3001fea, 0xc1c692d7 ),
	NORM( 0x3f7a7789, 0x3df4c6c8, 0xbe2ccb93 ),
	VERT( 0x43278381, 0xc3001fea, 0x418f4c89 ),
	NORM( 0x3f7c7e88, 0x3e2589cd, 0xbd05d449 ),
	VERT( 0x4328662f, 0xc3001fea, 0x42415bc7 ),
	NORM( 0x3f7c6eeb, 0x3e29c39d, 0xbc5f8b5f ),
	VERT( 0x43155b54, 0xc264f838, 0xc217620e ),
	NORM( 0x3f3146e8, 0x3ebe3ea9, 0xbf1e4e30 ),
	VERT( 0x43183a4d, 0xc28510e2, 0xc215fc1f ),
	NORM( 0x3f457c07, 0x3e109596, 0xbf1ed664 ),
	VERT( 0x431b0ece, 0xc2afcb2e, 0xc212eadb ),
	NORM( 0x3f45666b, 0x3dcd2771, 0xbf20f884 ),
	VERT( 0x431f0997, 0xc2d3a3e9, 0xc20d9089 ),
	NORM( 0x3f45ad3a, 0x3de21a89, 0xbf2030e2 ),
	VERT( 0x43231c07, 0xc3001fea, 0xc205292f ),
	NORM( 0x3f53084c, 0x3dc7f7b0, 0xbf0ebf12 ),
	VERT( 0x4317f338, 0xc23fb2e2, 0xc02f6e7d ),
	NORM( 0x3f5151af, 0x3f132364, 0xbd07a279 ),
	VERT( 0x43165a7f, 0xc23b253f, 0x408de802 ),
	NORM( 0x3f1467cc, 0x3f447bd6, 0x3e8c15ce ),
	VERT( 0x4311f682, 0xc23b253f, 0x40df8a26 ),
	NORM( 0x3e1b2b10, 0x3f61315f, 0x3ee6d1ab ),
	VERT( 0x42924987, 0xc23cc792, 0x40df8a26 ),
	NORM( 0xbeda4f2a, 0x3f44be99, 0x3ef43c87 ),
	VERT( 0x42920eaa, 0xc23b253f, 0x4096fa0e ),
	NORM( 0xbf6cc7e8, 0x3e95d699, 0x3e7872fd ),
	VERT( 0x431ad678, 0xc26197c9, 0x4119f882 ),
	NORM( 0x3f71039f, 0x3ea68d11, 0x3db542f1 ),
	VERT( 0x4318015f, 0xc25d0a26, 0x41848e34 ),
	NORM( 0x3f279481, 0x3f27cf9f, 0x3ec0cb3e ),
	VERT( 0x43139625, 0xc25d0a26, 0x41a17a97 ),
	NORM( 0x3e51cbf8, 0x3f4cabd9, 0x3f108cd7 ),
	VERT( 0x4296c034, 0xc25d0a26, 0x41a17a97 ),
	NORM( 0xbe8740b2, 0x3f45d4fd, 0x3f13bbc6 ),
	VERT( 0x4292030b, 0xc25d0a26, 0x4187c4ec ),
	NORM( 0xbf57a85f, 0x3edb560d, 0x3ea7570e ),
	VERT( 0x431f4e41, 0xc2a06d29, 0x4211593b ),
	NORM( 0x3f728c6e, 0x3e9cbec8, 0x3dbdfa5d ),
	VERT( 0x431d4c0f, 0xc29e2658, 0x42345d4d ),
	NORM( 0x3f3778bb, 0x3f131abc, 0x3eca54bd ),
	VERT( 0x4317c607, 0xc29e2658, 0x4246710b ),
	NORM( 0x3e6c92cc, 0x3f3a295c, 0x3f257992 ),
	VERT( 0x42a157f7, 0xc29e2658, 0x4246710b ),
	NORM( 0xbe37147d, 0x3f363310, 0x3f2de8cb ),
	VERT( 0x4292d750, 0xc29e2658, 0x42365f80 ),
	NORM( 0xbf3e66aa, 0x3ef81ca6, 0x3eebbdf2 ),
	VERT( 0x4323c781, 0xc2c9fe07, 0x425a3470 ),
	NORM( 0x3f76a122, 0x3e80a200, 0x3dbf8db1 ),
	VERT( 0x43217f31, 0xc2c7b736, 0x4281134f ),
	NORM( 0x3f45cdf8, 0x3eed88a4, 0x3eddd846 ),
	VERT( 0x431b3856, 0xc2c7b736, 0x428b58b5 ),
	NORM( 0x3e8ab388, 0x3f225ab2, 0x3f39628c ),
	VERT( 0x4328662f, 0xc3001fea, 0x4295cd05 ),
	NORM( 0x3f631625, 0x3eba6260, 0x3e915e28 ),
	VERT( 0x43246a05, 0xc3001fea, 0x42a5d198 ),
	NORM( 0x3f3b13ff, 0x3ee204ae, 0x3f054ab6 ),
	VERT( 0x431d2446, 0xc3001fea, 0x42b57bf2 ),
	NORM( 0x3e953844, 0x3f136d67, 0x3f43895b ),
	VERT( 0x42b09063, 0xc23c7358, 0x40df8a26 ),
	NORM( 0x3f4ebcea, 0x3eabd926, 0x3ef84b3e ),
	VERT( 0x42b09063, 0xc23c7358, 0x40df8a26 ),
	NORM( 0xbb80e44e, 0x3f5e9bdc, 0x3efcd390 ),
	VERT( 0x430bf89f, 0xc25d0a26, 0x41a17a97 ),
	NORM( 0x3bd9d9b6, 0x3f4ea4d1, 0x3f1719cb ),
	VERT( 0x430bf89f, 0xc25d0a26, 0x41a17a97 ),
	NORM( 0xbf69dcb1, 0x3e595eae, 0x3eb1aadb ),
	VERT( 0x42b092da, 0xc25c902d, 0x41a17a97 ),
	NORM( 0xbbcaf682, 0x3f5144d7, 0x3f1371e8 ),
	VERT( 0x42b092da, 0xc25c902d, 0x41a17a97 ),
	NORM( 0x3f4ebcea, 0x3eabd926, 0x3ef84b3e ),
	VERT( 0x42b0879d, 0xc29d1fa8, 0x4243e7e6 ),
	NORM( 0x3f24cb05, 0x3f3a63f8, 0x3e7141f9 ),
	VERT( 0x42b0879d, 0xc29d1fa8, 0x4243e7e6 ),
	NORM( 0x3c6e0b5d, 0x3f2f5b59, 0x3f3a7911 ),
	VERT( 0x430c0176, 0xc29d1fa8, 0x4243e7e6 ),
	NORM( 0xbf583cde, 0x3ef33ea2, 0x3e7c83d3 ),
	VERT( 0x430c0176, 0xc29d1fa8, 0x4243e7e6 ),
	NORM( 0xbc1db74e, 0x3f2eaf31, 0x3f3b1fb0 ),
	VERT( 0x42b4d697, 0xc2a06c5e, 0x424a6fea ),
	NORM( 0x3e855aef, 0x3f76a71a, 0x3d7e41d6 ),
	VERT( 0x42b4d697, 0xc2a06c5e, 0x424a6fea ),
	NORM( 0xbd696591, 0x3f345363, 0x3f351fb4 ),
	VERT( 0x42b0b0f0, 0xc22f8b00, 0x3f590915 ),
	NORM( 0x3f23a25c, 0x3e8bec46, 0x3f38066d ),
	VERT( 0x42b0b0f0, 0xc22f8b00, 0x3f590915 ),
	NORM( 0x395256c5, 0x3f62ac68, 0x3eedf366 ),
	VERT( 0x42b65e9a, 0xc22b6871, 0xbf902709 ),
	NORM( 0x3e84252e, 0x3dde031d, 0x3f75c3c0 ),
	VERT( 0x42b65e9a, 0xc22b6871, 0xbf902709 ),
	NORM( 0x3868ae84, 0x3f62435a, 0x3eef8208 ),
	VERT( 0x42b21ff4, 0xc29edd4d, 0x4246710b ),
	NORM( 0xbc414086, 0x3f2d8bf6, 0x3f3c2bd7 ),
	VERT( 0x42b21ff4, 0xc29edd4d, 0x4246710b ),
	NORM( 0x3f0a8ab3, 0x3f54d597, 0x3e0139fc ),
	VERT( 0x430a1998, 0xc22b451d, 0xbf8ef558 ),
	NORM( 0xbd0e4c0d, 0xbd1693c3, 0x3f7fac1d ),
	VERT( 0x430a1998, 0xc22b451d, 0xbf8ef558 ),
	NORM( 0x3ddc1e78, 0x3f67565e, 0x3ed43ea4 ),
	VERT( 0x4309d5e7, 0xc2a06c5e, 0x424a6fea ),
	NORM( 0x3d092d23, 0x3f360b28, 0x3f33c8f3 ),
	VERT( 0x4309d5e7, 0xc2a06c5e, 0x424a6fea ),
	NORM( 0xbeda5750, 0x3f65d568, 0x3de1779c ),
	VERT( 0x430bf7ea, 0xc2302386, 0x3f624b67 ),
	NORM( 0xbf107fa6, 0x3dbd1293, 0x3f51fe86 ),
	VERT( 0x430bf7ea, 0xc2302386, 0x3f624b67 ),
	NORM( 0xbe73057c, 0x3f462327, 0x3f1649a6 ),
	VERT( 0x430b55f2, 0xc29edd4d, 0x4246710b ),
	NORM( 0xbf4d21a4, 0x3f0ff5e9, 0x3e511777 ),
	VERT( 0x430b55f2, 0xc29edd4d, 0x4246710b ),
	NORM( 0x3c9c21a4, 0x3f2e971b, 0x3f3b2a09 ),
	VERT( 0x430c0794, 0xc23a4870, 0x40df8a26 ),
	NORM( 0xbf69dcb1, 0x3e595eaf, 0x3eb1aadb ),
	VERT( 0x430c0794, 0xc23a4870, 0x40df8a26 ),
	NORM( 0x3cc1c11c, 0x3f623410, 0x3eef6d6b ),
	VERT( 0x42c56d69, 0xc268e394, 0xbfb4d831 ),
	NORM( 0x3f3aef6e, 0xbf2c6638, 0xbdebec6b ),
	VERT( 0x42c45fd7, 0xc26c1247, 0xbfb4d831 ),
	NORM( 0x3f442c44, 0xbe5a698e, 0xbf1b25b7 ),
	VERT( 0x42c45fd7, 0xc29d45da, 0x41050b35 ),
	NORM( 0x3f3e4b82, 0x3f0fbb8f, 0x3eba2b5b ),
	VERT( 0x42c56d69, 0xc2a039a5, 0x410e4921 ),
	NORM( 0x3e776bc2, 0x3e94c8de, 0xbf6d03a0 ),
	VERT( 0x43014cfa, 0xc268e394, 0xbfb4d831 ),
	NORM( 0xbe5d5a0c, 0xbf5685c3, 0x3f0045bb ),
	VERT( 0x43014cfa, 0xc2a039a5, 0x410e4921 ),
	NORM( 0xbebc36ac, 0x3e4f033d, 0xbf6861dd ),
	VERT( 0x4301f76f, 0xc26c1247, 0xbfb4d831 ),
	NORM( 0xbf51b4d4, 0xbeb9c9c9, 0xbee36b6e ),
	VERT( 0x4301f76f, 0xc29d45da, 0x41050b35 ),
	NORM( 0xbf680c6e, 0x3eae8afa, 0x3e7f4910 ),
	VERT( 0x430627ec, 0xc2467d18, 0xc208e29c ),
	NORM( 0xbe9fb09a, 0x3f2e17c0, 0x3f29dc37 ),
	VERT( 0x430627ec, 0xc2467d18, 0xc208e29c ),
	NORM( 0x3c93c128, 0x3f73e9d0, 0xbe9b3093 ),
	VERT( 0x43077521, 0xc24506af, 0xc203e616 ),
	NORM( 0xbf1a02ed, 0x3f1fc89e, 0x3eff3b07 ),
	VERT( 0x43077521, 0xc24506af, 0xc203e616 ),
	NORM( 0x3d1229d6, 0x3f7497b7, 0xbe9606ca ),
	VERT( 0x42b4c4ad, 0xc22e9da6, 0xc1033950 ),
	NORM( 0x3d0f267e, 0x3f7e29c7, 0xbdea330d ),
	VERT( 0x42b4c4ad, 0xc22e9da6, 0xc1033950 ),
	NORM( 0x3f7e6649, 0x3dbcc1aa, 0xbd81097c ),
	VERT( 0x42b4d11f, 0xc2437e2e, 0xc1f836eb ),
	NORM( 0x3d07e3ea, 0x3f7cb45f, 0xbe203690 ),
	VERT( 0x42b4d11f, 0xc2437e2e, 0xc1f836eb ),
	NORM( 0x3f554c7b, 0x3ef701eb, 0x3e8a5e5a ),
	VERT( 0x42b4f26b, 0xc22fd511, 0xc161caa2 ),
	NORM( 0x3cd1c27f, 0x3f7b975e, 0xbe3b65bd ),
	VERT( 0x42b4f26b, 0xc22fd511, 0xc161caa2 ),
	NORM( 0x3f7e6649, 0x3dbcc1aa, 0xbd81097c ),
	VERT( 0x42b4f20c, 0xc22d1961, 0xc0cdc170 ),
	NORM( 0x3a558884, 0x3f7a2ab9, 0xbe5958dd ),
	VERT( 0x42b4f20c, 0xc22d1961, 0xc0cdc170 ),
	NORM( 0x3f7e6649, 0x3dbcc1aa, 0xbd81097c ),
	VERT( 0x42b59925, 0xc22c1e3a, 0xc0aa2e36 ),
	NORM( 0x3f658552, 0x3d9d7690, 0xbedf53d7 ),
	VERT( 0x42b59925, 0xc22c1e3a, 0xc0aa2e36 ),
	NORM( 0x340b17a4, 0x3f79fd0b, 0xbe5c9bf0 ),
	VERT( 0x42b937fb, 0xc22a8166, 0xc05f68f3 ),
	NORM( 0x350d0b80, 0x3f79fccb, 0xbe5ca077 ),
	VERT( 0x42b937fb, 0xc22a8166, 0xc05f68f3 ),
	NORM( 0x3ec6786a, 0x3c13a374, 0xbf6bf8fb ),
	VERT( 0x42bcc2a5, 0xc246374e, 0xc209059f ),
	NORM( 0x3ebabf32, 0x3f3146d5, 0x3f1f57f5 ),
	VERT( 0x42bcc2a5, 0xc246374e, 0xc209059f ),
	NORM( 0xbd09f6da, 0x3f6f5a14, 0xbeb4cd4a ),
	VERT( 0x42b9d1c5, 0xc244bce5, 0xc2040e75 ),
	NORM( 0x3f2b1faf, 0x3f1fa118, 0x3ecf917f ),
	VERT( 0x42b9d1c5, 0xc244bce5, 0xc2040e75 ),
	NORM( 0xbc297834, 0x3f75b75e, 0xbe8f8fd6 ),
	VERT( 0x4309aacd, 0xc22c1e39, 0xc0aa2e36 ),
	NORM( 0xb9a42565, 0x3f79fd42, 0xbe5c9802 ),
	VERT( 0x4309aacd, 0xc22c1e39, 0xc0aa2e36 ),
	NORM( 0xbf6831b2, 0x3d74ce46, 0xbed56d5b ),
	VERT( 0x4307d9bf, 0xc22a8469, 0xc05f670c ),
	NORM( 0xbec37789, 0xbc21a6d4, 0xbf6c98a4 ),
	VERT( 0x4307d9bf, 0xc22a8469, 0xc05f670c ),
	NORM( 0xba0437b0, 0x3f79e9d6, 0xbe5df6f1 ),
	VERT( 0x430944ac, 0xc2441163, 0xc1f9a363 ),
	NORM( 0xbf4735ca, 0x3f00d664, 0x3ec0608b ),
	VERT( 0x430944ac, 0xc2441163, 0xc1f9a363 ),
	NORM( 0xbe3aed61, 0x3f7b9639, 0x3cefecb2 ),
	VERT( 0x4309d8f3, 0xc237102b, 0xc18dc445 ),
	NORM( 0xba91ff43, 0x3f79bc55, 0xbe6123fb ),
	VERT( 0x4309d8f3, 0xc237102b, 0xc18dc445 ),
	NORM( 0xbf7ed435, 0x3dc370da, 0xbb966b63 ),
	VERT( 0x42c3138e, 0xc27cf928, 0xc1b1e2e7 ),
	NORM( 0x3ecb48b3, 0x3ecb25ee, 0x3f53ddf1 ),
	VERT( 0x42c3138e, 0xc27cf928, 0xc1b1e2e7 ),
	NORM( 0x3ebc1d0c, 0x3f3116cb, 0x3f1f2677 ),
	VERT( 0x42b8a33b, 0xc2743f20, 0xc1750e51 ),
	NORM( 0x3f72186c, 0x3e9c0a55, 0x3de7adca ),
	VERT( 0x42b8a33b, 0xc2743f20, 0xc1750e51 ),
	NORM( 0x3f6deeba, 0x3e18c76f, 0x3eaccdb9 ),
	VERT( 0x42b6d18b, 0xc2d93382, 0x40f11c1b ),
	NORM( 0x3f706664, 0x3e0d2209, 0x3ea13b6b ),
	VERT( 0x42b6d18b, 0xc2d93382, 0x40f11c1b ),
	NORM( 0x3cce0eee, 0x3f6ad5c2, 0xbecb70e5 ),
	VERT( 0x42c3138e, 0xc2dee03c, 0x3f90345c ),
	NORM( 0x3ed5558f, 0x3ec91add, 0x3f51dfe3 ),
	VERT( 0x42c3138e, 0xc2dee03c, 0x3f90345c ),
	NORM( 0x3bc7fe0b, 0x3f6ac49f, 0xbecc21ef ),
	VERT( 0x42b8a33b, 0xc261d2d5, 0xc099c989 ),
	NORM( 0x3f6e1c6f, 0x3da68caf, 0xbeb75d7e ),
	VERT( 0x42b8a33b, 0xc261d2d5, 0xc099c989 ),
	NORM( 0x3f673dc4, 0xbe4a9347, 0xbec2ec1e ),
	VERT( 0x42b6d18b, 0xc2cffd5d, 0x41905bcd ),
	NORM( 0x3cce0eef, 0x3f6ad5c2, 0xbecb70e5 ),
	VERT( 0x42b6d18b, 0xc2cffd5d, 0x41905bcd ),
	NORM( 0x3f64ca09, 0xbe53096c, 0xbecc09f6 ),
	VERT( 0x42bc49f9, 0xc25eea27, 0xc03e4a4a ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42bc49f9, 0xc25eea27, 0xc03e4a4a ),
	NORM( 0x3ec48130, 0x3c0b39fe, 0xbf6c627f ),
	VERT( 0x42bc49f9, 0xc25eea27, 0xc03e4a4a ),
	NORM( 0x3ed93093, 0xbecbed71, 0xbf5032c6 ),
	VERT( 0x42bc49f9, 0xc2ce6b0e, 0x41a0418a ),
	NORM( 0x3c32189a, 0x3f6acaf7, 0xbecbf76d ),
	VERT( 0x42bc49f9, 0xc2ce6b0e, 0x41a0418a ),
	NORM( 0x3ea41fc4, 0xbed40c07, 0xbf5a15a0 ),
	VERT( 0x43038936, 0xc27cf928, 0xc1b1e2e7 ),
	NORM( 0xbecfd856, 0x3ecaaf16, 0x3f52de93 ),
	VERT( 0x43038936, 0xc27cf928, 0xc1b1e2e7 ),
	NORM( 0xbea77d90, 0x3f2dd57f, 0x3f283d47 ),
	VERT( 0x43038936, 0xc2dee03c, 0x3f90345c ),
	NORM( 0xbeda2cdf, 0x3ec88d2f, 0x3f50c283 ),
	VERT( 0x43038936, 0xc2dee03c, 0x3f90345c ),
	NORM( 0xbbc68bef, 0x3f6ac4ac, 0xbecc21c9 ),
	VERT( 0x4308c160, 0xc261d2d5, 0xc099c989 ),
	NORM( 0xbf720123, 0x3d8f3762, 0xbea3165a ),
	VERT( 0x4308c160, 0xc261d2d5, 0xc099c989 ),
	NORM( 0xbf66fc4d, 0xbe4a4b32, 0xbec43438 ),
	VERT( 0x4308c160, 0xc2743f20, 0xc1750e51 ),
	NORM( 0xbf6ee806, 0x3e169664, 0x3ea7d6bf ),
	VERT( 0x4308c160, 0xc2743f20, 0xc1750e51 ),
	NORM( 0xbf6f607e, 0x3e9b07cb, 0x3e3cb9bb ),
	VERT( 0x43098784, 0xc2d918f8, 0x40f51772 ),
	NORM( 0xbf714c67, 0x3e0af628, 0x3e9c4222 ),
	VERT( 0x43098784, 0xc2d918f8, 0x40f51772 ),
	NORM( 0xbcd27e6d, 0x3f6ad66b, 0xbecb694f ),
	VERT( 0x43098784, 0xc2cfe2d2, 0x41915aa3 ),
	NORM( 0xbcd27e6d, 0x3f6ad66b, 0xbecb6950 ),
	VERT( 0x43098784, 0xc2cfe2d2, 0x41915aa3 ),
	NORM( 0xbf644520, 0xbe53a702, 0xbece31af ),
	VERT( 0x4306ee00, 0xc25eea27, 0xc03e4a4a ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x4306ee00, 0xc25eea27, 0xc03e4a4a ),
	NORM( 0xbecd8407, 0xbecf0e23, 0xbf5260bd ),
	VERT( 0x4306ee00, 0xc25eea27, 0xc03e4a4a ),
	NORM( 0xbecb2412, 0xbc0c6d70, 0xbf6afa5a ),
	VERT( 0x4306ee00, 0xc2ce6b0e, 0x41a0418a ),
	NORM( 0xbea26fff, 0xbed458c9, 0xbf5a53bd ),
	VERT( 0x4306ee00, 0xc2ce6b0e, 0x41a0418a ),
	NORM( 0xbc36998a, 0x3f6acb81, 0xbecbf3f3 ),
	VERT( 0x42fa3763, 0xc2466d38, 0xc208ea93 ),
	NORM( 0xbf0b6727, 0x3f113538, 0x3f1e2b50 ),
	VERT( 0x42fa3763, 0xc2466d38, 0xc208ea93 ),
	NORM( 0x3af8073f, 0x3f746865, 0xbe9852c4 ),
	VERT( 0x42eb2852, 0xc27d156f, 0xc1b1f234 ),
	NORM( 0xbdac878f, 0x3f4a8bc9, 0x3f1b1158 ),
	VERT( 0x42e05a25, 0xc27d1b97, 0xc1b1e040 ),
	NORM( 0xba7eb52e, 0x3f4cc0b6, 0x3f19a9a9 ),
	VERT( 0x42d1437f, 0xc246494b, 0xc208fc99 ),
	NORM( 0x3ab0a8e3, 0x3f28dbe4, 0x3f406994 ),
	VERT( 0x42d1437f, 0xc246494b, 0xc208fc99 ),
	NORM( 0x3af7f21c, 0x3f74687b, 0xbe985234 ),
	VERT( 0x42d1437f, 0xc246494b, 0xc208fc99 ),
	NORM( 0x3f5d3b65, 0x3eb66200, 0x3eb5f36a ),
	VERT( 0x42f5e834, 0xc24976c2, 0xc212b7c6 ),
	NORM( 0xbe962faf, 0x3f327ab9, 0x3f277536 ),
	VERT( 0x42f5e834, 0xc24976c2, 0xc212b7c6 ),
	NORM( 0x3af7e00b, 0x3f746864, 0xbe9852c9 ),
	VERT( 0x42f146ca, 0xc24b05f2, 0xc217c7df ),
	NORM( 0xbe37bef7, 0x3f420656, 0x3f208fef ),
	VERT( 0x42f146ca, 0xc24b05f2, 0xc217c7df ),
	NORM( 0x3af7f823, 0x3f746865, 0xbe9852c4 ),
	VERT( 0x42ebc087, 0xc24c02b5, 0xc21b04fc ),
	NORM( 0xbda6be5b, 0x3f4abb1d, 0x3f1aeccc ),
	VERT( 0x42ebc087, 0xc24c02b5, 0xc21b04fc ),
	NORM( 0x3af7f0cc, 0x3f746865, 0xbe9852c7 ),
	VERT( 0x42e5c12f, 0xc24c56b5, 0xc21c2612 ),
	NORM( 0x3af7e630, 0x3f746863, 0xbe9852d0 ),
	VERT( 0x42e5c12f, 0xc24c56b5, 0xc21c2612 ),
	NORM( 0xbcbcafe1, 0x3f4df357, 0x3f17f082 ),
	VERT( 0x42da3b1e, 0xc24af5d5, 0xc217df2e ),
	NORM( 0x386b8379, 0x3f47e9d3, 0x3f1fe882 ),
	VERT( 0x42da3b1e, 0xc24af5d5, 0xc217df2e ),
	NORM( 0x3af7bb6c, 0x3f74685c, 0xbe985300 ),
	VERT( 0x42d59942, 0xc2496014, 0xc212d82a ),
	NORM( 0xbbd9b217, 0x3f3f3471, 0x3f2a378b ),
	VERT( 0x42d59942, 0xc2496014, 0xc212d82a ),
	NORM( 0x3af7ef19, 0x3f746863, 0xbe9852d3 ),
	VERT( 0x42f90710, 0xc27cff54, 0xc1b1d7d1 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42f90710, 0xc27cff54, 0xc1b1d7d1 ),
	NORM( 0xbe09afae, 0x3f2d221b, 0x3f396864 ),
	VERT( 0x42f950bd, 0xc2477714, 0xc20c42ac ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42f950bd, 0xc2477714, 0xc20c42ac ),
	NORM( 0xbf127f14, 0x3f1221c3, 0x3f16bb84 ),
	VERT( 0x42f950bd, 0xc2477714, 0xc20c42ac ),
	NORM( 0x3af820fe, 0x3f746865, 0xbe9852c3 ),
	VERT( 0x42f4e4b0, 0xc27d018c, 0xc1b1c71f ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42f4e4b0, 0xc27d018c, 0xc1b1c71f ),
	NORM( 0xbe5708bc, 0x3f32b29c, 0x3f2f406f ),
	VERT( 0x42f051d4, 0xc27d05e6, 0xc1b1d697 ),
	NORM( 0xbe3e55af, 0x3f414803, 0x3f20fa8b ),
	VERT( 0x42e5c12f, 0xc27d01be, 0xc1b1cbbc ),
	NORM( 0xbcbcb91e, 0x3f4df34c, 0x3f17f08d ),
	VERT( 0x42dfc1b8, 0xc24bfa57, 0xc21b112e ),
	NORM( 0x3af7e4e3, 0x3f746863, 0xbe9852d1 ),
	VERT( 0x42dfc1b8, 0xc24bfa57, 0xc21b112e ),
	NORM( 0xbac1940c, 0x3f4cd9c4, 0x3f198830 ),
	VERT( 0x42db30cb, 0xc27d0ecf, 0xc1b1bcd2 ),
	NORM( 0xba7ed036, 0x3f478082, 0x3f206bc7 ),
	VERT( 0x42d6696e, 0xc27d1050, 0xc1b206a5 ),
	NORM( 0x00000000, 0x00000000, 0x00000000 ),
	VERT( 0x42d6696e, 0xc27d1050, 0xc1b206a5 ),
	NORM( 0xbb9087f6, 0x3f3a1c5c, 0x3f2fc6e0 ),
	VERT( 0x42d2b134, 0xc27d1533, 0xc1b2040c ),
	NORM( 0x39c0abbd, 0x3f30cf07, 0x3f39225c ),
	VERT( 0x42d2b134, 0xc27d1533, 0xc1b2040c ),
	NORM( 0x3f5d3b65, 0x3eb66201, 0x3eb5f369 ),
	VERT( 0x42d2304c, 0xc2475b79, 0xc20c6976 ),
	NORM( 0x3af7e22a, 0x3f74685f, 0xbe9852eb ),
	VERT( 0x42d2304c, 0xc2475b79, 0xc20c6976 ),
	NORM( 0x3f5d3b65, 0x3eb66200, 0x3eb5f369 ),
	VERT( 0x42d2304c, 0xc2475b79, 0xc20c6976 ),
	NORM( 0xbab3553e, 0x3f37d9e9, 0x3f322461 ),
	CnkEnd()
END

CNKMODEL   model_Racing_Cont_Unite[]
START
VList      vertex_Racing_Cont_Unite,
PList      strip_Racing_Cont_Unite,
Center       0.000000F, -59.490280F, -25.889942F,
Radius      204.938385F,
END

CNKOBJECT  object_Racing_Cont_Unite[]
START
EvalFlags ( 0x00000027 ),
CNKModel   model_Racing_Cont_Unite,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       object_Racing_Cont_Handle,
Sibling     NULL,
END

CNKOBJECT_END


DEFAULT_START

#ifndef DEFAULT_OBJECT_NAME
#define DEFAULT_OBJECT_NAME object_Racing_Cont_Unite
#endif

DEFAULT_END


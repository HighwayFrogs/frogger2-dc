%!PS-Adobe-2.0 EPSF-1.2
%%Title: Untitled-1
%%Creator: FreeHand 8.0
%%CreationDate: 8/20/98 10:26 AM
%%BoundingBox: 0 0 54 19
%%FHPathName:Macintosh HD:SOFTWARE:Freehand 8:Untitled-1
%ALDOriginalFile:Macintosh HD:SOFTWARE:Freehand 8:Untitled-1
%ALDBoundingBox: -208 -713 404 79
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
 /cntr 0 def
 
2 copy readstring
 {
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get 32 sub 0 exch put 
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub 
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
 }if
 cntr 0 gt
 {
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
 } if
 pop exch pop
} bdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 /MMdict_count countdictstack def
 /MMop_count count 1 sub def
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RCJ{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCJ} 
 ifelse
}bdf
/hasfont
{
 /resourcestatus where 
 {
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
 }
 {
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
 }
 ifelse
}bdf
/FDFJ
{
 dup   
 hasfont  
 not   
 {   
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFJ{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/GS {
 dup 
 hasfont 
 {
FFJ
curtextmtx makefont setfont
exch
5 1 roll
ts
pop
 } {
pop pop
ts
 } ifelse
} bdf
/RCK{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFK 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFK{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCK} 
 ifelse
}bdf
/hasfont
{
 /resourcestatus where 
 {
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
 }
 {
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
 }
 ifelse
}bdf
/FDFK
{
 dup   
 hasfont  
 not   
 {   
pop
/JCsm
hasfont 
{
/JCsm
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFK{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFK 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/RCTC{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFTC 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFTC{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCTC} 
 ifelse
}bdf
/FDFTC
{
 dup   
 hasfont  
 not   
 {   
pop
/DFMing-Lt-HK-BF
hasfont 
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFTC{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFTC 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
 /Helvetica findfont 
} def
end %. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh 
_efh 
end %. AltsysDict
%%EndSetup
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
 
 userdict /islevel2
 systemdict /languagelevel known dup
 {
pop systemdict /languagelevel get 2 ge
 } if
 put
 
 islevel2 not
 {
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
 } if
 
 /tc
 {
gsave
setcmykcolor currentcmykcolor
grestore
 } bind def
 /testCMYKColorThrough
 {
tc add add add 0 ne
 } bind def
 /fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
 }
 { pop }
 ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
 1 pop 
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfs6 {
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius inrad sub abs   
 adjnumsteps      
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf    
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfp6 {
 1 pop 
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor     
 calcgraysteps mul abs round 
 radius inrad sub abs  
 adjnumsteps     
 dup 1 lt {pop 1} if   
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf   
 currentflat mark   
 currentflat clipflatness 
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length dup 4 eq
 {pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
 {6 eq {sethexcolor} {setspotcolor} ifelse }
 ifelse
}bdf 
0 setseparationgray
/imgr {1692 1584 2304 2376 } def 
/bleed 0 def 
/clpr {1692 1584 2304 2376 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 
 userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-1900 -2297 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1] vc
vms
true eomode
1900.6675 2305.0143 m
1900.6675 2303.8309 L
1909.4042 2303.8309 L
1909.4042 2305.0144 L
1900.6675 2305.0143 L
h
1910.1483 2305.0143 m
1910.1483 2303.8309 L
1918.885 2303.8309 L
1918.885 2305.0144 L
1910.1483 2305.0143 L
h
1921.2132 2305.0143 m
1921.2132 2303.8309 L
1953.28 2303.8309 L
1953.2824 2305.0144 L
1952.4639 2305.0143 L
1952.4639 2304.647 L
1922.0053 2304.647 L
1922.0053 2305.0144 L
1921.2132 2305.0143 L
h
1953.424 2299.6306 m
1953.424 2300.3986 1953.208 2300.9987 1952.776 2301.4307 C
1952.3439 2301.8628 1951.7439 2302.0788 1950.9998 2302.0788 C
1948.8636 2302.0788 L
1948.8636 2297.1344 L
1950.9998 2297.1344 L
1951.7439 2297.1344 1952.3439 2297.3504 1952.776 2297.7824 C
1953.208 2298.2144 1953.424 2298.8385 1953.424 2299.6306 C
h
1946.2234 2297.1344 m
1946.2234 2302.0788 L
1944.9993 2302.0788 L
1944.9993 2299.0305 L
1943.2711 2302.0788 L
1941.951 2302.0788 L
1941.951 2297.1344 L
1943.1511 2297.1344 L
1943.1751 2300.2066 L
1944.9033 2297.1344 L
1946.2234 2297.1344 L
h
1939.3588 2299.1745 m
1939.3588 2302.0788 L
1938.0627 2302.0788 L
1938.0627 2299.0785 L
1938.0627 2298.4305 1937.7747 2298.1184 1937.1986 2298.1184 C
1936.5986 2298.1184 1936.3105 2298.4305 1936.3105 2299.0785 C
1936.3105 2302.0788 L
1935.0384 2302.0788 L
1935.0384 2299.1745 L
1935.0384 2297.7344 1935.7585 2297.0143 1937.1986 2297.0143 C
1938.6387 2297.0143 1939.3588 2297.7344 1939.3588 2299.1745 C
h
1932.6142 2299.6066 m
1932.6142 2300.3506 1932.3982 2300.9747 1931.9422 2301.4787 C
1931.5101 2301.9588 1930.9341 2302.1988 1930.19 2302.1988 C
1929.422 2302.1988 1928.8219 2301.9588 1928.3899 2301.4547 C
1927.9578 2300.9507 1927.7418 2300.3506 1927.7418 2299.6066 C
1927.7418 2298.8385 1927.9578 2298.2144 1928.3899 2297.7344 C
1928.8219 2297.2544 1929.422 2297.0143 1930.19 2297.0143 C
1930.9341 2297.0143 1931.5341 2297.2544 1931.9662 2297.7584 C
1932.3982 2298.2625 1932.6142 2298.8625 1932.6142 2299.6066 C
h
1925.5816 2297.1344 m
1925.5096 2297.2064 1925.4376 2297.3504 1925.4376 2297.5664 C
1925.3896 2297.7824 1925.3896 2298.0224 1925.3416 2298.2865 C
1925.3416 2298.5505 1925.2696 2298.7905 1925.1496 2299.0065 C
1925.0536 2299.2225 1924.8856 2299.3665 1924.6455 2299.4386 C
1925.1496 2299.6306 1925.4136 2300.0386 1925.4136 2300.6867 C
1925.4136 2301.1667 1925.2456 2301.5267 1924.9096 2301.7428 C
1924.5975 2301.9588 1924.1895 2302.0788 1923.6855 2302.0788 C
1921.1412 2302.0788 L
1921.1412 2297.1344 L
1922.4373 2297.1344 L
1922.4373 2298.9105 L
1923.4214 2298.9105 L
1923.7095 2298.9105 1923.9015 2298.8145 1923.9975 2298.6465 C
1924.0935 2298.4785 1924.1415 2298.2384 1924.1415 2297.9264 C
1924.1655 2297.8064 1924.1655 2297.6384 1924.2135 2297.4704 C
1924.2135 2297.3024 1924.2615 2297.2064 1924.2855 2297.1344 C
1925.5816 2297.1344 L
h
1918.789 2297.1344 m
1918.717 2297.2064 1918.669 2297.3744 1918.669 2297.5904 C
1918.621 2297.8064 1918.621 2298.0224 1918.573 2298.2865 C
1918.573 2298.5505 1918.501 2298.7905 1918.381 2299.0065 C
1918.285 2299.2225 1918.117 2299.3665 1917.877 2299.4386 C
1918.141 2299.5346 1918.357 2299.7026 1918.477 2299.9186 C
1918.573 2300.1346 1918.645 2300.3986 1918.645 2300.6867 C
1918.645 2301.1427 1918.477 2301.5027 1918.141 2301.7428 C
1917.8049 2301.9588 1917.3969 2302.0788 1916.9169 2302.0788 C
1914.3727 2302.0788 L
1914.3727 2297.1344 L
1915.6688 2297.1344 L
1915.6688 2298.9105 L
1916.6528 2298.9105 L
1916.9409 2298.9105 1917.1329 2298.8145 1917.2289 2298.6465 C
1917.3249 2298.4785 1917.3729 2298.2384 1917.3729 2297.9264 C
1917.3969 2297.8064 1917.3969 2297.6384 1917.4449 2297.4704 C
1917.4449 2297.3024 1917.4929 2297.2064 1917.5169 2297.1344 C
1918.789 2297.1344 L
h
1911.7804 2299.1745 m
1911.7804 2302.0788 L
1910.4843 2302.0788 L
1910.4843 2299.0785 L
1910.4843 2298.4305 1910.1963 2298.1184 1909.6202 2298.1184 C
1909.3082 2298.1184 1909.0682 2298.1904 1908.9482 2298.3585 C
1908.8282 2298.5265 1908.7562 2298.7665 1908.7562 2299.0785 C
1908.7562 2302.0788 L
1907.4601 2302.0788 L
1907.4601 2299.1745 L
1907.4601 2297.7344 1908.1801 2297.0143 1909.6202 2297.0143 C
1911.0604 2297.0143 1911.7804 2297.7344 1911.7804 2299.1745 C
h
1905.1319 2298.6705 m
1905.1319 2299.0785 1904.9878 2299.4146 1904.6758 2299.6546 C
1904.4598 2299.8226 1904.1478 2299.9906 1903.6917 2300.1106 C
1903.4517 2300.1826 1903.1157 2300.2546 1902.6836 2300.3746 C
1902.3956 2300.4706 1902.2516 2300.5907 1902.2516 2300.7587 C
1902.2516 2300.9027 1902.3236 2301.0227 1902.4436 2301.0947 C
1902.5636 2301.1427 1902.7076 2301.1907 1902.8757 2301.1907 C
1903.0917 2301.1907 1903.2597 2301.1427 1903.4277 2301.0467 C
1903.5957 2300.9507 1903.6677 2300.8067 1903.6677 2300.5907 C
1904.9638 2300.5907 L
1904.9638 2301.1427 1904.7718 2301.5507 1904.3878 2301.8148 C
1904.0038 2302.0548 1903.5237 2302.1988 1902.9717 2302.1988 C
1902.4196 2302.1988 1901.9636 2302.0788 1901.5555 2301.8148 C
1901.1475 2301.5507 1900.9555 2301.1667 1900.9555 2300.6627 C
1900.9555 2300.1586 1901.1955 2299.7986 1901.6516 2299.5346 C
1901.7956 2299.4626 1902.0356 2299.3425 1902.3956 2299.2465 C
1902.7316 2299.1505 1902.9957 2299.0785 1903.1877 2299.0305 C
1903.6197 2298.8865 1903.8357 2298.7425 1903.8357 2298.5265 C
1903.8357 2298.3585 1903.7637 2298.2144 1903.5957 2298.1424 C
1903.4517 2298.0704 1903.2597 2298.0224 1903.0437 2298.0224 C
1902.7316 2298.0224 1902.4916 2298.0704 1902.3236 2298.1904 C
1902.1556 2298.3105 1902.0836 2298.5025 1902.0836 2298.7905 C
1900.8115 2298.7905 L
1900.8115 2298.1904 1901.0275 2297.7344 1901.4355 2297.4464 C
1901.8436 2297.1584 1902.3476 2297.0143 1902.9717 2297.0143 C
1903.5957 2297.0143 1904.0998 2297.1344 1904.4598 2297.3744 C
1904.9158 2297.6624 1905.1319 2298.0944 1905.1319 2298.6705 C
h
1952.1519 2299.6306 m
1952.1519 2298.6945 1951.6959 2298.2384 1950.7598 2298.2384 C
1950.1357 2298.2384 L
1950.1357 2300.9747 L
1950.7598 2300.9747 L
1951.6959 2300.9747 1952.1519 2300.5186 1952.1519 2299.6306 C
h
1931.3421 2299.6066 m
1931.3421 2299.1745 1931.2461 2298.8145 1931.0541 2298.5265 C
1930.8621 2298.2625 1930.5741 2298.1184 1930.19 2298.1184 C
1929.782 2298.1184 1929.494 2298.2625 1929.3019 2298.5505 C
1929.1099 2298.8145 1929.0139 2299.1745 1929.0139 2299.6066 C
1929.0139 2300.0146 1929.1099 2300.3506 1929.3259 2300.6387 C
1929.518 2300.9267 1929.806 2301.0707 1930.19 2301.0707 C
1930.5741 2301.0707 1930.8621 2300.9267 1931.0541 2300.6387 C
1931.2461 2300.3506 1931.3421 2300.0146 1931.3421 2299.6066 C
h
1924.1175 2300.5186 m
1924.1175 2300.1346 1923.9255 2299.9426 1923.5414 2299.9426 C
1922.4373 2299.9426 L
1922.4373 2301.0467 L
1923.4694 2301.0467 L
1923.9015 2301.0467 1924.1175 2300.8787 1924.1175 2300.5186 C
h
1917.3489 2300.5186 m
1917.3489 2300.1346 1917.1569 2299.9426 1916.7729 2299.9426 C
1915.6688 2299.9426 L
1915.6688 2301.0467 L
1916.7009 2301.0467 L
1917.1329 2301.0467 1917.3489 2300.8787 1917.3489 2300.5186 C
true setoverprint
f 
false setoverprint
n
1909.4042 2305.0143 m
1909.4042 2315.4959 L
1900.6675 2315.4959 L
1900.6675 2305.0144 L
1909.4042 2305.0143 L
h
1918.885 2305.0143 m
1918.885 2315.4959 L
1910.1483 2315.4959 L
1910.1483 2305.0144 L
1918.885 2305.0143 L
h
1922.0053 2305.0143 m
1922.0053 2314.6799 L
1952.4639 2314.6799 L
1952.4639 2305.0144 L
1953.2824 2305.0143 L
1953.304 2315.4959 L
1921.2132 2315.4959 L
1921.2132 2305.0144 L
1922.0053 2305.0143 L
h
1917.0609 2305.2951 m
1915.2607 2305.2951 L
1914.2526 2305.2951 1913.3886 2305.7271 1912.6685 2306.5912 C
1911.9724 2307.4312 1911.6124 2308.4633 1911.6124 2309.6634 C
1911.6124 2310.8635 1911.9724 2311.8956 1912.6925 2312.7597 C
1913.3886 2313.5998 1914.2526 2314.0318 1915.2607 2314.0318 C
1917.0609 2314.0318 L
1917.0609 2305.2951 L
h
1907.9401 2309.6634 m
1907.9401 2308.4393 1907.5801 2307.4072 1906.884 2306.5672 C
1906.1879 2305.7271 1905.3239 2305.2951 1904.2918 2305.2951 C
1902.4916 2305.2951 L
1902.4916 2314.0318 L
1904.3158 2314.0318 L
1905.3239 2314.0318 1906.1879 2313.5998 1906.884 2312.7597 C
1907.5801 2311.9196 1907.9401 2310.8875 1907.9401 2309.6634 C
h
1949.7277 2312.2797 m
1948.0956 2312.2797 L
1947.0875 2310.2635 L
1946.1514 2312.2797 L
1944.5433 2312.2797 L
1946.4154 2308.8714 L
1946.4154 2307.0232 L
1947.8075 2307.0232 L
1947.8075 2308.8714 L
1949.7277 2312.2797 L
h
1944.3992 2308.5113 m
1944.3992 2308.8714 1944.3272 2309.1594 1944.2072 2309.3754 C
1944.0872 2309.5914 1943.8472 2309.7114 1943.4872 2309.7354 C
1943.8232 2309.7834 1944.0392 2309.9035 1944.1592 2310.1195 C
1944.2792 2310.3115 1944.3272 2310.5995 1944.3272 2310.9595 C
1944.3272 2311.5116 1944.2072 2311.8716 1943.9432 2312.0396 C
1943.6792 2312.2077 1943.2711 2312.2797 1942.6711 2312.2797 C
1939.9109 2312.2797 L
1939.9109 2307.0232 L
1942.6711 2307.0232 L
1943.2952 2307.0232 1943.7512 2307.1192 1944.0152 2307.3112 C
1944.2792 2307.5033 1944.3992 2307.9113 1944.3992 2308.5113 C
h
1939.3348 2307.0232 m
1939.3348 2308.2473 L
1937.1506 2308.2473 L
1937.1506 2312.2797 L
1935.7585 2312.2797 L
1935.7585 2307.0232 L
1939.3348 2307.0232 L
h
1935.1104 2308.9194 m
1935.1104 2310.4075 L
1935.1104 2311.1756 1934.8944 2311.7036 1934.4384 2311.9916 C
1934.0784 2312.2077 1933.5023 2312.3277 1932.6862 2312.3277 C
1931.8702 2312.3277 1931.2461 2312.1837 1930.8381 2311.9196 C
1930.43 2311.6556 1930.238 2311.1516 1930.238 2310.4075 C
1930.238 2308.9194 L
1930.238 2308.1753 1930.478 2307.6473 1930.9341 2307.3352 C
1931.2941 2307.1192 1931.8702 2306.9992 1932.6862 2306.9992 C
1933.4783 2306.9992 1934.0784 2307.1192 1934.4384 2307.3592 C
1934.8944 2307.6473 1935.1104 2308.1753 1935.1104 2308.9194 C
h
1929.734 2309.1594 m
1929.734 2310.2395 L
1929.734 2310.9836 1929.566 2311.5116 1929.2539 2311.8236 C
1928.9419 2312.1357 1928.3899 2312.2797 1927.6218 2312.2797 C
1924.9576 2312.2797 L
1924.9576 2307.0232 L
1927.7898 2307.0232 L
1928.5099 2307.0232 1929.0139 2307.1912 1929.3019 2307.5273 C
1929.59 2307.8633 1929.734 2308.4153 1929.734 2309.1594 C
h
1942.9111 2310.6955 m
1942.9111 2310.4795 1942.8631 2310.3355 1942.7911 2310.2635 C
1942.7191 2310.2155 1942.5751 2310.1915 1942.3111 2310.1915 C
1941.303 2310.1915 L
1941.303 2311.1276 L
1942.4791 2311.1276 L
1942.7671 2311.1276 1942.9111 2310.9836 1942.9111 2310.6955 C
h
1943.0071 2308.7034 m
1943.0071 2308.3433 1942.7911 2308.1753 1942.3591 2308.1753 C
1941.303 2308.1753 L
1941.303 2309.2074 L
1942.3831 2309.2074 L
1942.7911 2309.2074 1943.0071 2309.0394 1943.0071 2308.7034 C
h
1933.6703 2309.0874 m
1933.6703 2308.7034 1933.5983 2308.4633 1933.4783 2308.3673 C
1933.3583 2308.2713 1933.0943 2308.2233 1932.6862 2308.2233 C
1932.3022 2308.2233 1932.0382 2308.2713 1931.8942 2308.3913 C
1931.7742 2308.4873 1931.7021 2308.7274 1931.7021 2309.0874 C
1931.7021 2310.2635 L
1931.7021 2310.6235 1931.7742 2310.8635 1931.9182 2310.9836 C
1932.0382 2311.0796 1932.3022 2311.1276 1932.6862 2311.1276 C
1933.0703 2311.1276 1933.3343 2311.0796 1933.4783 2310.9595 C
1933.5983 2310.8635 1933.6703 2310.6235 1933.6703 2310.2635 C
1933.6703 2309.0874 L
h
1928.2699 2309.1594 m
1928.2699 2308.5593 1928.0298 2308.2473 1927.5738 2308.2473 C
1926.3497 2308.2473 L
1926.3497 2311.0796 L
1927.5738 2311.0796 L
1927.8378 2311.0796 1928.0298 2311.0316 1928.1258 2310.9115 C
1928.2218 2310.7915 1928.2699 2310.5755 1928.2699 2310.2395 C
1928.2699 2309.1594 L
true setoverprint
f 
false setoverprint
n
vmr
vmr
end
%%Trailer